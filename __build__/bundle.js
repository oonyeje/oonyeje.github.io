/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(28);

	var _reactRouter = __webpack_require__(171);

	var _App = __webpack_require__(227);

	var _App2 = _interopRequireDefault(_App);

	var _ContentContainerComponent = __webpack_require__(434);

	var _ContentContainerComponent2 = _interopRequireDefault(_ContentContainerComponent);

	var _PageNotFound = __webpack_require__(479);

	var _PageNotFound2 = _interopRequireDefault(_PageNotFound);

	var _Home = __webpack_require__(480);

	var _Home2 = _interopRequireDefault(_Home);

	var _ExampleComponent = __webpack_require__(481);

	var _ExampleComponent2 = _interopRequireDefault(_ExampleComponent);

	var _ExampleTwoDeepComponent = __webpack_require__(482);

	var _ExampleTwoDeepComponent2 = _interopRequireDefault(_ExampleTwoDeepComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	__webpack_require__(232);
	//require('../assets/stylesheets/main.scss');
	///////////////////////////////////////////////////////////////////////////////
	// React for GitHub Pages - https://github.com/rafrex/react-github-pages
	// ----------------------------------------------------------------------------
	// Checks to see if a redirect is required. There are two types of redirects:
	// 1) specified in the query string generated by the 404 page
	// 2) when the site is accessed at /my-repo-name
	// This function checks for both types and calls the appropriate function
	// to handle the redirect.

	//pages to be rendered based on navigation
	function checkForRedirect(nextState, replace) {
	  var location = nextState.location;
	  if (location.query.redirect === 'true') {
	    parseRedirectQuery(location.query, replace);
	  } else if (location.pathname.split('/')[1] === gitHubRepoName) {
	    redirectToDomain();
	  }
	}
	///////////////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////////
	// React for GitHub Pages - https://github.com/rafrex/react-github-pages
	// ----------------------------------------------------------------------------
	// Takes the redirect query string created in 404.html, converts it back into
	// the correct url, then uses react-router to redirect to the correct url which
	// loads the respective routes and components. When there is a fresh page
	// load for a path that is defined with frontend routes, GitHub Pages will
	// return the custom 404.html page, which then redirects back to just the
	// base domain with a query string representing the attempted url, to which
	// GitHub Pages returns index.html. The single page react app is loaded,
	// this function is run, and the correct route is entered.
	function parseRedirectQuery(query, replace) {
	  var redirectTo = {};

	  if (typeof query.pathname === 'string' && query.pathname !== '') {
	    redirectTo.pathname = query.pathname;
	  }

	  if (typeof query.query === 'string' && query.query !== '') {
	    (function () {
	      var queryObject = {};
	      query.query.split('&').map(function (q) {
	        return q.split('=');
	      }).forEach(function (arr) {
	        queryObject[arr[0]] = arr.slice(1).join('=');
	      });
	      redirectTo.query = queryObject;
	    })();
	  }

	  if (typeof query.hash === 'string' && query.hash !== '') {
	    redirectTo.hash = '#' + query.hash;
	  }

	  replace(redirectTo);
	}
	///////////////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////////
	// React for GitHub Pages - https://github.com/rafrex/react-github-pages
	// ----------------------------------------------------------------------------
	// Redirect for GitHub Pages from /my-repo-name to just the domain
	// because GitHub Pages are always available at /my-repo-name even when a
	// custom domain is in use. Accessing the site at /my-repo-name will
	// cause the routing to break, so when the site is accessed at /my-repo-name,
	// a redirect to the domain with no path is required.
	// https://help.github.com/articles/custom-domain-redirects-for-github-pages-sites/
	// SET THIS: e.g. my-repo-name
	var gitHubRepoName = 'oonyeje.github.io';
	// The domain for your site
	// SET THIS: e.g. http://subdomain.example.tld, or http://www.example.tld
	var domain = 'http://oonyeje.github.io';
	function redirectToDomain() {
	  window.location.replace(domain);
	}
	///////////////////////////////////////////////////////////////////////////////


	var routes =
	// onEnter hook checks if a redirect is needed before App component is loaded
	_react2.default.createElement(
	  _reactRouter.Route,
	  { path: '/', mapMenuTitle: 'Home', component: _App2.default, onEnter: checkForRedirect },
	  _react2.default.createElement(_reactRouter.IndexRoute, { component: _ContentContainerComponent2.default }),
	  _react2.default.createElement(
	    _reactRouter.Route,
	    { path: 'web-development', mapMenuTitle: 'Web', component: _ContentContainerComponent2.default },
	    _react2.default.createElement(_reactRouter.Route, { path: 'aqua', mapMenuTitle: 'Aqua Hotel Management', component: _ContentContainerComponent2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'pearlception', mapMenuTitle: 'Pearlception Dashboard', component: _ContentContainerComponent2.default })
	  ),
	  _react2.default.createElement(
	    _reactRouter.Route,
	    { path: 'mobile-development', mapMenuTitle: 'Mobile', component: _ContentContainerComponent2.default },
	    _react2.default.createElement(_reactRouter.Route, { path: 'vendoo', mapMenuTitle: 'Vendoo', component: _ContentContainerComponent2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'gethip', mapMenuTitle: 'GetHip', component: _ContentContainerComponent2.default })
	  ),
	  _react2.default.createElement(
	    _reactRouter.Route,
	    { path: 'audio-software-development', mapMenuTitle: 'Audio Development', component: _ContentContainerComponent2.default },
	    _react2.default.createElement(_reactRouter.Route, { path: 'wav-blocks-studio', mapMenuTitle: 'WavBlocks Studio', component: _ContentContainerComponent2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'ultra-muse-player', mapMenuTitle: 'UltraMuse Player', component: _ContentContainerComponent2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'umuse-audio-plugin', mapMenuTitle: 'UMuse DAW Plugin', component: _ContentContainerComponent2.default })
	  ),
	  _react2.default.createElement(_reactRouter.Route, { path: 'audio-production', mapMenuTitle: 'Audio Production', component: _ContentContainerComponent2.default }),
	  _react2.default.createElement(_reactRouter.Route, { path: 'podcasting', mapMenuTitle: 'Podcasting', component: _ContentContainerComponent2.default }),
	  _react2.default.createElement(_reactRouter.Route, { path: 'hacks', mapMenuTitle: 'Hardware & Software Hacks', component: _ContentContainerComponent2.default }),
	  _react2.default.createElement(_reactRouter.Route, { path: '*', mapMenuTitle: 'Page Not Found', component: _PageNotFound2.default })
	);

	(0, _reactDom.render)(_react2.default.createElement(_reactRouter.Router, {
	  history: _reactRouter.browserHistory,
	  routes: routes
	}), document.getElementById('root'));

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(2);


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var ReactChildren = __webpack_require__(4);
	var ReactComponent = __webpack_require__(17);
	var ReactPureComponent = __webpack_require__(20);
	var ReactClass = __webpack_require__(21);
	var ReactDOMFactories = __webpack_require__(23);
	var ReactElement = __webpack_require__(8);
	var ReactPropTypes = __webpack_require__(24);
	var ReactVersion = __webpack_require__(26);

	var onlyChild = __webpack_require__(27);
	var warning = __webpack_require__(10);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (false) {
	  var ReactElementValidator = require('./ReactElementValidator');
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;

	if (false) {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	module.exports = React;

/***/ },
/* 3 */
/***/ function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var PooledClass = __webpack_require__(5);
	var ReactElement = __webpack_require__(8);

	var emptyFunction = __webpack_require__(11);
	var traverseAllChildren = __webpack_require__(14);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};

	module.exports = PooledClass;

/***/ },
/* 6 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (false) {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var ReactCurrentOwner = __webpack_require__(9);

	var warning = __webpack_require__(10);
	var canDefineProperty = __webpack_require__(12);
	var hasOwnProperty = Object.prototype.hasOwnProperty;

	var REACT_ELEMENT_TYPE = __webpack_require__(13);

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	function hasValidRef(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	       false ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}

	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	       false ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (false) {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    if (false) {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (false) {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	module.exports = ReactElement;

/***/ },
/* 9 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(11);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (false) {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };

	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }

	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }

	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }

	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}

	module.exports = warning;

/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var canDefineProperty = false;
	if (false) {
	  try {
	    // $FlowFixMe https://github.com/facebook/flow/issues/285
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;

/***/ },
/* 13 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.

	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	module.exports = REACT_ELEMENT_TYPE;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactCurrentOwner = __webpack_require__(9);
	var REACT_ELEMENT_TYPE = __webpack_require__(13);

	var getIteratorFn = __webpack_require__(15);
	var invariant = __webpack_require__(7);
	var KeyEscapeUtils = __webpack_require__(16);
	var warning = __webpack_require__(10);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (false) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (false) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;

/***/ },
/* 15 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 16 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactNoopUpdateQueue = __webpack_require__(18);

	var canDefineProperty = __webpack_require__(12);
	var emptyObject = __webpack_require__(19);
	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (false) {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var warning = __webpack_require__(10);

	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (false) {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var ReactComponent = __webpack_require__(17);
	var ReactNoopUpdateQueue = __webpack_require__(18);

	var emptyObject = __webpack_require__(19);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;

	module.exports = ReactPureComponent;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var ReactComponent = __webpack_require__(17);
	var ReactElement = __webpack_require__(8);
	var ReactPropTypeLocationNames = __webpack_require__(22);
	var ReactNoopUpdateQueue = __webpack_require__(18);

	var emptyObject = __webpack_require__(19);
	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	var MIXINS_KEY = 'mixins';

	// Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.
	function identity(fn) {
	  return fn;
	}

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */


	var injectedMixins = [];

	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: 'DEFINE_MANY',

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: 'DEFINE_MANY',

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: 'DEFINE_MANY',

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: 'DEFINE_MANY',

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: 'DEFINE_MANY',

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: 'DEFINE_MANY_MERGED',

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: 'DEFINE_MANY_MERGED',

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: 'DEFINE_MANY_MERGED',

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: 'DEFINE_ONCE',

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: 'DEFINE_MANY',

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: 'DEFINE_MANY',

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: 'DEFINE_MANY',

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: 'DEFINE_ONCE',

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: 'DEFINE_MANY',

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: 'DEFINE_MANY',

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: 'DEFINE_MANY',

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: 'OVERRIDE_BASE'

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, childContextTypes, 'childContext');
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, contextTypes, 'context');
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (false) {
	      validateTypeDef(Constructor, propTypes, 'prop');
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };

	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}

	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === 'OVERRIDE_BASE') ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (false) {
	      var typeofSpec = typeof spec;
	      var isMixinValid = typeofSpec === 'object' && spec !== null;

	      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }

	    return;
	  }

	  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === 'DEFINE_MANY_MERGED') {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === 'DEFINE_MANY') {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (false) {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

	    var isInherited = name in Constructor;
	    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (false) {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};

	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (false) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (false) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (false) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactElement = __webpack_require__(8);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (false) {
	  var ReactElementValidator = require('./ReactElementValidator');
	  createDOMFactory = ReactElementValidator.createFactory;
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),

	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};

	module.exports = ReactDOMFactories;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactElement = __webpack_require__(8);
	var ReactPropTypeLocationNames = __webpack_require__(22);
	var ReactPropTypesSecret = __webpack_require__(25);

	var emptyFunction = __webpack_require__(11);
	var getIteratorFn = __webpack_require__(15);
	var warning = __webpack_require__(10);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/

	/**
	 * We use an Error-like object for backward compatibility as people may call
	 * PropTypes directly and inspect their output. However we don't use real
	 * Errors anymore. We don't inspect their stack anyway, and creating them
	 * is prohibitively expensive if they are created too often, such as what
	 * happens in oneOfType() for any type before the one that matched.
	 */
	function PropTypeError(message) {
	  this.message = message;
	  this.stack = '';
	}
	// Make `instanceof Error` still work for returned errors.
	PropTypeError.prototype = Error.prototype;

	function createChainableTypeChecker(validate) {
	  if (false) {
	    var manualPropTypeCallCache = {};
	  }
	  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (false) {
	      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
	        var cacheKey = componentName + ':' + propName;
	        if (!manualPropTypeCallCache[cacheKey]) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;
	          manualPropTypeCallCache[cacheKey] = true;
	        }
	      }
	    }
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        if (props[propName] === null) {
	          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	        }
	        return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName, secret) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!ReactElement.isValidElement(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	     false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	     false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }

	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }

	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }

	  return false;
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;

/***/ },
/* 25 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ },
/* 26 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	module.exports = '15.4.2';

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactElement = __webpack_require__(8);

	var invariant = __webpack_require__(7);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}

	module.exports = onlyChild;

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(29);


/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactDefaultInjection = __webpack_require__(35);
	var ReactMount = __webpack_require__(162);
	var ReactReconciler = __webpack_require__(59);
	var ReactUpdates = __webpack_require__(56);
	var ReactVersion = __webpack_require__(167);

	var findDOMNode = __webpack_require__(168);
	var getHostComponentFromComposite = __webpack_require__(169);
	var renderSubtreeIntoContainer = __webpack_require__(170);
	var warning = __webpack_require__(43);

	ReactDefaultInjection.inject();

	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}

	if (false) {
	  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}

	if (false) {
	  var ReactInstrumentation = require('./ReactInstrumentation');
	  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');
	  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');
	  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');

	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
	}

	module.exports = ReactDOM;

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var DOMProperty = __webpack_require__(32);
	var ReactDOMComponentFlags = __webpack_require__(34);

	var invariant = __webpack_require__(33);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;

	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

	/**
	 * Check if a given node should be cached.
	 */
	function shouldPrecacheNode(node, nodeID) {
	  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
	}

	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}

	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}

	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}

	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (shouldPrecacheNode(childNode, childID)) {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }

	  return closest;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  if (inst._hostNode) {
	    return inst._hostNode;
	  }

	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }

	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }

	  return inst._hostNode;
	}

	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};

	module.exports = ReactDOMComponentTree;

/***/ },
/* 31 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var invariant = __webpack_require__(33);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

	      if (false) {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (false) {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   *
	   * autofocus is predefined, because adding it to the property whitelist
	   * causes unintended side effects.
	   *
	   * @type {Object}
	   */
	  getPossibleStandardName:  false ? { autofocus: 'autoFocus' } : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (false) {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;

/***/ },
/* 34 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};

	module.exports = ReactDOMComponentFlags;

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ARIADOMPropertyConfig = __webpack_require__(36);
	var BeforeInputEventPlugin = __webpack_require__(37);
	var ChangeEventPlugin = __webpack_require__(55);
	var DefaultEventPluginOrder = __webpack_require__(67);
	var EnterLeaveEventPlugin = __webpack_require__(68);
	var HTMLDOMPropertyConfig = __webpack_require__(73);
	var ReactComponentBrowserEnvironment = __webpack_require__(74);
	var ReactDOMComponent = __webpack_require__(87);
	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactDOMEmptyComponent = __webpack_require__(133);
	var ReactDOMTreeTraversal = __webpack_require__(134);
	var ReactDOMTextComponent = __webpack_require__(135);
	var ReactDefaultBatchingStrategy = __webpack_require__(136);
	var ReactEventListener = __webpack_require__(137);
	var ReactInjection = __webpack_require__(140);
	var ReactReconcileTransaction = __webpack_require__(141);
	var SVGDOMPropertyConfig = __webpack_require__(149);
	var SelectEventPlugin = __webpack_require__(150);
	var SimpleEventPlugin = __webpack_require__(151);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}

	module.exports = {
	  inject: inject
	};

/***/ },
/* 36 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ARIADOMPropertyConfig = {
	  Properties: {
	    // Global States and Properties
	    'aria-current': 0, // state
	    'aria-details': 0,
	    'aria-disabled': 0, // state
	    'aria-hidden': 0, // state
	    'aria-invalid': 0, // state
	    'aria-keyshortcuts': 0,
	    'aria-label': 0,
	    'aria-roledescription': 0,
	    // Widget Attributes
	    'aria-autocomplete': 0,
	    'aria-checked': 0,
	    'aria-expanded': 0,
	    'aria-haspopup': 0,
	    'aria-level': 0,
	    'aria-modal': 0,
	    'aria-multiline': 0,
	    'aria-multiselectable': 0,
	    'aria-orientation': 0,
	    'aria-placeholder': 0,
	    'aria-pressed': 0,
	    'aria-readonly': 0,
	    'aria-required': 0,
	    'aria-selected': 0,
	    'aria-sort': 0,
	    'aria-valuemax': 0,
	    'aria-valuemin': 0,
	    'aria-valuenow': 0,
	    'aria-valuetext': 0,
	    // Live Region Attributes
	    'aria-atomic': 0,
	    'aria-busy': 0,
	    'aria-live': 0,
	    'aria-relevant': 0,
	    // Drag-and-Drop Attributes
	    'aria-dropeffect': 0,
	    'aria-grabbed': 0,
	    // Relationship Attributes
	    'aria-activedescendant': 0,
	    'aria-colcount': 0,
	    'aria-colindex': 0,
	    'aria-colspan': 0,
	    'aria-controls': 0,
	    'aria-describedby': 0,
	    'aria-errormessage': 0,
	    'aria-flowto': 0,
	    'aria-labelledby': 0,
	    'aria-owns': 0,
	    'aria-posinset': 0,
	    'aria-rowcount': 0,
	    'aria-rowindex': 0,
	    'aria-rowspan': 0,
	    'aria-setsize': 0
	  },
	  DOMAttributeNames: {},
	  DOMPropertyNames: {}
	};

	module.exports = ARIADOMPropertyConfig;

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(38);
	var ExecutionEnvironment = __webpack_require__(47);
	var FallbackCompositionState = __webpack_require__(48);
	var SyntheticCompositionEvent = __webpack_require__(52);
	var SyntheticInputEvent = __webpack_require__(54);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case 'topCompositionStart':
	      return eventTypes.compositionStart;
	    case 'topCompositionEnd':
	      return eventTypes.compositionEnd;
	    case 'topCompositionUpdate':
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topKeyUp':
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case 'topKeyDown':
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case 'topKeyPress':
	    case 'topMouseDown':
	    case 'topBlur':
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topCompositionEnd':
	      return getDataFromCustomEvent(nativeEvent);
	    case 'topKeyPress':
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case 'topTextInput':
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (currentComposition) {
	    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case 'topPaste':
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case 'topKeyPress':
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case 'topCompositionEnd':
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(39);
	var EventPluginUtils = __webpack_require__(41);

	var accumulateInto = __webpack_require__(45);
	var forEachAccumulated = __webpack_require__(46);
	var warning = __webpack_require__(43);

	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var EventPluginRegistry = __webpack_require__(40);
	var EventPluginUtils = __webpack_require__(41);
	var ReactErrorUtils = __webpack_require__(42);

	var accumulateInto = __webpack_require__(45);
	var forEachAccumulated = __webpack_require__(46);
	var invariant = __webpack_require__(33);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};

	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}

	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },

	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	    // live here; needs to be moved to a better place soon
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
	      return null;
	    }
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }

	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }

	      delete listenerBank[registrationName][key];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var invariant = __webpack_require__(33);

	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

	  if (false) {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames:  false ? {} : null,
	  // Trust the developer to only use possibleRegistrationNames in __DEV__

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (injectedEventPluginOrder) {
	    !!eventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var pluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = pluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    if (dispatchConfig.phasedRegistrationNames !== undefined) {
	      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
	      // that it is not undefined.
	      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

	      for (var phase in phasedRegistrationNames) {
	        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
	          continue;
	        }
	        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
	        if (pluginModule) {
	          return pluginModule;
	        }
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    eventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }

	    if (false) {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var ReactErrorUtils = __webpack_require__(42);

	var invariant = __webpack_require__(33);
	var warning = __webpack_require__(43);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};

	function isEndish(topLevelType) {
	  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
	}

	function isMoveish(topLevelType) {
	  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
	}
	function isStartish(topLevelType) {
	  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
	}

	var validateEventDispatches;
	if (false) {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (false) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a) {
	  try {
	    func(a);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (false) {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
	      var boundFunc = func.bind(null, a);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      // $FlowFixMe https://github.com/facebook/flow/issues/2336
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(44);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (false) {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };

	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }

	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }

	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }

	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}

	module.exports = warning;

/***/ },
/* 44 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var invariant = __webpack_require__(33);

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;

/***/ },
/* 46 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */

	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	module.exports = forEachAccumulated;

/***/ },
/* 47 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(49);

	var PooledClass = __webpack_require__(50);

	var getTextContentAccessor = __webpack_require__(51);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ },
/* 49 */
/***/ function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var invariant = __webpack_require__(33);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};

	module.exports = PooledClass;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(47);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(49);

	var PooledClass = __webpack_require__(50);

	var emptyFunction = __webpack_require__(44);
	var warning = __webpack_require__(43);

	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (false) {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (false) {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {

	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else if (typeof event.returnValue !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }

	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (false) {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (false) {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	if (false) {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	     false ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(39);
	var EventPropagators = __webpack_require__(38);
	var ExecutionEnvironment = __webpack_require__(47);
	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactUpdates = __webpack_require__(56);
	var SyntheticEvent = __webpack_require__(53);

	var getEventTarget = __webpack_require__(64);
	var isEventSupported = __webpack_require__(65);
	var isTextInputElement = __webpack_require__(66);

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topChange') {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
	}

	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}

	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;

	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }

	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topInput') {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}

	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topClick') {
	    return targetInst;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31),
	    _assign = __webpack_require__(49);

	var CallbackQueue = __webpack_require__(57);
	var PooledClass = __webpack_require__(50);
	var ReactFeatureFlags = __webpack_require__(58);
	var ReactReconciler = __webpack_require__(59);
	var Transaction = __webpack_require__(63);

	var invariant = __webpack_require__(33);

	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}

	_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.type.isReactTopLevelWrapper) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

	    if (markerName) {
	      console.timeEnd(markerName);
	    }

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PooledClass = __webpack_require__(50);

	var invariant = __webpack_require__(33);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */

	var CallbackQueue = function () {
	  function CallbackQueue(arg) {
	    _classCallCheck(this, CallbackQueue);

	    this._callbacks = null;
	    this._contexts = null;
	    this._arg = arg;
	  }

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */


	  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._callbacks.push(callback);
	    this._contexts = this._contexts || [];
	    this._contexts.push(context);
	  };

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */


	  CallbackQueue.prototype.notifyAll = function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    var arg = this._arg;
	    if (callbacks && contexts) {
	      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i], arg);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  };

	  CallbackQueue.prototype.checkpoint = function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  };

	  CallbackQueue.prototype.rollback = function rollback(len) {
	    if (this._callbacks && this._contexts) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  };

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */


	  CallbackQueue.prototype.reset = function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  };

	  /**
	   * `PooledClass` looks for this.
	   */


	  CallbackQueue.prototype.destructor = function destructor() {
	    this.reset();
	  };

	  return CallbackQueue;
	}();

	module.exports = PooledClass.addPoolingTo(CallbackQueue);

/***/ },
/* 58 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};

	module.exports = ReactFeatureFlags;

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactRef = __webpack_require__(60);
	var ReactInstrumentation = __webpack_require__(62);

	var warning = __webpack_require__(43);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
	  ) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },

	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }

	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }

	};

	module.exports = ReactReconciler;

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactOwner = __webpack_require__(61);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevRef = null;
	  var prevOwner = null;
	  if (prevElement !== null && typeof prevElement === 'object') {
	    prevRef = prevElement.ref;
	    prevOwner = prevElement._owner;
	  }

	  var nextRef = null;
	  var nextOwner = null;
	  if (nextElement !== null && typeof nextElement === 'object') {
	    nextRef = nextElement.ref;
	    nextOwner = nextElement._owner;
	  }

	  return prevRef !== nextRef ||
	  // If owner changes but we have an unchanged function ref, don't update refs
	  typeof nextRef === 'string' && nextOwner !== prevOwner;
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var invariant = __webpack_require__(33);

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid owner.
	 * @final
	 */
	function isValidOwner(object) {
	  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	}

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	// Trust the developer to only use ReactInstrumentation with a __DEV__ check

	var debugTool = null;

	if (false) {
	  var ReactDebugTool = require('./ReactDebugTool');
	  debugTool = ReactDebugTool;
	}

	module.exports = { debugTool: debugTool };

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var invariant = __webpack_require__(33);

	var OBSERVED_ERROR = {};

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var TransactionImpl = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	module.exports = TransactionImpl;

/***/ },
/* 64 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */

	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(47);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ },
/* 66 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */

	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	module.exports = isTextInputElement;

/***/ },
/* 67 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */

	var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

	module.exports = DefaultEventPluginOrder;

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(38);
	var ReactDOMComponentTree = __webpack_require__(30);
	var SyntheticMouseEvent = __webpack_require__(69);

	var eventTypes = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  }
	};

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    if (topLevelType === 'topMouseOut') {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(70);
	var ViewportMetrics = __webpack_require__(71);

	var getEventModifierState = __webpack_require__(72);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	var getEventTarget = __webpack_require__(64);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ },
/* 71 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ },
/* 72 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(32);

	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    // specifies target context for links with `preload` type
	    as: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    playsInline: HAS_BOOLEAN_VALUE,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,

	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(75);
	var ReactDOMIDOperations = __webpack_require__(86);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(76);
	var Danger = __webpack_require__(82);
	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactInstrumentation = __webpack_require__(62);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(79);
	var setInnerHTML = __webpack_require__(78);
	var setTextContent = __webpack_require__(80);

	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});

	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}

	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}

	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}

	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}

	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}

	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }

	  if (false) {
	    ReactInstrumentation.debugTool.onHostOperation({
	      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
	      type: 'replace text',
	      payload: stringText
	    });
	  }
	}

	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (false) {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: prevInstance._debugID,
	        type: 'replace with',
	        payload: markup.toString()
	      });
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: nextInstance._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

	  replaceDelimitedText: replaceDelimitedText,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (false) {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }

	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case 'INSERT_MARKUP':
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'insert child',
	              payload: { toIndex: update.toIndex, content: update.content.toString() }
	            });
	          }
	          break;
	        case 'MOVE_EXISTING':
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'move child',
	              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
	            });
	          }
	          break;
	        case 'SET_MARKUP':
	          setInnerHTML(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace children',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'TEXT_CONTENT':
	          setTextContent(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace text',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'REMOVE_NODE':
	          removeChild(parentNode, update.fromNode);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'remove child',
	              payload: { fromIndex: update.fromIndex }
	            });
	          }
	          break;
	      }
	    }
	  }

	};

	module.exports = DOMChildrenOperations;

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMNamespaces = __webpack_require__(77);
	var setInnerHTML = __webpack_require__(78);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(79);
	var setTextContent = __webpack_require__(80);

	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}

	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});

	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}

	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}

	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}

	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}

	function toString() {
	  return this.node.nodeName;
	}

	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}

	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;

	module.exports = DOMLazyTree;

/***/ },
/* 77 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};

	module.exports = DOMNamespaces;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(47);
	var DOMNamespaces = __webpack_require__(77);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(79);

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}

	module.exports = setInnerHTML;

/***/ },
/* 79 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/* globals MSApp */

	'use strict';

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */

	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(47);
	var escapeTextContentForBrowser = __webpack_require__(81);
	var setInnerHTML = __webpack_require__(78);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      if (node.nodeType === 3) {
	        node.nodeValue = text;
	        return;
	      }
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ },
/* 81 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 */

	'use strict';

	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */

	var matchHtmlRegExp = /["'&<>]/;

	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */

	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);

	  if (!match) {
	    return str;
	  }

	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;

	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }

	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }

	    lastIndex = index + 1;
	    html += escape;
	  }

	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html


	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}

	module.exports = escapeTextContentForBrowser;

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var DOMLazyTree = __webpack_require__(76);
	var ExecutionEnvironment = __webpack_require__(47);

	var createNodesFromMarkup = __webpack_require__(83);
	var emptyFunction = __webpack_require__(44);
	var invariant = __webpack_require__(33);

	var Danger = {

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }

	};

	module.exports = Danger;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	var ExecutionEnvironment = __webpack_require__(47);

	var createArrayFromMixed = __webpack_require__(84);
	var getMarkupWrap = __webpack_require__(85);
	var invariant = __webpack_require__(33);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var invariant = __webpack_require__(33);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

	  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

	  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

	  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/*eslint-disable fb-www/unsafe-html */

	var ExecutionEnvironment = __webpack_require__(47);

	var invariant = __webpack_require__(33);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(75);
	var ReactDOMComponentTree = __webpack_require__(30);

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};

	module.exports = ReactDOMIDOperations;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var _prodInvariant = __webpack_require__(31),
	    _assign = __webpack_require__(49);

	var AutoFocusUtils = __webpack_require__(88);
	var CSSPropertyOperations = __webpack_require__(90);
	var DOMLazyTree = __webpack_require__(76);
	var DOMNamespaces = __webpack_require__(77);
	var DOMProperty = __webpack_require__(32);
	var DOMPropertyOperations = __webpack_require__(98);
	var EventPluginHub = __webpack_require__(39);
	var EventPluginRegistry = __webpack_require__(40);
	var ReactBrowserEventEmitter = __webpack_require__(100);
	var ReactDOMComponentFlags = __webpack_require__(34);
	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactDOMInput = __webpack_require__(103);
	var ReactDOMOption = __webpack_require__(106);
	var ReactDOMSelect = __webpack_require__(107);
	var ReactDOMTextarea = __webpack_require__(108);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactMultiChild = __webpack_require__(109);
	var ReactServerRenderingTransaction = __webpack_require__(129);

	var emptyFunction = __webpack_require__(44);
	var escapeTextContentForBrowser = __webpack_require__(81);
	var invariant = __webpack_require__(33);
	var isEventSupported = __webpack_require__(65);
	var shallowEqual = __webpack_require__(118);
	var validateDOMNesting = __webpack_require__(132);
	var warning = __webpack_require__(43);

	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var STYLE = 'style';
	var HTML = '__html';
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};

	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}

	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (false) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}

	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}

	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}

	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}

	var setAndValidateContentChildDev = emptyFunction;
	if (false) {
	  setAndValidateContentChildDev = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;

	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }

	    validateDOMNesting(null, String(content), this, this._ancestorInfo);
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
	      break;
	  }
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	var globalIdCounter = 1;

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (false) {
	    this._ancestorInfo = null;
	    setAndValidateContentChildDev.call(this, null);
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }

	    assertValidProps(this, props);

	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;

	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, null, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (false) {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (false) {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      // TODO: Validate that text is allowed as a child of this node
	      if (contentToUse != null) {
	        // Avoid setting textContent when the text is empty. In IE11 setting
	        // textContent on a text area will cause the placeholder to not
	        // show within the textarea until it has been focused and blurred again.
	        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
	        if (contentToUse !== '') {
	          if (false) {
	            setAndValidateContentChildDev.call(this, contentToUse);
	          }
	          DOMLazyTree.queueText(lazyTree, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (false) {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (false) {
	          setAndValidateContentChildDev.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (false) {
	        setAndValidateContentChildDev.call(this, null);
	      }

	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  getHostNode: function () {
	    return getNode(this);
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }

	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;

	    if (false) {
	      setAndValidateContentChildDev.call(this, null);
	    }
	  },

	  getPublicInstance: function () {
	    return getNode(this);
	  }

	};

	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(30);

	var focusNode = __webpack_require__(89);

	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ },
/* 89 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */

	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var CSSProperty = __webpack_require__(91);
	var ExecutionEnvironment = __webpack_require__(47);
	var ReactInstrumentation = __webpack_require__(62);

	var camelizeStyleName = __webpack_require__(92);
	var dangerousStyleValue = __webpack_require__(94);
	var hyphenateStyleName = __webpack_require__(95);
	var memoizeStringOnly = __webpack_require__(97);
	var warning = __webpack_require__(43);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (false) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (false) {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: component._debugID,
	        type: 'update styles',
	        payload: styles
	      });
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (false) {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;

/***/ },
/* 91 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(93);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 93 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var CSSProperty = __webpack_require__(91);
	var warning = __webpack_require__(43);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (false) {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(96);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 96 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 97 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(32);
	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactInstrumentation = __webpack_require__(62);

	var quoteAttributeValueForBrowser = __webpack_require__(99);
	var warning = __webpack_require__(43);

	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },

	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }

	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }

	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },

	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }

	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  }

	};

	module.exports = DOMPropertyOperations;

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(81);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(49);

	var EventPluginRegistry = __webpack_require__(40);
	var ReactEventEmitterMixin = __webpack_require__(101);
	var ViewportMetrics = __webpack_require__(71);

	var getVendorPrefixedEventName = __webpack_require__(102);
	var isEventSupported = __webpack_require__(65);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === 'topWheel') {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === 'topScroll') {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === 'topFocus' || dependency === 'topBlur') {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening.topBlur = true;
	          isListening.topFocus = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Protect against document.createEvent() returning null
	   * Some popup blocker extensions appear to do this:
	   * https://github.com/facebook/react/issues/6887
	   */
	  supportsEventPageXY: function () {
	    if (!document.createEvent) {
	      return false;
	    }
	    var ev = document.createEvent('MouseEvent');
	    return ev != null && 'pageX' in ev;
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }

	});

	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(39);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(47);

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return '';
	}

	module.exports = getVendorPrefixedEventName;

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31),
	    _assign = __webpack_require__(49);

	var DOMPropertyOperations = __webpack_require__(98);
	var LinkedValueUtils = __webpack_require__(104);
	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactUpdates = __webpack_require__(56);

	var invariant = __webpack_require__(33);
	var warning = __webpack_require__(43);

	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

	      var owner = inst._currentElement._owner;

	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };

	    if (false) {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    if (false) {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;

	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {

	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        // In Chrome, assigning defaultValue to certain input types triggers input validation.
	        // For number inputs, the display value loses trailing decimal points. For email inputs,
	        // Chrome raises "The specified value <x> is not a valid email address".
	        //
	        // Here we check to see if the defaultValue has actually changed, avoiding these problems
	        // when the user is inputting text
	        //
	        // https://github.com/facebook/react/issues/7253
	        if (node.defaultValue !== '' + props.defaultValue) {
	          node.defaultValue = '' + props.defaultValue;
	        }
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },

	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.

	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }

	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var React = __webpack_require__(2);
	var ReactPropTypesSecret = __webpack_require__(105);

	var invariant = __webpack_require__(33);
	var warning = __webpack_require__(43);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: React.PropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;

/***/ },
/* 105 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(49);

	var React = __webpack_require__(2);
	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactDOMSelect = __webpack_require__(107);

	var warning = __webpack_require__(43);
	var didWarnInvalidOptionChildren = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }

	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;

	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }

	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }

	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },

	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }

	    var content = flattenChildren(props.children);

	    if (content) {
	      hostProps.children = content;
	    }

	    return hostProps;
	  }

	};

	module.exports = ReactDOMOption;

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(49);

	var LinkedValueUtils = __webpack_require__(104);
	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactUpdates = __webpack_require__(56);

	var warning = __webpack_require__(43);

	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  if (props.valueLink !== undefined && !didWarnValueLink) {
	     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	       false ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	       false ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };

	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },

	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31),
	    _assign = __webpack_require__(49);

	var LinkedValueUtils = __webpack_require__(104);
	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactUpdates = __webpack_require__(56);

	var invariant = __webpack_require__(33);
	var warning = __webpack_require__(43);

	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, props, {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }

	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;

	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }

	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }

	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },

	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var textContent = node.textContent;

	    // Only set node.value if textContent is equal to the expected
	    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
	    // will populate textContent as well.
	    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
	    if (textContent === inst._wrapperState.initialValue) {
	      node.value = textContent;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var ReactComponentEnvironment = __webpack_require__(110);
	var ReactInstanceMap = __webpack_require__(111);
	var ReactInstrumentation = __webpack_require__(62);

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactReconciler = __webpack_require__(59);
	var ReactChildReconciler = __webpack_require__(112);

	var emptyFunction = __webpack_require__(44);
	var flattenChildren = __webpack_require__(128);
	var invariant = __webpack_require__(33);

	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'INSERT_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'MOVE_EXISTING',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'REMOVE_NODE',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'SET_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'TEXT_CONTENT',
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}

	var setChildrenForInstrumentation = emptyFunction;
	if (false) {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (false) {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (false) {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;

	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (false) {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }

	      if (false) {
	        setChildrenForInstrumentation.call(this, children);
	      }

	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },

	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;

	      if (false) {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }

	  }

	};

	module.exports = ReactMultiChild;

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var invariant = __webpack_require__(33);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;

/***/ },
/* 111 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(59);

	var instantiateReactComponent = __webpack_require__(114);
	var KeyEscapeUtils = __webpack_require__(123);
	var shouldUpdateReactComponent = __webpack_require__(119);
	var traverseAllChildren = __webpack_require__(124);
	var warning = __webpack_require__(43);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && ({"NODE_ENV":"production"}) && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(127);
	}

	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (false) {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};

	    if (false) {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
	  ) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(113)))

/***/ },
/* 113 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31),
	    _assign = __webpack_require__(49);

	var ReactCompositeComponent = __webpack_require__(115);
	var ReactEmptyComponent = __webpack_require__(120);
	var ReactHostComponent = __webpack_require__(121);

	var getNextDebugID = __webpack_require__(122);
	var invariant = __webpack_require__(33);
	var warning = __webpack_require__(43);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;

	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    var type = element.type;
	    if (typeof type !== 'function' && typeof type !== 'string') {
	      var info = '';
	      if (false) {
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
	        }
	      }
	      info += getDeclarationErrorAddendum(element._owner);
	       true ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
	    }

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);

	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }

	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (false) {
	    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (false) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31),
	    _assign = __webpack_require__(49);

	var React = __webpack_require__(2);
	var ReactComponentEnvironment = __webpack_require__(110);
	var ReactCurrentOwner = __webpack_require__(9);
	var ReactErrorUtils = __webpack_require__(42);
	var ReactInstanceMap = __webpack_require__(111);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactNodeTypes = __webpack_require__(116);
	var ReactReconciler = __webpack_require__(59);

	if (false) {
	  var checkReactTypeSpec = require('./checkReactTypeSpec');
	}

	var emptyObject = __webpack_require__(117);
	var invariant = __webpack_require__(33);
	var shallowEqual = __webpack_require__(118);
	var shouldUpdateReactComponent = __webpack_require__(119);
	var warning = __webpack_require__(43);

	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};

	function warnIfInvalidElement(Component, element) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}

	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}

	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}

	// Separated into a function to contain deoptimizations caused by try/finally.
	function measureLifeCyclePerf(fn, debugID, timerType) {
	  if (debugID === 0) {
	    // Top-level wrappers (see ReactMount) and empty components (see
	    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
	    // Both are implementation details that should go away in the future.
	    return fn();
	  }

	  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
	  try {
	    return fn();
	  } finally {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
	  }
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponent = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;

	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;

	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;

	    if (false) {
	      this._warnedAboutRefsInRender = false;
	    }
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;

	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    var updateQueue = transaction.getUpdateQueue();

	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;

	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || React.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }

	    if (false) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }

	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';

	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (false) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }

	    if (inst.componentDidMount) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(function () {
	            return inst.componentDidMount();
	          }, _this._debugID, 'componentDidMount');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }

	    return markup;
	  },

	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (false) {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },

	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;

	    if (doConstruct) {
	      if (false) {
	        return measureLifeCyclePerf(function () {
	          return new Component(publicProps, publicContext, updateQueue);
	        }, this._debugID, 'ctor');
	      } else {
	        return new Component(publicProps, publicContext, updateQueue);
	      }
	    }

	    // This can still be an instance in case of factory components
	    // but we'll count this as time spent rendering as the more common case.
	    if (false) {
	      return measureLifeCyclePerf(function () {
	        return Component(publicProps, publicContext, updateQueue);
	      }, this._debugID, 'render');
	    } else {
	      return Component(publicProps, publicContext, updateQueue);
	    }
	  },

	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();

	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);

	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },

	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;

	    var debugID = 0;
	    if (false) {
	      debugID = this._debugID;
	    }

	    if (inst.componentWillMount) {
	      if (false) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillMount();
	        }, debugID, 'componentWillMount');
	      } else {
	        inst.componentWillMount();
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;

	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

	    if (false) {
	      if (debugID !== 0) {
	        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	      }
	    }

	    return markup;
	  },

	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }

	    var inst = this._instance;

	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;

	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        if (false) {
	          measureLifeCyclePerf(function () {
	            return inst.componentWillUnmount();
	          }, this._debugID, 'componentWillUnmount');
	        } else {
	          inst.componentWillUnmount();
	        }
	      }
	    }

	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (false) {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext;

	    if (inst.getChildContext) {
	      if (false) {
	        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	        try {
	          childContext = inst.getChildContext();
	        } finally {
	          ReactInstrumentation.debugTool.onEndProcessingChildContext();
	        }
	      } else {
	        childContext = inst.getChildContext();
	      }
	    }

	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (false) {
	        this._checkContextTypes(Component.childContextTypes, childContext, 'childContext');
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    if (false) {
	      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	    }
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

	    var willReceive = false;
	    var nextContext;

	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }

	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;

	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }

	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (false) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillReceiveProps(nextProps, nextContext);
	        }, this._debugID, 'componentWillReceiveProps');
	      } else {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;

	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (false) {
	          shouldUpdate = measureLifeCyclePerf(function () {
	            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	          }, this._debugID, 'shouldComponentUpdate');
	        } else {
	          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }

	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;

	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      if (false) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillUpdate(nextProps, nextState, nextContext);
	        }, this._debugID, 'componentWillUpdate');
	      } else {
	        inst.componentWillUpdate(nextProps, nextState, nextContext);
	      }
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();

	    var debugID = 0;
	    if (false) {
	      debugID = this._debugID;
	    }

	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);

	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;

	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

	      if (false) {
	        if (debugID !== 0) {
	          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	        }
	      }

	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },

	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedElement;

	    if (false) {
	      renderedElement = measureLifeCyclePerf(function () {
	        return inst.render();
	      }, this._debugID, 'render');
	    } else {
	      renderedElement = inst.render();
	    }

	    if (false) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedElement === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedElement = null;
	      }
	    }

	    return renderedElement;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedElement;
	    if (("production") !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

	    return renderedElement;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (false) {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	module.exports = ReactCompositeComponent;

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var React = __webpack_require__(2);

	var invariant = __webpack_require__(33);

	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,

	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (React.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};

	module.exports = ReactNodeTypes;

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (false) {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;

/***/ },
/* 118 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 119 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */

	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}

	module.exports = shouldUpdateReactComponent;

/***/ },
/* 120 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyComponentFactory;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};

	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var invariant = __webpack_require__(33);

	var genericComponentClass = null;
	var textComponentClass = null;

	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  }
	};

	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};

	module.exports = ReactHostComponent;

/***/ },
/* 122 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var nextDebugID = 1;

	function getNextDebugID() {
	  return nextDebugID++;
	}

	module.exports = getNextDebugID;

/***/ },
/* 123 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var ReactCurrentOwner = __webpack_require__(9);
	var REACT_ELEMENT_TYPE = __webpack_require__(125);

	var getIteratorFn = __webpack_require__(126);
	var invariant = __webpack_require__(33);
	var KeyEscapeUtils = __webpack_require__(123);
	var warning = __webpack_require__(43);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (false) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (false) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;

/***/ },
/* 125 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.

	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	module.exports = REACT_ELEMENT_TYPE;

/***/ },
/* 126 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactCurrentOwner = __webpack_require__(9);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty)
	  // Strip regex characters so we can use it for regex
	  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  // Remove hasOwnProperty from the template to make it generic
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}

	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

	var setItem;
	var getItem;
	var removeItem;
	var getItemIDs;
	var addRoot;
	var removeRoot;
	var getRootIDs;

	if (canUseCollections) {
	  var itemMap = new Map();
	  var rootIDSet = new Set();

	  setItem = function (id, item) {
	    itemMap.set(id, item);
	  };
	  getItem = function (id) {
	    return itemMap.get(id);
	  };
	  removeItem = function (id) {
	    itemMap['delete'](id);
	  };
	  getItemIDs = function () {
	    return Array.from(itemMap.keys());
	  };

	  addRoot = function (id) {
	    rootIDSet.add(id);
	  };
	  removeRoot = function (id) {
	    rootIDSet['delete'](id);
	  };
	  getRootIDs = function () {
	    return Array.from(rootIDSet.keys());
	  };
	} else {
	  var itemByKey = {};
	  var rootByKey = {};

	  // Use non-numeric keys to prevent V8 performance issues:
	  // https://github.com/facebook/react/pull/7232
	  var getKeyFromID = function (id) {
	    return '.' + id;
	  };
	  var getIDFromKey = function (key) {
	    return parseInt(key.substr(1), 10);
	  };

	  setItem = function (id, item) {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  };
	  getItem = function (id) {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  };
	  removeItem = function (id) {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  };
	  getItemIDs = function () {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  };

	  addRoot = function (id) {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  };
	  removeRoot = function (id) {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  };
	  getRootIDs = function () {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  };
	}

	var unmountedIDs = [];

	function purgeDeep(id) {
	  var item = getItem(id);
	  if (item) {
	    var childIDs = item.childIDs;

	    removeItem(id);
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	   false ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = getItem(id);
	    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.childIDs = nextChildIDs;

	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = getItem(nextChildID);
	      !nextChild ?  false ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  false ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent id is missing.
	      }
	      !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    var item = {
	      element: element,
	      parentID: parentID,
	      text: null,
	      childIDs: [],
	      isMounted: false,
	      updateCount: 0
	    };
	    setItem(id, item);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = getItem(id);
	    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = getItem(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = getItem(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var name = getDisplayName(topElement);
	      var owner = topElement._owner;
	      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = getItem(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = getItem(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = getItem(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = getItem(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = getItem(id);
	    return item ? item.updateCount : 0;
	  },


	  getRootIDs: getRootIDs,
	  getRegisteredIDs: getItemIDs
	};

	module.exports = ReactComponentTreeHook;

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var KeyEscapeUtils = __webpack_require__(123);
	var traverseAllChildren = __webpack_require__(124);
	var warning = __webpack_require__(43);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && ({"NODE_ENV":"production"}) && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(127);
	}

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (false) {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};

	  if (false) {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(113)))

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(49);

	var PooledClass = __webpack_require__(50);
	var Transaction = __webpack_require__(63);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactServerUpdateQueue = __webpack_require__(130);

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];

	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	var noopCallbackQueue = {
	  enqueue: function () {}
	};

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},

	  checkpoint: function () {},

	  rollback: function () {}
	};

	_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ReactUpdateQueue = __webpack_require__(131);

	var warning = __webpack_require__(43);

	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */

	var ReactServerUpdateQueue = function () {
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);

	    this.transaction = transaction;
	  }

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */


	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };

	  return ReactServerUpdateQueue;
	}();

	module.exports = ReactServerUpdateQueue;

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactInstanceMap = __webpack_require__(111);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactUpdates = __webpack_require__(56);

	var invariant = __webpack_require__(33);
	var warning = __webpack_require__(43);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (false) {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }

	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (false) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (false) {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }

	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },

	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }

	};

	module.exports = ReactUpdateQueue;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(49);

	var emptyFunction = __webpack_require__(44);
	var warning = __webpack_require__(43);

	var validateDOMNesting = emptyFunction;

	if (false) {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    if (childText != null) {
	      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      var tagDisplayName = childTag;
	      var whitespaceInfo = '';
	      if (childTag === '#text') {
	        if (/\S/.test(childText)) {
	          tagDisplayName = 'Text nodes';
	        } else {
	          tagDisplayName = 'Whitespace text nodes';
	          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
	        }
	      } else {
	        tagDisplayName = '<' + childTag + '>';
	      }

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(49);

	var DOMLazyTree = __webpack_require__(76);
	var ReactDOMComponentTree = __webpack_require__(30);

	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var invariant = __webpack_require__(33);

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}

	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

	  return inst._hostParent;
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], 'captured', argTo);
	  }
	}

	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31),
	    _assign = __webpack_require__(49);

	var DOMChildrenOperations = __webpack_require__(75);
	var DOMLazyTree = __webpack_require__(76);
	var ReactDOMComponentTree = __webpack_require__(30);

	var escapeTextContentForBrowser = __webpack_require__(81);
	var invariant = __webpack_require__(33);
	var validateDOMNesting = __webpack_require__(132);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;

	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};

	_assign(ReactDOMTextComponent.prototype, {

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(null, this._stringText, this, parentInfo);
	      }
	    }

	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },

	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },

	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }

	});

	module.exports = ReactDOMTextComponent;

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(49);

	var ReactUpdates = __webpack_require__(56);
	var Transaction = __webpack_require__(63);

	var emptyFunction = __webpack_require__(44);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      return callback(a, b, c, d, e);
	    } else {
	      return transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(49);

	var EventListener = __webpack_require__(138);
	var ExecutionEnvironment = __webpack_require__(47);
	var PooledClass = __webpack_require__(50);
	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactUpdates = __webpack_require__(56);

	var getEventTarget = __webpack_require__(64);
	var getUnboundedScrollPosition = __webpack_require__(139);

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(44);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (false) {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function registerDefault() {}
	};

	module.exports = EventListener;

/***/ },
/* 139 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */

	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(32);
	var EventPluginHub = __webpack_require__(39);
	var EventPluginUtils = __webpack_require__(41);
	var ReactComponentEnvironment = __webpack_require__(110);
	var ReactEmptyComponent = __webpack_require__(120);
	var ReactBrowserEventEmitter = __webpack_require__(100);
	var ReactHostComponent = __webpack_require__(121);
	var ReactUpdates = __webpack_require__(56);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(49);

	var CallbackQueue = __webpack_require__(57);
	var PooledClass = __webpack_require__(50);
	var ReactBrowserEventEmitter = __webpack_require__(100);
	var ReactInputSelection = __webpack_require__(142);
	var ReactInstrumentation = __webpack_require__(62);
	var Transaction = __webpack_require__(63);
	var ReactUpdateQueue = __webpack_require__(131);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },

	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },

	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(143);

	var containsNode = __webpack_require__(145);
	var focusNode = __webpack_require__(89);
	var getActiveElement = __webpack_require__(148);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(47);

	var getNodeForCharacterOffset = __webpack_require__(144);
	var getTextContentAccessor = __webpack_require__(51);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ },
/* 144 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */

	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(146);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(147);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ },
/* 147 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ },
/* 148 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;

/***/ },
/* 149 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};

	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});

	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(38);
	var ExecutionEnvironment = __webpack_require__(47);
	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactInputSelection = __webpack_require__(142);
	var SyntheticEvent = __webpack_require__(53);

	var getActiveElement = __webpack_require__(148);
	var isTextInputElement = __webpack_require__(66);
	var shallowEqual = __webpack_require__(118);

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
	  }
	};

	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case 'topFocus':
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case 'topBlur':
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case 'topMouseDown':
	        mouseDown = true;
	        break;
	      case 'topContextMenu':
	      case 'topMouseUp':
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case 'topSelectionChange':
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case 'topKeyDown':
	      case 'topKeyUp':
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === 'onSelect') {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var EventListener = __webpack_require__(138);
	var EventPropagators = __webpack_require__(38);
	var ReactDOMComponentTree = __webpack_require__(30);
	var SyntheticAnimationEvent = __webpack_require__(152);
	var SyntheticClipboardEvent = __webpack_require__(153);
	var SyntheticEvent = __webpack_require__(53);
	var SyntheticFocusEvent = __webpack_require__(154);
	var SyntheticKeyboardEvent = __webpack_require__(155);
	var SyntheticMouseEvent = __webpack_require__(69);
	var SyntheticDragEvent = __webpack_require__(158);
	var SyntheticTouchEvent = __webpack_require__(159);
	var SyntheticTransitionEvent = __webpack_require__(160);
	var SyntheticUIEvent = __webpack_require__(70);
	var SyntheticWheelEvent = __webpack_require__(161);

	var emptyFunction = __webpack_require__(44);
	var getEventCharCode = __webpack_require__(156);
	var invariant = __webpack_require__(33);

	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: ['topAbort'],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = {
	 *   'topAbort': { sameConfig }
	 * };
	 */
	var eventTypes = {};
	var topLevelEventsToDispatchConfig = {};
	['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;
	  var topEvent = 'top' + capitalizedEvent;

	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent]
	  };
	  eventTypes[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	});

	var onClickListeners = {};

	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}

	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case 'topAbort':
	      case 'topCanPlay':
	      case 'topCanPlayThrough':
	      case 'topDurationChange':
	      case 'topEmptied':
	      case 'topEncrypted':
	      case 'topEnded':
	      case 'topError':
	      case 'topInput':
	      case 'topInvalid':
	      case 'topLoad':
	      case 'topLoadedData':
	      case 'topLoadedMetadata':
	      case 'topLoadStart':
	      case 'topPause':
	      case 'topPlay':
	      case 'topPlaying':
	      case 'topProgress':
	      case 'topRateChange':
	      case 'topReset':
	      case 'topSeeked':
	      case 'topSeeking':
	      case 'topStalled':
	      case 'topSubmit':
	      case 'topSuspend':
	      case 'topTimeUpdate':
	      case 'topVolumeChange':
	      case 'topWaiting':
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case 'topKeyPress':
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case 'topKeyDown':
	      case 'topKeyUp':
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case 'topBlur':
	      case 'topFocus':
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case 'topClick':
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case 'topDoubleClick':
	      case 'topMouseDown':
	      case 'topMouseMove':
	      case 'topMouseUp':
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case 'topMouseOut':
	      case 'topMouseOver':
	      case 'topContextMenu':
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case 'topDrag':
	      case 'topDragEnd':
	      case 'topDragEnter':
	      case 'topDragExit':
	      case 'topDragLeave':
	      case 'topDragOver':
	      case 'topDragStart':
	      case 'topDrop':
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case 'topTouchCancel':
	      case 'topTouchEnd':
	      case 'topTouchMove':
	      case 'topTouchStart':
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case 'topAnimationEnd':
	      case 'topAnimationIteration':
	      case 'topAnimationStart':
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case 'topTransitionEnd':
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case 'topScroll':
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case 'topWheel':
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case 'topCopy':
	      case 'topCut':
	      case 'topPaste':
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

	module.exports = SyntheticAnimationEvent;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(70);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(70);

	var getEventCharCode = __webpack_require__(156);
	var getEventKey = __webpack_require__(157);
	var getEventModifierState = __webpack_require__(72);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 156 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */

	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(156);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(69);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(70);

	var getEventModifierState = __webpack_require__(72);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

	module.exports = SyntheticTransitionEvent;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(69);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var DOMLazyTree = __webpack_require__(76);
	var DOMProperty = __webpack_require__(32);
	var React = __webpack_require__(2);
	var ReactBrowserEventEmitter = __webpack_require__(100);
	var ReactCurrentOwner = __webpack_require__(9);
	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactDOMContainerInfo = __webpack_require__(163);
	var ReactDOMFeatureFlags = __webpack_require__(164);
	var ReactFeatureFlags = __webpack_require__(58);
	var ReactInstanceMap = __webpack_require__(111);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactMarkupChecksum = __webpack_require__(165);
	var ReactReconciler = __webpack_require__(59);
	var ReactUpdateQueue = __webpack_require__(131);
	var ReactUpdates = __webpack_require__(56);

	var emptyObject = __webpack_require__(117);
	var instantiateReactComponent = __webpack_require__(114);
	var invariant = __webpack_require__(33);
	var setInnerHTML = __webpack_require__(78);
	var shouldUpdateReactComponent = __webpack_require__(119);
	var warning = __webpack_require__(43);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var instancesByReactRootID = {};

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props.child;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }

	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );

	  if (markerName) {
	    console.timeEnd(markerName);
	  }

	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (false) {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (false) {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}

	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}

	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}

	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}

	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}

	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (false) {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  return this.props.child;
	};
	TopLevelWrapper.isReactTopLevelWrapper = true;

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    return prevComponent;
	  },

	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !React.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

	     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

	    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });

	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props.child;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },

	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (false) {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }

	    if (false) {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: hostNode._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  }
	};

	module.exports = ReactMount;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var validateDOMNesting = __webpack_require__(132);

	var DOC_NODE_TYPE = 9;

	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (false) {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}

	module.exports = ReactDOMContainerInfo;

/***/ },
/* 164 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: true,
	  useFiber: false
	};

	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var adler32 = __webpack_require__(166);

	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ },
/* 166 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ },
/* 167 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	module.exports = '15.4.2';

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(31);

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactDOMComponentTree = __webpack_require__(30);
	var ReactInstanceMap = __webpack_require__(111);

	var getHostComponentFromComposite = __webpack_require__(169);
	var invariant = __webpack_require__(33);
	var warning = __webpack_require__(43);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (false) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }

	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }

	  if (typeof componentOrElement.render === 'function') {
	     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}

	module.exports = findDOMNode;

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactNodeTypes = __webpack_require__(116);

	function getHostComponentFromComposite(inst) {
	  var type;

	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }

	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}

	module.exports = getHostComponentFromComposite;

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactMount = __webpack_require__(162);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.createMemoryHistory = exports.hashHistory = exports.browserHistory = exports.applyRouterMiddleware = exports.formatPattern = exports.useRouterHistory = exports.match = exports.routerShape = exports.locationShape = exports.RouterContext = exports.createRoutes = exports.Route = exports.Redirect = exports.IndexRoute = exports.IndexRedirect = exports.withRouter = exports.IndexLink = exports.Link = exports.Router = undefined;

	var _RouteUtils = __webpack_require__(172);

	Object.defineProperty(exports, 'createRoutes', {
	  enumerable: true,
	  get: function get() {
	    return _RouteUtils.createRoutes;
	  }
	});

	var _PropTypes = __webpack_require__(173);

	Object.defineProperty(exports, 'locationShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes.locationShape;
	  }
	});
	Object.defineProperty(exports, 'routerShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes.routerShape;
	  }
	});

	var _PatternUtils = __webpack_require__(174);

	Object.defineProperty(exports, 'formatPattern', {
	  enumerable: true,
	  get: function get() {
	    return _PatternUtils.formatPattern;
	  }
	});

	var _Router2 = __webpack_require__(176);

	var _Router3 = _interopRequireDefault(_Router2);

	var _Link2 = __webpack_require__(192);

	var _Link3 = _interopRequireDefault(_Link2);

	var _IndexLink2 = __webpack_require__(193);

	var _IndexLink3 = _interopRequireDefault(_IndexLink2);

	var _withRouter2 = __webpack_require__(194);

	var _withRouter3 = _interopRequireDefault(_withRouter2);

	var _IndexRedirect2 = __webpack_require__(196);

	var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);

	var _IndexRoute2 = __webpack_require__(198);

	var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);

	var _Redirect2 = __webpack_require__(197);

	var _Redirect3 = _interopRequireDefault(_Redirect2);

	var _Route2 = __webpack_require__(199);

	var _Route3 = _interopRequireDefault(_Route2);

	var _RouterContext2 = __webpack_require__(188);

	var _RouterContext3 = _interopRequireDefault(_RouterContext2);

	var _match2 = __webpack_require__(200);

	var _match3 = _interopRequireDefault(_match2);

	var _useRouterHistory2 = __webpack_require__(214);

	var _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);

	var _applyRouterMiddleware2 = __webpack_require__(215);

	var _applyRouterMiddleware3 = _interopRequireDefault(_applyRouterMiddleware2);

	var _browserHistory2 = __webpack_require__(216);

	var _browserHistory3 = _interopRequireDefault(_browserHistory2);

	var _hashHistory2 = __webpack_require__(224);

	var _hashHistory3 = _interopRequireDefault(_hashHistory2);

	var _createMemoryHistory2 = __webpack_require__(202);

	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.Router = _Router3.default; /* components */

	exports.Link = _Link3.default;
	exports.IndexLink = _IndexLink3.default;
	exports.withRouter = _withRouter3.default;

	/* components (configuration) */

	exports.IndexRedirect = _IndexRedirect3.default;
	exports.IndexRoute = _IndexRoute3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;

	/* utils */

	exports.RouterContext = _RouterContext3.default;
	exports.match = _match3.default;
	exports.useRouterHistory = _useRouterHistory3.default;
	exports.applyRouterMiddleware = _applyRouterMiddleware3.default;

	/* histories */

	exports.browserHistory = _browserHistory3.default;
	exports.hashHistory = _hashHistory3.default;
	exports.createMemoryHistory = _createMemoryHistory3.default;

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.isReactChildren = isReactChildren;
	exports.createRouteFromReactElement = createRouteFromReactElement;
	exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
	exports.createRoutes = createRoutes;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function isValidChild(object) {
	  return object == null || _react2.default.isValidElement(object);
	}

	function isReactChildren(object) {
	  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
	}

	function createRoute(defaultProps, props) {
	  return _extends({}, defaultProps, props);
	}

	function createRouteFromReactElement(element) {
	  var type = element.type;
	  var route = createRoute(type.defaultProps, element.props);

	  if (route.children) {
	    var childRoutes = createRoutesFromReactChildren(route.children, route);

	    if (childRoutes.length) route.childRoutes = childRoutes;

	    delete route.children;
	  }

	  return route;
	}

	/**
	 * Creates and returns a routes object from the given ReactChildren. JSX
	 * provides a convenient way to visualize how routes in the hierarchy are
	 * nested.
	 *
	 *   import { Route, createRoutesFromReactChildren } from 'react-router'
	 *
	 *   const routes = createRoutesFromReactChildren(
	 *     <Route component={App}>
	 *       <Route path="home" component={Dashboard}/>
	 *       <Route path="news" component={NewsFeed}/>
	 *     </Route>
	 *   )
	 *
	 * Note: This method is automatically used when you provide <Route> children
	 * to a <Router> component.
	 */
	function createRoutesFromReactChildren(children, parentRoute) {
	  var routes = [];

	  _react2.default.Children.forEach(children, function (element) {
	    if (_react2.default.isValidElement(element)) {
	      // Component classes may have a static create* method.
	      if (element.type.createRouteFromReactElement) {
	        var route = element.type.createRouteFromReactElement(element, parentRoute);

	        if (route) routes.push(route);
	      } else {
	        routes.push(createRouteFromReactElement(element));
	      }
	    }
	  });

	  return routes;
	}

	/**
	 * Creates and returns an array of routes from the given object which
	 * may be a JSX route, a plain object route, or an array of either.
	 */
	function createRoutes(routes) {
	  if (isReactChildren(routes)) {
	    routes = createRoutesFromReactChildren(routes);
	  } else if (routes && !Array.isArray(routes)) {
	    routes = [routes];
	  }

	  return routes;
	}

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.locationShape = exports.routerShape = undefined;

	var _react = __webpack_require__(1);

	var func = _react.PropTypes.func,
	    object = _react.PropTypes.object,
	    shape = _react.PropTypes.shape,
	    string = _react.PropTypes.string;
	var routerShape = exports.routerShape = shape({
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired,
	  setRouteLeaveHook: func.isRequired,
	  isActive: func.isRequired
	});

	var locationShape = exports.locationShape = shape({
	  pathname: string.isRequired,
	  search: string.isRequired,
	  state: object,
	  action: string.isRequired,
	  key: string
	});

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.compilePattern = compilePattern;
	exports.matchPattern = matchPattern;
	exports.getParamNames = getParamNames;
	exports.getParams = getParams;
	exports.formatPattern = formatPattern;

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function escapeRegExp(string) {
	  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
	}

	function _compilePattern(pattern) {
	  var regexpSource = '';
	  var paramNames = [];
	  var tokens = [];

	  var match = void 0,
	      lastIndex = 0,
	      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)|\\\(|\\\)/g;
	  while (match = matcher.exec(pattern)) {
	    if (match.index !== lastIndex) {
	      tokens.push(pattern.slice(lastIndex, match.index));
	      regexpSource += escapeRegExp(pattern.slice(lastIndex, match.index));
	    }

	    if (match[1]) {
	      regexpSource += '([^/]+)';
	      paramNames.push(match[1]);
	    } else if (match[0] === '**') {
	      regexpSource += '(.*)';
	      paramNames.push('splat');
	    } else if (match[0] === '*') {
	      regexpSource += '(.*?)';
	      paramNames.push('splat');
	    } else if (match[0] === '(') {
	      regexpSource += '(?:';
	    } else if (match[0] === ')') {
	      regexpSource += ')?';
	    } else if (match[0] === '\\(') {
	      regexpSource += '\\(';
	    } else if (match[0] === '\\)') {
	      regexpSource += '\\)';
	    }

	    tokens.push(match[0]);

	    lastIndex = matcher.lastIndex;
	  }

	  if (lastIndex !== pattern.length) {
	    tokens.push(pattern.slice(lastIndex, pattern.length));
	    regexpSource += escapeRegExp(pattern.slice(lastIndex, pattern.length));
	  }

	  return {
	    pattern: pattern,
	    regexpSource: regexpSource,
	    paramNames: paramNames,
	    tokens: tokens
	  };
	}

	var CompiledPatternsCache = Object.create(null);

	function compilePattern(pattern) {
	  if (!CompiledPatternsCache[pattern]) CompiledPatternsCache[pattern] = _compilePattern(pattern);

	  return CompiledPatternsCache[pattern];
	}

	/**
	 * Attempts to match a pattern on the given pathname. Patterns may use
	 * the following special characters:
	 *
	 * - :paramName     Matches a URL segment up to the next /, ?, or #. The
	 *                  captured string is considered a "param"
	 * - ()             Wraps a segment of the URL that is optional
	 * - *              Consumes (non-greedy) all characters up to the next
	 *                  character in the pattern, or to the end of the URL if
	 *                  there is none
	 * - **             Consumes (greedy) all characters up to the next character
	 *                  in the pattern, or to the end of the URL if there is none
	 *
	 *  The function calls callback(error, matched) when finished.
	 * The return value is an object with the following properties:
	 *
	 * - remainingPathname
	 * - paramNames
	 * - paramValues
	 */
	function matchPattern(pattern, pathname) {
	  // Ensure pattern starts with leading slash for consistency with pathname.
	  if (pattern.charAt(0) !== '/') {
	    pattern = '/' + pattern;
	  }

	  var _compilePattern2 = compilePattern(pattern),
	      regexpSource = _compilePattern2.regexpSource,
	      paramNames = _compilePattern2.paramNames,
	      tokens = _compilePattern2.tokens;

	  if (pattern.charAt(pattern.length - 1) !== '/') {
	    regexpSource += '/?'; // Allow optional path separator at end.
	  }

	  // Special-case patterns like '*' for catch-all routes.
	  if (tokens[tokens.length - 1] === '*') {
	    regexpSource += '$';
	  }

	  var match = pathname.match(new RegExp('^' + regexpSource, 'i'));
	  if (match == null) {
	    return null;
	  }

	  var matchedPath = match[0];
	  var remainingPathname = pathname.substr(matchedPath.length);

	  if (remainingPathname) {
	    // Require that the match ends at a path separator, if we didn't match
	    // the full path, so any remaining pathname is a new path segment.
	    if (matchedPath.charAt(matchedPath.length - 1) !== '/') {
	      return null;
	    }

	    // If there is a remaining pathname, treat the path separator as part of
	    // the remaining pathname for properly continuing the match.
	    remainingPathname = '/' + remainingPathname;
	  }

	  return {
	    remainingPathname: remainingPathname,
	    paramNames: paramNames,
	    paramValues: match.slice(1).map(function (v) {
	      return v && decodeURIComponent(v);
	    })
	  };
	}

	function getParamNames(pattern) {
	  return compilePattern(pattern).paramNames;
	}

	function getParams(pattern, pathname) {
	  var match = matchPattern(pattern, pathname);
	  if (!match) {
	    return null;
	  }

	  var paramNames = match.paramNames,
	      paramValues = match.paramValues;

	  var params = {};

	  paramNames.forEach(function (paramName, index) {
	    params[paramName] = paramValues[index];
	  });

	  return params;
	}

	/**
	 * Returns a version of the given pattern with params interpolated. Throws
	 * if there is a dynamic segment of the pattern for which there is no param.
	 */
	function formatPattern(pattern, params) {
	  params = params || {};

	  var _compilePattern3 = compilePattern(pattern),
	      tokens = _compilePattern3.tokens;

	  var parenCount = 0,
	      pathname = '',
	      splatIndex = 0,
	      parenHistory = [];

	  var token = void 0,
	      paramName = void 0,
	      paramValue = void 0;
	  for (var i = 0, len = tokens.length; i < len; ++i) {
	    token = tokens[i];

	    if (token === '*' || token === '**') {
	      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;

	      !(paramValue != null || parenCount > 0) ?  false ? (0, _invariant2.default)(false, 'Missing splat #%s for path "%s"', splatIndex, pattern) : (0, _invariant2.default)(false) : void 0;

	      if (paramValue != null) pathname += encodeURI(paramValue);
	    } else if (token === '(') {
	      parenHistory[parenCount] = '';
	      parenCount += 1;
	    } else if (token === ')') {
	      var parenText = parenHistory.pop();
	      parenCount -= 1;

	      if (parenCount) parenHistory[parenCount - 1] += parenText;else pathname += parenText;
	    } else if (token === '\\(') {
	      pathname += '(';
	    } else if (token === '\\)') {
	      pathname += ')';
	    } else if (token.charAt(0) === ':') {
	      paramName = token.substring(1);
	      paramValue = params[paramName];

	      !(paramValue != null || parenCount > 0) ?  false ? (0, _invariant2.default)(false, 'Missing "%s" parameter for path "%s"', paramName, pattern) : (0, _invariant2.default)(false) : void 0;

	      if (paramValue == null) {
	        if (parenCount) {
	          parenHistory[parenCount - 1] = '';

	          var curTokenIdx = tokens.indexOf(token);
	          var tokensSubset = tokens.slice(curTokenIdx, tokens.length);
	          var nextParenIdx = -1;

	          for (var _i = 0; _i < tokensSubset.length; _i++) {
	            if (tokensSubset[_i] == ')') {
	              nextParenIdx = _i;
	              break;
	            }
	          }

	          !(nextParenIdx > 0) ?  false ? (0, _invariant2.default)(false, 'Path "%s" is missing end paren at segment "%s"', pattern, tokensSubset.join('')) : (0, _invariant2.default)(false) : void 0;

	          // jump to ending paren
	          i = curTokenIdx + nextParenIdx - 1;
	        }
	      } else if (parenCount) parenHistory[parenCount - 1] += encodeURIComponent(paramValue);else pathname += encodeURIComponent(paramValue);
	    } else {
	      if (parenCount) parenHistory[parenCount - 1] += token;else pathname += token;
	    }
	  }

	  !(parenCount <= 0) ?  false ? (0, _invariant2.default)(false, 'Path "%s" is missing end paren', pattern) : (0, _invariant2.default)(false) : void 0;

	  return pathname.replace(/\/+/g, '/');
	}

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;


/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _createTransitionManager2 = __webpack_require__(177);

	var _createTransitionManager3 = _interopRequireDefault(_createTransitionManager2);

	var _InternalPropTypes = __webpack_require__(187);

	var _RouterContext = __webpack_require__(188);

	var _RouterContext2 = _interopRequireDefault(_RouterContext);

	var _RouteUtils = __webpack_require__(172);

	var _RouterUtils = __webpack_require__(191);

	var _routerWarning = __webpack_require__(178);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _React$PropTypes = _react2.default.PropTypes,
	    func = _React$PropTypes.func,
	    object = _React$PropTypes.object;

	/**
	 * A <Router> is a high-level API for automatically setting up
	 * a router that renders a <RouterContext> with all the props
	 * it needs each time the URL changes.
	 */

	var Router = _react2.default.createClass({
	  displayName: 'Router',


	  propTypes: {
	    history: object,
	    children: _InternalPropTypes.routes,
	    routes: _InternalPropTypes.routes, // alias for children
	    render: func,
	    createElement: func,
	    onError: func,
	    onUpdate: func,

	    // PRIVATE: For client-side rehydration of server match.
	    matchContext: object
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      render: function render(props) {
	        return _react2.default.createElement(_RouterContext2.default, props);
	      }
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {
	      location: null,
	      routes: null,
	      params: null,
	      components: null
	    };
	  },
	  handleError: function handleError(error) {
	    if (this.props.onError) {
	      this.props.onError.call(this, error);
	    } else {
	      // Throw errors by default so we don't silently swallow them!
	      throw error; // This error probably occurred in getChildRoutes or getComponents.
	    }
	  },
	  createRouterObject: function createRouterObject(state) {
	    var matchContext = this.props.matchContext;

	    if (matchContext) {
	      return matchContext.router;
	    }

	    var history = this.props.history;

	    return (0, _RouterUtils.createRouterObject)(history, this.transitionManager, state);
	  },
	  createTransitionManager: function createTransitionManager() {
	    var matchContext = this.props.matchContext;

	    if (matchContext) {
	      return matchContext.transitionManager;
	    }

	    var history = this.props.history;
	    var _props = this.props,
	        routes = _props.routes,
	        children = _props.children;


	    !history.getCurrentLocation ?  false ? (0, _invariant2.default)(false, 'You have provided a history object created with history v4.x or v2.x ' + 'and earlier. This version of React Router is only compatible with v3 ' + 'history objects. Please change to history v3.x.') : (0, _invariant2.default)(false) : void 0;

	    return (0, _createTransitionManager3.default)(history, (0, _RouteUtils.createRoutes)(routes || children));
	  },
	  componentWillMount: function componentWillMount() {
	    var _this = this;

	    this.transitionManager = this.createTransitionManager();
	    this.router = this.createRouterObject(this.state);

	    this._unlisten = this.transitionManager.listen(function (error, state) {
	      if (error) {
	        _this.handleError(error);
	      } else {
	        // Keep the identity of this.router because of a caveat in ContextUtils:
	        // they only work if the object identity is preserved.
	        (0, _RouterUtils.assignRouterState)(_this.router, state);
	        _this.setState(state, _this.props.onUpdate);
	      }
	    });
	  },


	  /* istanbul ignore next: sanity check */
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	     false ? (0, _routerWarning2.default)(nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : void 0;

	     false ? (0, _routerWarning2.default)((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : void 0;
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlisten) this._unlisten();
	  },
	  render: function render() {
	    var _state = this.state,
	        location = _state.location,
	        routes = _state.routes,
	        params = _state.params,
	        components = _state.components;

	    var _props2 = this.props,
	        createElement = _props2.createElement,
	        render = _props2.render,
	        props = _objectWithoutProperties(_props2, ['createElement', 'render']);

	    if (location == null) return null; // Async match

	    // Only forward non-Router-specific props to routing context, as those are
	    // the only ones that might be custom routing context props.
	    Object.keys(Router.propTypes).forEach(function (propType) {
	      return delete props[propType];
	    });

	    return render(_extends({}, props, {
	      router: this.router,
	      location: location,
	      routes: routes,
	      params: params,
	      components: components,
	      createElement: createElement
	    }));
	  }
	});

	exports.default = Router;
	module.exports = exports['default'];

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = createTransitionManager;

	var _routerWarning = __webpack_require__(178);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _computeChangedRoutes2 = __webpack_require__(180);

	var _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);

	var _TransitionUtils = __webpack_require__(181);

	var _isActive2 = __webpack_require__(183);

	var _isActive3 = _interopRequireDefault(_isActive2);

	var _getComponents = __webpack_require__(184);

	var _getComponents2 = _interopRequireDefault(_getComponents);

	var _matchRoutes = __webpack_require__(186);

	var _matchRoutes2 = _interopRequireDefault(_matchRoutes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function hasAnyProperties(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return true;
	  }return false;
	}

	function createTransitionManager(history, routes) {
	  var state = {};

	  // Signature should be (location, indexOnly), but needs to support (path,
	  // query, indexOnly)
	  function isActive(location, indexOnly) {
	    location = history.createLocation(location);

	    return (0, _isActive3.default)(location, indexOnly, state.location, state.routes, state.params);
	  }

	  var partialNextState = void 0;

	  function match(location, callback) {
	    if (partialNextState && partialNextState.location === location) {
	      // Continue from where we left off.
	      finishMatch(partialNextState, callback);
	    } else {
	      (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	        if (error) {
	          callback(error);
	        } else if (nextState) {
	          finishMatch(_extends({}, nextState, { location: location }), callback);
	        } else {
	          callback();
	        }
	      });
	    }
	  }

	  function finishMatch(nextState, callback) {
	    var _computeChangedRoutes = (0, _computeChangedRoutes3.default)(state, nextState),
	        leaveRoutes = _computeChangedRoutes.leaveRoutes,
	        changeRoutes = _computeChangedRoutes.changeRoutes,
	        enterRoutes = _computeChangedRoutes.enterRoutes;

	    (0, _TransitionUtils.runLeaveHooks)(leaveRoutes, state);

	    // Tear down confirmation hooks for left routes
	    leaveRoutes.filter(function (route) {
	      return enterRoutes.indexOf(route) === -1;
	    }).forEach(removeListenBeforeHooksForRoute);

	    // change and enter hooks are run in series
	    (0, _TransitionUtils.runChangeHooks)(changeRoutes, state, nextState, function (error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);

	      (0, _TransitionUtils.runEnterHooks)(enterRoutes, nextState, finishEnterHooks);
	    });

	    function finishEnterHooks(error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);

	      // TODO: Fetch components after state is updated.
	      (0, _getComponents2.default)(nextState, function (error, components) {
	        if (error) {
	          callback(error);
	        } else {
	          // TODO: Make match a pure function and have some other API
	          // for "match and update state".
	          callback(null, null, state = _extends({}, nextState, { components: components }));
	        }
	      });
	    }

	    function handleErrorOrRedirect(error, redirectInfo) {
	      if (error) callback(error);else callback(null, redirectInfo);
	    }
	  }

	  var RouteGuid = 1;

	  function getRouteID(route) {
	    var create = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	    return route.__id__ || create && (route.__id__ = RouteGuid++);
	  }

	  var RouteHooks = Object.create(null);

	  function getRouteHooksForRoutes(routes) {
	    return routes.map(function (route) {
	      return RouteHooks[getRouteID(route)];
	    }).filter(function (hook) {
	      return hook;
	    });
	  }

	  function transitionHook(location, callback) {
	    (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	      if (nextState == null) {
	        // TODO: We didn't actually match anything, but hang
	        // onto error/nextState so we don't have to matchRoutes
	        // again in the listen callback.
	        callback();
	        return;
	      }

	      // Cache some state here so we don't have to
	      // matchRoutes() again in the listen callback.
	      partialNextState = _extends({}, nextState, { location: location });

	      var hooks = getRouteHooksForRoutes((0, _computeChangedRoutes3.default)(state, partialNextState).leaveRoutes);

	      var result = void 0;
	      for (var i = 0, len = hooks.length; result == null && i < len; ++i) {
	        // Passing the location arg here indicates to
	        // the user that this is a transition hook.
	        result = hooks[i](location);
	      }

	      callback(result);
	    });
	  }

	  /* istanbul ignore next: untestable with Karma */
	  function beforeUnloadHook() {
	    // Synchronously check to see if any route hooks want
	    // to prevent the current window/tab from closing.
	    if (state.routes) {
	      var hooks = getRouteHooksForRoutes(state.routes);

	      var message = void 0;
	      for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {
	        // Passing no args indicates to the user that this is a
	        // beforeunload hook. We don't know the next location.
	        message = hooks[i]();
	      }

	      return message;
	    }
	  }

	  var unlistenBefore = void 0,
	      unlistenBeforeUnload = void 0;

	  function removeListenBeforeHooksForRoute(route) {
	    var routeID = getRouteID(route);
	    if (!routeID) {
	      return;
	    }

	    delete RouteHooks[routeID];

	    if (!hasAnyProperties(RouteHooks)) {
	      // teardown transition & beforeunload hooks
	      if (unlistenBefore) {
	        unlistenBefore();
	        unlistenBefore = null;
	      }

	      if (unlistenBeforeUnload) {
	        unlistenBeforeUnload();
	        unlistenBeforeUnload = null;
	      }
	    }
	  }

	  /**
	   * Registers the given hook function to run before leaving the given route.
	   *
	   * During a normal transition, the hook function receives the next location
	   * as its only argument and can return either a prompt message (string) to show the user,
	   * to make sure they want to leave the page; or `false`, to prevent the transition.
	   * Any other return value will have no effect.
	   *
	   * During the beforeunload event (in browsers) the hook receives no arguments.
	   * In this case it must return a prompt message to prevent the transition.
	   *
	   * Returns a function that may be used to unbind the listener.
	   */
	  function listenBeforeLeavingRoute(route, hook) {
	    var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);
	    var routeID = getRouteID(route, true);

	    RouteHooks[routeID] = hook;

	    if (thereWereNoRouteHooks) {
	      // setup transition & beforeunload hooks
	      unlistenBefore = history.listenBefore(transitionHook);

	      if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);
	    }

	    return function () {
	      removeListenBeforeHooksForRoute(route);
	    };
	  }

	  /**
	   * This is the API for stateful environments. As the location
	   * changes, we update state and call the listener. We can also
	   * gracefully handle errors and redirects.
	   */
	  function listen(listener) {
	    function historyListener(location) {
	      if (state.location === location) {
	        listener(null, state);
	      } else {
	        match(location, function (error, redirectLocation, nextState) {
	          if (error) {
	            listener(error);
	          } else if (redirectLocation) {
	            history.replace(redirectLocation);
	          } else if (nextState) {
	            listener(null, nextState);
	          } else {
	             false ? (0, _routerWarning2.default)(false, 'Location "%s" did not match any routes', location.pathname + location.search + location.hash) : void 0;
	          }
	        });
	      }
	    }

	    // TODO: Only use a single history listener. Otherwise we'll end up with
	    // multiple concurrent calls to match.

	    // Set up the history listener first in case the initial match redirects.
	    var unsubscribe = history.listen(historyListener);

	    if (state.location) {
	      // Picking up on a matchContext.
	      listener(null, state);
	    } else {
	      historyListener(history.getCurrentLocation());
	    }

	    return unsubscribe;
	  }

	  return {
	    isActive: isActive,
	    match: match,
	    listenBeforeLeavingRoute: listenBeforeLeavingRoute,
	    listen: listen
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = routerWarning;
	exports._resetWarned = _resetWarned;

	var _warning = __webpack_require__(179);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var warned = {};

	function routerWarning(falseToWarn, message) {
	  // Only issue deprecation warnings once.
	  if (message.indexOf('deprecated') !== -1) {
	    if (warned[message]) {
	      return;
	    }

	    warned[message] = true;
	  }

	  message = '[react-router] ' + message;

	  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    args[_key - 2] = arguments[_key];
	  }

	  _warning2.default.apply(undefined, [falseToWarn, message].concat(args));
	}

	function _resetWarned() {
	  warned = {};
	}

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = function() {};

	if (false) {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;


/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _PatternUtils = __webpack_require__(174);

	function routeParamsChanged(route, prevState, nextState) {
	  if (!route.path) return false;

	  var paramNames = (0, _PatternUtils.getParamNames)(route.path);

	  return paramNames.some(function (paramName) {
	    return prevState.params[paramName] !== nextState.params[paramName];
	  });
	}

	/**
	 * Returns an object of { leaveRoutes, changeRoutes, enterRoutes } determined by
	 * the change from prevState to nextState. We leave routes if either
	 * 1) they are not in the next state or 2) they are in the next state
	 * but their params have changed (i.e. /users/123 => /users/456).
	 *
	 * leaveRoutes are ordered starting at the leaf route of the tree
	 * we're leaving up to the common parent route. enterRoutes are ordered
	 * from the top of the tree we're entering down to the leaf route.
	 *
	 * changeRoutes are any routes that didn't leave or enter during
	 * the transition.
	 */
	function computeChangedRoutes(prevState, nextState) {
	  var prevRoutes = prevState && prevState.routes;
	  var nextRoutes = nextState.routes;

	  var leaveRoutes = void 0,
	      changeRoutes = void 0,
	      enterRoutes = void 0;
	  if (prevRoutes) {
	    (function () {
	      var parentIsLeaving = false;
	      leaveRoutes = prevRoutes.filter(function (route) {
	        if (parentIsLeaving) {
	          return true;
	        } else {
	          var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);
	          if (isLeaving) parentIsLeaving = true;
	          return isLeaving;
	        }
	      });

	      // onLeave hooks start at the leaf route.
	      leaveRoutes.reverse();

	      enterRoutes = [];
	      changeRoutes = [];

	      nextRoutes.forEach(function (route) {
	        var isNew = prevRoutes.indexOf(route) === -1;
	        var paramsChanged = leaveRoutes.indexOf(route) !== -1;

	        if (isNew || paramsChanged) enterRoutes.push(route);else changeRoutes.push(route);
	      });
	    })();
	  } else {
	    leaveRoutes = [];
	    changeRoutes = [];
	    enterRoutes = nextRoutes;
	  }

	  return {
	    leaveRoutes: leaveRoutes,
	    changeRoutes: changeRoutes,
	    enterRoutes: enterRoutes
	  };
	}

	exports.default = computeChangedRoutes;
	module.exports = exports['default'];

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.runEnterHooks = runEnterHooks;
	exports.runChangeHooks = runChangeHooks;
	exports.runLeaveHooks = runLeaveHooks;

	var _AsyncUtils = __webpack_require__(182);

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PendingHooks = function PendingHooks() {
	  var _this = this;

	  _classCallCheck(this, PendingHooks);

	  this.hooks = [];

	  this.add = function (hook) {
	    return _this.hooks.push(hook);
	  };

	  this.remove = function (hook) {
	    return _this.hooks = _this.hooks.filter(function (h) {
	      return h !== hook;
	    });
	  };

	  this.has = function (hook) {
	    return _this.hooks.indexOf(hook) !== -1;
	  };

	  this.clear = function () {
	    return _this.hooks = [];
	  };
	};

	var enterHooks = new PendingHooks();
	var changeHooks = new PendingHooks();

	function createTransitionHook(hook, route, asyncArity, pendingHooks) {
	  var isSync = hook.length < asyncArity;

	  var transitionHook = function transitionHook() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    hook.apply(route, args);

	    if (isSync) {
	      var callback = args[args.length - 1];
	      // Assume hook executes synchronously and
	      // automatically call the callback.
	      callback();
	    }
	  };

	  pendingHooks.add(transitionHook);

	  return transitionHook;
	}

	function getEnterHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onEnter) hooks.push(createTransitionHook(route.onEnter, route, 3, enterHooks));
	    return hooks;
	  }, []);
	}

	function getChangeHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onChange) hooks.push(createTransitionHook(route.onChange, route, 4, changeHooks));
	    return hooks;
	  }, []);
	}

	function runTransitionHooks(length, iter, callback) {
	  if (!length) {
	    callback();
	    return;
	  }

	  var redirectInfo = void 0;
	  function replace(location) {
	    redirectInfo = location;
	  }

	  (0, _AsyncUtils.loopAsync)(length, function (index, next, done) {
	    iter(index, replace, function (error) {
	      if (error || redirectInfo) {
	        done(error, redirectInfo); // No need to continue.
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}

	/**
	 * Runs all onEnter hooks in the given array of routes in order
	 * with onEnter(nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runEnterHooks(routes, nextState, callback) {
	  enterHooks.clear();
	  var hooks = getEnterHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    var wrappedNext = function wrappedNext() {
	      if (enterHooks.has(hooks[index])) {
	        next.apply(undefined, arguments);
	        enterHooks.remove(hooks[index]);
	      }
	    };
	    hooks[index](nextState, replace, wrappedNext);
	  }, callback);
	}

	/**
	 * Runs all onChange hooks in the given array of routes in order
	 * with onChange(prevState, nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runChangeHooks(routes, state, nextState, callback) {
	  changeHooks.clear();
	  var hooks = getChangeHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    var wrappedNext = function wrappedNext() {
	      if (changeHooks.has(hooks[index])) {
	        next.apply(undefined, arguments);
	        changeHooks.remove(hooks[index]);
	      }
	    };
	    hooks[index](state, nextState, replace, wrappedNext);
	  }, callback);
	}

	/**
	 * Runs all onLeave hooks in the given array of routes in order.
	 */
	function runLeaveHooks(routes, prevState) {
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    if (routes[i].onLeave) routes[i].onLeave.call(routes[i], prevState);
	  }
	}

/***/ },
/* 182 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports.loopAsync = loopAsync;
	exports.mapAsync = mapAsync;
	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var sync = false,
	      hasNext = false,
	      doneArgs = void 0;

	  function done() {
	    isDone = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = [].concat(Array.prototype.slice.call(arguments));
	      return;
	    }

	    callback.apply(this, arguments);
	  }

	  function next() {
	    if (isDone) {
	      return;
	    }

	    hasNext = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      return;
	    }

	    sync = true;

	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work.call(this, currentTurn++, next, done);
	    }

	    sync = false;

	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(this, doneArgs);
	      return;
	    }

	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  }

	  next();
	}

	function mapAsync(array, work, callback) {
	  var length = array.length;
	  var values = [];

	  if (length === 0) return callback(null, values);

	  var isDone = false,
	      doneCount = 0;

	  function done(index, error, value) {
	    if (isDone) return;

	    if (error) {
	      isDone = true;
	      callback(error);
	    } else {
	      values[index] = value;

	      isDone = ++doneCount === length;

	      if (isDone) callback(null, values);
	    }
	  }

	  array.forEach(function (item, index) {
	    work(item, index, function (error, value) {
	      done(index, error, value);
	    });
	  });
	}

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports.default = isActive;

	var _PatternUtils = __webpack_require__(174);

	function deepEqual(a, b) {
	  if (a == b) return true;

	  if (a == null || b == null) return false;

	  if (Array.isArray(a)) {
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return deepEqual(item, b[index]);
	    });
	  }

	  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object') {
	    for (var p in a) {
	      if (!Object.prototype.hasOwnProperty.call(a, p)) {
	        continue;
	      }

	      if (a[p] === undefined) {
	        if (b[p] !== undefined) {
	          return false;
	        }
	      } else if (!Object.prototype.hasOwnProperty.call(b, p)) {
	        return false;
	      } else if (!deepEqual(a[p], b[p])) {
	        return false;
	      }
	    }

	    return true;
	  }

	  return String(a) === String(b);
	}

	/**
	 * Returns true if the current pathname matches the supplied one, net of
	 * leading and trailing slash normalization. This is sufficient for an
	 * indexOnly route match.
	 */
	function pathIsActive(pathname, currentPathname) {
	  // Normalize leading slash for consistency. Leading slash on pathname has
	  // already been normalized in isActive. See caveat there.
	  if (currentPathname.charAt(0) !== '/') {
	    currentPathname = '/' + currentPathname;
	  }

	  // Normalize the end of both path names too. Maybe `/foo/` shouldn't show
	  // `/foo` as active, but in this case, we would already have failed the
	  // match.
	  if (pathname.charAt(pathname.length - 1) !== '/') {
	    pathname += '/';
	  }
	  if (currentPathname.charAt(currentPathname.length - 1) !== '/') {
	    currentPathname += '/';
	  }

	  return currentPathname === pathname;
	}

	/**
	 * Returns true if the given pathname matches the active routes and params.
	 */
	function routeIsActive(pathname, routes, params) {
	  var remainingPathname = pathname,
	      paramNames = [],
	      paramValues = [];

	  // for...of would work here but it's probably slower post-transpilation.
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    var route = routes[i];
	    var pattern = route.path || '';

	    if (pattern.charAt(0) === '/') {
	      remainingPathname = pathname;
	      paramNames = [];
	      paramValues = [];
	    }

	    if (remainingPathname !== null && pattern) {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }

	      if (remainingPathname === '') {
	        // We have an exact match on the route. Just check that all the params
	        // match.
	        // FIXME: This doesn't work on repeated params.
	        return paramNames.every(function (paramName, index) {
	          return String(paramValues[index]) === String(params[paramName]);
	        });
	      }
	    }
	  }

	  return false;
	}

	/**
	 * Returns true if all key/value pairs in the given query are
	 * currently active.
	 */
	function queryIsActive(query, activeQuery) {
	  if (activeQuery == null) return query == null;

	  if (query == null) return true;

	  return deepEqual(query, activeQuery);
	}

	/**
	 * Returns true if a <Link> to the given pathname/query combination is
	 * currently active.
	 */
	function isActive(_ref, indexOnly, currentLocation, routes, params) {
	  var pathname = _ref.pathname,
	      query = _ref.query;

	  if (currentLocation == null) return false;

	  // TODO: This is a bit ugly. It keeps around support for treating pathnames
	  // without preceding slashes as absolute paths, but possibly also works
	  // around the same quirks with basenames as in matchRoutes.
	  if (pathname.charAt(0) !== '/') {
	    pathname = '/' + pathname;
	  }

	  if (!pathIsActive(pathname, currentLocation.pathname)) {
	    // The path check is necessary and sufficient for indexOnly, but otherwise
	    // we still need to check the routes.
	    if (indexOnly || !routeIsActive(pathname, routes, params)) {
	      return false;
	    }
	  }

	  return queryIsActive(query, currentLocation.query);
	}
	module.exports = exports['default'];

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _AsyncUtils = __webpack_require__(182);

	var _PromiseUtils = __webpack_require__(185);

	function getComponentsForRoute(nextState, route, callback) {
	  if (route.component || route.components) {
	    callback(null, route.component || route.components);
	    return;
	  }

	  var getComponent = route.getComponent || route.getComponents;
	  if (getComponent) {
	    var componentReturn = getComponent.call(route, nextState, callback);
	    if ((0, _PromiseUtils.isPromise)(componentReturn)) componentReturn.then(function (component) {
	      return callback(null, component);
	    }, callback);
	  } else {
	    callback();
	  }
	}

	/**
	 * Asynchronously fetches all components needed for the given router
	 * state and calls callback(error, components) when finished.
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getComponents method.
	 */
	function getComponents(nextState, callback) {
	  (0, _AsyncUtils.mapAsync)(nextState.routes, function (route, index, callback) {
	    getComponentsForRoute(nextState, route, callback);
	  }, callback);
	}

	exports.default = getComponents;
	module.exports = exports['default'];

/***/ },
/* 185 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.isPromise = isPromise;
	function isPromise(obj) {
	  return obj && typeof obj.then === 'function';
	}

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports.default = matchRoutes;

	var _AsyncUtils = __webpack_require__(182);

	var _PromiseUtils = __webpack_require__(185);

	var _PatternUtils = __webpack_require__(174);

	var _routerWarning = __webpack_require__(178);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _RouteUtils = __webpack_require__(172);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getChildRoutes(route, location, paramNames, paramValues, callback) {
	  if (route.childRoutes) {
	    return [null, route.childRoutes];
	  }
	  if (!route.getChildRoutes) {
	    return [];
	  }

	  var sync = true,
	      result = void 0;

	  var partialNextState = {
	    location: location,
	    params: createParams(paramNames, paramValues)
	  };

	  var childRoutesReturn = route.getChildRoutes(partialNextState, function (error, childRoutes) {
	    childRoutes = !error && (0, _RouteUtils.createRoutes)(childRoutes);
	    if (sync) {
	      result = [error, childRoutes];
	      return;
	    }

	    callback(error, childRoutes);
	  });

	  if ((0, _PromiseUtils.isPromise)(childRoutesReturn)) childRoutesReturn.then(function (childRoutes) {
	    return callback(null, (0, _RouteUtils.createRoutes)(childRoutes));
	  }, callback);

	  sync = false;
	  return result; // Might be undefined.
	}

	function getIndexRoute(route, location, paramNames, paramValues, callback) {
	  if (route.indexRoute) {
	    callback(null, route.indexRoute);
	  } else if (route.getIndexRoute) {
	    var partialNextState = {
	      location: location,
	      params: createParams(paramNames, paramValues)
	    };

	    var indexRoutesReturn = route.getIndexRoute(partialNextState, function (error, indexRoute) {
	      callback(error, !error && (0, _RouteUtils.createRoutes)(indexRoute)[0]);
	    });

	    if ((0, _PromiseUtils.isPromise)(indexRoutesReturn)) indexRoutesReturn.then(function (indexRoute) {
	      return callback(null, (0, _RouteUtils.createRoutes)(indexRoute)[0]);
	    }, callback);
	  } else if (route.childRoutes || route.getChildRoutes) {
	    var onChildRoutes = function onChildRoutes(error, childRoutes) {
	      if (error) {
	        callback(error);
	        return;
	      }

	      var pathless = childRoutes.filter(function (childRoute) {
	        return !childRoute.path;
	      });

	      (0, _AsyncUtils.loopAsync)(pathless.length, function (index, next, done) {
	        getIndexRoute(pathless[index], location, paramNames, paramValues, function (error, indexRoute) {
	          if (error || indexRoute) {
	            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);
	            done(error, routes);
	          } else {
	            next();
	          }
	        });
	      }, function (err, routes) {
	        callback(null, routes);
	      });
	    };

	    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);
	    if (result) {
	      onChildRoutes.apply(undefined, result);
	    }
	  } else {
	    callback();
	  }
	}

	function assignParams(params, paramNames, paramValues) {
	  return paramNames.reduce(function (params, paramName, index) {
	    var paramValue = paramValues && paramValues[index];

	    if (Array.isArray(params[paramName])) {
	      params[paramName].push(paramValue);
	    } else if (paramName in params) {
	      params[paramName] = [params[paramName], paramValue];
	    } else {
	      params[paramName] = paramValue;
	    }

	    return params;
	  }, params);
	}

	function createParams(paramNames, paramValues) {
	  return assignParams({}, paramNames, paramValues);
	}

	function matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {
	  var pattern = route.path || '';

	  if (pattern.charAt(0) === '/') {
	    remainingPathname = location.pathname;
	    paramNames = [];
	    paramValues = [];
	  }

	  // Only try to match the path if the route actually has a pattern, and if
	  // we're not just searching for potential nested absolute paths.
	  if (remainingPathname !== null && pattern) {
	    try {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }
	    } catch (error) {
	      callback(error);
	    }

	    // By assumption, pattern is non-empty here, which is the prerequisite for
	    // actually terminating a match.
	    if (remainingPathname === '') {
	      var _ret = function () {
	        var match = {
	          routes: [route],
	          params: createParams(paramNames, paramValues)
	        };

	        getIndexRoute(route, location, paramNames, paramValues, function (error, indexRoute) {
	          if (error) {
	            callback(error);
	          } else {
	            if (Array.isArray(indexRoute)) {
	              var _match$routes;

	               false ? (0, _routerWarning2.default)(indexRoute.every(function (route) {
	                return !route.path;
	              }), 'Index routes should not have paths') : void 0;
	              (_match$routes = match.routes).push.apply(_match$routes, indexRoute);
	            } else if (indexRoute) {
	               false ? (0, _routerWarning2.default)(!indexRoute.path, 'Index routes should not have paths') : void 0;
	              match.routes.push(indexRoute);
	            }

	            callback(null, match);
	          }
	        });

	        return {
	          v: void 0
	        };
	      }();

	      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	    }
	  }

	  if (remainingPathname != null || route.childRoutes) {
	    // Either a) this route matched at least some of the path or b)
	    // we don't have to load this route's children asynchronously. In
	    // either case continue checking for matches in the subtree.
	    var onChildRoutes = function onChildRoutes(error, childRoutes) {
	      if (error) {
	        callback(error);
	      } else if (childRoutes) {
	        // Check the child routes to see if any of them match.
	        matchRoutes(childRoutes, location, function (error, match) {
	          if (error) {
	            callback(error);
	          } else if (match) {
	            // A child route matched! Augment the match and pass it up the stack.
	            match.routes.unshift(route);
	            callback(null, match);
	          } else {
	            callback();
	          }
	        }, remainingPathname, paramNames, paramValues);
	      } else {
	        callback();
	      }
	    };

	    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);
	    if (result) {
	      onChildRoutes.apply(undefined, result);
	    }
	  } else {
	    callback();
	  }
	}

	/**
	 * Asynchronously matches the given location to a set of routes and calls
	 * callback(error, state) when finished. The state object will have the
	 * following properties:
	 *
	 * - routes       An array of routes that matched, in hierarchical order
	 * - params       An object of URL parameters
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getChildRoutes method.
	 */
	function matchRoutes(routes, location, callback, remainingPathname) {
	  var paramNames = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
	  var paramValues = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];

	  if (remainingPathname === undefined) {
	    // TODO: This is a little bit ugly, but it works around a quirk in history
	    // that strips the leading slash from pathnames when using basenames with
	    // trailing slashes.
	    if (location.pathname.charAt(0) !== '/') {
	      location = _extends({}, location, {
	        pathname: '/' + location.pathname
	      });
	    }
	    remainingPathname = location.pathname;
	  }

	  (0, _AsyncUtils.loopAsync)(routes.length, function (index, next, done) {
	    matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {
	      if (error || match) {
	        done(error, match);
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}
	module.exports = exports['default'];

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.routes = exports.route = exports.components = exports.component = exports.history = undefined;
	exports.falsy = falsy;

	var _react = __webpack_require__(1);

	var func = _react.PropTypes.func,
	    object = _react.PropTypes.object,
	    arrayOf = _react.PropTypes.arrayOf,
	    oneOfType = _react.PropTypes.oneOfType,
	    element = _react.PropTypes.element,
	    shape = _react.PropTypes.shape,
	    string = _react.PropTypes.string;
	function falsy(props, propName, componentName) {
	  if (props[propName]) return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
	}

	var history = exports.history = shape({
	  listen: func.isRequired,
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired
	});

	var component = exports.component = oneOfType([func, string]);
	var components = exports.components = oneOfType([component, object]);
	var route = exports.route = oneOfType([object, element]);
	var routes = exports.routes = oneOfType([route, arrayOf(route)]);

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _getRouteParams = __webpack_require__(189);

	var _getRouteParams2 = _interopRequireDefault(_getRouteParams);

	var _ContextUtils = __webpack_require__(190);

	var _RouteUtils = __webpack_require__(172);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var _React$PropTypes = _react2.default.PropTypes,
	    array = _React$PropTypes.array,
	    func = _React$PropTypes.func,
	    object = _React$PropTypes.object;

	/**
	 * A <RouterContext> renders the component tree for a given router state
	 * and sets the history object and the current location in context.
	 */

	var RouterContext = _react2.default.createClass({
	  displayName: 'RouterContext',


	  mixins: [(0, _ContextUtils.ContextProvider)('router')],

	  propTypes: {
	    router: object.isRequired,
	    location: object.isRequired,
	    routes: array.isRequired,
	    params: object.isRequired,
	    components: array.isRequired,
	    createElement: func.isRequired
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      createElement: _react2.default.createElement
	    };
	  },


	  childContextTypes: {
	    router: object.isRequired
	  },

	  getChildContext: function getChildContext() {
	    return {
	      router: this.props.router
	    };
	  },
	  createElement: function createElement(component, props) {
	    return component == null ? null : this.props.createElement(component, props);
	  },
	  render: function render() {
	    var _this = this;

	    var _props = this.props,
	        location = _props.location,
	        routes = _props.routes,
	        params = _props.params,
	        components = _props.components,
	        router = _props.router;

	    var element = null;

	    if (components) {
	      element = components.reduceRight(function (element, components, index) {
	        if (components == null) return element; // Don't create new children; use the grandchildren.

	        var route = routes[index];
	        var routeParams = (0, _getRouteParams2.default)(route, params);
	        var props = {
	          location: location,
	          params: params,
	          route: route,
	          router: router,
	          routeParams: routeParams,
	          routes: routes
	        };

	        if ((0, _RouteUtils.isReactChildren)(element)) {
	          props.children = element;
	        } else if (element) {
	          for (var prop in element) {
	            if (Object.prototype.hasOwnProperty.call(element, prop)) props[prop] = element[prop];
	          }
	        }

	        if ((typeof components === 'undefined' ? 'undefined' : _typeof(components)) === 'object') {
	          var elements = {};

	          for (var key in components) {
	            if (Object.prototype.hasOwnProperty.call(components, key)) {
	              // Pass through the key as a prop to createElement to allow
	              // custom createElement functions to know which named component
	              // they're rendering, for e.g. matching up to fetched data.
	              elements[key] = _this.createElement(components[key], _extends({
	                key: key }, props));
	            }
	          }

	          return elements;
	        }

	        return _this.createElement(components, props);
	      }, element);
	    }

	    !(element === null || element === false || _react2.default.isValidElement(element)) ?  false ? (0, _invariant2.default)(false, 'The root route must render a single element') : (0, _invariant2.default)(false) : void 0;

	    return element;
	  }
	});

	exports.default = RouterContext;
	module.exports = exports['default'];

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _PatternUtils = __webpack_require__(174);

	/**
	 * Extracts an object of params the given route cares about from
	 * the given params object.
	 */
	function getRouteParams(route, params) {
	  var routeParams = {};

	  if (!route.path) return routeParams;

	  (0, _PatternUtils.getParamNames)(route.path).forEach(function (p) {
	    if (Object.prototype.hasOwnProperty.call(params, p)) {
	      routeParams[p] = params[p];
	    }
	  });

	  return routeParams;
	}

	exports.default = getRouteParams;
	module.exports = exports['default'];

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.ContextProvider = ContextProvider;
	exports.ContextSubscriber = ContextSubscriber;

	var _react = __webpack_require__(1);

	// Works around issues with context updates failing to propagate.
	// Caveat: the context value is expected to never change its identity.
	// https://github.com/facebook/react/issues/2517
	// https://github.com/reactjs/react-router/issues/470

	var contextProviderShape = _react.PropTypes.shape({
	  subscribe: _react.PropTypes.func.isRequired,
	  eventIndex: _react.PropTypes.number.isRequired
	});

	function makeContextName(name) {
	  return '@@contextSubscriber/' + name;
	}

	function ContextProvider(name) {
	  var _childContextTypes, _ref2;

	  var contextName = makeContextName(name);
	  var listenersKey = contextName + '/listeners';
	  var eventIndexKey = contextName + '/eventIndex';
	  var subscribeKey = contextName + '/subscribe';

	  return _ref2 = {
	    childContextTypes: (_childContextTypes = {}, _childContextTypes[contextName] = contextProviderShape.isRequired, _childContextTypes),

	    getChildContext: function getChildContext() {
	      var _ref;

	      return _ref = {}, _ref[contextName] = {
	        eventIndex: this[eventIndexKey],
	        subscribe: this[subscribeKey]
	      }, _ref;
	    },
	    componentWillMount: function componentWillMount() {
	      this[listenersKey] = [];
	      this[eventIndexKey] = 0;
	    },
	    componentWillReceiveProps: function componentWillReceiveProps() {
	      this[eventIndexKey]++;
	    },
	    componentDidUpdate: function componentDidUpdate() {
	      var _this = this;

	      this[listenersKey].forEach(function (listener) {
	        return listener(_this[eventIndexKey]);
	      });
	    }
	  }, _ref2[subscribeKey] = function (listener) {
	    var _this2 = this;

	    // No need to immediately call listener here.
	    this[listenersKey].push(listener);

	    return function () {
	      _this2[listenersKey] = _this2[listenersKey].filter(function (item) {
	        return item !== listener;
	      });
	    };
	  }, _ref2;
	}

	function ContextSubscriber(name) {
	  var _contextTypes, _ref4;

	  var contextName = makeContextName(name);
	  var lastRenderedEventIndexKey = contextName + '/lastRenderedEventIndex';
	  var handleContextUpdateKey = contextName + '/handleContextUpdate';
	  var unsubscribeKey = contextName + '/unsubscribe';

	  return _ref4 = {
	    contextTypes: (_contextTypes = {}, _contextTypes[contextName] = contextProviderShape, _contextTypes),

	    getInitialState: function getInitialState() {
	      var _ref3;

	      if (!this.context[contextName]) {
	        return {};
	      }

	      return _ref3 = {}, _ref3[lastRenderedEventIndexKey] = this.context[contextName].eventIndex, _ref3;
	    },
	    componentDidMount: function componentDidMount() {
	      if (!this.context[contextName]) {
	        return;
	      }

	      this[unsubscribeKey] = this.context[contextName].subscribe(this[handleContextUpdateKey]);
	    },
	    componentWillReceiveProps: function componentWillReceiveProps() {
	      var _setState;

	      if (!this.context[contextName]) {
	        return;
	      }

	      this.setState((_setState = {}, _setState[lastRenderedEventIndexKey] = this.context[contextName].eventIndex, _setState));
	    },
	    componentWillUnmount: function componentWillUnmount() {
	      if (!this[unsubscribeKey]) {
	        return;
	      }

	      this[unsubscribeKey]();
	      this[unsubscribeKey] = null;
	    }
	  }, _ref4[handleContextUpdateKey] = function (eventIndex) {
	    if (eventIndex !== this.state[lastRenderedEventIndexKey]) {
	      var _setState2;

	      this.setState((_setState2 = {}, _setState2[lastRenderedEventIndexKey] = eventIndex, _setState2));
	    }
	  }, _ref4;
	}

/***/ },
/* 191 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.createRouterObject = createRouterObject;
	exports.assignRouterState = assignRouterState;
	function createRouterObject(history, transitionManager, state) {
	  var router = _extends({}, history, {
	    setRouteLeaveHook: transitionManager.listenBeforeLeavingRoute,
	    isActive: transitionManager.isActive
	  });

	  return assignRouterState(router, state);
	}

	function assignRouterState(router, _ref) {
	  var location = _ref.location,
	      params = _ref.params,
	      routes = _ref.routes;

	  router.location = location;
	  router.params = params;
	  router.routes = routes;

	  return router;
	}

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _PropTypes = __webpack_require__(173);

	var _ContextUtils = __webpack_require__(190);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _React$PropTypes = _react2.default.PropTypes,
	    bool = _React$PropTypes.bool,
	    object = _React$PropTypes.object,
	    string = _React$PropTypes.string,
	    func = _React$PropTypes.func,
	    oneOfType = _React$PropTypes.oneOfType;


	function isLeftClickEvent(event) {
	  return event.button === 0;
	}

	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}

	// TODO: De-duplicate against hasAnyProperties in createTransitionManager.
	function isEmptyObject(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return false;
	  }return true;
	}

	function resolveToLocation(to, router) {
	  return typeof to === 'function' ? to(router.location) : to;
	}

	/**
	 * A <Link> is used to create an <a> element that links to a route.
	 * When that route is active, the link gets the value of its
	 * activeClassName prop.
	 *
	 * For example, assuming you have the following route:
	 *
	 *   <Route path="/posts/:postID" component={Post} />
	 *
	 * You could use the following component to link to that route:
	 *
	 *   <Link to={`/posts/${post.id}`} />
	 *
	 * Links may pass along location state and/or query string parameters
	 * in the state/query props, respectively.
	 *
	 *   <Link ... query={{ show: true }} state={{ the: 'state' }} />
	 */
	var Link = _react2.default.createClass({
	  displayName: 'Link',


	  mixins: [(0, _ContextUtils.ContextSubscriber)('router')],

	  contextTypes: {
	    router: _PropTypes.routerShape
	  },

	  propTypes: {
	    to: oneOfType([string, object, func]),
	    query: object,
	    hash: string,
	    state: object,
	    activeStyle: object,
	    activeClassName: string,
	    onlyActiveOnIndex: bool.isRequired,
	    onClick: func,
	    target: string
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      onlyActiveOnIndex: false,
	      style: {}
	    };
	  },
	  handleClick: function handleClick(event) {
	    if (this.props.onClick) this.props.onClick(event);

	    if (event.defaultPrevented) return;

	    var router = this.context.router;

	    !router ?  false ? (0, _invariant2.default)(false, '<Link>s rendered outside of a router context cannot navigate.') : (0, _invariant2.default)(false) : void 0;

	    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;

	    // If target prop is set (e.g. to "_blank"), let browser handle link.
	    /* istanbul ignore if: untestable with Karma */
	    if (this.props.target) return;

	    event.preventDefault();

	    router.push(resolveToLocation(this.props.to, router));
	  },
	  render: function render() {
	    var _props = this.props,
	        to = _props.to,
	        activeClassName = _props.activeClassName,
	        activeStyle = _props.activeStyle,
	        onlyActiveOnIndex = _props.onlyActiveOnIndex,
	        props = _objectWithoutProperties(_props, ['to', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);

	    // Ignore if rendered outside the context of router to simplify unit testing.


	    var router = this.context.router;


	    if (router) {
	      // If user does not specify a `to` prop, return an empty anchor tag.
	      if (!to) {
	        return _react2.default.createElement('a', props);
	      }

	      var toLocation = resolveToLocation(to, router);
	      props.href = router.createHref(toLocation);

	      if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {
	        if (router.isActive(toLocation, onlyActiveOnIndex)) {
	          if (activeClassName) {
	            if (props.className) {
	              props.className += ' ' + activeClassName;
	            } else {
	              props.className = activeClassName;
	            }
	          }

	          if (activeStyle) props.style = _extends({}, props.style, activeStyle);
	        }
	      }
	    }

	    return _react2.default.createElement('a', _extends({}, props, { onClick: this.handleClick }));
	  }
	});

	exports.default = Link;
	module.exports = exports['default'];

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _Link = __webpack_require__(192);

	var _Link2 = _interopRequireDefault(_Link);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An <IndexLink> is used to link to an <IndexRoute>.
	 */
	var IndexLink = _react2.default.createClass({
	  displayName: 'IndexLink',
	  render: function render() {
	    return _react2.default.createElement(_Link2.default, _extends({}, this.props, { onlyActiveOnIndex: true }));
	  }
	});

	exports.default = IndexLink;
	module.exports = exports['default'];

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = withRouter;

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _hoistNonReactStatics = __webpack_require__(195);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _ContextUtils = __webpack_require__(190);

	var _PropTypes = __webpack_require__(173);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}

	function withRouter(WrappedComponent, options) {
	  var withRef = options && options.withRef;

	  var WithRouter = _react2.default.createClass({
	    displayName: 'WithRouter',

	    mixins: [(0, _ContextUtils.ContextSubscriber)('router')],

	    contextTypes: { router: _PropTypes.routerShape },
	    propTypes: { router: _PropTypes.routerShape },

	    getWrappedInstance: function getWrappedInstance() {
	      !withRef ?  false ? (0, _invariant2.default)(false, 'To access the wrapped instance, you need to specify ' + '`{ withRef: true }` as the second argument of the withRouter() call.') : (0, _invariant2.default)(false) : void 0;

	      return this.wrappedInstance;
	    },
	    render: function render() {
	      var _this = this;

	      var router = this.props.router || this.context.router;
	      if (!router) {
	        return _react2.default.createElement(WrappedComponent, this.props);
	      }

	      var params = router.params,
	          location = router.location,
	          routes = router.routes;

	      var props = _extends({}, this.props, { router: router, params: params, location: location, routes: routes });

	      if (withRef) {
	        props.ref = function (c) {
	          _this.wrappedInstance = c;
	        };
	      }

	      return _react2.default.createElement(WrappedComponent, props);
	    }
	  });

	  WithRouter.displayName = 'withRouter(' + getDisplayName(WrappedComponent) + ')';
	  WithRouter.WrappedComponent = WrappedComponent;

	  return (0, _hoistNonReactStatics2.default)(WithRouter, WrappedComponent);
	}
	module.exports = exports['default'];

/***/ },
/* 195 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';

	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};

	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};

	var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	        var keys = Object.getOwnPropertyNames(sourceComponent);

	        /* istanbul ignore else */
	        if (isGetOwnPropertySymbolsAvailable) {
	            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
	        }

	        for (var i = 0; i < keys.length; ++i) {
	            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
	                try {
	                    targetComponent[keys[i]] = sourceComponent[keys[i]];
	                } catch (error) {

	                }
	            }
	        }
	    }

	    return targetComponent;
	};


/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _routerWarning = __webpack_require__(178);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _Redirect = __webpack_require__(197);

	var _Redirect2 = _interopRequireDefault(_Redirect);

	var _InternalPropTypes = __webpack_require__(187);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var _React$PropTypes = _react2.default.PropTypes,
	    string = _React$PropTypes.string,
	    object = _React$PropTypes.object;

	/**
	 * An <IndexRedirect> is used to redirect from an indexRoute.
	 */
	/* eslint-disable react/require-render-return */

	var IndexRedirect = _react2.default.createClass({
	  displayName: 'IndexRedirect',


	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = _Redirect2.default.createRouteFromReactElement(element);
	      } else {
	         false ? (0, _routerWarning2.default)(false, 'An <IndexRedirect> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },

	  propTypes: {
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },

	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? (0, _invariant2.default)(false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});

	exports.default = IndexRedirect;
	module.exports = exports['default'];

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _RouteUtils = __webpack_require__(172);

	var _PatternUtils = __webpack_require__(174);

	var _InternalPropTypes = __webpack_require__(187);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var _React$PropTypes = _react2.default.PropTypes,
	    string = _React$PropTypes.string,
	    object = _React$PropTypes.object;

	/**
	 * A <Redirect> is used to declare another URL path a client should
	 * be sent to when they request a given URL.
	 *
	 * Redirects are placed alongside routes in the route configuration
	 * and are traversed in the same manner.
	 */
	/* eslint-disable react/require-render-return */

	var Redirect = _react2.default.createClass({
	  displayName: 'Redirect',


	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element) {
	      var route = (0, _RouteUtils.createRouteFromReactElement)(element);

	      if (route.from) route.path = route.from;

	      route.onEnter = function (nextState, replace) {
	        var location = nextState.location,
	            params = nextState.params;


	        var pathname = void 0;
	        if (route.to.charAt(0) === '/') {
	          pathname = (0, _PatternUtils.formatPattern)(route.to, params);
	        } else if (!route.to) {
	          pathname = location.pathname;
	        } else {
	          var routeIndex = nextState.routes.indexOf(route);
	          var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);
	          var pattern = parentPattern.replace(/\/*$/, '/') + route.to;
	          pathname = (0, _PatternUtils.formatPattern)(pattern, params);
	        }

	        replace({
	          pathname: pathname,
	          query: route.query || location.query,
	          state: route.state || location.state
	        });
	      };

	      return route;
	    },
	    getRoutePattern: function getRoutePattern(routes, routeIndex) {
	      var parentPattern = '';

	      for (var i = routeIndex; i >= 0; i--) {
	        var route = routes[i];
	        var pattern = route.path || '';

	        parentPattern = pattern.replace(/\/*$/, '/') + parentPattern;

	        if (pattern.indexOf('/') === 0) break;
	      }

	      return '/' + parentPattern;
	    }
	  },

	  propTypes: {
	    path: string,
	    from: string, // Alias for path
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },

	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? (0, _invariant2.default)(false, '<Redirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});

	exports.default = Redirect;
	module.exports = exports['default'];

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _routerWarning = __webpack_require__(178);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _RouteUtils = __webpack_require__(172);

	var _InternalPropTypes = __webpack_require__(187);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var func = _react2.default.PropTypes.func;

	/**
	 * An <IndexRoute> is used to specify its parent's <Route indexRoute> in
	 * a JSX route config.
	 */
	/* eslint-disable react/require-render-return */

	var IndexRoute = _react2.default.createClass({
	  displayName: 'IndexRoute',


	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = (0, _RouteUtils.createRouteFromReactElement)(element);
	      } else {
	         false ? (0, _routerWarning2.default)(false, 'An <IndexRoute> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },

	  propTypes: {
	    path: _InternalPropTypes.falsy,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },

	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? (0, _invariant2.default)(false, '<IndexRoute> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});

	exports.default = IndexRoute;
	module.exports = exports['default'];

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _RouteUtils = __webpack_require__(172);

	var _InternalPropTypes = __webpack_require__(187);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var _React$PropTypes = _react2.default.PropTypes,
	    string = _React$PropTypes.string,
	    func = _React$PropTypes.func;

	/**
	 * A <Route> is used to declare which components are rendered to the
	 * page when the URL matches a given pattern.
	 *
	 * Routes are arranged in a nested tree structure. When a new URL is
	 * requested, the tree is searched depth-first to find a route whose
	 * path matches the URL.  When one is found, all routes in the tree
	 * that lead to it are considered "active" and their components are
	 * rendered into the DOM, nested in the same order as in the tree.
	 */
	/* eslint-disable react/require-render-return */

	var Route = _react2.default.createClass({
	  displayName: 'Route',


	  statics: {
	    createRouteFromReactElement: _RouteUtils.createRouteFromReactElement
	  },

	  propTypes: {
	    path: string,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },

	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? (0, _invariant2.default)(false, '<Route> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});

	exports.default = Route;
	module.exports = exports['default'];

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _Actions = __webpack_require__(201);

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _createMemoryHistory = __webpack_require__(202);

	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);

	var _createTransitionManager = __webpack_require__(177);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	var _RouteUtils = __webpack_require__(172);

	var _RouterUtils = __webpack_require__(191);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	/**
	 * A high-level API to be used for server-side rendering.
	 *
	 * This function matches a location to a set of routes and calls
	 * callback(error, redirectLocation, renderProps) when finished.
	 *
	 * Note: You probably don't want to use this in a browser unless you're using
	 * server-side rendering with async routes.
	 */
	function match(_ref, callback) {
	  var history = _ref.history,
	      routes = _ref.routes,
	      location = _ref.location,
	      options = _objectWithoutProperties(_ref, ['history', 'routes', 'location']);

	  !(history || location) ?  false ? (0, _invariant2.default)(false, 'match needs a history or a location') : (0, _invariant2.default)(false) : void 0;

	  history = history ? history : (0, _createMemoryHistory2.default)(options);
	  var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes));

	  if (location) {
	    // Allow match({ location: '/the/path', ... })
	    location = history.createLocation(location);
	  } else {
	    location = history.getCurrentLocation();
	  }

	  transitionManager.match(location, function (error, redirectLocation, nextState) {
	    var renderProps = void 0;

	    if (nextState) {
	      var router = (0, _RouterUtils.createRouterObject)(history, transitionManager, nextState);
	      renderProps = _extends({}, nextState, {
	        router: router,
	        matchContext: { transitionManager: transitionManager, router: router }
	      });
	    }

	    callback(error, redirectLocation && history.createLocation(redirectLocation, _Actions.REPLACE), renderProps);
	  });
	}

	exports.default = match;
	module.exports = exports['default'];

/***/ },
/* 201 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	/**
	 * Indicates that navigation was caused by a call to history.push.
	 */
	var PUSH = exports.PUSH = 'PUSH';

	/**
	 * Indicates that navigation was caused by a call to history.replace.
	 */
	var REPLACE = exports.REPLACE = 'REPLACE';

	/**
	 * Indicates that navigation was caused by some other action such
	 * as using a browser's back/forward buttons and/or manually manipulating
	 * the URL in a browser's location bar. This is the default.
	 *
	 * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
	 * for more information.
	 */
	var POP = exports.POP = 'POP';

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = createMemoryHistory;

	var _useQueries = __webpack_require__(203);

	var _useQueries2 = _interopRequireDefault(_useQueries);

	var _useBasename = __webpack_require__(210);

	var _useBasename2 = _interopRequireDefault(_useBasename);

	var _createMemoryHistory = __webpack_require__(211);

	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function createMemoryHistory(options) {
	  // signatures and type checking differ between `useQueries` and
	  // `createMemoryHistory`, have to create `memoryHistory` first because
	  // `useQueries` doesn't understand the signature
	  var memoryHistory = (0, _createMemoryHistory2.default)(options);
	  var createHistory = function createHistory() {
	    return memoryHistory;
	  };
	  var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	  return history;
	}
	module.exports = exports['default'];

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _queryString = __webpack_require__(204);

	var _runTransitionHook = __webpack_require__(207);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _LocationUtils = __webpack_require__(208);

	var _PathUtils = __webpack_require__(209);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var defaultStringifyQuery = function defaultStringifyQuery(query) {
	  return (0, _queryString.stringify)(query).replace(/%20/g, '+');
	};

	var defaultParseQueryString = _queryString.parse;

	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know how to handle URL queries.
	 */
	var useQueries = function useQueries(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    var history = createHistory(options);
	    var stringifyQuery = options.stringifyQuery;
	    var parseQueryString = options.parseQueryString;


	    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;

	    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;

	    var decodeQuery = function decodeQuery(location) {
	      if (!location) return location;

	      if (location.query == null) location.query = parseQueryString(location.search.substring(1));

	      return location;
	    };

	    var encodeQuery = function encodeQuery(location, query) {
	      if (query == null) return location;

	      var object = typeof location === 'string' ? (0, _PathUtils.parsePath)(location) : location;
	      var queryString = stringifyQuery(query);
	      var search = queryString ? '?' + queryString : '';

	      return _extends({}, object, {
	        search: search
	      });
	    };

	    // Override all read methods with query-aware versions.
	    var getCurrentLocation = function getCurrentLocation() {
	      return decodeQuery(history.getCurrentLocation());
	    };

	    var listenBefore = function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        return (0, _runTransitionHook2.default)(hook, decodeQuery(location), callback);
	      });
	    };

	    var listen = function listen(listener) {
	      return history.listen(function (location) {
	        return listener(decodeQuery(location));
	      });
	    };

	    // Override all write methods with query-aware versions.
	    var push = function push(location) {
	      return history.push(encodeQuery(location, location.query));
	    };

	    var replace = function replace(location) {
	      return history.replace(encodeQuery(location, location.query));
	    };

	    var createPath = function createPath(location) {
	      return history.createPath(encodeQuery(location, location.query));
	    };

	    var createHref = function createHref(location) {
	      return history.createHref(encodeQuery(location, location.query));
	    };

	    var createLocation = function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var newLocation = history.createLocation.apply(history, [encodeQuery(location, location.query)].concat(args));

	      if (location.query) newLocation.query = (0, _LocationUtils.createQuery)(location.query);

	      return decodeQuery(newLocation);
	    };

	    return _extends({}, history, {
	      getCurrentLocation: getCurrentLocation,
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation
	    });
	  };
	};

	exports.default = useQueries;

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strictUriEncode = __webpack_require__(205);
	var objectAssign = __webpack_require__(206);

	function encoderForArrayFormat(opts) {
		switch (opts.arrayFormat) {
			case 'index':
				return function (key, value, index) {
					return value === null ? [
						encode(key, opts),
						'[',
						index,
						']'
					].join('') : [
						encode(key, opts),
						'[',
						encode(index, opts),
						']=',
						encode(value, opts)
					].join('');
				};

			case 'bracket':
				return function (key, value) {
					return value === null ? encode(key, opts) : [
						encode(key, opts),
						'[]=',
						encode(value, opts)
					].join('');
				};

			default:
				return function (key, value) {
					return value === null ? encode(key, opts) : [
						encode(key, opts),
						'=',
						encode(value, opts)
					].join('');
				};
		}
	}

	function parserForArrayFormat(opts) {
		var result;

		switch (opts.arrayFormat) {
			case 'index':
				return function (key, value, accumulator) {
					result = /\[(\d*)]$/.exec(key);

					key = key.replace(/\[\d*]$/, '');

					if (!result) {
						accumulator[key] = value;
						return;
					}

					if (accumulator[key] === undefined) {
						accumulator[key] = {};
					}

					accumulator[key][result[1]] = value;
				};

			case 'bracket':
				return function (key, value, accumulator) {
					result = /(\[])$/.exec(key);

					key = key.replace(/\[]$/, '');

					if (!result || accumulator[key] === undefined) {
						accumulator[key] = value;
						return;
					}

					accumulator[key] = [].concat(accumulator[key], value);
				};

			default:
				return function (key, value, accumulator) {
					if (accumulator[key] === undefined) {
						accumulator[key] = value;
						return;
					}

					accumulator[key] = [].concat(accumulator[key], value);
				};
		}
	}

	function encode(value, opts) {
		if (opts.encode) {
			return opts.strict ? strictUriEncode(value) : encodeURIComponent(value);
		}

		return value;
	}

	function keysSorter(input) {
		if (Array.isArray(input)) {
			return input.sort();
		} else if (typeof input === 'object') {
			return keysSorter(Object.keys(input)).sort(function (a, b) {
				return Number(a) - Number(b);
			}).map(function (key) {
				return input[key];
			});
		}

		return input;
	}

	exports.extract = function (str) {
		return str.split('?')[1] || '';
	};

	exports.parse = function (str, opts) {
		opts = objectAssign({arrayFormat: 'none'}, opts);

		var formatter = parserForArrayFormat(opts);

		// Create an object with no prototype
		// https://github.com/sindresorhus/query-string/issues/47
		var ret = Object.create(null);

		if (typeof str !== 'string') {
			return ret;
		}

		str = str.trim().replace(/^(\?|#|&)/, '');

		if (!str) {
			return ret;
		}

		str.split('&').forEach(function (param) {
			var parts = param.replace(/\+/g, ' ').split('=');
			// Firefox (pre 40) decodes `%3D` to `=`
			// https://github.com/sindresorhus/query-string/pull/37
			var key = parts.shift();
			var val = parts.length > 0 ? parts.join('=') : undefined;

			// missing `=` should be `null`:
			// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
			val = val === undefined ? null : decodeURIComponent(val);

			formatter(decodeURIComponent(key), val, ret);
		});

		return Object.keys(ret).sort().reduce(function (result, key) {
			var val = ret[key];
			if (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {
				// Sort object keys, not values
				result[key] = keysSorter(val);
			} else {
				result[key] = val;
			}

			return result;
		}, Object.create(null));
	};

	exports.stringify = function (obj, opts) {
		var defaults = {
			encode: true,
			strict: true,
			arrayFormat: 'none'
		};

		opts = objectAssign(defaults, opts);

		var formatter = encoderForArrayFormat(opts);

		return obj ? Object.keys(obj).sort().map(function (key) {
			var val = obj[key];

			if (val === undefined) {
				return '';
			}

			if (val === null) {
				return encode(key, opts);
			}

			if (Array.isArray(val)) {
				var result = [];

				val.slice().forEach(function (val2) {
					if (val2 === undefined) {
						return;
					}

					result.push(formatter(key, val2, result.length));
				});

				return result.join('&');
			}

			return encode(key, opts) + '=' + encode(val, opts);
		}).filter(function (x) {
			return x.length > 0;
		}).join('&') : '';
	};


/***/ },
/* 205 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function (str) {
		return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
			return '%' + c.charCodeAt(0).toString(16).toUpperCase();
		});
	};


/***/ },
/* 206 */
/***/ function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _warning = __webpack_require__(179);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var runTransitionHook = function runTransitionHook(hook, location, callback) {
	  var result = hook(location, callback);

	  if (hook.length < 2) {
	    // Assume the hook runs synchronously and automatically
	    // call the callback with the return value.
	    callback(result);
	  } else {
	     false ? (0, _warning2.default)(result === undefined, 'You should not "return" in a transition hook with a callback argument; ' + 'call the callback instead') : void 0;
	  }
	};

	exports.default = runTransitionHook;

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.locationsAreEqual = exports.statesAreEqual = exports.createLocation = exports.createQuery = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _warning = __webpack_require__(179);

	var _warning2 = _interopRequireDefault(_warning);

	var _PathUtils = __webpack_require__(209);

	var _Actions = __webpack_require__(201);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createQuery = exports.createQuery = function createQuery(props) {
	  return _extends(Object.create(null), props);
	};

	var createLocation = exports.createLocation = function createLocation() {
	  var input = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];
	  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];
	  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

	  var object = typeof input === 'string' ? (0, _PathUtils.parsePath)(input) : input;

	   false ? (0, _warning2.default)(!object.path, 'Location descriptor objects should have a `pathname`, not a `path`.') : void 0;

	  var pathname = object.pathname || '/';
	  var search = object.search || '';
	  var hash = object.hash || '';
	  var state = object.state;

	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash,
	    state: state,
	    action: action,
	    key: key
	  };
	};

	var isDate = function isDate(object) {
	  return Object.prototype.toString.call(object) === '[object Date]';
	};

	var statesAreEqual = exports.statesAreEqual = function statesAreEqual(a, b) {
	  if (a === b) return true;

	  var typeofA = typeof a === 'undefined' ? 'undefined' : _typeof(a);
	  var typeofB = typeof b === 'undefined' ? 'undefined' : _typeof(b);

	  if (typeofA !== typeofB) return false;

	  !(typeofA !== 'function') ?  false ? (0, _invariant2.default)(false, 'You must not store functions in location state') : (0, _invariant2.default)(false) : void 0;

	  // Not the same object, but same type.
	  if (typeofA === 'object') {
	    !!(isDate(a) && isDate(b)) ?  false ? (0, _invariant2.default)(false, 'You must not store Date objects in location state') : (0, _invariant2.default)(false) : void 0;

	    if (!Array.isArray(a)) {
	      var keysofA = Object.keys(a);
	      var keysofB = Object.keys(b);
	      return keysofA.length === keysofB.length && keysofA.every(function (key) {
	        return statesAreEqual(a[key], b[key]);
	      });
	    }

	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return statesAreEqual(item, b[index]);
	    });
	  }

	  // All other serializable types (string, number, boolean)
	  // should be strict equal.
	  return false;
	};

	var locationsAreEqual = exports.locationsAreEqual = function locationsAreEqual(a, b) {
	  return a.key === b.key &&
	  // a.action === b.action && // Different action !== location change.
	  a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && statesAreEqual(a.state, b.state);
	};

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.createPath = exports.parsePath = exports.getQueryStringValueFromPath = exports.stripQueryStringValueFromPath = exports.addQueryStringValueToPath = undefined;

	var _warning = __webpack_require__(179);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var addQueryStringValueToPath = exports.addQueryStringValueToPath = function addQueryStringValueToPath(path, key, value) {
	  var _parsePath = parsePath(path);

	  var pathname = _parsePath.pathname;
	  var search = _parsePath.search;
	  var hash = _parsePath.hash;


	  return createPath({
	    pathname: pathname,
	    search: search + (search.indexOf('?') === -1 ? '?' : '&') + key + '=' + value,
	    hash: hash
	  });
	};

	var stripQueryStringValueFromPath = exports.stripQueryStringValueFromPath = function stripQueryStringValueFromPath(path, key) {
	  var _parsePath2 = parsePath(path);

	  var pathname = _parsePath2.pathname;
	  var search = _parsePath2.search;
	  var hash = _parsePath2.hash;


	  return createPath({
	    pathname: pathname,
	    search: search.replace(new RegExp('([?&])' + key + '=[a-zA-Z0-9]+(&?)'), function (match, prefix, suffix) {
	      return prefix === '?' ? prefix : suffix;
	    }),
	    hash: hash
	  });
	};

	var getQueryStringValueFromPath = exports.getQueryStringValueFromPath = function getQueryStringValueFromPath(path, key) {
	  var _parsePath3 = parsePath(path);

	  var search = _parsePath3.search;

	  var match = search.match(new RegExp('[?&]' + key + '=([a-zA-Z0-9]+)'));
	  return match && match[1];
	};

	var extractPath = function extractPath(string) {
	  var match = string.match(/^(https?:)?\/\/[^\/]*/);
	  return match == null ? string : string.substring(match[0].length);
	};

	var parsePath = exports.parsePath = function parsePath(path) {
	  var pathname = extractPath(path);
	  var search = '';
	  var hash = '';

	   false ? (0, _warning2.default)(path === pathname, 'A path must be pathname + search + hash only, not a full URL like "%s"', path) : void 0;

	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substring(hashIndex);
	    pathname = pathname.substring(0, hashIndex);
	  }

	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substring(searchIndex);
	    pathname = pathname.substring(0, searchIndex);
	  }

	  if (pathname === '') pathname = '/';

	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash
	  };
	};

	var createPath = exports.createPath = function createPath(location) {
	  if (location == null || typeof location === 'string') return location;

	  var basename = location.basename;
	  var pathname = location.pathname;
	  var search = location.search;
	  var hash = location.hash;

	  var path = (basename || '') + pathname;

	  if (search && search !== '?') path += search;

	  if (hash) path += hash;

	  return path;
	};

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _runTransitionHook = __webpack_require__(207);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _PathUtils = __webpack_require__(209);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var useBasename = function useBasename(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    var history = createHistory(options);
	    var basename = options.basename;


	    var addBasename = function addBasename(location) {
	      if (!location) return location;

	      if (basename && location.basename == null) {
	        if (location.pathname.indexOf(basename) === 0) {
	          location.pathname = location.pathname.substring(basename.length);
	          location.basename = basename;

	          if (location.pathname === '') location.pathname = '/';
	        } else {
	          location.basename = '';
	        }
	      }

	      return location;
	    };

	    var prependBasename = function prependBasename(location) {
	      if (!basename) return location;

	      var object = typeof location === 'string' ? (0, _PathUtils.parsePath)(location) : location;
	      var pname = object.pathname;
	      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';
	      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;
	      var pathname = normalizedBasename + normalizedPathname;

	      return _extends({}, object, {
	        pathname: pathname
	      });
	    };

	    // Override all read methods with basename-aware versions.
	    var getCurrentLocation = function getCurrentLocation() {
	      return addBasename(history.getCurrentLocation());
	    };

	    var listenBefore = function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        return (0, _runTransitionHook2.default)(hook, addBasename(location), callback);
	      });
	    };

	    var listen = function listen(listener) {
	      return history.listen(function (location) {
	        return listener(addBasename(location));
	      });
	    };

	    // Override all write methods with basename-aware versions.
	    var push = function push(location) {
	      return history.push(prependBasename(location));
	    };

	    var replace = function replace(location) {
	      return history.replace(prependBasename(location));
	    };

	    var createPath = function createPath(location) {
	      return history.createPath(prependBasename(location));
	    };

	    var createHref = function createHref(location) {
	      return history.createHref(prependBasename(location));
	    };

	    var createLocation = function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      return addBasename(history.createLocation.apply(history, [prependBasename(location)].concat(args)));
	    };

	    return _extends({}, history, {
	      getCurrentLocation: getCurrentLocation,
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation
	    });
	  };
	};

	exports.default = useBasename;

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(179);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _LocationUtils = __webpack_require__(208);

	var _PathUtils = __webpack_require__(209);

	var _createHistory = __webpack_require__(212);

	var _createHistory2 = _interopRequireDefault(_createHistory);

	var _Actions = __webpack_require__(201);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createStateStorage = function createStateStorage(entries) {
	  return entries.filter(function (entry) {
	    return entry.state;
	  }).reduce(function (memo, entry) {
	    memo[entry.key] = entry.state;
	    return memo;
	  }, {});
	};

	var createMemoryHistory = function createMemoryHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  if (Array.isArray(options)) {
	    options = { entries: options };
	  } else if (typeof options === 'string') {
	    options = { entries: [options] };
	  }

	  var getCurrentLocation = function getCurrentLocation() {
	    var entry = entries[current];
	    var path = (0, _PathUtils.createPath)(entry);

	    var key = void 0,
	        state = void 0;
	    if (entry.key) {
	      key = entry.key;
	      state = readState(key);
	    }

	    var init = (0, _PathUtils.parsePath)(path);

	    return (0, _LocationUtils.createLocation)(_extends({}, init, { state: state }), undefined, key);
	  };

	  var canGo = function canGo(n) {
	    var index = current + n;
	    return index >= 0 && index < entries.length;
	  };

	  var go = function go(n) {
	    if (!n) return;

	    if (!canGo(n)) {
	       false ? (0, _warning2.default)(false, 'Cannot go(%s) there is not enough history', n) : void 0;

	      return;
	    }

	    current += n;
	    var currentLocation = getCurrentLocation();

	    // Change action to POP
	    history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));
	  };

	  var pushLocation = function pushLocation(location) {
	    current += 1;

	    if (current < entries.length) entries.splice(current);

	    entries.push(location);

	    saveState(location.key, location.state);
	  };

	  var replaceLocation = function replaceLocation(location) {
	    entries[current] = location;
	    saveState(location.key, location.state);
	  };

	  var history = (0, _createHistory2.default)(_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    pushLocation: pushLocation,
	    replaceLocation: replaceLocation,
	    go: go
	  }));

	  var _options = options;
	  var entries = _options.entries;
	  var current = _options.current;


	  if (typeof entries === 'string') {
	    entries = [entries];
	  } else if (!Array.isArray(entries)) {
	    entries = ['/'];
	  }

	  entries = entries.map(function (entry) {
	    return (0, _LocationUtils.createLocation)(entry);
	  });

	  if (current == null) {
	    current = entries.length - 1;
	  } else {
	    !(current >= 0 && current < entries.length) ?  false ? (0, _invariant2.default)(false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : (0, _invariant2.default)(false) : void 0;
	  }

	  var storage = createStateStorage(entries);

	  var saveState = function saveState(key, state) {
	    return storage[key] = state;
	  };

	  var readState = function readState(key) {
	    return storage[key];
	  };

	  return _extends({}, history, {
	    canGo: canGo
	  });
	};

	exports.default = createMemoryHistory;

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _AsyncUtils = __webpack_require__(213);

	var _PathUtils = __webpack_require__(209);

	var _runTransitionHook = __webpack_require__(207);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _Actions = __webpack_require__(201);

	var _LocationUtils = __webpack_require__(208);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createHistory = function createHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var getCurrentLocation = options.getCurrentLocation;
	  var getUserConfirmation = options.getUserConfirmation;
	  var pushLocation = options.pushLocation;
	  var replaceLocation = options.replaceLocation;
	  var go = options.go;
	  var keyLength = options.keyLength;


	  var currentLocation = void 0;
	  var pendingLocation = void 0;
	  var beforeListeners = [];
	  var listeners = [];
	  var allKeys = [];

	  var getCurrentIndex = function getCurrentIndex() {
	    if (pendingLocation && pendingLocation.action === _Actions.POP) return allKeys.indexOf(pendingLocation.key);

	    if (currentLocation) return allKeys.indexOf(currentLocation.key);

	    return -1;
	  };

	  var updateLocation = function updateLocation(nextLocation) {
	    var currentIndex = getCurrentIndex();

	    currentLocation = nextLocation;

	    if (currentLocation.action === _Actions.PUSH) {
	      allKeys = [].concat(allKeys.slice(0, currentIndex + 1), [currentLocation.key]);
	    } else if (currentLocation.action === _Actions.REPLACE) {
	      allKeys[currentIndex] = currentLocation.key;
	    }

	    listeners.forEach(function (listener) {
	      return listener(currentLocation);
	    });
	  };

	  var listenBefore = function listenBefore(listener) {
	    beforeListeners.push(listener);

	    return function () {
	      return beforeListeners = beforeListeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  };

	  var listen = function listen(listener) {
	    listeners.push(listener);

	    return function () {
	      return listeners = listeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  };

	  var confirmTransitionTo = function confirmTransitionTo(location, callback) {
	    (0, _AsyncUtils.loopAsync)(beforeListeners.length, function (index, next, done) {
	      (0, _runTransitionHook2.default)(beforeListeners[index], location, function (result) {
	        return result != null ? done(result) : next();
	      });
	    }, function (message) {
	      if (getUserConfirmation && typeof message === 'string') {
	        getUserConfirmation(message, function (ok) {
	          return callback(ok !== false);
	        });
	      } else {
	        callback(message !== false);
	      }
	    });
	  };

	  var transitionTo = function transitionTo(nextLocation) {
	    if (currentLocation && (0, _LocationUtils.locationsAreEqual)(currentLocation, nextLocation) || pendingLocation && (0, _LocationUtils.locationsAreEqual)(pendingLocation, nextLocation)) return; // Nothing to do

	    pendingLocation = nextLocation;

	    confirmTransitionTo(nextLocation, function (ok) {
	      if (pendingLocation !== nextLocation) return; // Transition was interrupted during confirmation

	      pendingLocation = null;

	      if (ok) {
	        // Treat PUSH to same path like REPLACE to be consistent with browsers
	        if (nextLocation.action === _Actions.PUSH) {
	          var prevPath = (0, _PathUtils.createPath)(currentLocation);
	          var nextPath = (0, _PathUtils.createPath)(nextLocation);

	          if (nextPath === prevPath && (0, _LocationUtils.statesAreEqual)(currentLocation.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;
	        }

	        if (nextLocation.action === _Actions.POP) {
	          updateLocation(nextLocation);
	        } else if (nextLocation.action === _Actions.PUSH) {
	          if (pushLocation(nextLocation) !== false) updateLocation(nextLocation);
	        } else if (nextLocation.action === _Actions.REPLACE) {
	          if (replaceLocation(nextLocation) !== false) updateLocation(nextLocation);
	        }
	      } else if (currentLocation && nextLocation.action === _Actions.POP) {
	        var prevIndex = allKeys.indexOf(currentLocation.key);
	        var nextIndex = allKeys.indexOf(nextLocation.key);

	        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL
	      }
	    });
	  };

	  var push = function push(input) {
	    return transitionTo(createLocation(input, _Actions.PUSH));
	  };

	  var replace = function replace(input) {
	    return transitionTo(createLocation(input, _Actions.REPLACE));
	  };

	  var goBack = function goBack() {
	    return go(-1);
	  };

	  var goForward = function goForward() {
	    return go(1);
	  };

	  var createKey = function createKey() {
	    return Math.random().toString(36).substr(2, keyLength || 6);
	  };

	  var createHref = function createHref(location) {
	    return (0, _PathUtils.createPath)(location);
	  };

	  var createLocation = function createLocation(location, action) {
	    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];
	    return (0, _LocationUtils.createLocation)(location, action, key);
	  };

	  return {
	    getCurrentLocation: getCurrentLocation,
	    listenBefore: listenBefore,
	    listen: listen,
	    transitionTo: transitionTo,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    createKey: createKey,
	    createPath: _PathUtils.createPath,
	    createHref: createHref,
	    createLocation: createLocation
	  };
	};

	exports.default = createHistory;

/***/ },
/* 213 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	var loopAsync = exports.loopAsync = function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var isSync = false,
	      hasNext = false,
	      doneArgs = void 0;

	  var done = function done() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    isDone = true;

	    if (isSync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = args;
	      return;
	    }

	    callback.apply(undefined, args);
	  };

	  var next = function next() {
	    if (isDone) return;

	    hasNext = true;

	    if (isSync) return; // Iterate instead of recursing if possible.

	    isSync = true;

	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work(currentTurn++, next, done);
	    }

	    isSync = false;

	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(undefined, doneArgs);
	      return;
	    }

	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  };

	  next();
	};

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = useRouterHistory;

	var _useQueries = __webpack_require__(203);

	var _useQueries2 = _interopRequireDefault(_useQueries);

	var _useBasename = __webpack_require__(210);

	var _useBasename2 = _interopRequireDefault(_useBasename);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function useRouterHistory(createHistory) {
	  return function (options) {
	    var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	    return history;
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _RouterContext = __webpack_require__(188);

	var _RouterContext2 = _interopRequireDefault(_RouterContext);

	var _routerWarning = __webpack_require__(178);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }

	  if (false) {
	    middlewares.forEach(function (middleware, index) {
	      process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(middleware.renderRouterContext || middleware.renderRouteComponent, 'The middleware specified at index ' + index + ' does not appear to be ' + 'a valid React Router middleware.') : void 0;
	    });
	  }

	  var withContext = middlewares.map(function (middleware) {
	    return middleware.renderRouterContext;
	  }).filter(Boolean);
	  var withComponent = middlewares.map(function (middleware) {
	    return middleware.renderRouteComponent;
	  }).filter(Boolean);

	  var makeCreateElement = function makeCreateElement() {
	    var baseCreateElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _react.createElement;
	    return function (Component, props) {
	      return withComponent.reduceRight(function (previous, renderRouteComponent) {
	        return renderRouteComponent(previous, props);
	      }, baseCreateElement(Component, props));
	    };
	  };

	  return function (renderProps) {
	    return withContext.reduceRight(function (previous, renderRouterContext) {
	      return renderRouterContext(previous, renderProps);
	    }, _react2.default.createElement(_RouterContext2.default, _extends({}, renderProps, {
	      createElement: makeCreateElement(renderProps.createElement)
	    })));
	  };
	};

	module.exports = exports['default'];

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createBrowserHistory = __webpack_require__(217);

	var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);

	var _createRouterHistory = __webpack_require__(223);

	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _createRouterHistory2.default)(_createBrowserHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _ExecutionEnvironment = __webpack_require__(218);

	var _BrowserProtocol = __webpack_require__(219);

	var BrowserProtocol = _interopRequireWildcard(_BrowserProtocol);

	var _RefreshProtocol = __webpack_require__(222);

	var RefreshProtocol = _interopRequireWildcard(_RefreshProtocol);

	var _DOMUtils = __webpack_require__(220);

	var _createHistory = __webpack_require__(212);

	var _createHistory2 = _interopRequireDefault(_createHistory);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Creates and returns a history object that uses HTML5's history API
	 * (pushState, replaceState, and the popstate event) to manage history.
	 * This is the recommended method of managing history in browsers because
	 * it provides the cleanest URLs.
	 *
	 * Note: In browsers that do not support the HTML5 history API full
	 * page reloads will be used to preserve clean URLs. You can force this
	 * behavior using { forceRefresh: true } in options.
	 */
	var createBrowserHistory = function createBrowserHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  !_ExecutionEnvironment.canUseDOM ?  false ? (0, _invariant2.default)(false, 'Browser history needs a DOM') : (0, _invariant2.default)(false) : void 0;

	  var useRefresh = options.forceRefresh || !(0, _DOMUtils.supportsHistory)();
	  var Protocol = useRefresh ? RefreshProtocol : BrowserProtocol;

	  var getUserConfirmation = Protocol.getUserConfirmation;
	  var getCurrentLocation = Protocol.getCurrentLocation;
	  var pushLocation = Protocol.pushLocation;
	  var replaceLocation = Protocol.replaceLocation;
	  var go = Protocol.go;


	  var history = (0, _createHistory2.default)(_extends({
	    getUserConfirmation: getUserConfirmation }, options, {
	    getCurrentLocation: getCurrentLocation,
	    pushLocation: pushLocation,
	    replaceLocation: replaceLocation,
	    go: go
	  }));

	  var listenerCount = 0,
	      stopListener = void 0;

	  var startListener = function startListener(listener, before) {
	    if (++listenerCount === 1) stopListener = BrowserProtocol.startListener(history.transitionTo);

	    var unlisten = before ? history.listenBefore(listener) : history.listen(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopListener();
	    };
	  };

	  var listenBefore = function listenBefore(listener) {
	    return startListener(listener, true);
	  };

	  var listen = function listen(listener) {
	    return startListener(listener, false);
	  };

	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen
	  });
	};

	exports.default = createBrowserHistory;

/***/ },
/* 218 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.go = exports.replaceLocation = exports.pushLocation = exports.startListener = exports.getUserConfirmation = exports.getCurrentLocation = undefined;

	var _LocationUtils = __webpack_require__(208);

	var _DOMUtils = __webpack_require__(220);

	var _DOMStateStorage = __webpack_require__(221);

	var _PathUtils = __webpack_require__(209);

	var _ExecutionEnvironment = __webpack_require__(218);

	var PopStateEvent = 'popstate';
	var HashChangeEvent = 'hashchange';

	var needsHashchangeListener = _ExecutionEnvironment.canUseDOM && !(0, _DOMUtils.supportsPopstateOnHashchange)();

	var _createLocation = function _createLocation(historyState) {
	  var key = historyState && historyState.key;

	  return (0, _LocationUtils.createLocation)({
	    pathname: window.location.pathname,
	    search: window.location.search,
	    hash: window.location.hash,
	    state: key ? (0, _DOMStateStorage.readState)(key) : undefined
	  }, undefined, key);
	};

	var getCurrentLocation = exports.getCurrentLocation = function getCurrentLocation() {
	  var historyState = void 0;
	  try {
	    historyState = window.history.state || {};
	  } catch (error) {
	    // IE 11 sometimes throws when accessing window.history.state
	    // See https://github.com/ReactTraining/history/pull/289
	    historyState = {};
	  }

	  return _createLocation(historyState);
	};

	var getUserConfirmation = exports.getUserConfirmation = function getUserConfirmation(message, callback) {
	  return callback(window.confirm(message));
	}; // eslint-disable-line no-alert

	var startListener = exports.startListener = function startListener(listener) {
	  var handlePopState = function handlePopState(event) {
	    if (event.state !== undefined) // Ignore extraneous popstate events in WebKit
	      listener(_createLocation(event.state));
	  };

	  (0, _DOMUtils.addEventListener)(window, PopStateEvent, handlePopState);

	  var handleUnpoppedHashChange = function handleUnpoppedHashChange() {
	    return listener(getCurrentLocation());
	  };

	  if (needsHashchangeListener) {
	    (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleUnpoppedHashChange);
	  }

	  return function () {
	    (0, _DOMUtils.removeEventListener)(window, PopStateEvent, handlePopState);

	    if (needsHashchangeListener) {
	      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleUnpoppedHashChange);
	    }
	  };
	};

	var updateLocation = function updateLocation(location, updateState) {
	  var state = location.state;
	  var key = location.key;


	  if (state !== undefined) (0, _DOMStateStorage.saveState)(key, state);

	  updateState({ key: key }, (0, _PathUtils.createPath)(location));
	};

	var pushLocation = exports.pushLocation = function pushLocation(location) {
	  return updateLocation(location, function (state, path) {
	    return window.history.pushState(state, null, path);
	  });
	};

	var replaceLocation = exports.replaceLocation = function replaceLocation(location) {
	  return updateLocation(location, function (state, path) {
	    return window.history.replaceState(state, null, path);
	  });
	};

	var go = exports.go = function go(n) {
	  if (n) window.history.go(n);
	};

/***/ },
/* 220 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {
	  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);
	};

	var removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {
	  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);
	};

	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
	 */
	var supportsHistory = exports.supportsHistory = function supportsHistory() {
	  var ua = window.navigator.userAgent;

	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;

	  return window.history && 'pushState' in window.history;
	};

	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */
	var supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {
	  return window.navigator.userAgent.indexOf('Firefox') === -1;
	};

	/**
	 * Returns true if browser fires popstate on hash change.
	 * IE10 and IE11 do not.
	 */
	var supportsPopstateOnHashchange = exports.supportsPopstateOnHashchange = function supportsPopstateOnHashchange() {
	  return window.navigator.userAgent.indexOf('Trident') === -1;
	};

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.readState = exports.saveState = undefined;

	var _warning = __webpack_require__(179);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var QuotaExceededErrors = {
	  QuotaExceededError: true,
	  QUOTA_EXCEEDED_ERR: true
	};

	var SecurityErrors = {
	  SecurityError: true
	};

	var KeyPrefix = '@@History/';

	var createKey = function createKey(key) {
	  return KeyPrefix + key;
	};

	var saveState = exports.saveState = function saveState(key, state) {
	  if (!window.sessionStorage) {
	    // Session storage is not available or hidden.
	    // sessionStorage is undefined in Internet Explorer when served via file protocol.
	     false ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available') : void 0;

	    return;
	  }

	  try {
	    if (state == null) {
	      window.sessionStorage.removeItem(createKey(key));
	    } else {
	      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));
	    }
	  } catch (error) {
	    if (SecurityErrors[error.name]) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       false ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available due to security settings') : void 0;

	      return;
	    }

	    if (QuotaExceededErrors[error.name] && window.sessionStorage.length === 0) {
	      // Safari "private mode" throws QuotaExceededError.
	       false ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : void 0;

	      return;
	    }

	    throw error;
	  }
	};

	var readState = exports.readState = function readState(key) {
	  var json = void 0;
	  try {
	    json = window.sessionStorage.getItem(createKey(key));
	  } catch (error) {
	    if (SecurityErrors[error.name]) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       false ? (0, _warning2.default)(false, '[history] Unable to read state; sessionStorage is not available due to security settings') : void 0;

	      return undefined;
	    }
	  }

	  if (json) {
	    try {
	      return JSON.parse(json);
	    } catch (error) {
	      // Ignore invalid JSON.
	    }
	  }

	  return undefined;
	};

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.replaceLocation = exports.pushLocation = exports.getCurrentLocation = exports.go = exports.getUserConfirmation = undefined;

	var _BrowserProtocol = __webpack_require__(219);

	Object.defineProperty(exports, 'getUserConfirmation', {
	  enumerable: true,
	  get: function get() {
	    return _BrowserProtocol.getUserConfirmation;
	  }
	});
	Object.defineProperty(exports, 'go', {
	  enumerable: true,
	  get: function get() {
	    return _BrowserProtocol.go;
	  }
	});

	var _LocationUtils = __webpack_require__(208);

	var _PathUtils = __webpack_require__(209);

	var getCurrentLocation = exports.getCurrentLocation = function getCurrentLocation() {
	  return (0, _LocationUtils.createLocation)(window.location);
	};

	var pushLocation = exports.pushLocation = function pushLocation(location) {
	  window.location.href = (0, _PathUtils.createPath)(location);
	  return false; // Don't update location
	};

	var replaceLocation = exports.replaceLocation = function replaceLocation(location) {
	  window.location.replace((0, _PathUtils.createPath)(location));
	  return false; // Don't update location
	};

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	exports.default = function (createHistory) {
	  var history = void 0;
	  if (canUseDOM) history = (0, _useRouterHistory2.default)(createHistory)();
	  return history;
	};

	var _useRouterHistory = __webpack_require__(214);

	var _useRouterHistory2 = _interopRequireDefault(_useRouterHistory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	module.exports = exports['default'];

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createHashHistory = __webpack_require__(225);

	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);

	var _createRouterHistory = __webpack_require__(223);

	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _createRouterHistory2.default)(_createHashHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(179);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _ExecutionEnvironment = __webpack_require__(218);

	var _DOMUtils = __webpack_require__(220);

	var _HashProtocol = __webpack_require__(226);

	var HashProtocol = _interopRequireWildcard(_HashProtocol);

	var _createHistory = __webpack_require__(212);

	var _createHistory2 = _interopRequireDefault(_createHistory);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var DefaultQueryKey = '_k';

	var addLeadingSlash = function addLeadingSlash(path) {
	  return path.charAt(0) === '/' ? path : '/' + path;
	};

	var HashPathCoders = {
	  hashbang: {
	    encodePath: function encodePath(path) {
	      return path.charAt(0) === '!' ? path : '!' + path;
	    },
	    decodePath: function decodePath(path) {
	      return path.charAt(0) === '!' ? path.substring(1) : path;
	    }
	  },
	  noslash: {
	    encodePath: function encodePath(path) {
	      return path.charAt(0) === '/' ? path.substring(1) : path;
	    },
	    decodePath: addLeadingSlash
	  },
	  slash: {
	    encodePath: addLeadingSlash,
	    decodePath: addLeadingSlash
	  }
	};

	var createHashHistory = function createHashHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  !_ExecutionEnvironment.canUseDOM ?  false ? (0, _invariant2.default)(false, 'Hash history needs a DOM') : (0, _invariant2.default)(false) : void 0;

	  var queryKey = options.queryKey;
	  var hashType = options.hashType;


	   false ? (0, _warning2.default)(queryKey !== false, 'Using { queryKey: false } no longer works. Instead, just don\'t ' + 'use location state if you don\'t want a key in your URL query string') : void 0;

	  if (typeof queryKey !== 'string') queryKey = DefaultQueryKey;

	  if (hashType == null) hashType = 'slash';

	  if (!(hashType in HashPathCoders)) {
	     false ? (0, _warning2.default)(false, 'Invalid hash type: %s', hashType) : void 0;

	    hashType = 'slash';
	  }

	  var pathCoder = HashPathCoders[hashType];

	  var getUserConfirmation = HashProtocol.getUserConfirmation;


	  var getCurrentLocation = function getCurrentLocation() {
	    return HashProtocol.getCurrentLocation(pathCoder, queryKey);
	  };

	  var pushLocation = function pushLocation(location) {
	    return HashProtocol.pushLocation(location, pathCoder, queryKey);
	  };

	  var replaceLocation = function replaceLocation(location) {
	    return HashProtocol.replaceLocation(location, pathCoder, queryKey);
	  };

	  var history = (0, _createHistory2.default)(_extends({
	    getUserConfirmation: getUserConfirmation }, options, {
	    getCurrentLocation: getCurrentLocation,
	    pushLocation: pushLocation,
	    replaceLocation: replaceLocation,
	    go: HashProtocol.go
	  }));

	  var listenerCount = 0,
	      stopListener = void 0;

	  var startListener = function startListener(listener, before) {
	    if (++listenerCount === 1) stopListener = HashProtocol.startListener(history.transitionTo, pathCoder, queryKey);

	    var unlisten = before ? history.listenBefore(listener) : history.listen(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopListener();
	    };
	  };

	  var listenBefore = function listenBefore(listener) {
	    return startListener(listener, true);
	  };

	  var listen = function listen(listener) {
	    return startListener(listener, false);
	  };

	  var goIsSupportedWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();

	  var go = function go(n) {
	     false ? (0, _warning2.default)(goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;

	    history.go(n);
	  };

	  var createHref = function createHref(path) {
	    return '#' + pathCoder.encodePath(history.createHref(path));
	  };

	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    go: go,
	    createHref: createHref
	  });
	};

	exports.default = createHashHistory;

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.replaceLocation = exports.pushLocation = exports.startListener = exports.getCurrentLocation = exports.go = exports.getUserConfirmation = undefined;

	var _BrowserProtocol = __webpack_require__(219);

	Object.defineProperty(exports, 'getUserConfirmation', {
	  enumerable: true,
	  get: function get() {
	    return _BrowserProtocol.getUserConfirmation;
	  }
	});
	Object.defineProperty(exports, 'go', {
	  enumerable: true,
	  get: function get() {
	    return _BrowserProtocol.go;
	  }
	});

	var _warning = __webpack_require__(179);

	var _warning2 = _interopRequireDefault(_warning);

	var _LocationUtils = __webpack_require__(208);

	var _DOMUtils = __webpack_require__(220);

	var _DOMStateStorage = __webpack_require__(221);

	var _PathUtils = __webpack_require__(209);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var HashChangeEvent = 'hashchange';

	var getHashPath = function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  var href = window.location.href;
	  var hashIndex = href.indexOf('#');
	  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
	};

	var pushHashPath = function pushHashPath(path) {
	  return window.location.hash = path;
	};

	var replaceHashPath = function replaceHashPath(path) {
	  var hashIndex = window.location.href.indexOf('#');

	  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);
	};

	var getCurrentLocation = exports.getCurrentLocation = function getCurrentLocation(pathCoder, queryKey) {
	  var path = pathCoder.decodePath(getHashPath());
	  var key = (0, _PathUtils.getQueryStringValueFromPath)(path, queryKey);

	  var state = void 0;
	  if (key) {
	    path = (0, _PathUtils.stripQueryStringValueFromPath)(path, queryKey);
	    state = (0, _DOMStateStorage.readState)(key);
	  }

	  var init = (0, _PathUtils.parsePath)(path);
	  init.state = state;

	  return (0, _LocationUtils.createLocation)(init, undefined, key);
	};

	var prevLocation = void 0;

	var startListener = exports.startListener = function startListener(listener, pathCoder, queryKey) {
	  var handleHashChange = function handleHashChange() {
	    var path = getHashPath();
	    var encodedPath = pathCoder.encodePath(path);

	    if (path !== encodedPath) {
	      // Always be sure we have a properly-encoded hash.
	      replaceHashPath(encodedPath);
	    } else {
	      var currentLocation = getCurrentLocation(pathCoder, queryKey);

	      if (prevLocation && currentLocation.key && prevLocation.key === currentLocation.key) return; // Ignore extraneous hashchange events

	      prevLocation = currentLocation;

	      listener(currentLocation);
	    }
	  };

	  // Ensure the hash is encoded properly.
	  var path = getHashPath();
	  var encodedPath = pathCoder.encodePath(path);

	  if (path !== encodedPath) replaceHashPath(encodedPath);

	  (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);

	  return function () {
	    return (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
	  };
	};

	var updateLocation = function updateLocation(location, pathCoder, queryKey, updateHash) {
	  var state = location.state;
	  var key = location.key;


	  var path = pathCoder.encodePath((0, _PathUtils.createPath)(location));

	  if (state !== undefined) {
	    path = (0, _PathUtils.addQueryStringValueToPath)(path, queryKey, key);
	    (0, _DOMStateStorage.saveState)(key, state);
	  }

	  prevLocation = location;

	  updateHash(path);
	};

	var pushLocation = exports.pushLocation = function pushLocation(location, pathCoder, queryKey) {
	  return updateLocation(location, pathCoder, queryKey, function (path) {
	    if (getHashPath() !== path) {
	      pushHashPath(path);
	    } else {
	       false ? (0, _warning2.default)(false, 'You cannot PUSH the same path using hash history') : void 0;
	    }
	  });
	};

	var replaceLocation = exports.replaceLocation = function replaceLocation(location, pathCoder, queryKey) {
	  return updateLocation(location, pathCoder, queryKey, function (path) {
	    if (getHashPath() !== path) replaceHashPath(path);
	  });
	};

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouter = __webpack_require__(171);

	var _BackgroundComponent = __webpack_require__(228);

	var _BackgroundComponent2 = _interopRequireDefault(_BackgroundComponent);

	var _SiteContainerComponent = __webpack_require__(230);

	var _SiteContainerComponent2 = _interopRequireDefault(_SiteContainerComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// var sectionStyle = {
	//   width: "100%",
	//   height: "400px",
	//   backgroundImage: `url(${Background})`
	// };

	var navigationBarStyle = {};

	var App = function (_React$Component) {
	  _inherits(App, _React$Component);

	  function App() {
	    _classCallCheck(this, App);

	    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
	  }

	  _createClass(App, [{
	    key: 'render',


	    // function generateMapMenu() {
	    //   let path = '';
	    //   return (
	    //     routes.filter(route => route.mapMenuTitle)
	    //       .map((route, index, array) => (
	    //         <span key={index}>
	    //           <Link
	    //             to={path += ((path.slice(-1) === '/' ? '' : '/') +
	    //                 (route.path === '/' ? '' : route.path))}
	    //           >
	    //             {route.mapMenuTitle}
	    //           </Link>
	    //           {(index + 1) < array.length && ' / '}
	    //         </span>
	    //       ))
	    //   );
	    // }

	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { style: { height: '100%',
	            width: '100%'
	          } },
	        _react2.default.createElement(
	          _BackgroundComponent2.default,
	          { children: this.props.children, currentRoute: this.props.location.pathname },
	          _react2.default.createElement(_SiteContainerComponent2.default, { children: this.props.children, routes: this.props.routes, currentRoute: this.props.location.pathname })
	        )
	      );
	    }
	  }]);

	  return App;
	}(_react2.default.Component);

	exports.default = App;

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _portfolioBackground = __webpack_require__(229);

	var _portfolioBackground2 = _interopRequireDefault(_portfolioBackground);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var backgroundImageStyle = {
	    width: "100%",
	    height: "100%",
	    backgroundImage: 'url(' + _portfolioBackground2.default + ')'
	};

	var BackgroundComponent = function (_React$Component) {
	    _inherits(BackgroundComponent, _React$Component);

	    function BackgroundComponent() {
	        _classCallCheck(this, BackgroundComponent);

	        return _possibleConstructorReturn(this, (BackgroundComponent.__proto__ || Object.getPrototypeOf(BackgroundComponent)).apply(this, arguments));
	    }

	    _createClass(BackgroundComponent, [{
	        key: 'render',

	        //will be used to implement background photo
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { style: backgroundImageStyle },
	                this.props.children
	            );
	        }
	    }]);

	    return BackgroundComponent;
	}(_react2.default.Component);

	exports.default = BackgroundComponent;

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "/assets/images/portfolio-background.jpg";

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _NavigationComponent = __webpack_require__(231);

	var _NavigationComponent2 = _interopRequireDefault(_NavigationComponent);

	var _ContentContainerComponent = __webpack_require__(434);

	var _ContentContainerComponent2 = _interopRequireDefault(_ContentContainerComponent);

	var _Col = __webpack_require__(392);

	var _Col2 = _interopRequireDefault(_Col);

	var _Row = __webpack_require__(391);

	var _Row2 = _interopRequireDefault(_Row);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SiteContainerComponent = function (_React$Component) {
	  _inherits(SiteContainerComponent, _React$Component);

	  function SiteContainerComponent() {
	    _classCallCheck(this, SiteContainerComponent);

	    return _possibleConstructorReturn(this, (SiteContainerComponent.__proto__ || Object.getPrototypeOf(SiteContainerComponent)).apply(this, arguments));
	  }

	  _createClass(SiteContainerComponent, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_NavigationComponent2.default, { currentRoute: this.props.currentRoute }),
	        _react2.default.createElement(
	          'div',
	          { style: { height: '100%',
	              width: '100%'
	            } },
	          _react2.default.createElement(
	            _Row2.default,
	            null,
	            _react2.default.createElement(
	              _Col2.default,
	              { xs: 6, xsOffset: 4, md: 4 },
	              _react2.default.createElement(_ContentContainerComponent2.default, { currentRoute: this.props.currentRoute })
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return SiteContainerComponent;
	}(_react2.default.Component);

	exports.default = SiteContainerComponent;

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _bootstrapMin = __webpack_require__(232);

	var _bootstrapMin2 = _interopRequireDefault(_bootstrapMin);

	var _Navbar = __webpack_require__(236);

	var _Navbar2 = _interopRequireDefault(_Navbar);

	var _Nav = __webpack_require__(353);

	var _Nav2 = _interopRequireDefault(_Nav);

	var _NavDropdown = __webpack_require__(357);

	var _NavDropdown2 = _interopRequireDefault(_NavDropdown);

	var _MenuItem = __webpack_require__(389);

	var _MenuItem2 = _interopRequireDefault(_MenuItem);

	var _NavItem = __webpack_require__(390);

	var _NavItem2 = _interopRequireDefault(_NavItem);

	var _Grid = __webpack_require__(327);

	var _Grid2 = _interopRequireDefault(_Grid);

	var _Row = __webpack_require__(391);

	var _Row2 = _interopRequireDefault(_Row);

	var _Col = __webpack_require__(392);

	var _Col2 = _interopRequireDefault(_Col);

	var _Button = __webpack_require__(365);

	var _Button2 = _interopRequireDefault(_Button);

	var _Modal = __webpack_require__(393);

	var _Modal2 = _interopRequireDefault(_Modal);

	var _Okechi_Onyeje_original = __webpack_require__(429);

	var _Okechi_Onyeje_original2 = _interopRequireDefault(_Okechi_Onyeje_original);

	var _Okechi_Onyeje_music_producer = __webpack_require__(430);

	var _Okechi_Onyeje_music_producer2 = _interopRequireDefault(_Okechi_Onyeje_music_producer);

	var _Okechi_Onyeje_hobbyist_hacker = __webpack_require__(431);

	var _Okechi_Onyeje_hobbyist_hacker2 = _interopRequireDefault(_Okechi_Onyeje_hobbyist_hacker);

	var _Okechi_Onyeje_professional = __webpack_require__(432);

	var _Okechi_Onyeje_professional2 = _interopRequireDefault(_Okechi_Onyeje_professional);

	var _Okechi_Onyeje_professional_software_engineer = __webpack_require__(433);

	var _Okechi_Onyeje_professional_software_engineer2 = _interopRequireDefault(_Okechi_Onyeje_professional_software_engineer);

	var _reactRouter = __webpack_require__(171);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	//import bootsrap components


	//import logo images


	var NavigationComponent = function (_React$Component) {
	    _inherits(NavigationComponent, _React$Component);

	    function NavigationComponent() {
	        _classCallCheck(this, NavigationComponent);

	        var _this = _possibleConstructorReturn(this, (NavigationComponent.__proto__ || Object.getPrototypeOf(NavigationComponent)).call(this));

	        _this.state = {
	            _navigationState: 'home',
	            showContactModal: false
	        };
	        _this.onClickHandler = _this.onClickHandler.bind(_this);
	        _this.close = _this.close.bind(_this);
	        _this.open = _this.open.bind(_this);
	        _this.renderLogo = _this.renderLogo.bind(_this);
	        return _this;
	    }

	    _createClass(NavigationComponent, [{
	        key: 'renderLogo',
	        value: function renderLogo() {
	            var logoStyle = {
	                width: "75",
	                height: "75"
	            };

	            if (_.includes(this.props.currentRoute, '/web-development') || _.includes(this.props.currentRoute, '/mobile-development')) {

	                logoStyle.backgroundImage = _Okechi_Onyeje_professional_software_engineer2.default;
	            } else if (_.includes(this.props.currentRoute, '/professional')) {

	                logoStyle.backgroundImage = _Okechi_Onyeje_professional2.default;
	            } else if (_.includes(this.props.currentRoute, '/audio-production') || _.includes(this.props.currentRoute, '/podcasting')) {

	                logoStyle.backgroundImage = _Okechi_Onyeje_music_producer2.default;
	            } else if (_.includes(this.props.currentRoute, '/audio-software-development') || _.includes(this.props.currentRoute, '/hacks')) {

	                logoStyle.backgroundImage = _Okechi_Onyeje_hobbyist_hacker2.default;
	            } else {

	                logoStyle.backgroundImage = _Okechi_Onyeje_original2.default;
	            }

	            return _react2.default.createElement(
	                'div',
	                { style: { width: "100%", height: "100%" } },
	                _react2.default.createElement(
	                    _reactRouter.Link,
	                    { to: '/', style: { width: logoStyle.width, height: logoStyle.height } },
	                    _react2.default.createElement('img', { src: logoStyle.backgroundImage, style: { width: logoStyle.width, height: logoStyle.height } })
	                )
	            );
	        }
	    }, {
	        key: 'close',
	        value: function close() {
	            this.setState({ showContactModal: false });
	        }
	    }, {
	        key: 'open',
	        value: function open() {
	            this.setState({ showContactModal: true });
	        }
	    }, {
	        key: 'onClickHandler',
	        value: function onClickHandler(navState) {
	            var newNavState = this.props.currentRoute;
	            switch (navState) {
	                case '/personal':
	                    break;
	                case '/professional':
	                    break;
	                case '/web-development':
	                    break;
	                case '/mobile-development':
	                    break;
	                case '/audio-software-development':
	                    break;
	                case '/audio-production':
	                    break;
	                case '/podcasting':
	                    break;
	                case '/hacks':
	                    break;
	                case '/contacts':
	                    break;
	                default:
	                    break;
	            }

	            this.setState({
	                _navigationState: navState
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                        _Navbar2.default,
	                        { bsStyle: 'inverse', staticTop: 'true', style: { background: "transparent" }, collapseOnSelect: true },
	                        _react2.default.createElement(
	                            _Navbar2.default.Header,
	                            null,
	                            _react2.default.createElement(
	                                _Navbar2.default.Brand,
	                                null,
	                                this.renderLogo()
	                            ),
	                            _react2.default.createElement(_Navbar2.default.Toggle, null)
	                        ),
	                        _react2.default.createElement(
	                            _Navbar2.default.Collapse,
	                            null,
	                            _react2.default.createElement(
	                                _Row2.default,
	                                null,
	                                _react2.default.createElement(
	                                    _Col2.default,
	                                    { xs: 6, xsOffset: 3 },
	                                    _react2.default.createElement(
	                                        _Nav2.default,
	                                        { bsStyle: 'pills', style: { alignVertical: 'center' } },
	                                        _react2.default.createElement(
	                                            _NavDropdown2.default,
	                                            { eventKey: 1, title: 'About', id: 'basic-nav-dropdown', style: { textColor: "white" } },
	                                            _react2.default.createElement(
	                                                _MenuItem2.default,
	                                                { eventKey: 1.1 },
	                                                _react2.default.createElement(
	                                                    'li',
	                                                    { onClick: function onClick() {
	                                                            return _this2.onClickHandler(_this2.props.currentRoute);
	                                                        } },
	                                                    _react2.default.createElement(
	                                                        _reactRouter.Link,
	                                                        { to: '/personal' },
	                                                        'Personal'
	                                                    )
	                                                )
	                                            ),
	                                            _react2.default.createElement(
	                                                _MenuItem2.default,
	                                                { eventKey: 1.2 },
	                                                _react2.default.createElement(
	                                                    'li',
	                                                    { onClick: function onClick() {
	                                                            return _this2.onClickHandler(_this2.props.currentRoute);
	                                                        } },
	                                                    _react2.default.createElement(
	                                                        _reactRouter.Link,
	                                                        { to: '/professional' },
	                                                        'Professional'
	                                                    )
	                                                )
	                                            )
	                                        ),
	                                        _react2.default.createElement(
	                                            _NavDropdown2.default,
	                                            { eventKey: 2, title: 'Projects', id: 'basic-nav-dropdown' },
	                                            _react2.default.createElement(
	                                                _MenuItem2.default,
	                                                { eventKey: 2.1 },
	                                                _react2.default.createElement(
	                                                    'li',
	                                                    { onClick: function onClick() {
	                                                            return _this2.onClickHandler(_this2.props.currentRoute);
	                                                        } },
	                                                    _react2.default.createElement(
	                                                        _reactRouter.Link,
	                                                        { to: '/web-development' },
	                                                        'Web'
	                                                    )
	                                                )
	                                            ),
	                                            _react2.default.createElement(
	                                                _MenuItem2.default,
	                                                { eventKey: 2.2 },
	                                                _react2.default.createElement(
	                                                    'li',
	                                                    { onClick: function onClick() {
	                                                            return _this2.onClickHandler(_this2.props.currentRoute);
	                                                        } },
	                                                    _react2.default.createElement(
	                                                        _reactRouter.Link,
	                                                        { to: '/mobile-development' },
	                                                        'Mobile'
	                                                    )
	                                                )
	                                            ),
	                                            _react2.default.createElement(
	                                                _MenuItem2.default,
	                                                { eventKey: 2.3 },
	                                                _react2.default.createElement(
	                                                    'li',
	                                                    { onClick: function onClick() {
	                                                            return _this2.onClickHandler(_this2.props.currentRoute);
	                                                        } },
	                                                    _react2.default.createElement(
	                                                        _reactRouter.Link,
	                                                        { to: '/audio-software-development' },
	                                                        'Audio'
	                                                    )
	                                                )
	                                            )
	                                        ),
	                                        _react2.default.createElement(
	                                            _NavDropdown2.default,
	                                            { eventKey: 3, title: 'Hobbies', id: 'basic-nav-dropdown' },
	                                            _react2.default.createElement(
	                                                _MenuItem2.default,
	                                                { eventKey: 3.1 },
	                                                _react2.default.createElement(
	                                                    _reactRouter.Link,
	                                                    { to: '/audio-production' },
	                                                    'Audio Production'
	                                                )
	                                            ),
	                                            _react2.default.createElement(
	                                                _MenuItem2.default,
	                                                { eventKey: 3.2 },
	                                                _react2.default.createElement(
	                                                    'li',
	                                                    { onClick: function onClick() {
	                                                            return _this2.onClickHandler(_this2.props.currentRoute);
	                                                        } },
	                                                    _react2.default.createElement(
	                                                        _reactRouter.Link,
	                                                        { to: '/podcasting' },
	                                                        'Podcasts'
	                                                    )
	                                                )
	                                            ),
	                                            _react2.default.createElement(
	                                                _MenuItem2.default,
	                                                { eventKey: 3.3 },
	                                                _react2.default.createElement(
	                                                    'li',
	                                                    { onClick: function onClick() {
	                                                            return _this2.onClickHandler(_this2.props.currentRoute);
	                                                        } },
	                                                    _react2.default.createElement(
	                                                        _reactRouter.Link,
	                                                        { to: '/hacks' },
	                                                        'Hardware & Software Hacks'
	                                                    )
	                                                )
	                                            )
	                                        )
	                                    )
	                                )
	                            )
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    _Modal2.default,
	                    { show: this.state.showContactModal, onHide: this.close },
	                    _react2.default.createElement(
	                        _Modal2.default.Header,
	                        { closeButton: true },
	                        _react2.default.createElement(
	                            _Modal2.default.Title,
	                            null,
	                            'Request a Quote on A Service'
	                        )
	                    ),
	                    _react2.default.createElement(
	                        _Modal2.default.Body,
	                        null,
	                        '//@TODO: place component for contact form here'
	                    )
	                )
	            );
	        }
	    }]);

	    return NavigationComponent;
	}(_react2.default.Component);

	exports.default = NavigationComponent;

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(233);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(235)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js?modules=true&localIdentName=[name]__[local]___[hash:base64:5]!./bootstrap.min.css", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js?modules=true&localIdentName=[name]__[local]___[hash:base64:5]!./bootstrap.min.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(234)();
	// imports


	// module
	exports.push([module.id, "/*!\n * Bootstrap v4.0.0-alpha.6 (https://getbootstrap.com)\n * Copyright 2011-2017 The Bootstrap Authors\n * Copyright 2011-2017 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n *//*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}@media print{*,::after,::before,blockquote::first-letter,blockquote::first-line,div::first-letter,div::first-line,li::first-letter,li::first-line,p::first-letter,p::first-line{text-shadow:none!important;-webkit-box-shadow:none!important;box-shadow:none!important}a,a:visited{text-decoration:underline}abbr[title]::after{content:\" (\" attr(title) \")\"}pre{white-space:pre-wrap!important}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}.bootstrap-min__navbar___19AjY{display:none}.bootstrap-min__badge___iEQnH{border:1px solid #000}.bootstrap-min__table___G9cfM{border-collapse:collapse!important}.bootstrap-min__table___G9cfM td,.bootstrap-min__table___G9cfM th{background-color:#fff!important}.bootstrap-min__table-bordered___2wXcg td,.bootstrap-min__table-bordered___2wXcg th{border:1px solid #ddd!important}}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}@-ms-viewport{width:device-width}html{-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:transparent}body{font-family:-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;font-size:1rem;font-weight:400;line-height:1.5;color:#292b2c;background-color:#fff}[tabindex=\"-1\"]:focus{outline:0!important}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem}p{margin-top:0;margin-bottom:1rem}abbr[data-original-title],abbr[title]{cursor:help}address{margin-bottom:1rem;font-style:normal;line-height:inherit}dl,ol,ul{margin-top:0;margin-bottom:1rem}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}a{color:#0275d8;text-decoration:none}a:focus,a:hover{color:#014c8c;text-decoration:underline}a:not([href]):not([tabindex]){color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:0}pre{margin-top:0;margin-bottom:1rem;overflow:auto}figure{margin:0 0 1rem}img{vertical-align:middle}[role=button]{cursor:pointer}[role=button],a,area,button,input,label,select,summary,textarea{-ms-touch-action:manipulation;touch-action:manipulation}table{border-collapse:collapse;background-color:transparent}caption{padding-top:.75rem;padding-bottom:.75rem;color:#636c72;text-align:left;caption-side:bottom}th{text-align:left}label{display:inline-block;margin-bottom:.5rem}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,select,textarea{line-height:inherit}input[type=checkbox]:disabled,input[type=radio]:disabled{cursor:not-allowed}input[type=date],input[type=time],input[type=datetime-local],input[type=month]{-webkit-appearance:listbox}textarea{resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit}input[type=search]{-webkit-appearance:none}output{display:inline-block}[hidden]{display:none!important}.bootstrap-min__h1___2RF26,.bootstrap-min__h2___22u5_,.bootstrap-min__h3___3Ug8f,.bootstrap-min__h4___1xkVx,.bootstrap-min__h5___2Oy9V,.bootstrap-min__h6___2OAYQ,h1,h2,h3,h4,h5,h6{margin-bottom:.5rem;font-family:inherit;font-weight:500;line-height:1.1;color:inherit}.bootstrap-min__h1___2RF26,h1{font-size:2.5rem}.bootstrap-min__h2___22u5_,h2{font-size:2rem}.bootstrap-min__h3___3Ug8f,h3{font-size:1.75rem}.bootstrap-min__h4___1xkVx,h4{font-size:1.5rem}.bootstrap-min__h5___2Oy9V,h5{font-size:1.25rem}.bootstrap-min__h6___2OAYQ,h6{font-size:1rem}.bootstrap-min__lead___1OXqo{font-size:1.25rem;font-weight:300}.bootstrap-min__display-1___1AghC{font-size:6rem;font-weight:300;line-height:1.1}.bootstrap-min__display-2___2ypkO{font-size:5.5rem;font-weight:300;line-height:1.1}.bootstrap-min__display-3___2H0_v{font-size:4.5rem;font-weight:300;line-height:1.1}.bootstrap-min__display-4___3yRYL{font-size:3.5rem;font-weight:300;line-height:1.1}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,.1)}.bootstrap-min__small___3neFt,small{font-size:80%;font-weight:400}.bootstrap-min__mark___3tV9v,mark{padding:.2em;background-color:#fcf8e3}.bootstrap-min__list-unstyled___3azuc{padding-left:0;list-style:none}.bootstrap-min__list-inline___2vsug{padding-left:0;list-style:none}.bootstrap-min__list-inline-item___1kUdQ{display:inline-block}.bootstrap-min__list-inline-item___1kUdQ:not(:last-child){margin-right:5px}.bootstrap-min__initialism___38CFW{font-size:90%;text-transform:uppercase}.bootstrap-min__blockquote___2deFi{padding:.5rem 1rem;margin-bottom:1rem;font-size:1.25rem;border-left:.25rem solid #eceeef}.bootstrap-min__blockquote-footer___24sUF{display:block;font-size:80%;color:#636c72}.bootstrap-min__blockquote-footer___24sUF::before{content:\"\\2014   \\A0\"}.bootstrap-min__blockquote-reverse___2eHaS{padding-right:1rem;padding-left:0;text-align:right;border-right:.25rem solid #eceeef;border-left:0}.bootstrap-min__blockquote-reverse___2eHaS .bootstrap-min__blockquote-footer___24sUF::before{content:\"\"}.bootstrap-min__blockquote-reverse___2eHaS .bootstrap-min__blockquote-footer___24sUF::after{content:\"\\A0   \\2014\"}.bootstrap-min__img-fluid___3bzY4{max-width:100%;height:auto}.bootstrap-min__img-thumbnail___1nXXU{padding:.25rem;background-color:#fff;border:1px solid #ddd;border-radius:.25rem;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;max-width:100%;height:auto}.bootstrap-min__figure___3ef7l{display:inline-block}.bootstrap-min__figure-img___12afO{margin-bottom:.5rem;line-height:1}.bootstrap-min__figure-caption___2qBP1{font-size:90%;color:#636c72}code,kbd,pre,samp{font-family:Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace}code{padding:.2rem .4rem;font-size:90%;color:#bd4147;background-color:#f7f7f9;border-radius:.25rem}a>code{padding:0;color:inherit;background-color:inherit}kbd{padding:.2rem .4rem;font-size:90%;color:#fff;background-color:#292b2c;border-radius:.2rem}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;margin-top:0;margin-bottom:1rem;font-size:90%;color:#292b2c}pre code{padding:0;font-size:inherit;color:inherit;background-color:transparent;border-radius:0}.bootstrap-min__pre-scrollable___2WyQK{max-height:340px;overflow-y:scroll}.bootstrap-min__container___1bva4{position:relative;margin-left:auto;margin-right:auto;padding-right:15px;padding-left:15px}@media (min-width:576px){.bootstrap-min__container___1bva4{padding-right:15px;padding-left:15px}}@media (min-width:768px){.bootstrap-min__container___1bva4{padding-right:15px;padding-left:15px}}@media (min-width:992px){.bootstrap-min__container___1bva4{padding-right:15px;padding-left:15px}}@media (min-width:1200px){.bootstrap-min__container___1bva4{padding-right:15px;padding-left:15px}}@media (min-width:576px){.bootstrap-min__container___1bva4{width:540px;max-width:100%}}@media (min-width:768px){.bootstrap-min__container___1bva4{width:720px;max-width:100%}}@media (min-width:992px){.bootstrap-min__container___1bva4{width:960px;max-width:100%}}@media (min-width:1200px){.bootstrap-min__container___1bva4{width:1140px;max-width:100%}}.bootstrap-min__container-fluid___2sWQy{position:relative;margin-left:auto;margin-right:auto;padding-right:15px;padding-left:15px}@media (min-width:576px){.bootstrap-min__container-fluid___2sWQy{padding-right:15px;padding-left:15px}}@media (min-width:768px){.bootstrap-min__container-fluid___2sWQy{padding-right:15px;padding-left:15px}}@media (min-width:992px){.bootstrap-min__container-fluid___2sWQy{padding-right:15px;padding-left:15px}}@media (min-width:1200px){.bootstrap-min__container-fluid___2sWQy{padding-right:15px;padding-left:15px}}.bootstrap-min__row___1CS1h{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-15px;margin-left:-15px}@media (min-width:576px){.bootstrap-min__row___1CS1h{margin-right:-15px;margin-left:-15px}}@media (min-width:768px){.bootstrap-min__row___1CS1h{margin-right:-15px;margin-left:-15px}}@media (min-width:992px){.bootstrap-min__row___1CS1h{margin-right:-15px;margin-left:-15px}}@media (min-width:1200px){.bootstrap-min__row___1CS1h{margin-right:-15px;margin-left:-15px}}.bootstrap-min__no-gutters___N8Hyq{margin-right:0;margin-left:0}.bootstrap-min__no-gutters___N8Hyq>.bootstrap-min__col___34VGP,.bootstrap-min__no-gutters___N8Hyq>[class*=col-]{padding-right:0;padding-left:0}.bootstrap-min__col___34VGP,.bootstrap-min__col-1___1XCo4,.bootstrap-min__col-10___2D4Y8,.bootstrap-min__col-11___32UdW,.bootstrap-min__col-12___32UbB,.bootstrap-min__col-2___LoQ5F,.bootstrap-min__col-3___vEnCU,.bootstrap-min__col-4___lS0cR,.bootstrap-min__col-5___30Oqy,.bootstrap-min__col-6___2nHjo,.bootstrap-min__col-7___1lufE,.bootstrap-min__col-8___2m0QV,.bootstrap-min__col-9___1qfmx,.bootstrap-min__col-lg___vSMWq,.bootstrap-min__col-lg-1___37dD-,.bootstrap-min__col-lg-10___bcxUb,.bootstrap-min__col-lg-11___1CVv9,.bootstrap-min__col-lg-12___1qDLI,.bootstrap-min__col-lg-2___1xzpl,.bootstrap-min__col-lg-3___fWDWS,.bootstrap-min__col-lg-4___3dgOB,.bootstrap-min__col-lg-5___3XNyT,.bootstrap-min__col-lg-6___3036d,.bootstrap-min__col-lg-7___2n9eQ,.bootstrap-min__col-lg-8___24GJ_,.bootstrap-min__col-lg-9___1nmw6,.bootstrap-min__col-md___pDqRZ,.bootstrap-min__col-md-1___18XjH,.bootstrap-min__col-md-10___2d2Uf,.bootstrap-min__col-md-11___2s8zq,.bootstrap-min__col-md-12___1j0Js,.bootstrap-min__col-md-2___3RIYd,.bootstrap-min__col-md-3___1DSXX,.bootstrap-min__col-md-4___1Nm41,.bootstrap-min__col-md-5___3adAT,.bootstrap-min__col-md-6___tacBt,.bootstrap-min__col-md-7___1T0oX,.bootstrap-min__col-md-8___3gwKI,.bootstrap-min__col-md-9___G_uOM,.bootstrap-min__col-sm___31oi9,.bootstrap-min__col-sm-1___2koZw,.bootstrap-min__col-sm-10___2Tk4o,.bootstrap-min__col-sm-11___292lh,.bootstrap-min__col-sm-12___26Fls,.bootstrap-min__col-sm-2___304kF,.bootstrap-min__col-sm-3___3CPLw,.bootstrap-min__col-sm-4___2lHJM,.bootstrap-min__col-sm-5___BHJ04,.bootstrap-min__col-sm-6___35ItP,.bootstrap-min__col-sm-7___1NWAi,.bootstrap-min__col-sm-8___3M1Jm,.bootstrap-min__col-sm-9___2E4oC,.bootstrap-min__col-xl___HZN3y,.bootstrap-min__col-xl-1___3FNK5,.bootstrap-min__col-xl-10___3BxjK,.bootstrap-min__col-xl-11___2tq6H,.bootstrap-min__col-xl-12___2SCrq,.bootstrap-min__col-xl-2___RENcq,.bootstrap-min__col-xl-3___us2Y_,.bootstrap-min__col-xl-4___3fzQb,.bootstrap-min__col-xl-5___3Ngj6,.bootstrap-min__col-xl-6___27Zn8,.bootstrap-min__col-xl-7___2ir6I,.bootstrap-min__col-xl-8___2Eiap,.bootstrap-min__col-xl-9___2WH8q{position:relative;width:100%;min-height:1px;padding-right:15px;padding-left:15px}@media (min-width:576px){.bootstrap-min__col___34VGP,.bootstrap-min__col-1___1XCo4,.bootstrap-min__col-10___2D4Y8,.bootstrap-min__col-11___32UdW,.bootstrap-min__col-12___32UbB,.bootstrap-min__col-2___LoQ5F,.bootstrap-min__col-3___vEnCU,.bootstrap-min__col-4___lS0cR,.bootstrap-min__col-5___30Oqy,.bootstrap-min__col-6___2nHjo,.bootstrap-min__col-7___1lufE,.bootstrap-min__col-8___2m0QV,.bootstrap-min__col-9___1qfmx,.bootstrap-min__col-lg___vSMWq,.bootstrap-min__col-lg-1___37dD-,.bootstrap-min__col-lg-10___bcxUb,.bootstrap-min__col-lg-11___1CVv9,.bootstrap-min__col-lg-12___1qDLI,.bootstrap-min__col-lg-2___1xzpl,.bootstrap-min__col-lg-3___fWDWS,.bootstrap-min__col-lg-4___3dgOB,.bootstrap-min__col-lg-5___3XNyT,.bootstrap-min__col-lg-6___3036d,.bootstrap-min__col-lg-7___2n9eQ,.bootstrap-min__col-lg-8___24GJ_,.bootstrap-min__col-lg-9___1nmw6,.bootstrap-min__col-md___pDqRZ,.bootstrap-min__col-md-1___18XjH,.bootstrap-min__col-md-10___2d2Uf,.bootstrap-min__col-md-11___2s8zq,.bootstrap-min__col-md-12___1j0Js,.bootstrap-min__col-md-2___3RIYd,.bootstrap-min__col-md-3___1DSXX,.bootstrap-min__col-md-4___1Nm41,.bootstrap-min__col-md-5___3adAT,.bootstrap-min__col-md-6___tacBt,.bootstrap-min__col-md-7___1T0oX,.bootstrap-min__col-md-8___3gwKI,.bootstrap-min__col-md-9___G_uOM,.bootstrap-min__col-sm___31oi9,.bootstrap-min__col-sm-1___2koZw,.bootstrap-min__col-sm-10___2Tk4o,.bootstrap-min__col-sm-11___292lh,.bootstrap-min__col-sm-12___26Fls,.bootstrap-min__col-sm-2___304kF,.bootstrap-min__col-sm-3___3CPLw,.bootstrap-min__col-sm-4___2lHJM,.bootstrap-min__col-sm-5___BHJ04,.bootstrap-min__col-sm-6___35ItP,.bootstrap-min__col-sm-7___1NWAi,.bootstrap-min__col-sm-8___3M1Jm,.bootstrap-min__col-sm-9___2E4oC,.bootstrap-min__col-xl___HZN3y,.bootstrap-min__col-xl-1___3FNK5,.bootstrap-min__col-xl-10___3BxjK,.bootstrap-min__col-xl-11___2tq6H,.bootstrap-min__col-xl-12___2SCrq,.bootstrap-min__col-xl-2___RENcq,.bootstrap-min__col-xl-3___us2Y_,.bootstrap-min__col-xl-4___3fzQb,.bootstrap-min__col-xl-5___3Ngj6,.bootstrap-min__col-xl-6___27Zn8,.bootstrap-min__col-xl-7___2ir6I,.bootstrap-min__col-xl-8___2Eiap,.bootstrap-min__col-xl-9___2WH8q{padding-right:15px;padding-left:15px}}@media (min-width:768px){.bootstrap-min__col___34VGP,.bootstrap-min__col-1___1XCo4,.bootstrap-min__col-10___2D4Y8,.bootstrap-min__col-11___32UdW,.bootstrap-min__col-12___32UbB,.bootstrap-min__col-2___LoQ5F,.bootstrap-min__col-3___vEnCU,.bootstrap-min__col-4___lS0cR,.bootstrap-min__col-5___30Oqy,.bootstrap-min__col-6___2nHjo,.bootstrap-min__col-7___1lufE,.bootstrap-min__col-8___2m0QV,.bootstrap-min__col-9___1qfmx,.bootstrap-min__col-lg___vSMWq,.bootstrap-min__col-lg-1___37dD-,.bootstrap-min__col-lg-10___bcxUb,.bootstrap-min__col-lg-11___1CVv9,.bootstrap-min__col-lg-12___1qDLI,.bootstrap-min__col-lg-2___1xzpl,.bootstrap-min__col-lg-3___fWDWS,.bootstrap-min__col-lg-4___3dgOB,.bootstrap-min__col-lg-5___3XNyT,.bootstrap-min__col-lg-6___3036d,.bootstrap-min__col-lg-7___2n9eQ,.bootstrap-min__col-lg-8___24GJ_,.bootstrap-min__col-lg-9___1nmw6,.bootstrap-min__col-md___pDqRZ,.bootstrap-min__col-md-1___18XjH,.bootstrap-min__col-md-10___2d2Uf,.bootstrap-min__col-md-11___2s8zq,.bootstrap-min__col-md-12___1j0Js,.bootstrap-min__col-md-2___3RIYd,.bootstrap-min__col-md-3___1DSXX,.bootstrap-min__col-md-4___1Nm41,.bootstrap-min__col-md-5___3adAT,.bootstrap-min__col-md-6___tacBt,.bootstrap-min__col-md-7___1T0oX,.bootstrap-min__col-md-8___3gwKI,.bootstrap-min__col-md-9___G_uOM,.bootstrap-min__col-sm___31oi9,.bootstrap-min__col-sm-1___2koZw,.bootstrap-min__col-sm-10___2Tk4o,.bootstrap-min__col-sm-11___292lh,.bootstrap-min__col-sm-12___26Fls,.bootstrap-min__col-sm-2___304kF,.bootstrap-min__col-sm-3___3CPLw,.bootstrap-min__col-sm-4___2lHJM,.bootstrap-min__col-sm-5___BHJ04,.bootstrap-min__col-sm-6___35ItP,.bootstrap-min__col-sm-7___1NWAi,.bootstrap-min__col-sm-8___3M1Jm,.bootstrap-min__col-sm-9___2E4oC,.bootstrap-min__col-xl___HZN3y,.bootstrap-min__col-xl-1___3FNK5,.bootstrap-min__col-xl-10___3BxjK,.bootstrap-min__col-xl-11___2tq6H,.bootstrap-min__col-xl-12___2SCrq,.bootstrap-min__col-xl-2___RENcq,.bootstrap-min__col-xl-3___us2Y_,.bootstrap-min__col-xl-4___3fzQb,.bootstrap-min__col-xl-5___3Ngj6,.bootstrap-min__col-xl-6___27Zn8,.bootstrap-min__col-xl-7___2ir6I,.bootstrap-min__col-xl-8___2Eiap,.bootstrap-min__col-xl-9___2WH8q{padding-right:15px;padding-left:15px}}@media (min-width:992px){.bootstrap-min__col___34VGP,.bootstrap-min__col-1___1XCo4,.bootstrap-min__col-10___2D4Y8,.bootstrap-min__col-11___32UdW,.bootstrap-min__col-12___32UbB,.bootstrap-min__col-2___LoQ5F,.bootstrap-min__col-3___vEnCU,.bootstrap-min__col-4___lS0cR,.bootstrap-min__col-5___30Oqy,.bootstrap-min__col-6___2nHjo,.bootstrap-min__col-7___1lufE,.bootstrap-min__col-8___2m0QV,.bootstrap-min__col-9___1qfmx,.bootstrap-min__col-lg___vSMWq,.bootstrap-min__col-lg-1___37dD-,.bootstrap-min__col-lg-10___bcxUb,.bootstrap-min__col-lg-11___1CVv9,.bootstrap-min__col-lg-12___1qDLI,.bootstrap-min__col-lg-2___1xzpl,.bootstrap-min__col-lg-3___fWDWS,.bootstrap-min__col-lg-4___3dgOB,.bootstrap-min__col-lg-5___3XNyT,.bootstrap-min__col-lg-6___3036d,.bootstrap-min__col-lg-7___2n9eQ,.bootstrap-min__col-lg-8___24GJ_,.bootstrap-min__col-lg-9___1nmw6,.bootstrap-min__col-md___pDqRZ,.bootstrap-min__col-md-1___18XjH,.bootstrap-min__col-md-10___2d2Uf,.bootstrap-min__col-md-11___2s8zq,.bootstrap-min__col-md-12___1j0Js,.bootstrap-min__col-md-2___3RIYd,.bootstrap-min__col-md-3___1DSXX,.bootstrap-min__col-md-4___1Nm41,.bootstrap-min__col-md-5___3adAT,.bootstrap-min__col-md-6___tacBt,.bootstrap-min__col-md-7___1T0oX,.bootstrap-min__col-md-8___3gwKI,.bootstrap-min__col-md-9___G_uOM,.bootstrap-min__col-sm___31oi9,.bootstrap-min__col-sm-1___2koZw,.bootstrap-min__col-sm-10___2Tk4o,.bootstrap-min__col-sm-11___292lh,.bootstrap-min__col-sm-12___26Fls,.bootstrap-min__col-sm-2___304kF,.bootstrap-min__col-sm-3___3CPLw,.bootstrap-min__col-sm-4___2lHJM,.bootstrap-min__col-sm-5___BHJ04,.bootstrap-min__col-sm-6___35ItP,.bootstrap-min__col-sm-7___1NWAi,.bootstrap-min__col-sm-8___3M1Jm,.bootstrap-min__col-sm-9___2E4oC,.bootstrap-min__col-xl___HZN3y,.bootstrap-min__col-xl-1___3FNK5,.bootstrap-min__col-xl-10___3BxjK,.bootstrap-min__col-xl-11___2tq6H,.bootstrap-min__col-xl-12___2SCrq,.bootstrap-min__col-xl-2___RENcq,.bootstrap-min__col-xl-3___us2Y_,.bootstrap-min__col-xl-4___3fzQb,.bootstrap-min__col-xl-5___3Ngj6,.bootstrap-min__col-xl-6___27Zn8,.bootstrap-min__col-xl-7___2ir6I,.bootstrap-min__col-xl-8___2Eiap,.bootstrap-min__col-xl-9___2WH8q{padding-right:15px;padding-left:15px}}@media (min-width:1200px){.bootstrap-min__col___34VGP,.bootstrap-min__col-1___1XCo4,.bootstrap-min__col-10___2D4Y8,.bootstrap-min__col-11___32UdW,.bootstrap-min__col-12___32UbB,.bootstrap-min__col-2___LoQ5F,.bootstrap-min__col-3___vEnCU,.bootstrap-min__col-4___lS0cR,.bootstrap-min__col-5___30Oqy,.bootstrap-min__col-6___2nHjo,.bootstrap-min__col-7___1lufE,.bootstrap-min__col-8___2m0QV,.bootstrap-min__col-9___1qfmx,.bootstrap-min__col-lg___vSMWq,.bootstrap-min__col-lg-1___37dD-,.bootstrap-min__col-lg-10___bcxUb,.bootstrap-min__col-lg-11___1CVv9,.bootstrap-min__col-lg-12___1qDLI,.bootstrap-min__col-lg-2___1xzpl,.bootstrap-min__col-lg-3___fWDWS,.bootstrap-min__col-lg-4___3dgOB,.bootstrap-min__col-lg-5___3XNyT,.bootstrap-min__col-lg-6___3036d,.bootstrap-min__col-lg-7___2n9eQ,.bootstrap-min__col-lg-8___24GJ_,.bootstrap-min__col-lg-9___1nmw6,.bootstrap-min__col-md___pDqRZ,.bootstrap-min__col-md-1___18XjH,.bootstrap-min__col-md-10___2d2Uf,.bootstrap-min__col-md-11___2s8zq,.bootstrap-min__col-md-12___1j0Js,.bootstrap-min__col-md-2___3RIYd,.bootstrap-min__col-md-3___1DSXX,.bootstrap-min__col-md-4___1Nm41,.bootstrap-min__col-md-5___3adAT,.bootstrap-min__col-md-6___tacBt,.bootstrap-min__col-md-7___1T0oX,.bootstrap-min__col-md-8___3gwKI,.bootstrap-min__col-md-9___G_uOM,.bootstrap-min__col-sm___31oi9,.bootstrap-min__col-sm-1___2koZw,.bootstrap-min__col-sm-10___2Tk4o,.bootstrap-min__col-sm-11___292lh,.bootstrap-min__col-sm-12___26Fls,.bootstrap-min__col-sm-2___304kF,.bootstrap-min__col-sm-3___3CPLw,.bootstrap-min__col-sm-4___2lHJM,.bootstrap-min__col-sm-5___BHJ04,.bootstrap-min__col-sm-6___35ItP,.bootstrap-min__col-sm-7___1NWAi,.bootstrap-min__col-sm-8___3M1Jm,.bootstrap-min__col-sm-9___2E4oC,.bootstrap-min__col-xl___HZN3y,.bootstrap-min__col-xl-1___3FNK5,.bootstrap-min__col-xl-10___3BxjK,.bootstrap-min__col-xl-11___2tq6H,.bootstrap-min__col-xl-12___2SCrq,.bootstrap-min__col-xl-2___RENcq,.bootstrap-min__col-xl-3___us2Y_,.bootstrap-min__col-xl-4___3fzQb,.bootstrap-min__col-xl-5___3Ngj6,.bootstrap-min__col-xl-6___27Zn8,.bootstrap-min__col-xl-7___2ir6I,.bootstrap-min__col-xl-8___2Eiap,.bootstrap-min__col-xl-9___2WH8q{padding-right:15px;padding-left:15px}}.bootstrap-min__col___34VGP{-webkit-flex-basis:0;-ms-flex-preferred-size:0;flex-basis:0;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;max-width:100%}.bootstrap-min__col-auto___2IN7y{-webkit-box-flex:0;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;width:auto}.bootstrap-min__col-1___1XCo4{-webkit-box-flex:0;-webkit-flex:0 0 8.333333%;-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.bootstrap-min__col-2___LoQ5F{-webkit-box-flex:0;-webkit-flex:0 0 16.666667%;-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.bootstrap-min__col-3___vEnCU{-webkit-box-flex:0;-webkit-flex:0 0 25%;-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.bootstrap-min__col-4___lS0cR{-webkit-box-flex:0;-webkit-flex:0 0 33.333333%;-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.bootstrap-min__col-5___30Oqy{-webkit-box-flex:0;-webkit-flex:0 0 41.666667%;-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.bootstrap-min__col-6___2nHjo{-webkit-box-flex:0;-webkit-flex:0 0 50%;-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.bootstrap-min__col-7___1lufE{-webkit-box-flex:0;-webkit-flex:0 0 58.333333%;-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.bootstrap-min__col-8___2m0QV{-webkit-box-flex:0;-webkit-flex:0 0 66.666667%;-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.bootstrap-min__col-9___1qfmx{-webkit-box-flex:0;-webkit-flex:0 0 75%;-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.bootstrap-min__col-10___2D4Y8{-webkit-box-flex:0;-webkit-flex:0 0 83.333333%;-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.bootstrap-min__col-11___32UdW{-webkit-box-flex:0;-webkit-flex:0 0 91.666667%;-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.bootstrap-min__col-12___32UbB{-webkit-box-flex:0;-webkit-flex:0 0 100%;-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.bootstrap-min__pull-0___2ncY7{right:auto}.bootstrap-min__pull-1___1YyAZ{right:8.333333%}.bootstrap-min__pull-2___3APkG{right:16.666667%}.bootstrap-min__pull-3___DzEna{right:25%}.bootstrap-min__pull-4___3u8Mi{right:33.333333%}.bootstrap-min__pull-5___2Blyh{right:41.666667%}.bootstrap-min__pull-6___2r_g_{right:50%}.bootstrap-min__pull-7___1KAEr{right:58.333333%}.bootstrap-min__pull-8___2GuxO{right:66.666667%}.bootstrap-min__pull-9___txFfb{right:75%}.bootstrap-min__pull-10___1FDAb{right:83.333333%}.bootstrap-min__pull-11___19iTx{right:91.666667%}.bootstrap-min__pull-12___d0TLx{right:100%}.bootstrap-min__push-0___NDm95{left:auto}.bootstrap-min__push-1___2ocrP{left:8.333333%}.bootstrap-min__push-2___3P1o0{left:16.666667%}.bootstrap-min__push-3___RQPhI{left:25%}.bootstrap-min__push-4___3QUFF{left:33.333333%}.bootstrap-min__push-5___3siCp{left:41.666667%}.bootstrap-min__push-6___2I7RI{left:50%}.bootstrap-min__push-7___39X5a{left:58.333333%}.bootstrap-min__push-8___2lC5V{left:66.666667%}.bootstrap-min__push-9___1O6Tf{left:75%}.bootstrap-min__push-10___1TPYM{left:83.333333%}.bootstrap-min__push-11___DKcOv{left:91.666667%}.bootstrap-min__push-12___2SudU{left:100%}.bootstrap-min__offset-1___22Khx{margin-left:8.333333%}.bootstrap-min__offset-2___yMeCh{margin-left:16.666667%}.bootstrap-min__offset-3___3pj-R{margin-left:25%}.bootstrap-min__offset-4___1zkaJ{margin-left:33.333333%}.bootstrap-min__offset-5___1i8yj{margin-left:41.666667%}.bootstrap-min__offset-6___1SJPZ{margin-left:50%}.bootstrap-min__offset-7___3P65L{margin-left:58.333333%}.bootstrap-min__offset-8___2uYGc{margin-left:66.666667%}.bootstrap-min__offset-9___3RMTs{margin-left:75%}.bootstrap-min__offset-10___2NPbX{margin-left:83.333333%}.bootstrap-min__offset-11___2gFPf{margin-left:91.666667%}@media (min-width:576px){.bootstrap-min__col-sm___31oi9{-webkit-flex-basis:0;-ms-flex-preferred-size:0;flex-basis:0;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;max-width:100%}.bootstrap-min__col-sm-auto___2T8e9{-webkit-box-flex:0;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;width:auto}.bootstrap-min__col-sm-1___2koZw{-webkit-box-flex:0;-webkit-flex:0 0 8.333333%;-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.bootstrap-min__col-sm-2___304kF{-webkit-box-flex:0;-webkit-flex:0 0 16.666667%;-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.bootstrap-min__col-sm-3___3CPLw{-webkit-box-flex:0;-webkit-flex:0 0 25%;-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.bootstrap-min__col-sm-4___2lHJM{-webkit-box-flex:0;-webkit-flex:0 0 33.333333%;-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.bootstrap-min__col-sm-5___BHJ04{-webkit-box-flex:0;-webkit-flex:0 0 41.666667%;-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.bootstrap-min__col-sm-6___35ItP{-webkit-box-flex:0;-webkit-flex:0 0 50%;-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.bootstrap-min__col-sm-7___1NWAi{-webkit-box-flex:0;-webkit-flex:0 0 58.333333%;-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.bootstrap-min__col-sm-8___3M1Jm{-webkit-box-flex:0;-webkit-flex:0 0 66.666667%;-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.bootstrap-min__col-sm-9___2E4oC{-webkit-box-flex:0;-webkit-flex:0 0 75%;-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.bootstrap-min__col-sm-10___2Tk4o{-webkit-box-flex:0;-webkit-flex:0 0 83.333333%;-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.bootstrap-min__col-sm-11___292lh{-webkit-box-flex:0;-webkit-flex:0 0 91.666667%;-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.bootstrap-min__col-sm-12___26Fls{-webkit-box-flex:0;-webkit-flex:0 0 100%;-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.bootstrap-min__pull-sm-0___2SyWh{right:auto}.bootstrap-min__pull-sm-1___3m_qL{right:8.333333%}.bootstrap-min__pull-sm-2___13LQ_{right:16.666667%}.bootstrap-min__pull-sm-3___30h9l{right:25%}.bootstrap-min__pull-sm-4___1L0w_{right:33.333333%}.bootstrap-min__pull-sm-5___pVJZw{right:41.666667%}.bootstrap-min__pull-sm-6___3pUnK{right:50%}.bootstrap-min__pull-sm-7___2AxfT{right:58.333333%}.bootstrap-min__pull-sm-8___3DlPl{right:66.666667%}.bootstrap-min__pull-sm-9___1KGVe{right:75%}.bootstrap-min__pull-sm-10___1p4T6{right:83.333333%}.bootstrap-min__pull-sm-11___3dANn{right:91.666667%}.bootstrap-min__pull-sm-12___3GT_W{right:100%}.bootstrap-min__push-sm-0___QmOqD{left:auto}.bootstrap-min__push-sm-1___mYZ7v{left:8.333333%}.bootstrap-min__push-sm-2___2juYZ{left:16.666667%}.bootstrap-min__push-sm-3___2N2zE{left:25%}.bootstrap-min__push-sm-4___2R3Gc{left:33.333333%}.bootstrap-min__push-sm-5___2H_Hh{left:41.666667%}.bootstrap-min__push-sm-6___396jQ{left:50%}.bootstrap-min__push-sm-7___3zjKq{left:58.333333%}.bootstrap-min__push-sm-8___2_f4j{left:66.666667%}.bootstrap-min__push-sm-9___3Y4KJ{left:75%}.bootstrap-min__push-sm-10___2lgGg{left:83.333333%}.bootstrap-min__push-sm-11___m_QSe{left:91.666667%}.bootstrap-min__push-sm-12___30UcS{left:100%}.bootstrap-min__offset-sm-0___3cnsR{margin-left:0}.bootstrap-min__offset-sm-1___3lweN{margin-left:8.333333%}.bootstrap-min__offset-sm-2___HoLck{margin-left:16.666667%}.bootstrap-min__offset-sm-3___2mVH1{margin-left:25%}.bootstrap-min__offset-sm-4___1Me_f{margin-left:33.333333%}.bootstrap-min__offset-sm-5___1l8S3{margin-left:41.666667%}.bootstrap-min__offset-sm-6___157LC{margin-left:50%}.bootstrap-min__offset-sm-7___eiLjg{margin-left:58.333333%}.bootstrap-min__offset-sm-8___3MLQk{margin-left:66.666667%}.bootstrap-min__offset-sm-9___qsXUS{margin-left:75%}.bootstrap-min__offset-sm-10___2hiOO{margin-left:83.333333%}.bootstrap-min__offset-sm-11___c12l4{margin-left:91.666667%}}@media (min-width:768px){.bootstrap-min__col-md___pDqRZ{-webkit-flex-basis:0;-ms-flex-preferred-size:0;flex-basis:0;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;max-width:100%}.bootstrap-min__col-md-auto___10rOF{-webkit-box-flex:0;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;width:auto}.bootstrap-min__col-md-1___18XjH{-webkit-box-flex:0;-webkit-flex:0 0 8.333333%;-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.bootstrap-min__col-md-2___3RIYd{-webkit-box-flex:0;-webkit-flex:0 0 16.666667%;-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.bootstrap-min__col-md-3___1DSXX{-webkit-box-flex:0;-webkit-flex:0 0 25%;-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.bootstrap-min__col-md-4___1Nm41{-webkit-box-flex:0;-webkit-flex:0 0 33.333333%;-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.bootstrap-min__col-md-5___3adAT{-webkit-box-flex:0;-webkit-flex:0 0 41.666667%;-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.bootstrap-min__col-md-6___tacBt{-webkit-box-flex:0;-webkit-flex:0 0 50%;-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.bootstrap-min__col-md-7___1T0oX{-webkit-box-flex:0;-webkit-flex:0 0 58.333333%;-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.bootstrap-min__col-md-8___3gwKI{-webkit-box-flex:0;-webkit-flex:0 0 66.666667%;-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.bootstrap-min__col-md-9___G_uOM{-webkit-box-flex:0;-webkit-flex:0 0 75%;-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.bootstrap-min__col-md-10___2d2Uf{-webkit-box-flex:0;-webkit-flex:0 0 83.333333%;-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.bootstrap-min__col-md-11___2s8zq{-webkit-box-flex:0;-webkit-flex:0 0 91.666667%;-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.bootstrap-min__col-md-12___1j0Js{-webkit-box-flex:0;-webkit-flex:0 0 100%;-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.bootstrap-min__pull-md-0___3UTdw{right:auto}.bootstrap-min__pull-md-1___1v90r{right:8.333333%}.bootstrap-min__pull-md-2___XsCFz{right:16.666667%}.bootstrap-min__pull-md-3___21LtA{right:25%}.bootstrap-min__pull-md-4___1L4vW{right:33.333333%}.bootstrap-min__pull-md-5___2T_y8{right:41.666667%}.bootstrap-min__pull-md-6___1Rskr{right:50%}.bootstrap-min__pull-md-7___1PEs9{right:58.333333%}.bootstrap-min__pull-md-8___1YQG-{right:66.666667%}.bootstrap-min__pull-md-9___264SY{right:75%}.bootstrap-min__pull-md-10___1oQMG{right:83.333333%}.bootstrap-min__pull-md-11___1DE0M{right:91.666667%}.bootstrap-min__pull-md-12___2s6Xs{right:100%}.bootstrap-min__push-md-0___4EvI9{left:auto}.bootstrap-min__push-md-1___1YRnN{left:8.333333%}.bootstrap-min__push-md-2___1yie4{left:16.666667%}.bootstrap-min__push-md-3___1JQyY{left:25%}.bootstrap-min__push-md-4___Peao-{left:33.333333%}.bootstrap-min__push-md-5___3wGr2{left:41.666667%}.bootstrap-min__push-md-6____Je_g{left:50%}.bootstrap-min__push-md-7___V2PcI{left:58.333333%}.bootstrap-min__push-md-8___2x85d{left:66.666667%}.bootstrap-min__push-md-9___1hfu1{left:75%}.bootstrap-min__push-md-10___7l_oo{left:83.333333%}.bootstrap-min__push-md-11___J7vNZ{left:91.666667%}.bootstrap-min__push-md-12___2tQoN{left:100%}.bootstrap-min__offset-md-0___2MJln{margin-left:0}.bootstrap-min__offset-md-1___1OV4d{margin-left:8.333333%}.bootstrap-min__offset-md-2___xlbye{margin-left:16.666667%}.bootstrap-min__offset-md-3____qW6Z{margin-left:25%}.bootstrap-min__offset-md-4___2OYNA{margin-left:33.333333%}.bootstrap-min__offset-md-5___Mpqku{margin-left:41.666667%}.bootstrap-min__offset-md-6___10hLG{margin-left:50%}.bootstrap-min__offset-md-7___FdB94{margin-left:58.333333%}.bootstrap-min__offset-md-8___245NX{margin-left:66.666667%}.bootstrap-min__offset-md-9___bsx4M{margin-left:75%}.bootstrap-min__offset-md-10___2LAEw{margin-left:83.333333%}.bootstrap-min__offset-md-11___A8zam{margin-left:91.666667%}}@media (min-width:992px){.bootstrap-min__col-lg___vSMWq{-webkit-flex-basis:0;-ms-flex-preferred-size:0;flex-basis:0;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;max-width:100%}.bootstrap-min__col-lg-auto___3ex0l{-webkit-box-flex:0;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;width:auto}.bootstrap-min__col-lg-1___37dD-{-webkit-box-flex:0;-webkit-flex:0 0 8.333333%;-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.bootstrap-min__col-lg-2___1xzpl{-webkit-box-flex:0;-webkit-flex:0 0 16.666667%;-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.bootstrap-min__col-lg-3___fWDWS{-webkit-box-flex:0;-webkit-flex:0 0 25%;-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.bootstrap-min__col-lg-4___3dgOB{-webkit-box-flex:0;-webkit-flex:0 0 33.333333%;-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.bootstrap-min__col-lg-5___3XNyT{-webkit-box-flex:0;-webkit-flex:0 0 41.666667%;-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.bootstrap-min__col-lg-6___3036d{-webkit-box-flex:0;-webkit-flex:0 0 50%;-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.bootstrap-min__col-lg-7___2n9eQ{-webkit-box-flex:0;-webkit-flex:0 0 58.333333%;-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.bootstrap-min__col-lg-8___24GJ_{-webkit-box-flex:0;-webkit-flex:0 0 66.666667%;-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.bootstrap-min__col-lg-9___1nmw6{-webkit-box-flex:0;-webkit-flex:0 0 75%;-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.bootstrap-min__col-lg-10___bcxUb{-webkit-box-flex:0;-webkit-flex:0 0 83.333333%;-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.bootstrap-min__col-lg-11___1CVv9{-webkit-box-flex:0;-webkit-flex:0 0 91.666667%;-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.bootstrap-min__col-lg-12___1qDLI{-webkit-box-flex:0;-webkit-flex:0 0 100%;-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.bootstrap-min__pull-lg-0___10mhr{right:auto}.bootstrap-min__pull-lg-1___1OfYm{right:8.333333%}.bootstrap-min__pull-lg-2___3cklb{right:16.666667%}.bootstrap-min__pull-lg-3___1dZiV{right:25%}.bootstrap-min__pull-lg-4___2SXhQ{right:33.333333%}.bootstrap-min__pull-lg-5___1McU2{right:41.666667%}.bootstrap-min__pull-lg-6___2DGvq{right:50%}.bootstrap-min__pull-lg-7___1FqoY{right:58.333333%}.bootstrap-min__pull-lg-8___2Emr-{right:66.666667%}.bootstrap-min__pull-lg-9___3OsCQ{right:75%}.bootstrap-min__pull-lg-10___1GnuM{right:83.333333%}.bootstrap-min__pull-lg-11___1KY92{right:91.666667%}.bootstrap-min__pull-lg-12___1B0Fl{right:100%}.bootstrap-min__push-lg-0___oraF2{left:auto}.bootstrap-min__push-lg-1___kgjwd{left:8.333333%}.bootstrap-min__push-lg-2___2uMkG{left:16.666667%}.bootstrap-min__push-lg-3___1eNXv{left:25%}.bootstrap-min__push-lg-4___1rRiX{left:33.333333%}.bootstrap-min__push-lg-5___3246c{left:41.666667%}.bootstrap-min__push-lg-6___pFNqE{left:50%}.bootstrap-min__push-lg-7___sCLvn{left:58.333333%}.bootstrap-min__push-lg-8___2gNdg{left:66.666667%}.bootstrap-min__push-lg-9___1AER4{left:75%}.bootstrap-min__push-lg-10___33k5t{left:83.333333%}.bootstrap-min__push-lg-11___3YePw{left:91.666667%}.bootstrap-min__push-lg-12___1R2bl{left:100%}.bootstrap-min__offset-lg-0___8Njdl{margin-left:0}.bootstrap-min__offset-lg-1___IU7Du{margin-left:8.333333%}.bootstrap-min__offset-lg-2___2VsOV{margin-left:16.666667%}.bootstrap-min__offset-lg-3___3Pkg_{margin-left:25%}.bootstrap-min__offset-lg-4___1nC55{margin-left:33.333333%}.bootstrap-min__offset-lg-5___1u4ZW{margin-left:41.666667%}.bootstrap-min__offset-lg-6___2vhCB{margin-left:50%}.bootstrap-min__offset-lg-7___2y7ax{margin-left:58.333333%}.bootstrap-min__offset-lg-8___SevyI{margin-left:66.666667%}.bootstrap-min__offset-lg-9___1KWwk{margin-left:75%}.bootstrap-min__offset-lg-10___1Cgwq{margin-left:83.333333%}.bootstrap-min__offset-lg-11___rSUny{margin-left:91.666667%}}@media (min-width:1200px){.bootstrap-min__col-xl___HZN3y{-webkit-flex-basis:0;-ms-flex-preferred-size:0;flex-basis:0;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;max-width:100%}.bootstrap-min__col-xl-auto___2idtb{-webkit-box-flex:0;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;width:auto}.bootstrap-min__col-xl-1___3FNK5{-webkit-box-flex:0;-webkit-flex:0 0 8.333333%;-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.bootstrap-min__col-xl-2___RENcq{-webkit-box-flex:0;-webkit-flex:0 0 16.666667%;-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.bootstrap-min__col-xl-3___us2Y_{-webkit-box-flex:0;-webkit-flex:0 0 25%;-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.bootstrap-min__col-xl-4___3fzQb{-webkit-box-flex:0;-webkit-flex:0 0 33.333333%;-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.bootstrap-min__col-xl-5___3Ngj6{-webkit-box-flex:0;-webkit-flex:0 0 41.666667%;-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.bootstrap-min__col-xl-6___27Zn8{-webkit-box-flex:0;-webkit-flex:0 0 50%;-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.bootstrap-min__col-xl-7___2ir6I{-webkit-box-flex:0;-webkit-flex:0 0 58.333333%;-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.bootstrap-min__col-xl-8___2Eiap{-webkit-box-flex:0;-webkit-flex:0 0 66.666667%;-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.bootstrap-min__col-xl-9___2WH8q{-webkit-box-flex:0;-webkit-flex:0 0 75%;-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.bootstrap-min__col-xl-10___3BxjK{-webkit-box-flex:0;-webkit-flex:0 0 83.333333%;-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.bootstrap-min__col-xl-11___2tq6H{-webkit-box-flex:0;-webkit-flex:0 0 91.666667%;-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.bootstrap-min__col-xl-12___2SCrq{-webkit-box-flex:0;-webkit-flex:0 0 100%;-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.bootstrap-min__pull-xl-0___2gZ4A{right:auto}.bootstrap-min__pull-xl-1___2FF1T{right:8.333333%}.bootstrap-min__pull-xl-2___3oxFz{right:16.666667%}.bootstrap-min__pull-xl-3___2PNw4{right:25%}.bootstrap-min__pull-xl-4___ajhDd{right:33.333333%}.bootstrap-min__pull-xl-5___R8svs{right:41.666667%}.bootstrap-min__pull-xl-6___h0XDs{right:50%}.bootstrap-min__pull-xl-7___17e_W{right:58.333333%}.bootstrap-min__pull-xl-8___1Zv8W{right:66.666667%}.bootstrap-min__pull-xl-9___3nqwS{right:75%}.bootstrap-min__pull-xl-10___32bJa{right:83.333333%}.bootstrap-min__pull-xl-11___35Tc_{right:91.666667%}.bootstrap-min__pull-xl-12___3kcIz{right:100%}.bootstrap-min__push-xl-0___W6Bex{left:auto}.bootstrap-min__push-xl-1___3cY_S{left:8.333333%}.bootstrap-min__push-xl-2___1bXNh{left:16.666667%}.bootstrap-min__push-xl-3___3zEik{left:25%}.bootstrap-min__push-xl-4____8JGV{left:33.333333%}.bootstrap-min__push-xl-5___d9kqQ{left:41.666667%}.bootstrap-min__push-xl-6___15GSj{left:50%}.bootstrap-min__push-xl-7___1yc2E{left:58.333333%}.bootstrap-min__push-xl-8___3kWbf{left:66.666667%}.bootstrap-min__push-xl-9___1IoJv{left:75%}.bootstrap-min__push-xl-10___W63zz{left:83.333333%}.bootstrap-min__push-xl-11___HVPpc{left:91.666667%}.bootstrap-min__push-xl-12___3fo-_{left:100%}.bootstrap-min__offset-xl-0___3LCRO{margin-left:0}.bootstrap-min__offset-xl-1___3br_x{margin-left:8.333333%}.bootstrap-min__offset-xl-2___2H9si{margin-left:16.666667%}.bootstrap-min__offset-xl-3___3Fl4_{margin-left:25%}.bootstrap-min__offset-xl-4___2alft{margin-left:33.333333%}.bootstrap-min__offset-xl-5___3gvCw{margin-left:41.666667%}.bootstrap-min__offset-xl-6___2Hif8{margin-left:50%}.bootstrap-min__offset-xl-7___33ZEi{margin-left:58.333333%}.bootstrap-min__offset-xl-8___2YB_6{margin-left:66.666667%}.bootstrap-min__offset-xl-9___MQwnm{margin-left:75%}.bootstrap-min__offset-xl-10___1pUkZ{margin-left:83.333333%}.bootstrap-min__offset-xl-11___SPwjn{margin-left:91.666667%}}.bootstrap-min__table___G9cfM{width:100%;max-width:100%;margin-bottom:1rem}.bootstrap-min__table___G9cfM td,.bootstrap-min__table___G9cfM th{padding:.75rem;vertical-align:top;border-top:1px solid #eceeef}.bootstrap-min__table___G9cfM thead th{vertical-align:bottom;border-bottom:2px solid #eceeef}.bootstrap-min__table___G9cfM tbody+tbody{border-top:2px solid #eceeef}.bootstrap-min__table___G9cfM .bootstrap-min__table___G9cfM{background-color:#fff}.bootstrap-min__table-sm___WwsWN td,.bootstrap-min__table-sm___WwsWN th{padding:.3rem}.bootstrap-min__table-bordered___2wXcg{border:1px solid #eceeef}.bootstrap-min__table-bordered___2wXcg td,.bootstrap-min__table-bordered___2wXcg th{border:1px solid #eceeef}.bootstrap-min__table-bordered___2wXcg thead td,.bootstrap-min__table-bordered___2wXcg thead th{border-bottom-width:2px}.bootstrap-min__table-striped___de-Ip tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,.05)}.bootstrap-min__table-hover___mCt_e tbody tr:hover{background-color:rgba(0,0,0,.075)}.bootstrap-min__table-active___2iV8A,.bootstrap-min__table-active___2iV8A>td,.bootstrap-min__table-active___2iV8A>th{background-color:rgba(0,0,0,.075)}.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-active___2iV8A:hover{background-color:rgba(0,0,0,.075)}.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-active___2iV8A:hover>td,.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-active___2iV8A:hover>th{background-color:rgba(0,0,0,.075)}.bootstrap-min__table-success___3Khwv,.bootstrap-min__table-success___3Khwv>td,.bootstrap-min__table-success___3Khwv>th{background-color:#dff0d8}.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-success___3Khwv:hover{background-color:#d0e9c6}.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-success___3Khwv:hover>td,.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-success___3Khwv:hover>th{background-color:#d0e9c6}.bootstrap-min__table-info___IvSag,.bootstrap-min__table-info___IvSag>td,.bootstrap-min__table-info___IvSag>th{background-color:#d9edf7}.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-info___IvSag:hover{background-color:#c4e3f3}.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-info___IvSag:hover>td,.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-info___IvSag:hover>th{background-color:#c4e3f3}.bootstrap-min__table-warning___DVlhH,.bootstrap-min__table-warning___DVlhH>td,.bootstrap-min__table-warning___DVlhH>th{background-color:#fcf8e3}.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-warning___DVlhH:hover{background-color:#faf2cc}.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-warning___DVlhH:hover>td,.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-warning___DVlhH:hover>th{background-color:#faf2cc}.bootstrap-min__table-danger___rFxmZ,.bootstrap-min__table-danger___rFxmZ>td,.bootstrap-min__table-danger___rFxmZ>th{background-color:#f2dede}.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-danger___rFxmZ:hover{background-color:#ebcccc}.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-danger___rFxmZ:hover>td,.bootstrap-min__table-hover___mCt_e .bootstrap-min__table-danger___rFxmZ:hover>th{background-color:#ebcccc}.bootstrap-min__thead-inverse___Zxqgq th{color:#fff;background-color:#292b2c}.bootstrap-min__thead-default___3eyPu th{color:#464a4c;background-color:#eceeef}.bootstrap-min__table-inverse___tM8vf{color:#fff;background-color:#292b2c}.bootstrap-min__table-inverse___tM8vf td,.bootstrap-min__table-inverse___tM8vf th,.bootstrap-min__table-inverse___tM8vf thead th{border-color:#fff}.bootstrap-min__table-inverse___tM8vf.bootstrap-min__table-bordered___2wXcg{border:0}.bootstrap-min__table-responsive___25Kee{display:block;width:100%;overflow-x:auto;-ms-overflow-style:-ms-autohiding-scrollbar}.bootstrap-min__table-responsive___25Kee.bootstrap-min__table-bordered___2wXcg{border:0}.bootstrap-min__form-control___23iuB{display:block;width:100%;padding:.5rem .75rem;font-size:1rem;line-height:1.25;color:#464a4c;background-color:#fff;background-image:none;-webkit-background-clip:padding-box;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem;-webkit-transition:border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;transition:border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;-o-transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s;transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s;transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s,-webkit-box-shadow ease-in-out .15s}.bootstrap-min__form-control___23iuB::-ms-expand{background-color:transparent;border:0}.bootstrap-min__form-control___23iuB:focus{color:#464a4c;background-color:#fff;border-color:#5cb3fd;outline:0}.bootstrap-min__form-control___23iuB::-webkit-input-placeholder{color:#636c72;opacity:1}.bootstrap-min__form-control___23iuB::-moz-placeholder{color:#636c72;opacity:1}.bootstrap-min__form-control___23iuB:-ms-input-placeholder{color:#636c72;opacity:1}.bootstrap-min__form-control___23iuB::placeholder{color:#636c72;opacity:1}.bootstrap-min__form-control___23iuB:disabled,.bootstrap-min__form-control___23iuB[readonly]{background-color:#eceeef;opacity:1}.bootstrap-min__form-control___23iuB:disabled{cursor:not-allowed}select.bootstrap-min__form-control___23iuB:not([size]):not([multiple]){height:calc(2.25rem + 2px)}select.bootstrap-min__form-control___23iuB:focus::-ms-value{color:#464a4c;background-color:#fff}.bootstrap-min__form-control-file___2dBjh,.bootstrap-min__form-control-range___3AO8Y{display:block}.bootstrap-min__col-form-label___3N6so{padding-top:calc(.5rem - 1px * 2);padding-bottom:calc(.5rem - 1px * 2);margin-bottom:0}.bootstrap-min__col-form-label-lg___36JQt{padding-top:calc(.75rem - 1px * 2);padding-bottom:calc(.75rem - 1px * 2);font-size:1.25rem}.bootstrap-min__col-form-label-sm___2slLD{padding-top:calc(.25rem - 1px * 2);padding-bottom:calc(.25rem - 1px * 2);font-size:.875rem}.bootstrap-min__col-form-legend___1fiRj{padding-top:.5rem;padding-bottom:.5rem;margin-bottom:0;font-size:1rem}.bootstrap-min__form-control-static___7JaJq{padding-top:.5rem;padding-bottom:.5rem;margin-bottom:0;line-height:1.25;border:solid transparent;border-width:1px 0}.bootstrap-min__form-control-static___7JaJq.bootstrap-min__form-control-lg___3Q4X3,.bootstrap-min__form-control-static___7JaJq.bootstrap-min__form-control-sm___11qeE,.bootstrap-min__input-group-lg___3N-4R>.bootstrap-min__form-control-static___7JaJq.bootstrap-min__form-control___23iuB,.bootstrap-min__input-group-lg___3N-4R>.bootstrap-min__form-control-static___7JaJq.bootstrap-min__input-group-addon___1fdO2,.bootstrap-min__input-group-lg___3N-4R>.bootstrap-min__input-group-btn___3__05>.bootstrap-min__form-control-static___7JaJq.bootstrap-min__btn___3UZI1,.bootstrap-min__input-group-sm___RnEsw>.bootstrap-min__form-control-static___7JaJq.bootstrap-min__form-control___23iuB,.bootstrap-min__input-group-sm___RnEsw>.bootstrap-min__form-control-static___7JaJq.bootstrap-min__input-group-addon___1fdO2,.bootstrap-min__input-group-sm___RnEsw>.bootstrap-min__input-group-btn___3__05>.bootstrap-min__form-control-static___7JaJq.bootstrap-min__btn___3UZI1{padding-right:0;padding-left:0}.bootstrap-min__form-control-sm___11qeE,.bootstrap-min__input-group-sm___RnEsw>.bootstrap-min__form-control___23iuB,.bootstrap-min__input-group-sm___RnEsw>.bootstrap-min__input-group-addon___1fdO2,.bootstrap-min__input-group-sm___RnEsw>.bootstrap-min__input-group-btn___3__05>.bootstrap-min__btn___3UZI1{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.bootstrap-min__input-group-sm___RnEsw>.bootstrap-min__input-group-btn___3__05>select.bootstrap-min__btn___3UZI1:not([size]):not([multiple]),.bootstrap-min__input-group-sm___RnEsw>select.bootstrap-min__form-control___23iuB:not([size]):not([multiple]),.bootstrap-min__input-group-sm___RnEsw>select.bootstrap-min__input-group-addon___1fdO2:not([size]):not([multiple]),select.bootstrap-min__form-control-sm___11qeE:not([size]):not([multiple]){height:1.8125rem}.bootstrap-min__form-control-lg___3Q4X3,.bootstrap-min__input-group-lg___3N-4R>.bootstrap-min__form-control___23iuB,.bootstrap-min__input-group-lg___3N-4R>.bootstrap-min__input-group-addon___1fdO2,.bootstrap-min__input-group-lg___3N-4R>.bootstrap-min__input-group-btn___3__05>.bootstrap-min__btn___3UZI1{padding:.75rem 1.5rem;font-size:1.25rem;border-radius:.3rem}.bootstrap-min__input-group-lg___3N-4R>.bootstrap-min__input-group-btn___3__05>select.bootstrap-min__btn___3UZI1:not([size]):not([multiple]),.bootstrap-min__input-group-lg___3N-4R>select.bootstrap-min__form-control___23iuB:not([size]):not([multiple]),.bootstrap-min__input-group-lg___3N-4R>select.bootstrap-min__input-group-addon___1fdO2:not([size]):not([multiple]),select.bootstrap-min__form-control-lg___3Q4X3:not([size]):not([multiple]){height:3.166667rem}.bootstrap-min__form-group___30_Te{margin-bottom:1rem}.bootstrap-min__form-text___LJS7w{display:block;margin-top:.25rem}.bootstrap-min__form-check___t3j3I{position:relative;display:block;margin-bottom:.5rem}.bootstrap-min__form-check___t3j3I.bootstrap-min__disabled___68pqS .bootstrap-min__form-check-label___Z6SJ2{color:#636c72;cursor:not-allowed}.bootstrap-min__form-check-label___Z6SJ2{padding-left:1.25rem;margin-bottom:0;cursor:pointer}.bootstrap-min__form-check-input___37ATF{position:absolute;margin-top:.25rem;margin-left:-1.25rem}.bootstrap-min__form-check-input___37ATF:only-child{position:static}.bootstrap-min__form-check-inline___2FJZw{display:inline-block}.bootstrap-min__form-check-inline___2FJZw .bootstrap-min__form-check-label___Z6SJ2{vertical-align:middle}.bootstrap-min__form-check-inline___2FJZw+.bootstrap-min__form-check-inline___2FJZw{margin-left:.75rem}.bootstrap-min__form-control-feedback___1ehPe{margin-top:.25rem}.bootstrap-min__form-control-danger___SHtNR,.bootstrap-min__form-control-success___3Vzud,.bootstrap-min__form-control-warning___1pLzN{padding-right:2.25rem;background-repeat:no-repeat;background-position:center right .5625rem;-webkit-background-size:1.125rem 1.125rem;background-size:1.125rem 1.125rem}.bootstrap-min__has-success___3JxOl .bootstrap-min__col-form-label___3N6so,.bootstrap-min__has-success___3JxOl .bootstrap-min__custom-control___1uZee,.bootstrap-min__has-success___3JxOl .bootstrap-min__form-check-label___Z6SJ2,.bootstrap-min__has-success___3JxOl .bootstrap-min__form-control-feedback___1ehPe,.bootstrap-min__has-success___3JxOl .bootstrap-min__form-control-label___25GfJ{color:#5cb85c}.bootstrap-min__has-success___3JxOl .bootstrap-min__form-control___23iuB{border-color:#5cb85c}.bootstrap-min__has-success___3JxOl .bootstrap-min__input-group-addon___1fdO2{color:#5cb85c;border-color:#5cb85c;background-color:#eaf6ea}.bootstrap-min__has-success___3JxOl .bootstrap-min__form-control-success___3Vzud{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%235cb85c' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3E%3C/svg%3E\")}.bootstrap-min__has-warning___2KTmn .bootstrap-min__col-form-label___3N6so,.bootstrap-min__has-warning___2KTmn .bootstrap-min__custom-control___1uZee,.bootstrap-min__has-warning___2KTmn .bootstrap-min__form-check-label___Z6SJ2,.bootstrap-min__has-warning___2KTmn .bootstrap-min__form-control-feedback___1ehPe,.bootstrap-min__has-warning___2KTmn .bootstrap-min__form-control-label___25GfJ{color:#f0ad4e}.bootstrap-min__has-warning___2KTmn .bootstrap-min__form-control___23iuB{border-color:#f0ad4e}.bootstrap-min__has-warning___2KTmn .bootstrap-min__input-group-addon___1fdO2{color:#f0ad4e;border-color:#f0ad4e;background-color:#fff}.bootstrap-min__has-warning___2KTmn .bootstrap-min__form-control-warning___1pLzN{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23f0ad4e' d='M4.4 5.324h-.8v-2.46h.8zm0 1.42h-.8V5.89h.8zM3.76.63L.04 7.075c-.115.2.016.425.26.426h7.397c.242 0 .372-.226.258-.426C6.726 4.924 5.47 2.79 4.253.63c-.113-.174-.39-.174-.494 0z'/%3E%3C/svg%3E\")}.bootstrap-min__has-danger___pmjv3 .bootstrap-min__col-form-label___3N6so,.bootstrap-min__has-danger___pmjv3 .bootstrap-min__custom-control___1uZee,.bootstrap-min__has-danger___pmjv3 .bootstrap-min__form-check-label___Z6SJ2,.bootstrap-min__has-danger___pmjv3 .bootstrap-min__form-control-feedback___1ehPe,.bootstrap-min__has-danger___pmjv3 .bootstrap-min__form-control-label___25GfJ{color:#d9534f}.bootstrap-min__has-danger___pmjv3 .bootstrap-min__form-control___23iuB{border-color:#d9534f}.bootstrap-min__has-danger___pmjv3 .bootstrap-min__input-group-addon___1fdO2{color:#d9534f;border-color:#d9534f;background-color:#fdf7f7}.bootstrap-min__has-danger___pmjv3 .bootstrap-min__form-control-danger___SHtNR{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23d9534f' viewBox='-2 -2 7 7'%3E%3Cpath stroke='%23d9534f' d='M0 0l3 3m0-3L0 3'/%3E%3Ccircle r='.5'/%3E%3Ccircle cx='3' r='.5'/%3E%3Ccircle cy='3' r='.5'/%3E%3Ccircle cx='3' cy='3' r='.5'/%3E%3C/svg%3E\")}.bootstrap-min__form-inline___1Luyi{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.bootstrap-min__form-inline___1Luyi .bootstrap-min__form-check___t3j3I{width:100%}@media (min-width:576px){.bootstrap-min__form-inline___1Luyi label{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0}.bootstrap-min__form-inline___1Luyi .bootstrap-min__form-group___30_Te{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:0;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin-bottom:0}.bootstrap-min__form-inline___1Luyi .bootstrap-min__form-control___23iuB{display:inline-block;width:auto;vertical-align:middle}.bootstrap-min__form-inline___1Luyi .bootstrap-min__form-control-static___7JaJq{display:inline-block}.bootstrap-min__form-inline___1Luyi .bootstrap-min__input-group___JtC56{width:auto}.bootstrap-min__form-inline___1Luyi .bootstrap-min__form-control-label___25GfJ{margin-bottom:0;vertical-align:middle}.bootstrap-min__form-inline___1Luyi .bootstrap-min__form-check___t3j3I{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:auto;margin-top:0;margin-bottom:0}.bootstrap-min__form-inline___1Luyi .bootstrap-min__form-check-label___Z6SJ2{padding-left:0}.bootstrap-min__form-inline___1Luyi .bootstrap-min__form-check-input___37ATF{position:relative;margin-top:0;margin-right:.25rem;margin-left:0}.bootstrap-min__form-inline___1Luyi .bootstrap-min__custom-control___1uZee{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding-left:0}.bootstrap-min__form-inline___1Luyi .bootstrap-min__custom-control-indicator___tjoky{position:static;display:inline-block;margin-right:.25rem;vertical-align:text-bottom}.bootstrap-min__form-inline___1Luyi .bootstrap-min__has-feedback___yQUK7 .bootstrap-min__form-control-feedback___1ehPe{top:0}}.bootstrap-min__btn___3UZI1{display:inline-block;font-weight:400;line-height:1.25;text-align:center;white-space:nowrap;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:1px solid transparent;padding:.5rem 1rem;font-size:1rem;border-radius:.25rem;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.bootstrap-min__btn___3UZI1:focus,.bootstrap-min__btn___3UZI1:hover{text-decoration:none}.bootstrap-min__btn___3UZI1.bootstrap-min__focus___1aGf9,.bootstrap-min__btn___3UZI1:focus{outline:0;-webkit-box-shadow:0 0 0 2px rgba(2,117,216,.25);box-shadow:0 0 0 2px rgba(2,117,216,.25)}.bootstrap-min__btn___3UZI1.bootstrap-min__disabled___68pqS,.bootstrap-min__btn___3UZI1:disabled{cursor:not-allowed;opacity:.65}.bootstrap-min__btn___3UZI1.bootstrap-min__active___1ygEY,.bootstrap-min__btn___3UZI1:active{background-image:none}a.bootstrap-min__btn___3UZI1.bootstrap-min__disabled___68pqS,fieldset[disabled] a.bootstrap-min__btn___3UZI1{pointer-events:none}.bootstrap-min__btn-primary___3iaqT{color:#fff;background-color:#0275d8;border-color:#0275d8}.bootstrap-min__btn-primary___3iaqT:hover{color:#fff;background-color:#025aa5;border-color:#01549b}.bootstrap-min__btn-primary___3iaqT.bootstrap-min__focus___1aGf9,.bootstrap-min__btn-primary___3iaqT:focus{-webkit-box-shadow:0 0 0 2px rgba(2,117,216,.5);box-shadow:0 0 0 2px rgba(2,117,216,.5)}.bootstrap-min__btn-primary___3iaqT.bootstrap-min__disabled___68pqS,.bootstrap-min__btn-primary___3iaqT:disabled{background-color:#0275d8;border-color:#0275d8}.bootstrap-min__btn-primary___3iaqT.bootstrap-min__active___1ygEY,.bootstrap-min__btn-primary___3iaqT:active,.bootstrap-min__show___203Kp>.bootstrap-min__btn-primary___3iaqT.bootstrap-min__dropdown-toggle___3sTmA{color:#fff;background-color:#025aa5;background-image:none;border-color:#01549b}.bootstrap-min__btn-secondary___MsQjy{color:#292b2c;background-color:#fff;border-color:#ccc}.bootstrap-min__btn-secondary___MsQjy:hover{color:#292b2c;background-color:#e6e6e6;border-color:#adadad}.bootstrap-min__btn-secondary___MsQjy.bootstrap-min__focus___1aGf9,.bootstrap-min__btn-secondary___MsQjy:focus{-webkit-box-shadow:0 0 0 2px rgba(204,204,204,.5);box-shadow:0 0 0 2px rgba(204,204,204,.5)}.bootstrap-min__btn-secondary___MsQjy.bootstrap-min__disabled___68pqS,.bootstrap-min__btn-secondary___MsQjy:disabled{background-color:#fff;border-color:#ccc}.bootstrap-min__btn-secondary___MsQjy.bootstrap-min__active___1ygEY,.bootstrap-min__btn-secondary___MsQjy:active,.bootstrap-min__show___203Kp>.bootstrap-min__btn-secondary___MsQjy.bootstrap-min__dropdown-toggle___3sTmA{color:#292b2c;background-color:#e6e6e6;background-image:none;border-color:#adadad}.bootstrap-min__btn-info___vVzp9{color:#fff;background-color:#5bc0de;border-color:#5bc0de}.bootstrap-min__btn-info___vVzp9:hover{color:#fff;background-color:#31b0d5;border-color:#2aabd2}.bootstrap-min__btn-info___vVzp9.bootstrap-min__focus___1aGf9,.bootstrap-min__btn-info___vVzp9:focus{-webkit-box-shadow:0 0 0 2px rgba(91,192,222,.5);box-shadow:0 0 0 2px rgba(91,192,222,.5)}.bootstrap-min__btn-info___vVzp9.bootstrap-min__disabled___68pqS,.bootstrap-min__btn-info___vVzp9:disabled{background-color:#5bc0de;border-color:#5bc0de}.bootstrap-min__btn-info___vVzp9.bootstrap-min__active___1ygEY,.bootstrap-min__btn-info___vVzp9:active,.bootstrap-min__show___203Kp>.bootstrap-min__btn-info___vVzp9.bootstrap-min__dropdown-toggle___3sTmA{color:#fff;background-color:#31b0d5;background-image:none;border-color:#2aabd2}.bootstrap-min__btn-success___2Dpnu{color:#fff;background-color:#5cb85c;border-color:#5cb85c}.bootstrap-min__btn-success___2Dpnu:hover{color:#fff;background-color:#449d44;border-color:#419641}.bootstrap-min__btn-success___2Dpnu.bootstrap-min__focus___1aGf9,.bootstrap-min__btn-success___2Dpnu:focus{-webkit-box-shadow:0 0 0 2px rgba(92,184,92,.5);box-shadow:0 0 0 2px rgba(92,184,92,.5)}.bootstrap-min__btn-success___2Dpnu.bootstrap-min__disabled___68pqS,.bootstrap-min__btn-success___2Dpnu:disabled{background-color:#5cb85c;border-color:#5cb85c}.bootstrap-min__btn-success___2Dpnu.bootstrap-min__active___1ygEY,.bootstrap-min__btn-success___2Dpnu:active,.bootstrap-min__show___203Kp>.bootstrap-min__btn-success___2Dpnu.bootstrap-min__dropdown-toggle___3sTmA{color:#fff;background-color:#449d44;background-image:none;border-color:#419641}.bootstrap-min__btn-warning___1ip8D{color:#fff;background-color:#f0ad4e;border-color:#f0ad4e}.bootstrap-min__btn-warning___1ip8D:hover{color:#fff;background-color:#ec971f;border-color:#eb9316}.bootstrap-min__btn-warning___1ip8D.bootstrap-min__focus___1aGf9,.bootstrap-min__btn-warning___1ip8D:focus{-webkit-box-shadow:0 0 0 2px rgba(240,173,78,.5);box-shadow:0 0 0 2px rgba(240,173,78,.5)}.bootstrap-min__btn-warning___1ip8D.bootstrap-min__disabled___68pqS,.bootstrap-min__btn-warning___1ip8D:disabled{background-color:#f0ad4e;border-color:#f0ad4e}.bootstrap-min__btn-warning___1ip8D.bootstrap-min__active___1ygEY,.bootstrap-min__btn-warning___1ip8D:active,.bootstrap-min__show___203Kp>.bootstrap-min__btn-warning___1ip8D.bootstrap-min__dropdown-toggle___3sTmA{color:#fff;background-color:#ec971f;background-image:none;border-color:#eb9316}.bootstrap-min__btn-danger___XCyQl{color:#fff;background-color:#d9534f;border-color:#d9534f}.bootstrap-min__btn-danger___XCyQl:hover{color:#fff;background-color:#c9302c;border-color:#c12e2a}.bootstrap-min__btn-danger___XCyQl.bootstrap-min__focus___1aGf9,.bootstrap-min__btn-danger___XCyQl:focus{-webkit-box-shadow:0 0 0 2px rgba(217,83,79,.5);box-shadow:0 0 0 2px rgba(217,83,79,.5)}.bootstrap-min__btn-danger___XCyQl.bootstrap-min__disabled___68pqS,.bootstrap-min__btn-danger___XCyQl:disabled{background-color:#d9534f;border-color:#d9534f}.bootstrap-min__btn-danger___XCyQl.bootstrap-min__active___1ygEY,.bootstrap-min__btn-danger___XCyQl:active,.bootstrap-min__show___203Kp>.bootstrap-min__btn-danger___XCyQl.bootstrap-min__dropdown-toggle___3sTmA{color:#fff;background-color:#c9302c;background-image:none;border-color:#c12e2a}.bootstrap-min__btn-outline-primary___2EpVj{color:#0275d8;background-image:none;background-color:transparent;border-color:#0275d8}.bootstrap-min__btn-outline-primary___2EpVj:hover{color:#fff;background-color:#0275d8;border-color:#0275d8}.bootstrap-min__btn-outline-primary___2EpVj.bootstrap-min__focus___1aGf9,.bootstrap-min__btn-outline-primary___2EpVj:focus{-webkit-box-shadow:0 0 0 2px rgba(2,117,216,.5);box-shadow:0 0 0 2px rgba(2,117,216,.5)}.bootstrap-min__btn-outline-primary___2EpVj.bootstrap-min__disabled___68pqS,.bootstrap-min__btn-outline-primary___2EpVj:disabled{color:#0275d8;background-color:transparent}.bootstrap-min__btn-outline-primary___2EpVj.bootstrap-min__active___1ygEY,.bootstrap-min__btn-outline-primary___2EpVj:active,.bootstrap-min__show___203Kp>.bootstrap-min__btn-outline-primary___2EpVj.bootstrap-min__dropdown-toggle___3sTmA{color:#fff;background-color:#0275d8;border-color:#0275d8}.bootstrap-min__btn-outline-secondary___2sSlj{color:#ccc;background-image:none;background-color:transparent;border-color:#ccc}.bootstrap-min__btn-outline-secondary___2sSlj:hover{color:#fff;background-color:#ccc;border-color:#ccc}.bootstrap-min__btn-outline-secondary___2sSlj.bootstrap-min__focus___1aGf9,.bootstrap-min__btn-outline-secondary___2sSlj:focus{-webkit-box-shadow:0 0 0 2px rgba(204,204,204,.5);box-shadow:0 0 0 2px rgba(204,204,204,.5)}.bootstrap-min__btn-outline-secondary___2sSlj.bootstrap-min__disabled___68pqS,.bootstrap-min__btn-outline-secondary___2sSlj:disabled{color:#ccc;background-color:transparent}.bootstrap-min__btn-outline-secondary___2sSlj.bootstrap-min__active___1ygEY,.bootstrap-min__btn-outline-secondary___2sSlj:active,.bootstrap-min__show___203Kp>.bootstrap-min__btn-outline-secondary___2sSlj.bootstrap-min__dropdown-toggle___3sTmA{color:#fff;background-color:#ccc;border-color:#ccc}.bootstrap-min__btn-outline-info___1MpaJ{color:#5bc0de;background-image:none;background-color:transparent;border-color:#5bc0de}.bootstrap-min__btn-outline-info___1MpaJ:hover{color:#fff;background-color:#5bc0de;border-color:#5bc0de}.bootstrap-min__btn-outline-info___1MpaJ.bootstrap-min__focus___1aGf9,.bootstrap-min__btn-outline-info___1MpaJ:focus{-webkit-box-shadow:0 0 0 2px rgba(91,192,222,.5);box-shadow:0 0 0 2px rgba(91,192,222,.5)}.bootstrap-min__btn-outline-info___1MpaJ.bootstrap-min__disabled___68pqS,.bootstrap-min__btn-outline-info___1MpaJ:disabled{color:#5bc0de;background-color:transparent}.bootstrap-min__btn-outline-info___1MpaJ.bootstrap-min__active___1ygEY,.bootstrap-min__btn-outline-info___1MpaJ:active,.bootstrap-min__show___203Kp>.bootstrap-min__btn-outline-info___1MpaJ.bootstrap-min__dropdown-toggle___3sTmA{color:#fff;background-color:#5bc0de;border-color:#5bc0de}.bootstrap-min__btn-outline-success___3SmJW{color:#5cb85c;background-image:none;background-color:transparent;border-color:#5cb85c}.bootstrap-min__btn-outline-success___3SmJW:hover{color:#fff;background-color:#5cb85c;border-color:#5cb85c}.bootstrap-min__btn-outline-success___3SmJW.bootstrap-min__focus___1aGf9,.bootstrap-min__btn-outline-success___3SmJW:focus{-webkit-box-shadow:0 0 0 2px rgba(92,184,92,.5);box-shadow:0 0 0 2px rgba(92,184,92,.5)}.bootstrap-min__btn-outline-success___3SmJW.bootstrap-min__disabled___68pqS,.bootstrap-min__btn-outline-success___3SmJW:disabled{color:#5cb85c;background-color:transparent}.bootstrap-min__btn-outline-success___3SmJW.bootstrap-min__active___1ygEY,.bootstrap-min__btn-outline-success___3SmJW:active,.bootstrap-min__show___203Kp>.bootstrap-min__btn-outline-success___3SmJW.bootstrap-min__dropdown-toggle___3sTmA{color:#fff;background-color:#5cb85c;border-color:#5cb85c}.bootstrap-min__btn-outline-warning___y2OeH{color:#f0ad4e;background-image:none;background-color:transparent;border-color:#f0ad4e}.bootstrap-min__btn-outline-warning___y2OeH:hover{color:#fff;background-color:#f0ad4e;border-color:#f0ad4e}.bootstrap-min__btn-outline-warning___y2OeH.bootstrap-min__focus___1aGf9,.bootstrap-min__btn-outline-warning___y2OeH:focus{-webkit-box-shadow:0 0 0 2px rgba(240,173,78,.5);box-shadow:0 0 0 2px rgba(240,173,78,.5)}.bootstrap-min__btn-outline-warning___y2OeH.bootstrap-min__disabled___68pqS,.bootstrap-min__btn-outline-warning___y2OeH:disabled{color:#f0ad4e;background-color:transparent}.bootstrap-min__btn-outline-warning___y2OeH.bootstrap-min__active___1ygEY,.bootstrap-min__btn-outline-warning___y2OeH:active,.bootstrap-min__show___203Kp>.bootstrap-min__btn-outline-warning___y2OeH.bootstrap-min__dropdown-toggle___3sTmA{color:#fff;background-color:#f0ad4e;border-color:#f0ad4e}.bootstrap-min__btn-outline-danger___1AZB3{color:#d9534f;background-image:none;background-color:transparent;border-color:#d9534f}.bootstrap-min__btn-outline-danger___1AZB3:hover{color:#fff;background-color:#d9534f;border-color:#d9534f}.bootstrap-min__btn-outline-danger___1AZB3.bootstrap-min__focus___1aGf9,.bootstrap-min__btn-outline-danger___1AZB3:focus{-webkit-box-shadow:0 0 0 2px rgba(217,83,79,.5);box-shadow:0 0 0 2px rgba(217,83,79,.5)}.bootstrap-min__btn-outline-danger___1AZB3.bootstrap-min__disabled___68pqS,.bootstrap-min__btn-outline-danger___1AZB3:disabled{color:#d9534f;background-color:transparent}.bootstrap-min__btn-outline-danger___1AZB3.bootstrap-min__active___1ygEY,.bootstrap-min__btn-outline-danger___1AZB3:active,.bootstrap-min__show___203Kp>.bootstrap-min__btn-outline-danger___1AZB3.bootstrap-min__dropdown-toggle___3sTmA{color:#fff;background-color:#d9534f;border-color:#d9534f}.bootstrap-min__btn-link___2-ItE{font-weight:400;color:#0275d8;border-radius:0}.bootstrap-min__btn-link___2-ItE,.bootstrap-min__btn-link___2-ItE.bootstrap-min__active___1ygEY,.bootstrap-min__btn-link___2-ItE:active,.bootstrap-min__btn-link___2-ItE:disabled{background-color:transparent}.bootstrap-min__btn-link___2-ItE,.bootstrap-min__btn-link___2-ItE:active,.bootstrap-min__btn-link___2-ItE:focus{border-color:transparent}.bootstrap-min__btn-link___2-ItE:hover{border-color:transparent}.bootstrap-min__btn-link___2-ItE:focus,.bootstrap-min__btn-link___2-ItE:hover{color:#014c8c;text-decoration:underline;background-color:transparent}.bootstrap-min__btn-link___2-ItE:disabled{color:#636c72}.bootstrap-min__btn-link___2-ItE:disabled:focus,.bootstrap-min__btn-link___2-ItE:disabled:hover{text-decoration:none}.bootstrap-min__btn-group-lg___1_CLg>.bootstrap-min__btn___3UZI1,.bootstrap-min__btn-lg___23rgC{padding:.75rem 1.5rem;font-size:1.25rem;border-radius:.3rem}.bootstrap-min__btn-group-sm___oFVqG>.bootstrap-min__btn___3UZI1,.bootstrap-min__btn-sm___25FCO{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.bootstrap-min__btn-block___2htsM{display:block;width:100%}.bootstrap-min__btn-block___2htsM+.bootstrap-min__btn-block___2htsM{margin-top:.5rem}input[type=button].bootstrap-min__btn-block___2htsM,input[type=reset].bootstrap-min__btn-block___2htsM,input[type=submit].bootstrap-min__btn-block___2htsM{width:100%}.bootstrap-min__fade___jy_Yw{opacity:0;-webkit-transition:opacity .15s linear;-o-transition:opacity .15s linear;transition:opacity .15s linear}.bootstrap-min__fade___jy_Yw.bootstrap-min__show___203Kp{opacity:1}.bootstrap-min__collapse___xLX5h{display:none}.bootstrap-min__collapse___xLX5h.bootstrap-min__show___203Kp{display:block}tr.bootstrap-min__collapse___xLX5h.bootstrap-min__show___203Kp{display:table-row}tbody.bootstrap-min__collapse___xLX5h.bootstrap-min__show___203Kp{display:table-row-group}.bootstrap-min__collapsing____IWBC{position:relative;height:0;overflow:hidden;-webkit-transition:height .35s ease;-o-transition:height .35s ease;transition:height .35s ease}.bootstrap-min__dropdown___2OgyY,.bootstrap-min__dropup___3lRV8{position:relative}.bootstrap-min__dropdown-toggle___3sTmA::after{display:inline-block;width:0;height:0;margin-left:.3em;vertical-align:middle;content:\"\";border-top:.3em solid;border-right:.3em solid transparent;border-left:.3em solid transparent}.bootstrap-min__dropdown-toggle___3sTmA:focus{outline:0}.bootstrap-min__dropup___3lRV8 .bootstrap-min__dropdown-toggle___3sTmA::after{border-top:0;border-bottom:.3em solid}.bootstrap-min__dropdown-menu___1htOP{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:.5rem 0;margin:.125rem 0 0;font-size:1rem;color:#292b2c;text-align:left;list-style:none;background-color:#fff;-webkit-background-clip:padding-box;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.bootstrap-min__dropdown-divider___3TRXK{height:1px;margin:.5rem 0;overflow:hidden;background-color:#eceeef}.bootstrap-min__dropdown-item___2Hv1b{display:block;width:100%;padding:3px 1.5rem;clear:both;font-weight:400;color:#292b2c;text-align:inherit;white-space:nowrap;background:0 0;border:0}.bootstrap-min__dropdown-item___2Hv1b:focus,.bootstrap-min__dropdown-item___2Hv1b:hover{color:#1d1e1f;text-decoration:none;background-color:#f7f7f9}.bootstrap-min__dropdown-item___2Hv1b.bootstrap-min__active___1ygEY,.bootstrap-min__dropdown-item___2Hv1b:active{color:#fff;text-decoration:none;background-color:#0275d8}.bootstrap-min__dropdown-item___2Hv1b.bootstrap-min__disabled___68pqS,.bootstrap-min__dropdown-item___2Hv1b:disabled{color:#636c72;cursor:not-allowed;background-color:transparent}.bootstrap-min__show___203Kp>.bootstrap-min__dropdown-menu___1htOP{display:block}.bootstrap-min__show___203Kp>a{outline:0}.bootstrap-min__dropdown-menu-right___zhcUP{right:0;left:auto}.bootstrap-min__dropdown-menu-left___-usyt{right:auto;left:0}.bootstrap-min__dropdown-header___2U76h{display:block;padding:.5rem 1.5rem;margin-bottom:0;font-size:.875rem;color:#636c72;white-space:nowrap}.bootstrap-min__dropdown-backdrop___1I8SK{position:fixed;top:0;right:0;bottom:0;left:0;z-index:990}.bootstrap-min__dropup___3lRV8 .bootstrap-min__dropdown-menu___1htOP{top:auto;bottom:100%;margin-bottom:.125rem}.bootstrap-min__btn-group___2GE--,.bootstrap-min__btn-group-vertical___2nh6x{position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn___3UZI1,.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn___3UZI1{position:relative;-webkit-box-flex:0;-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto}.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn___3UZI1:hover,.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn___3UZI1:hover{z-index:2}.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn___3UZI1.bootstrap-min__active___1ygEY,.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn___3UZI1:active,.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn___3UZI1:focus,.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn___3UZI1.bootstrap-min__active___1ygEY,.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn___3UZI1:active,.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn___3UZI1:focus{z-index:2}.bootstrap-min__btn-group___2GE-- .bootstrap-min__btn___3UZI1+.bootstrap-min__btn___3UZI1,.bootstrap-min__btn-group___2GE-- .bootstrap-min__btn___3UZI1+.bootstrap-min__btn-group___2GE--,.bootstrap-min__btn-group___2GE-- .bootstrap-min__btn-group___2GE--+.bootstrap-min__btn___3UZI1,.bootstrap-min__btn-group___2GE-- .bootstrap-min__btn-group___2GE--+.bootstrap-min__btn-group___2GE--,.bootstrap-min__btn-group-vertical___2nh6x .bootstrap-min__btn___3UZI1+.bootstrap-min__btn___3UZI1,.bootstrap-min__btn-group-vertical___2nh6x .bootstrap-min__btn___3UZI1+.bootstrap-min__btn-group___2GE--,.bootstrap-min__btn-group-vertical___2nh6x .bootstrap-min__btn-group___2GE--+.bootstrap-min__btn___3UZI1,.bootstrap-min__btn-group-vertical___2nh6x .bootstrap-min__btn-group___2GE--+.bootstrap-min__btn-group___2GE--{margin-left:-1px}.bootstrap-min__btn-toolbar___3GEdV{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}.bootstrap-min__btn-toolbar___3GEdV .bootstrap-min__input-group___JtC56{width:auto}.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn___3UZI1:not(:first-child):not(:last-child):not(.bootstrap-min__dropdown-toggle___3sTmA){border-radius:0}.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn___3UZI1:first-child{margin-left:0}.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn___3UZI1:first-child:not(:last-child):not(.bootstrap-min__dropdown-toggle___3sTmA){border-bottom-right-radius:0;border-top-right-radius:0}.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn___3UZI1:last-child:not(:first-child),.bootstrap-min__btn-group___2GE-->.bootstrap-min__dropdown-toggle___3sTmA:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0}.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn-group___2GE--{float:left}.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn-group___2GE--:not(:first-child):not(:last-child)>.bootstrap-min__btn___3UZI1{border-radius:0}.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn-group___2GE--:first-child:not(:last-child)>.bootstrap-min__btn___3UZI1:last-child,.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn-group___2GE--:first-child:not(:last-child)>.bootstrap-min__dropdown-toggle___3sTmA{border-bottom-right-radius:0;border-top-right-radius:0}.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn-group___2GE--:last-child:not(:first-child)>.bootstrap-min__btn___3UZI1:first-child{border-bottom-left-radius:0;border-top-left-radius:0}.bootstrap-min__btn-group___2GE-- .bootstrap-min__dropdown-toggle___3sTmA:active,.bootstrap-min__btn-group___2GE--.bootstrap-min__open___3syfA .bootstrap-min__dropdown-toggle___3sTmA{outline:0}.bootstrap-min__btn___3UZI1+.bootstrap-min__dropdown-toggle-split___pzkwz{padding-right:.75rem;padding-left:.75rem}.bootstrap-min__btn___3UZI1+.bootstrap-min__dropdown-toggle-split___pzkwz::after{margin-left:0}.bootstrap-min__btn-group-sm___oFVqG>.bootstrap-min__btn___3UZI1+.bootstrap-min__dropdown-toggle-split___pzkwz,.bootstrap-min__btn-sm___25FCO+.bootstrap-min__dropdown-toggle-split___pzkwz{padding-right:.375rem;padding-left:.375rem}.bootstrap-min__btn-group-lg___1_CLg>.bootstrap-min__btn___3UZI1+.bootstrap-min__dropdown-toggle-split___pzkwz,.bootstrap-min__btn-lg___23rgC+.bootstrap-min__dropdown-toggle-split___pzkwz{padding-right:1.125rem;padding-left:1.125rem}.bootstrap-min__btn-group-vertical___2nh6x{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}.bootstrap-min__btn-group-vertical___2nh6x .bootstrap-min__btn___3UZI1,.bootstrap-min__btn-group-vertical___2nh6x .bootstrap-min__btn-group___2GE--{width:100%}.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn___3UZI1+.bootstrap-min__btn___3UZI1,.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn___3UZI1+.bootstrap-min__btn-group___2GE--,.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn-group___2GE--+.bootstrap-min__btn___3UZI1,.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn-group___2GE--+.bootstrap-min__btn-group___2GE--{margin-top:-1px;margin-left:0}.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn___3UZI1:not(:first-child):not(:last-child){border-radius:0}.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn___3UZI1:first-child:not(:last-child){border-bottom-right-radius:0;border-bottom-left-radius:0}.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn___3UZI1:last-child:not(:first-child){border-top-right-radius:0;border-top-left-radius:0}.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn-group___2GE--:not(:first-child):not(:last-child)>.bootstrap-min__btn___3UZI1{border-radius:0}.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn-group___2GE--:first-child:not(:last-child)>.bootstrap-min__btn___3UZI1:last-child,.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn-group___2GE--:first-child:not(:last-child)>.bootstrap-min__dropdown-toggle___3sTmA{border-bottom-right-radius:0;border-bottom-left-radius:0}.bootstrap-min__btn-group-vertical___2nh6x>.bootstrap-min__btn-group___2GE--:last-child:not(:first-child)>.bootstrap-min__btn___3UZI1:first-child{border-top-right-radius:0;border-top-left-radius:0}[data-toggle=buttons]>.bootstrap-min__btn___3UZI1 input[type=checkbox],[data-toggle=buttons]>.bootstrap-min__btn___3UZI1 input[type=radio],[data-toggle=buttons]>.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn___3UZI1 input[type=checkbox],[data-toggle=buttons]>.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn___3UZI1 input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.bootstrap-min__input-group___JtC56{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%}.bootstrap-min__input-group___JtC56 .bootstrap-min__form-control___23iuB{position:relative;z-index:2;-webkit-box-flex:1;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;width:1%;margin-bottom:0}.bootstrap-min__input-group___JtC56 .bootstrap-min__form-control___23iuB:active,.bootstrap-min__input-group___JtC56 .bootstrap-min__form-control___23iuB:focus,.bootstrap-min__input-group___JtC56 .bootstrap-min__form-control___23iuB:hover{z-index:3}.bootstrap-min__input-group___JtC56 .bootstrap-min__form-control___23iuB,.bootstrap-min__input-group-addon___1fdO2,.bootstrap-min__input-group-btn___3__05{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}.bootstrap-min__input-group___JtC56 .bootstrap-min__form-control___23iuB:not(:first-child):not(:last-child),.bootstrap-min__input-group-addon___1fdO2:not(:first-child):not(:last-child),.bootstrap-min__input-group-btn___3__05:not(:first-child):not(:last-child){border-radius:0}.bootstrap-min__input-group-addon___1fdO2,.bootstrap-min__input-group-btn___3__05{white-space:nowrap;vertical-align:middle}.bootstrap-min__input-group-addon___1fdO2{padding:.5rem .75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.25;color:#464a4c;text-align:center;background-color:#eceeef;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.bootstrap-min__input-group-addon___1fdO2.bootstrap-min__form-control-sm___11qeE,.bootstrap-min__input-group-sm___RnEsw>.bootstrap-min__input-group-addon___1fdO2,.bootstrap-min__input-group-sm___RnEsw>.bootstrap-min__input-group-btn___3__05>.bootstrap-min__input-group-addon___1fdO2.bootstrap-min__btn___3UZI1{padding:.25rem .5rem;font-size:.875rem;border-radius:.2rem}.bootstrap-min__input-group-addon___1fdO2.bootstrap-min__form-control-lg___3Q4X3,.bootstrap-min__input-group-lg___3N-4R>.bootstrap-min__input-group-addon___1fdO2,.bootstrap-min__input-group-lg___3N-4R>.bootstrap-min__input-group-btn___3__05>.bootstrap-min__input-group-addon___1fdO2.bootstrap-min__btn___3UZI1{padding:.75rem 1.5rem;font-size:1.25rem;border-radius:.3rem}.bootstrap-min__input-group-addon___1fdO2 input[type=checkbox],.bootstrap-min__input-group-addon___1fdO2 input[type=radio]{margin-top:0}.bootstrap-min__input-group___JtC56 .bootstrap-min__form-control___23iuB:not(:last-child),.bootstrap-min__input-group-addon___1fdO2:not(:last-child),.bootstrap-min__input-group-btn___3__05:not(:first-child)>.bootstrap-min__btn-group___2GE--:not(:last-child)>.bootstrap-min__btn___3UZI1,.bootstrap-min__input-group-btn___3__05:not(:first-child)>.bootstrap-min__btn___3UZI1:not(:last-child):not(.bootstrap-min__dropdown-toggle___3sTmA),.bootstrap-min__input-group-btn___3__05:not(:last-child)>.bootstrap-min__btn___3UZI1,.bootstrap-min__input-group-btn___3__05:not(:last-child)>.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn___3UZI1,.bootstrap-min__input-group-btn___3__05:not(:last-child)>.bootstrap-min__dropdown-toggle___3sTmA{border-bottom-right-radius:0;border-top-right-radius:0}.bootstrap-min__input-group-addon___1fdO2:not(:last-child){border-right:0}.bootstrap-min__input-group___JtC56 .bootstrap-min__form-control___23iuB:not(:first-child),.bootstrap-min__input-group-addon___1fdO2:not(:first-child),.bootstrap-min__input-group-btn___3__05:not(:first-child)>.bootstrap-min__btn___3UZI1,.bootstrap-min__input-group-btn___3__05:not(:first-child)>.bootstrap-min__btn-group___2GE-->.bootstrap-min__btn___3UZI1,.bootstrap-min__input-group-btn___3__05:not(:first-child)>.bootstrap-min__dropdown-toggle___3sTmA,.bootstrap-min__input-group-btn___3__05:not(:last-child)>.bootstrap-min__btn-group___2GE--:not(:first-child)>.bootstrap-min__btn___3UZI1,.bootstrap-min__input-group-btn___3__05:not(:last-child)>.bootstrap-min__btn___3UZI1:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0}.bootstrap-min__form-control___23iuB+.bootstrap-min__input-group-addon___1fdO2:not(:first-child){border-left:0}.bootstrap-min__input-group-btn___3__05{position:relative;font-size:0;white-space:nowrap}.bootstrap-min__input-group-btn___3__05>.bootstrap-min__btn___3UZI1{position:relative;-webkit-box-flex:1;-webkit-flex:1 1 0%;-ms-flex:1 1 0%;flex:1 1 0%}.bootstrap-min__input-group-btn___3__05>.bootstrap-min__btn___3UZI1+.bootstrap-min__btn___3UZI1{margin-left:-1px}.bootstrap-min__input-group-btn___3__05>.bootstrap-min__btn___3UZI1:active,.bootstrap-min__input-group-btn___3__05>.bootstrap-min__btn___3UZI1:focus,.bootstrap-min__input-group-btn___3__05>.bootstrap-min__btn___3UZI1:hover{z-index:3}.bootstrap-min__input-group-btn___3__05:not(:last-child)>.bootstrap-min__btn___3UZI1,.bootstrap-min__input-group-btn___3__05:not(:last-child)>.bootstrap-min__btn-group___2GE--{margin-right:-1px}.bootstrap-min__input-group-btn___3__05:not(:first-child)>.bootstrap-min__btn___3UZI1,.bootstrap-min__input-group-btn___3__05:not(:first-child)>.bootstrap-min__btn-group___2GE--{z-index:2;margin-left:-1px}.bootstrap-min__input-group-btn___3__05:not(:first-child)>.bootstrap-min__btn-group___2GE--:active,.bootstrap-min__input-group-btn___3__05:not(:first-child)>.bootstrap-min__btn-group___2GE--:focus,.bootstrap-min__input-group-btn___3__05:not(:first-child)>.bootstrap-min__btn-group___2GE--:hover,.bootstrap-min__input-group-btn___3__05:not(:first-child)>.bootstrap-min__btn___3UZI1:active,.bootstrap-min__input-group-btn___3__05:not(:first-child)>.bootstrap-min__btn___3UZI1:focus,.bootstrap-min__input-group-btn___3__05:not(:first-child)>.bootstrap-min__btn___3UZI1:hover{z-index:3}.bootstrap-min__custom-control___1uZee{position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;min-height:1.5rem;padding-left:1.5rem;margin-right:1rem;cursor:pointer}.bootstrap-min__custom-control-input___UoSFj{position:absolute;z-index:-1;opacity:0}.bootstrap-min__custom-control-input___UoSFj:checked~.bootstrap-min__custom-control-indicator___tjoky{color:#fff;background-color:#0275d8}.bootstrap-min__custom-control-input___UoSFj:focus~.bootstrap-min__custom-control-indicator___tjoky{-webkit-box-shadow:0 0 0 1px #fff,0 0 0 3px #0275d8;box-shadow:0 0 0 1px #fff,0 0 0 3px #0275d8}.bootstrap-min__custom-control-input___UoSFj:active~.bootstrap-min__custom-control-indicator___tjoky{color:#fff;background-color:#8fcafe}.bootstrap-min__custom-control-input___UoSFj:disabled~.bootstrap-min__custom-control-indicator___tjoky{cursor:not-allowed;background-color:#eceeef}.bootstrap-min__custom-control-input___UoSFj:disabled~.bootstrap-min__custom-control-description___2hDno{color:#636c72;cursor:not-allowed}.bootstrap-min__custom-control-indicator___tjoky{position:absolute;top:.25rem;left:0;display:block;width:1rem;height:1rem;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:#ddd;background-repeat:no-repeat;background-position:center center;-webkit-background-size:50% 50%;background-size:50% 50%}.bootstrap-min__custom-checkbox___PTD0v .bootstrap-min__custom-control-indicator___tjoky{border-radius:.25rem}.bootstrap-min__custom-checkbox___PTD0v .bootstrap-min__custom-control-input___UoSFj:checked~.bootstrap-min__custom-control-indicator___tjoky{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E\")}.bootstrap-min__custom-checkbox___PTD0v .bootstrap-min__custom-control-input___UoSFj:indeterminate~.bootstrap-min__custom-control-indicator___tjoky{background-color:#0275d8;background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='%23fff' d='M0 2h4'/%3E%3C/svg%3E\")}.bootstrap-min__custom-radio___83ayj .bootstrap-min__custom-control-indicator___tjoky{border-radius:50%}.bootstrap-min__custom-radio___83ayj .bootstrap-min__custom-control-input___UoSFj:checked~.bootstrap-min__custom-control-indicator___tjoky{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23fff'/%3E%3C/svg%3E\")}.bootstrap-min__custom-controls-stacked___2xyId{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.bootstrap-min__custom-controls-stacked___2xyId .bootstrap-min__custom-control___1uZee{margin-bottom:.25rem}.bootstrap-min__custom-controls-stacked___2xyId .bootstrap-min__custom-control___1uZee+.bootstrap-min__custom-control___1uZee{margin-left:0}.bootstrap-min__custom-select___1h3Ya{display:inline-block;max-width:100%;height:calc(2.25rem + 2px);padding:.375rem 1.75rem .375rem .75rem;line-height:1.25;color:#464a4c;vertical-align:middle;background:#fff url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23333' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E\") no-repeat right .75rem center;-webkit-background-size:8px 10px;background-size:8px 10px;border:1px solid rgba(0,0,0,.15);border-radius:.25rem;-moz-appearance:none;-webkit-appearance:none}.bootstrap-min__custom-select___1h3Ya:focus{border-color:#5cb3fd;outline:0}.bootstrap-min__custom-select___1h3Ya:focus::-ms-value{color:#464a4c;background-color:#fff}.bootstrap-min__custom-select___1h3Ya:disabled{color:#636c72;cursor:not-allowed;background-color:#eceeef}.bootstrap-min__custom-select___1h3Ya::-ms-expand{opacity:0}.bootstrap-min__custom-select-sm___2SRFY{padding-top:.375rem;padding-bottom:.375rem;font-size:75%}.bootstrap-min__custom-file___34O0S{position:relative;display:inline-block;max-width:100%;height:2.5rem;margin-bottom:0;cursor:pointer}.bootstrap-min__custom-file-input___z2Oc5{min-width:14rem;max-width:100%;height:2.5rem;margin:0;filter:alpha(opacity=0);opacity:0}.bootstrap-min__custom-file-control___20-RN{position:absolute;top:0;right:0;left:0;z-index:5;height:2.5rem;padding:.5rem 1rem;line-height:1.5;color:#464a4c;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:#fff;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.bootstrap-min__custom-file-control___20-RN:lang(en)::after{content:\"Choose file...\"}.bootstrap-min__custom-file-control___20-RN::before{position:absolute;top:-1px;right:-1px;bottom:-1px;z-index:6;display:block;height:2.5rem;padding:.5rem 1rem;line-height:1.5;color:#464a4c;background-color:#eceeef;border:1px solid rgba(0,0,0,.15);border-radius:0 .25rem .25rem 0}.bootstrap-min__custom-file-control___20-RN:lang(en)::before{content:\"Browse\"}.bootstrap-min__nav___2GHdF{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding-left:0;margin-bottom:0;list-style:none}.bootstrap-min__nav-link___3JdzW{display:block;padding:.5em 1em}.bootstrap-min__nav-link___3JdzW:focus,.bootstrap-min__nav-link___3JdzW:hover{text-decoration:none}.bootstrap-min__nav-link___3JdzW.bootstrap-min__disabled___68pqS{color:#636c72;cursor:not-allowed}.bootstrap-min__nav-tabs___kG_ro{border-bottom:1px solid #ddd}.bootstrap-min__nav-tabs___kG_ro .bootstrap-min__nav-item___3T-Wm{margin-bottom:-1px}.bootstrap-min__nav-tabs___kG_ro .bootstrap-min__nav-link___3JdzW{border:1px solid transparent;border-top-right-radius:.25rem;border-top-left-radius:.25rem}.bootstrap-min__nav-tabs___kG_ro .bootstrap-min__nav-link___3JdzW:focus,.bootstrap-min__nav-tabs___kG_ro .bootstrap-min__nav-link___3JdzW:hover{border-color:#eceeef #eceeef #ddd}.bootstrap-min__nav-tabs___kG_ro .bootstrap-min__nav-link___3JdzW.bootstrap-min__disabled___68pqS{color:#636c72;background-color:transparent;border-color:transparent}.bootstrap-min__nav-tabs___kG_ro .bootstrap-min__nav-item___3T-Wm.bootstrap-min__show___203Kp .bootstrap-min__nav-link___3JdzW,.bootstrap-min__nav-tabs___kG_ro .bootstrap-min__nav-link___3JdzW.bootstrap-min__active___1ygEY{color:#464a4c;background-color:#fff;border-color:#ddd #ddd #fff}.bootstrap-min__nav-tabs___kG_ro .bootstrap-min__dropdown-menu___1htOP{margin-top:-1px;border-top-right-radius:0;border-top-left-radius:0}.bootstrap-min__nav-pills___18bbm .bootstrap-min__nav-link___3JdzW{border-radius:.25rem}.bootstrap-min__nav-pills___18bbm .bootstrap-min__nav-item___3T-Wm.bootstrap-min__show___203Kp .bootstrap-min__nav-link___3JdzW,.bootstrap-min__nav-pills___18bbm .bootstrap-min__nav-link___3JdzW.bootstrap-min__active___1ygEY{color:#fff;cursor:default;background-color:#0275d8}.bootstrap-min__nav-fill___3D294 .bootstrap-min__nav-item___3T-Wm{-webkit-box-flex:1;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;text-align:center}.bootstrap-min__nav-justified___2N2N3 .bootstrap-min__nav-item___3T-Wm{-webkit-box-flex:1;-webkit-flex:1 1 100%;-ms-flex:1 1 100%;flex:1 1 100%;text-align:center}.bootstrap-min__tab-content___2ZolZ>.bootstrap-min__tab-pane___2qs9v{display:none}.bootstrap-min__tab-content___2ZolZ>.bootstrap-min__active___1ygEY{display:block}.bootstrap-min__navbar___19AjY{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;padding:.5rem 1rem}.bootstrap-min__navbar-brand___3m9n1{display:inline-block;padding-top:.25rem;padding-bottom:.25rem;margin-right:1rem;font-size:1.25rem;line-height:inherit;white-space:nowrap}.bootstrap-min__navbar-brand___3m9n1:focus,.bootstrap-min__navbar-brand___3m9n1:hover{text-decoration:none}.bootstrap-min__navbar-nav___2goUy{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW{padding-right:0;padding-left:0}.bootstrap-min__navbar-text___3Oih2{display:inline-block;padding-top:.425rem;padding-bottom:.425rem}.bootstrap-min__navbar-toggler___2I6UX{-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:.25rem .75rem;font-size:1.25rem;line-height:1;background:0 0;border:1px solid transparent;border-radius:.25rem}.bootstrap-min__navbar-toggler___2I6UX:focus,.bootstrap-min__navbar-toggler___2I6UX:hover{text-decoration:none}.bootstrap-min__navbar-toggler-icon___3BE_n{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:\"\";background:no-repeat center center;-webkit-background-size:100% 100%;background-size:100% 100%}.bootstrap-min__navbar-toggler-left___1_jI6{position:absolute;left:1rem}.bootstrap-min__navbar-toggler-right___1FZan{position:absolute;right:1rem}@media (max-width:575px){.bootstrap-min__navbar-toggleable___1td1H .bootstrap-min__navbar-nav___2goUy .bootstrap-min__dropdown-menu___1htOP{position:static;float:none}.bootstrap-min__navbar-toggleable___1td1H>.bootstrap-min__container___1bva4{padding-right:0;padding-left:0}}@media (min-width:576px){.bootstrap-min__navbar-toggleable___1td1H{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.bootstrap-min__navbar-toggleable___1td1H .bootstrap-min__navbar-nav___2goUy{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.bootstrap-min__navbar-toggleable___1td1H .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW{padding-right:.5rem;padding-left:.5rem}.bootstrap-min__navbar-toggleable___1td1H>.bootstrap-min__container___1bva4{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.bootstrap-min__navbar-toggleable___1td1H .bootstrap-min__navbar-collapse___3UY6N{display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important;width:100%}.bootstrap-min__navbar-toggleable___1td1H .bootstrap-min__navbar-toggler___2I6UX{display:none}}@media (max-width:767px){.bootstrap-min__navbar-toggleable-sm___35XVb .bootstrap-min__navbar-nav___2goUy .bootstrap-min__dropdown-menu___1htOP{position:static;float:none}.bootstrap-min__navbar-toggleable-sm___35XVb>.bootstrap-min__container___1bva4{padding-right:0;padding-left:0}}@media (min-width:768px){.bootstrap-min__navbar-toggleable-sm___35XVb{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.bootstrap-min__navbar-toggleable-sm___35XVb .bootstrap-min__navbar-nav___2goUy{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.bootstrap-min__navbar-toggleable-sm___35XVb .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW{padding-right:.5rem;padding-left:.5rem}.bootstrap-min__navbar-toggleable-sm___35XVb>.bootstrap-min__container___1bva4{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.bootstrap-min__navbar-toggleable-sm___35XVb .bootstrap-min__navbar-collapse___3UY6N{display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important;width:100%}.bootstrap-min__navbar-toggleable-sm___35XVb .bootstrap-min__navbar-toggler___2I6UX{display:none}}@media (max-width:991px){.bootstrap-min__navbar-toggleable-md___3tUKZ .bootstrap-min__navbar-nav___2goUy .bootstrap-min__dropdown-menu___1htOP{position:static;float:none}.bootstrap-min__navbar-toggleable-md___3tUKZ>.bootstrap-min__container___1bva4{padding-right:0;padding-left:0}}@media (min-width:992px){.bootstrap-min__navbar-toggleable-md___3tUKZ{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.bootstrap-min__navbar-toggleable-md___3tUKZ .bootstrap-min__navbar-nav___2goUy{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.bootstrap-min__navbar-toggleable-md___3tUKZ .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW{padding-right:.5rem;padding-left:.5rem}.bootstrap-min__navbar-toggleable-md___3tUKZ>.bootstrap-min__container___1bva4{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.bootstrap-min__navbar-toggleable-md___3tUKZ .bootstrap-min__navbar-collapse___3UY6N{display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important;width:100%}.bootstrap-min__navbar-toggleable-md___3tUKZ .bootstrap-min__navbar-toggler___2I6UX{display:none}}@media (max-width:1199px){.bootstrap-min__navbar-toggleable-lg___PowWD .bootstrap-min__navbar-nav___2goUy .bootstrap-min__dropdown-menu___1htOP{position:static;float:none}.bootstrap-min__navbar-toggleable-lg___PowWD>.bootstrap-min__container___1bva4{padding-right:0;padding-left:0}}@media (min-width:1200px){.bootstrap-min__navbar-toggleable-lg___PowWD{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.bootstrap-min__navbar-toggleable-lg___PowWD .bootstrap-min__navbar-nav___2goUy{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.bootstrap-min__navbar-toggleable-lg___PowWD .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW{padding-right:.5rem;padding-left:.5rem}.bootstrap-min__navbar-toggleable-lg___PowWD>.bootstrap-min__container___1bva4{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.bootstrap-min__navbar-toggleable-lg___PowWD .bootstrap-min__navbar-collapse___3UY6N{display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important;width:100%}.bootstrap-min__navbar-toggleable-lg___PowWD .bootstrap-min__navbar-toggler___2I6UX{display:none}}.bootstrap-min__navbar-toggleable-xl___32xDb{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.bootstrap-min__navbar-toggleable-xl___32xDb .bootstrap-min__navbar-nav___2goUy .bootstrap-min__dropdown-menu___1htOP{position:static;float:none}.bootstrap-min__navbar-toggleable-xl___32xDb>.bootstrap-min__container___1bva4{padding-right:0;padding-left:0}.bootstrap-min__navbar-toggleable-xl___32xDb .bootstrap-min__navbar-nav___2goUy{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.bootstrap-min__navbar-toggleable-xl___32xDb .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW{padding-right:.5rem;padding-left:.5rem}.bootstrap-min__navbar-toggleable-xl___32xDb>.bootstrap-min__container___1bva4{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.bootstrap-min__navbar-toggleable-xl___32xDb .bootstrap-min__navbar-collapse___3UY6N{display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important;width:100%}.bootstrap-min__navbar-toggleable-xl___32xDb .bootstrap-min__navbar-toggler___2I6UX{display:none}.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-brand___3m9n1,.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-toggler___2I6UX{color:rgba(0,0,0,.9)}.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-brand___3m9n1:focus,.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-brand___3m9n1:hover,.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-toggler___2I6UX:focus,.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-toggler___2I6UX:hover{color:rgba(0,0,0,.9)}.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW{color:rgba(0,0,0,.5)}.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW:focus,.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW:hover{color:rgba(0,0,0,.7)}.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW.bootstrap-min__disabled___68pqS{color:rgba(0,0,0,.3)}.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-nav___2goUy .bootstrap-min__active___1ygEY>.bootstrap-min__nav-link___3JdzW,.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW.bootstrap-min__active___1ygEY,.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW.bootstrap-min__open___3syfA,.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-nav___2goUy .bootstrap-min__open___3syfA>.bootstrap-min__nav-link___3JdzW{color:rgba(0,0,0,.9)}.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-toggler___2I6UX{border-color:rgba(0,0,0,.1)}.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-toggler-icon___3BE_n{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(0, 0, 0, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\")}.bootstrap-min__navbar-light___FnrHi .bootstrap-min__navbar-text___3Oih2{color:rgba(0,0,0,.5)}.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-brand___3m9n1,.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-toggler___2I6UX{color:#fff}.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-brand___3m9n1:focus,.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-brand___3m9n1:hover,.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-toggler___2I6UX:focus,.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-toggler___2I6UX:hover{color:#fff}.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW{color:rgba(255,255,255,.5)}.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW:focus,.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW:hover{color:rgba(255,255,255,.75)}.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW.bootstrap-min__disabled___68pqS{color:rgba(255,255,255,.25)}.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-nav___2goUy .bootstrap-min__active___1ygEY>.bootstrap-min__nav-link___3JdzW,.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW.bootstrap-min__active___1ygEY,.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-nav___2goUy .bootstrap-min__nav-link___3JdzW.bootstrap-min__open___3syfA,.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-nav___2goUy .bootstrap-min__open___3syfA>.bootstrap-min__nav-link___3JdzW{color:#fff}.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-toggler___2I6UX{border-color:rgba(255,255,255,.1)}.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-toggler-icon___3BE_n{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(255, 255, 255, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\")}.bootstrap-min__navbar-inverse___13rKp .bootstrap-min__navbar-text___3Oih2{color:rgba(255,255,255,.5)}.bootstrap-min__card___1LLDR{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;background-color:#fff;border:1px solid rgba(0,0,0,.125);border-radius:.25rem}.bootstrap-min__card-block___jz0BB{-webkit-box-flex:1;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;padding:1.25rem}.bootstrap-min__card-title___1FvKf{margin-bottom:.75rem}.bootstrap-min__card-subtitle___250o2{margin-top:-.375rem;margin-bottom:0}.bootstrap-min__card-text___Njfz1:last-child{margin-bottom:0}.bootstrap-min__card-link___3dhwP:hover{text-decoration:none}.bootstrap-min__card-link___3dhwP+.bootstrap-min__card-link___3dhwP{margin-left:1.25rem}.bootstrap-min__card___1LLDR>.bootstrap-min__list-group___Ejsji:first-child .bootstrap-min__list-group-item___Q9DWn:first-child{border-top-right-radius:.25rem;border-top-left-radius:.25rem}.bootstrap-min__card___1LLDR>.bootstrap-min__list-group___Ejsji:last-child .bootstrap-min__list-group-item___Q9DWn:last-child{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.bootstrap-min__card-header___j5fQ7{padding:.75rem 1.25rem;margin-bottom:0;background-color:#f7f7f9;border-bottom:1px solid rgba(0,0,0,.125)}.bootstrap-min__card-header___j5fQ7:first-child{border-radius:calc(.25rem - 1px) calc(.25rem - 1px) 0 0}.bootstrap-min__card-footer___1pgNd{padding:.75rem 1.25rem;background-color:#f7f7f9;border-top:1px solid rgba(0,0,0,.125)}.bootstrap-min__card-footer___1pgNd:last-child{border-radius:0 0 calc(.25rem - 1px) calc(.25rem - 1px)}.bootstrap-min__card-header-tabs___1tE8h{margin-right:-.625rem;margin-bottom:-.75rem;margin-left:-.625rem;border-bottom:0}.bootstrap-min__card-header-pills___3Lnpw{margin-right:-.625rem;margin-left:-.625rem}.bootstrap-min__card-primary___1l2c_{background-color:#0275d8;border-color:#0275d8}.bootstrap-min__card-primary___1l2c_ .bootstrap-min__card-footer___1pgNd,.bootstrap-min__card-primary___1l2c_ .bootstrap-min__card-header___j5fQ7{background-color:transparent}.bootstrap-min__card-success___1Ye66{background-color:#5cb85c;border-color:#5cb85c}.bootstrap-min__card-success___1Ye66 .bootstrap-min__card-footer___1pgNd,.bootstrap-min__card-success___1Ye66 .bootstrap-min__card-header___j5fQ7{background-color:transparent}.bootstrap-min__card-info___3-OmC{background-color:#5bc0de;border-color:#5bc0de}.bootstrap-min__card-info___3-OmC .bootstrap-min__card-footer___1pgNd,.bootstrap-min__card-info___3-OmC .bootstrap-min__card-header___j5fQ7{background-color:transparent}.bootstrap-min__card-warning___1FBzo{background-color:#f0ad4e;border-color:#f0ad4e}.bootstrap-min__card-warning___1FBzo .bootstrap-min__card-footer___1pgNd,.bootstrap-min__card-warning___1FBzo .bootstrap-min__card-header___j5fQ7{background-color:transparent}.bootstrap-min__card-danger___svYSt{background-color:#d9534f;border-color:#d9534f}.bootstrap-min__card-danger___svYSt .bootstrap-min__card-footer___1pgNd,.bootstrap-min__card-danger___svYSt .bootstrap-min__card-header___j5fQ7{background-color:transparent}.bootstrap-min__card-outline-primary___1CxTT{background-color:transparent;border-color:#0275d8}.bootstrap-min__card-outline-secondary___31EkW{background-color:transparent;border-color:#ccc}.bootstrap-min__card-outline-info___31neB{background-color:transparent;border-color:#5bc0de}.bootstrap-min__card-outline-success___1ZRLe{background-color:transparent;border-color:#5cb85c}.bootstrap-min__card-outline-warning___1oFeG{background-color:transparent;border-color:#f0ad4e}.bootstrap-min__card-outline-danger___1H_Qq{background-color:transparent;border-color:#d9534f}.bootstrap-min__card-inverse___3_ZkG{color:rgba(255,255,255,.65)}.bootstrap-min__card-inverse___3_ZkG .bootstrap-min__card-footer___1pgNd,.bootstrap-min__card-inverse___3_ZkG .bootstrap-min__card-header___j5fQ7{background-color:transparent;border-color:rgba(255,255,255,.2)}.bootstrap-min__card-inverse___3_ZkG .bootstrap-min__card-blockquote___2wVbJ,.bootstrap-min__card-inverse___3_ZkG .bootstrap-min__card-footer___1pgNd,.bootstrap-min__card-inverse___3_ZkG .bootstrap-min__card-header___j5fQ7,.bootstrap-min__card-inverse___3_ZkG .bootstrap-min__card-title___1FvKf{color:#fff}.bootstrap-min__card-inverse___3_ZkG .bootstrap-min__card-blockquote___2wVbJ .bootstrap-min__blockquote-footer___24sUF,.bootstrap-min__card-inverse___3_ZkG .bootstrap-min__card-link___3dhwP,.bootstrap-min__card-inverse___3_ZkG .bootstrap-min__card-subtitle___250o2,.bootstrap-min__card-inverse___3_ZkG .bootstrap-min__card-text___Njfz1{color:rgba(255,255,255,.65)}.bootstrap-min__card-inverse___3_ZkG .bootstrap-min__card-link___3dhwP:focus,.bootstrap-min__card-inverse___3_ZkG .bootstrap-min__card-link___3dhwP:hover{color:#fff}.bootstrap-min__card-blockquote___2wVbJ{padding:0;margin-bottom:0;border-left:0}.bootstrap-min__card-img___3i95U{border-radius:calc(.25rem - 1px)}.bootstrap-min__card-img-overlay___3c3C3{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.bootstrap-min__card-img-top___1ZOF1{border-top-right-radius:calc(.25rem - 1px);border-top-left-radius:calc(.25rem - 1px)}.bootstrap-min__card-img-bottom___28JsN{border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}@media (min-width:576px){.bootstrap-min__card-deck___-kEZx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap}.bootstrap-min__card-deck___-kEZx .bootstrap-min__card___1LLDR{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex:1 0 0%;-ms-flex:1 0 0%;flex:1 0 0%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.bootstrap-min__card-deck___-kEZx .bootstrap-min__card___1LLDR:not(:first-child){margin-left:15px}.bootstrap-min__card-deck___-kEZx .bootstrap-min__card___1LLDR:not(:last-child){margin-right:15px}}@media (min-width:576px){.bootstrap-min__card-group___3TmaQ{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap}.bootstrap-min__card-group___3TmaQ .bootstrap-min__card___1LLDR{-webkit-box-flex:1;-webkit-flex:1 0 0%;-ms-flex:1 0 0%;flex:1 0 0%}.bootstrap-min__card-group___3TmaQ .bootstrap-min__card___1LLDR+.bootstrap-min__card___1LLDR{margin-left:0;border-left:0}.bootstrap-min__card-group___3TmaQ .bootstrap-min__card___1LLDR:first-child{border-bottom-right-radius:0;border-top-right-radius:0}.bootstrap-min__card-group___3TmaQ .bootstrap-min__card___1LLDR:first-child .bootstrap-min__card-img-top___1ZOF1{border-top-right-radius:0}.bootstrap-min__card-group___3TmaQ .bootstrap-min__card___1LLDR:first-child .bootstrap-min__card-img-bottom___28JsN{border-bottom-right-radius:0}.bootstrap-min__card-group___3TmaQ .bootstrap-min__card___1LLDR:last-child{border-bottom-left-radius:0;border-top-left-radius:0}.bootstrap-min__card-group___3TmaQ .bootstrap-min__card___1LLDR:last-child .bootstrap-min__card-img-top___1ZOF1{border-top-left-radius:0}.bootstrap-min__card-group___3TmaQ .bootstrap-min__card___1LLDR:last-child .bootstrap-min__card-img-bottom___28JsN{border-bottom-left-radius:0}.bootstrap-min__card-group___3TmaQ .bootstrap-min__card___1LLDR:not(:first-child):not(:last-child){border-radius:0}.bootstrap-min__card-group___3TmaQ .bootstrap-min__card___1LLDR:not(:first-child):not(:last-child) .bootstrap-min__card-img-bottom___28JsN,.bootstrap-min__card-group___3TmaQ .bootstrap-min__card___1LLDR:not(:first-child):not(:last-child) .bootstrap-min__card-img-top___1ZOF1{border-radius:0}}@media (min-width:576px){.bootstrap-min__card-columns___1TwzX{-webkit-column-count:3;-moz-column-count:3;column-count:3;-webkit-column-gap:1.25rem;-moz-column-gap:1.25rem;column-gap:1.25rem}.bootstrap-min__card-columns___1TwzX .bootstrap-min__card___1LLDR{display:inline-block;width:100%;margin-bottom:.75rem}}.bootstrap-min__breadcrumb___3LW8w{padding:.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#eceeef;border-radius:.25rem}.bootstrap-min__breadcrumb___3LW8w::after{display:block;content:\"\";clear:both}.bootstrap-min__breadcrumb-item___2kXPR{float:left}.bootstrap-min__breadcrumb-item___2kXPR+.bootstrap-min__breadcrumb-item___2kXPR::before{display:inline-block;padding-right:.5rem;padding-left:.5rem;color:#636c72;content:\"/\"}.bootstrap-min__breadcrumb-item___2kXPR+.bootstrap-min__breadcrumb-item___2kXPR:hover::before{text-decoration:underline}.bootstrap-min__breadcrumb-item___2kXPR+.bootstrap-min__breadcrumb-item___2kXPR:hover::before{text-decoration:none}.bootstrap-min__breadcrumb-item___2kXPR.bootstrap-min__active___1ygEY{color:#636c72}.bootstrap-min__pagination___2GsD_{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding-left:0;list-style:none;border-radius:.25rem}.bootstrap-min__page-item___3OQdE:first-child .bootstrap-min__page-link___1wVIA{margin-left:0;border-bottom-left-radius:.25rem;border-top-left-radius:.25rem}.bootstrap-min__page-item___3OQdE:last-child .bootstrap-min__page-link___1wVIA{border-bottom-right-radius:.25rem;border-top-right-radius:.25rem}.bootstrap-min__page-item___3OQdE.bootstrap-min__active___1ygEY .bootstrap-min__page-link___1wVIA{z-index:2;color:#fff;background-color:#0275d8;border-color:#0275d8}.bootstrap-min__page-item___3OQdE.bootstrap-min__disabled___68pqS .bootstrap-min__page-link___1wVIA{color:#636c72;pointer-events:none;cursor:not-allowed;background-color:#fff;border-color:#ddd}.bootstrap-min__page-link___1wVIA{position:relative;display:block;padding:.5rem .75rem;margin-left:-1px;line-height:1.25;color:#0275d8;background-color:#fff;border:1px solid #ddd}.bootstrap-min__page-link___1wVIA:focus,.bootstrap-min__page-link___1wVIA:hover{color:#014c8c;text-decoration:none;background-color:#eceeef;border-color:#ddd}.bootstrap-min__pagination-lg___1KhFG .bootstrap-min__page-link___1wVIA{padding:.75rem 1.5rem;font-size:1.25rem}.bootstrap-min__pagination-lg___1KhFG .bootstrap-min__page-item___3OQdE:first-child .bootstrap-min__page-link___1wVIA{border-bottom-left-radius:.3rem;border-top-left-radius:.3rem}.bootstrap-min__pagination-lg___1KhFG .bootstrap-min__page-item___3OQdE:last-child .bootstrap-min__page-link___1wVIA{border-bottom-right-radius:.3rem;border-top-right-radius:.3rem}.bootstrap-min__pagination-sm___3l8LE .bootstrap-min__page-link___1wVIA{padding:.25rem .5rem;font-size:.875rem}.bootstrap-min__pagination-sm___3l8LE .bootstrap-min__page-item___3OQdE:first-child .bootstrap-min__page-link___1wVIA{border-bottom-left-radius:.2rem;border-top-left-radius:.2rem}.bootstrap-min__pagination-sm___3l8LE .bootstrap-min__page-item___3OQdE:last-child .bootstrap-min__page-link___1wVIA{border-bottom-right-radius:.2rem;border-top-right-radius:.2rem}.bootstrap-min__badge___iEQnH{display:inline-block;padding:.25em .4em;font-size:75%;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem}.bootstrap-min__badge___iEQnH:empty{display:none}.bootstrap-min__btn___3UZI1 .bootstrap-min__badge___iEQnH{position:relative;top:-1px}a.bootstrap-min__badge___iEQnH:focus,a.bootstrap-min__badge___iEQnH:hover{color:#fff;text-decoration:none;cursor:pointer}.bootstrap-min__badge-pill___3F4t4{padding-right:.6em;padding-left:.6em;border-radius:10rem}.bootstrap-min__badge-default___2P0Lj{background-color:#636c72}.bootstrap-min__badge-default___2P0Lj[href]:focus,.bootstrap-min__badge-default___2P0Lj[href]:hover{background-color:#4b5257}.bootstrap-min__badge-primary___uRDIm{background-color:#0275d8}.bootstrap-min__badge-primary___uRDIm[href]:focus,.bootstrap-min__badge-primary___uRDIm[href]:hover{background-color:#025aa5}.bootstrap-min__badge-success___1uGjt{background-color:#5cb85c}.bootstrap-min__badge-success___1uGjt[href]:focus,.bootstrap-min__badge-success___1uGjt[href]:hover{background-color:#449d44}.bootstrap-min__badge-info___2Igo4{background-color:#5bc0de}.bootstrap-min__badge-info___2Igo4[href]:focus,.bootstrap-min__badge-info___2Igo4[href]:hover{background-color:#31b0d5}.bootstrap-min__badge-warning___2cv9G{background-color:#f0ad4e}.bootstrap-min__badge-warning___2cv9G[href]:focus,.bootstrap-min__badge-warning___2cv9G[href]:hover{background-color:#ec971f}.bootstrap-min__badge-danger___1ESsW{background-color:#d9534f}.bootstrap-min__badge-danger___1ESsW[href]:focus,.bootstrap-min__badge-danger___1ESsW[href]:hover{background-color:#c9302c}.bootstrap-min__jumbotron___COnVO{padding:2rem 1rem;margin-bottom:2rem;background-color:#eceeef;border-radius:.3rem}@media (min-width:576px){.bootstrap-min__jumbotron___COnVO{padding:4rem 2rem}}.bootstrap-min__jumbotron-hr___2gV63{border-top-color:#d0d5d8}.bootstrap-min__jumbotron-fluid___1jiB2{padding-right:0;padding-left:0;border-radius:0}.bootstrap-min__alert___1NAfo{padding:.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.bootstrap-min__alert-heading___3kOws{color:inherit}.bootstrap-min__alert-link___2LNB9{font-weight:700}.bootstrap-min__alert-dismissible___oK1gy .bootstrap-min__close___2cF5v{position:relative;top:-.75rem;right:-1.25rem;padding:.75rem 1.25rem;color:inherit}.bootstrap-min__alert-success___2d1AK{background-color:#dff0d8;border-color:#d0e9c6;color:#3c763d}.bootstrap-min__alert-success___2d1AK hr{border-top-color:#c1e2b3}.bootstrap-min__alert-success___2d1AK .bootstrap-min__alert-link___2LNB9{color:#2b542c}.bootstrap-min__alert-info___dXW70{background-color:#d9edf7;border-color:#bcdff1;color:#31708f}.bootstrap-min__alert-info___dXW70 hr{border-top-color:#a6d5ec}.bootstrap-min__alert-info___dXW70 .bootstrap-min__alert-link___2LNB9{color:#245269}.bootstrap-min__alert-warning___14Pau{background-color:#fcf8e3;border-color:#faf2cc;color:#8a6d3b}.bootstrap-min__alert-warning___14Pau hr{border-top-color:#f7ecb5}.bootstrap-min__alert-warning___14Pau .bootstrap-min__alert-link___2LNB9{color:#66512c}.bootstrap-min__alert-danger___2IT5f{background-color:#f2dede;border-color:#ebcccc;color:#a94442}.bootstrap-min__alert-danger___2IT5f hr{border-top-color:#e4b9b9}.bootstrap-min__alert-danger___2IT5f .bootstrap-min__alert-link___2LNB9{color:#843534}@-webkit-keyframes bootstrap-min__progress-bar-stripes___WVy7g{from{background-position:1rem 0}to{background-position:0 0}}@-o-keyframes bootstrap-min__progress-bar-stripes___WVy7g{from{background-position:1rem 0}to{background-position:0 0}}@keyframes bootstrap-min__progress-bar-stripes___WVy7g{from{background-position:1rem 0}to{background-position:0 0}}.bootstrap-min__progress___1IiSD{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;overflow:hidden;font-size:.75rem;line-height:1rem;text-align:center;background-color:#eceeef;border-radius:.25rem}.bootstrap-min__progress-bar___jOeJx{height:1rem;color:#fff;background-color:#0275d8}.bootstrap-min__progress-bar-striped___2_o6Z{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);-webkit-background-size:1rem 1rem;background-size:1rem 1rem}.bootstrap-min__progress-bar-animated___1kd7N{-webkit-animation:bootstrap-min__progress-bar-stripes___WVy7g 1s linear infinite;-o-animation:bootstrap-min__progress-bar-stripes___WVy7g 1s linear infinite;animation:bootstrap-min__progress-bar-stripes___WVy7g 1s linear infinite}.bootstrap-min__media___4IX9s{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}.bootstrap-min__media-body___1u669{-webkit-box-flex:1;-webkit-flex:1 1 0%;-ms-flex:1 1 0%;flex:1 1 0%}.bootstrap-min__list-group___Ejsji{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0}.bootstrap-min__list-group-item-action___2LWSF{width:100%;color:#464a4c;text-align:inherit}.bootstrap-min__list-group-item-action___2LWSF .bootstrap-min__list-group-item-heading___biDFB{color:#292b2c}.bootstrap-min__list-group-item-action___2LWSF:focus,.bootstrap-min__list-group-item-action___2LWSF:hover{color:#464a4c;text-decoration:none;background-color:#f7f7f9}.bootstrap-min__list-group-item-action___2LWSF:active{color:#292b2c;background-color:#eceeef}.bootstrap-min__list-group-item___Q9DWn{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;padding:.75rem 1.25rem;margin-bottom:-1px;background-color:#fff;border:1px solid rgba(0,0,0,.125)}.bootstrap-min__list-group-item___Q9DWn:first-child{border-top-right-radius:.25rem;border-top-left-radius:.25rem}.bootstrap-min__list-group-item___Q9DWn:last-child{margin-bottom:0;border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.bootstrap-min__list-group-item___Q9DWn:focus,.bootstrap-min__list-group-item___Q9DWn:hover{text-decoration:none}.bootstrap-min__list-group-item___Q9DWn.bootstrap-min__disabled___68pqS,.bootstrap-min__list-group-item___Q9DWn:disabled{color:#636c72;cursor:not-allowed;background-color:#fff}.bootstrap-min__list-group-item___Q9DWn.bootstrap-min__disabled___68pqS .bootstrap-min__list-group-item-heading___biDFB,.bootstrap-min__list-group-item___Q9DWn:disabled .bootstrap-min__list-group-item-heading___biDFB{color:inherit}.bootstrap-min__list-group-item___Q9DWn.bootstrap-min__disabled___68pqS .bootstrap-min__list-group-item-text___1szIh,.bootstrap-min__list-group-item___Q9DWn:disabled .bootstrap-min__list-group-item-text___1szIh{color:#636c72}.bootstrap-min__list-group-item___Q9DWn.bootstrap-min__active___1ygEY{z-index:2;color:#fff;background-color:#0275d8;border-color:#0275d8}.bootstrap-min__list-group-item___Q9DWn.bootstrap-min__active___1ygEY .bootstrap-min__list-group-item-heading___biDFB,.bootstrap-min__list-group-item___Q9DWn.bootstrap-min__active___1ygEY .bootstrap-min__list-group-item-heading___biDFB>.bootstrap-min__small___3neFt,.bootstrap-min__list-group-item___Q9DWn.bootstrap-min__active___1ygEY .bootstrap-min__list-group-item-heading___biDFB>small{color:inherit}.bootstrap-min__list-group-item___Q9DWn.bootstrap-min__active___1ygEY .bootstrap-min__list-group-item-text___1szIh{color:#daeeff}.bootstrap-min__list-group-flush___2dyrC .bootstrap-min__list-group-item___Q9DWn{border-right:0;border-left:0;border-radius:0}.bootstrap-min__list-group-flush___2dyrC:first-child .bootstrap-min__list-group-item___Q9DWn:first-child{border-top:0}.bootstrap-min__list-group-flush___2dyrC:last-child .bootstrap-min__list-group-item___Q9DWn:last-child{border-bottom:0}.bootstrap-min__list-group-item-success___L8kg3{color:#3c763d;background-color:#dff0d8}a.bootstrap-min__list-group-item-success___L8kg3,button.bootstrap-min__list-group-item-success___L8kg3{color:#3c763d}a.bootstrap-min__list-group-item-success___L8kg3 .bootstrap-min__list-group-item-heading___biDFB,button.bootstrap-min__list-group-item-success___L8kg3 .bootstrap-min__list-group-item-heading___biDFB{color:inherit}a.bootstrap-min__list-group-item-success___L8kg3:focus,a.bootstrap-min__list-group-item-success___L8kg3:hover,button.bootstrap-min__list-group-item-success___L8kg3:focus,button.bootstrap-min__list-group-item-success___L8kg3:hover{color:#3c763d;background-color:#d0e9c6}a.bootstrap-min__list-group-item-success___L8kg3.bootstrap-min__active___1ygEY,button.bootstrap-min__list-group-item-success___L8kg3.bootstrap-min__active___1ygEY{color:#fff;background-color:#3c763d;border-color:#3c763d}.bootstrap-min__list-group-item-info___3c3vl{color:#31708f;background-color:#d9edf7}a.bootstrap-min__list-group-item-info___3c3vl,button.bootstrap-min__list-group-item-info___3c3vl{color:#31708f}a.bootstrap-min__list-group-item-info___3c3vl .bootstrap-min__list-group-item-heading___biDFB,button.bootstrap-min__list-group-item-info___3c3vl .bootstrap-min__list-group-item-heading___biDFB{color:inherit}a.bootstrap-min__list-group-item-info___3c3vl:focus,a.bootstrap-min__list-group-item-info___3c3vl:hover,button.bootstrap-min__list-group-item-info___3c3vl:focus,button.bootstrap-min__list-group-item-info___3c3vl:hover{color:#31708f;background-color:#c4e3f3}a.bootstrap-min__list-group-item-info___3c3vl.bootstrap-min__active___1ygEY,button.bootstrap-min__list-group-item-info___3c3vl.bootstrap-min__active___1ygEY{color:#fff;background-color:#31708f;border-color:#31708f}.bootstrap-min__list-group-item-warning___1bSf5{color:#8a6d3b;background-color:#fcf8e3}a.bootstrap-min__list-group-item-warning___1bSf5,button.bootstrap-min__list-group-item-warning___1bSf5{color:#8a6d3b}a.bootstrap-min__list-group-item-warning___1bSf5 .bootstrap-min__list-group-item-heading___biDFB,button.bootstrap-min__list-group-item-warning___1bSf5 .bootstrap-min__list-group-item-heading___biDFB{color:inherit}a.bootstrap-min__list-group-item-warning___1bSf5:focus,a.bootstrap-min__list-group-item-warning___1bSf5:hover,button.bootstrap-min__list-group-item-warning___1bSf5:focus,button.bootstrap-min__list-group-item-warning___1bSf5:hover{color:#8a6d3b;background-color:#faf2cc}a.bootstrap-min__list-group-item-warning___1bSf5.bootstrap-min__active___1ygEY,button.bootstrap-min__list-group-item-warning___1bSf5.bootstrap-min__active___1ygEY{color:#fff;background-color:#8a6d3b;border-color:#8a6d3b}.bootstrap-min__list-group-item-danger___3Hxo4{color:#a94442;background-color:#f2dede}a.bootstrap-min__list-group-item-danger___3Hxo4,button.bootstrap-min__list-group-item-danger___3Hxo4{color:#a94442}a.bootstrap-min__list-group-item-danger___3Hxo4 .bootstrap-min__list-group-item-heading___biDFB,button.bootstrap-min__list-group-item-danger___3Hxo4 .bootstrap-min__list-group-item-heading___biDFB{color:inherit}a.bootstrap-min__list-group-item-danger___3Hxo4:focus,a.bootstrap-min__list-group-item-danger___3Hxo4:hover,button.bootstrap-min__list-group-item-danger___3Hxo4:focus,button.bootstrap-min__list-group-item-danger___3Hxo4:hover{color:#a94442;background-color:#ebcccc}a.bootstrap-min__list-group-item-danger___3Hxo4.bootstrap-min__active___1ygEY,button.bootstrap-min__list-group-item-danger___3Hxo4.bootstrap-min__active___1ygEY{color:#fff;background-color:#a94442;border-color:#a94442}.bootstrap-min__embed-responsive___25jTt{position:relative;display:block;width:100%;padding:0;overflow:hidden}.bootstrap-min__embed-responsive___25jTt::before{display:block;content:\"\"}.bootstrap-min__embed-responsive___25jTt .bootstrap-min__embed-responsive-item___27qJu,.bootstrap-min__embed-responsive___25jTt embed,.bootstrap-min__embed-responsive___25jTt iframe,.bootstrap-min__embed-responsive___25jTt object,.bootstrap-min__embed-responsive___25jTt video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.bootstrap-min__embed-responsive-21by9___3vZ-Q::before{padding-top:42.857143%}.bootstrap-min__embed-responsive-16by9___2F5p0::before{padding-top:56.25%}.bootstrap-min__embed-responsive-4by3___rOavR::before{padding-top:75%}.bootstrap-min__embed-responsive-1by1___3Aq5R::before{padding-top:100%}.bootstrap-min__close___2cF5v{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.bootstrap-min__close___2cF5v:focus,.bootstrap-min__close___2cF5v:hover{color:#000;text-decoration:none;cursor:pointer;opacity:.75}button.bootstrap-min__close___2cF5v{padding:0;cursor:pointer;background:0 0;border:0;-webkit-appearance:none}.bootstrap-min__modal-open___16yh-{overflow:hidden}.bootstrap-min__modal___NdSxv{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;display:none;overflow:hidden;outline:0}.bootstrap-min__modal___NdSxv.bootstrap-min__fade___jy_Yw .bootstrap-min__modal-dialog___2TkfE{-webkit-transition:-webkit-transform .3s ease-out;transition:-webkit-transform .3s ease-out;-o-transition:-o-transform .3s ease-out;transition:transform .3s ease-out;transition:transform .3s ease-out,-webkit-transform .3s ease-out,-o-transform .3s ease-out;-webkit-transform:translate(0,-25%);-o-transform:translate(0,-25%);transform:translate(0,-25%)}.bootstrap-min__modal___NdSxv.bootstrap-min__show___203Kp .bootstrap-min__modal-dialog___2TkfE{-webkit-transform:translate(0,0);-o-transform:translate(0,0);transform:translate(0,0)}.bootstrap-min__modal-open___16yh- .bootstrap-min__modal___NdSxv{overflow-x:hidden;overflow-y:auto}.bootstrap-min__modal-dialog___2TkfE{position:relative;width:auto;margin:10px}.bootstrap-min__modal-content___3j4Hu{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;background-color:#fff;-webkit-background-clip:padding-box;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;outline:0}.bootstrap-min__modal-backdrop___1gVJW{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.bootstrap-min__modal-backdrop___1gVJW.bootstrap-min__fade___jy_Yw{opacity:0}.bootstrap-min__modal-backdrop___1gVJW.bootstrap-min__show___203Kp{opacity:.5}.bootstrap-min__modal-header___12P0i{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:15px;border-bottom:1px solid #eceeef}.bootstrap-min__modal-title___fP-gS{margin-bottom:0;line-height:1.5}.bootstrap-min__modal-body___3MJVo{position:relative;-webkit-box-flex:1;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;padding:15px}.bootstrap-min__modal-footer___1i7hm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;padding:15px;border-top:1px solid #eceeef}.bootstrap-min__modal-footer___1i7hm>:not(:first-child){margin-left:.25rem}.bootstrap-min__modal-footer___1i7hm>:not(:last-child){margin-right:.25rem}.bootstrap-min__modal-scrollbar-measure___13ha4{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:576px){.bootstrap-min__modal-dialog___2TkfE{max-width:500px;margin:30px auto}.bootstrap-min__modal-sm___3PGrD{max-width:300px}}@media (min-width:992px){.bootstrap-min__modal-lg___1gTP2{max-width:800px}}.bootstrap-min__tooltip___1RIDu{position:absolute;z-index:1070;display:block;font-family:-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:.875rem;word-wrap:break-word;opacity:0}.bootstrap-min__tooltip___1RIDu.bootstrap-min__show___203Kp{opacity:.9}.bootstrap-min__tooltip___1RIDu.bootstrap-min__bs-tether-element-attached-bottom___22Y8r,.bootstrap-min__tooltip___1RIDu.bootstrap-min__tooltip-top___2H1XG{padding:5px 0;margin-top:-3px}.bootstrap-min__tooltip___1RIDu.bootstrap-min__bs-tether-element-attached-bottom___22Y8r .bootstrap-min__tooltip-inner___2SV7n::before,.bootstrap-min__tooltip___1RIDu.bootstrap-min__tooltip-top___2H1XG .bootstrap-min__tooltip-inner___2SV7n::before{bottom:0;left:50%;margin-left:-5px;content:\"\";border-width:5px 5px 0;border-top-color:#000}.bootstrap-min__tooltip___1RIDu.bootstrap-min__bs-tether-element-attached-left___2zKig,.bootstrap-min__tooltip___1RIDu.bootstrap-min__tooltip-right___2tDdi{padding:0 5px;margin-left:3px}.bootstrap-min__tooltip___1RIDu.bootstrap-min__bs-tether-element-attached-left___2zKig .bootstrap-min__tooltip-inner___2SV7n::before,.bootstrap-min__tooltip___1RIDu.bootstrap-min__tooltip-right___2tDdi .bootstrap-min__tooltip-inner___2SV7n::before{top:50%;left:0;margin-top:-5px;content:\"\";border-width:5px 5px 5px 0;border-right-color:#000}.bootstrap-min__tooltip___1RIDu.bootstrap-min__bs-tether-element-attached-top___2HupT,.bootstrap-min__tooltip___1RIDu.bootstrap-min__tooltip-bottom___3Riz3{padding:5px 0;margin-top:3px}.bootstrap-min__tooltip___1RIDu.bootstrap-min__bs-tether-element-attached-top___2HupT .bootstrap-min__tooltip-inner___2SV7n::before,.bootstrap-min__tooltip___1RIDu.bootstrap-min__tooltip-bottom___3Riz3 .bootstrap-min__tooltip-inner___2SV7n::before{top:0;left:50%;margin-left:-5px;content:\"\";border-width:0 5px 5px;border-bottom-color:#000}.bootstrap-min__tooltip___1RIDu.bootstrap-min__bs-tether-element-attached-right___LxlGz,.bootstrap-min__tooltip___1RIDu.bootstrap-min__tooltip-left___1qyGw{padding:0 5px;margin-left:-3px}.bootstrap-min__tooltip___1RIDu.bootstrap-min__bs-tether-element-attached-right___LxlGz .bootstrap-min__tooltip-inner___2SV7n::before,.bootstrap-min__tooltip___1RIDu.bootstrap-min__tooltip-left___1qyGw .bootstrap-min__tooltip-inner___2SV7n::before{top:50%;right:0;margin-top:-5px;content:\"\";border-width:5px 0 5px 5px;border-left-color:#000}.bootstrap-min__tooltip-inner___2SV7n{max-width:200px;padding:3px 8px;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.bootstrap-min__tooltip-inner___2SV7n::before{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.bootstrap-min__popover___2gNi1{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;padding:1px;font-family:-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:.875rem;word-wrap:break-word;background-color:#fff;-webkit-background-clip:padding-box;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-bottom___22Y8r,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-top___2Qxbo{margin-top:-10px}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-bottom___22Y8r::after,.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-bottom___22Y8r::before,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-top___2Qxbo::after,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-top___2Qxbo::before{left:50%;border-bottom-width:0}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-bottom___22Y8r::before,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-top___2Qxbo::before{bottom:-11px;margin-left:-11px;border-top-color:rgba(0,0,0,.25)}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-bottom___22Y8r::after,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-top___2Qxbo::after{bottom:-10px;margin-left:-10px;border-top-color:#fff}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-left___2zKig,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-right___3rx16{margin-left:10px}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-left___2zKig::after,.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-left___2zKig::before,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-right___3rx16::after,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-right___3rx16::before{top:50%;border-left-width:0}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-left___2zKig::before,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-right___3rx16::before{left:-11px;margin-top:-11px;border-right-color:rgba(0,0,0,.25)}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-left___2zKig::after,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-right___3rx16::after{left:-10px;margin-top:-10px;border-right-color:#fff}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-top___2HupT,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-bottom___HOxsx{margin-top:10px}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-top___2HupT::after,.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-top___2HupT::before,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-bottom___HOxsx::after,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-bottom___HOxsx::before{left:50%;border-top-width:0}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-top___2HupT::before,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-bottom___HOxsx::before{top:-11px;margin-left:-11px;border-bottom-color:rgba(0,0,0,.25)}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-top___2HupT::after,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-bottom___HOxsx::after{top:-10px;margin-left:-10px;border-bottom-color:#f7f7f7}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-top___2HupT .bootstrap-min__popover-title___QKgR1::before,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-bottom___HOxsx .bootstrap-min__popover-title___QKgR1::before{position:absolute;top:0;left:50%;display:block;width:20px;margin-left:-10px;content:\"\";border-bottom:1px solid #f7f7f7}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-right___LxlGz,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-left___2XfxF{margin-left:-10px}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-right___LxlGz::after,.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-right___LxlGz::before,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-left___2XfxF::after,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-left___2XfxF::before{top:50%;border-right-width:0}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-right___LxlGz::before,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-left___2XfxF::before{right:-11px;margin-top:-11px;border-left-color:rgba(0,0,0,.25)}.bootstrap-min__popover___2gNi1.bootstrap-min__bs-tether-element-attached-right___LxlGz::after,.bootstrap-min__popover___2gNi1.bootstrap-min__popover-left___2XfxF::after{right:-10px;margin-top:-10px;border-left-color:#fff}.bootstrap-min__popover-title___QKgR1{padding:8px 14px;margin-bottom:0;font-size:1rem;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-top-right-radius:calc(.3rem - 1px);border-top-left-radius:calc(.3rem - 1px)}.bootstrap-min__popover-title___QKgR1:empty{display:none}.bootstrap-min__popover-content___uZTSI{padding:9px 14px}.bootstrap-min__popover___2gNi1::after,.bootstrap-min__popover___2gNi1::before{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid}.bootstrap-min__popover___2gNi1::before{content:\"\";border-width:11px}.bootstrap-min__popover___2gNi1::after{content:\"\";border-width:10px}.bootstrap-min__carousel___U5E08{position:relative}.bootstrap-min__carousel-inner___1BM4x{position:relative;width:100%;overflow:hidden}.bootstrap-min__carousel-item___1BluK{position:relative;display:none;width:100%}@media (-webkit-transform-3d){.bootstrap-min__carousel-item___1BluK{-webkit-transition:-webkit-transform .6s ease-in-out;transition:-webkit-transform .6s ease-in-out;-o-transition:-o-transform .6s ease-in-out;transition:transform .6s ease-in-out;transition:transform .6s ease-in-out,-webkit-transform .6s ease-in-out,-o-transform .6s ease-in-out;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-perspective:1000px;perspective:1000px}}@supports ((-webkit-transform:translate3d(0,0,0)) or (transform:translate3d(0,0,0))){.bootstrap-min__carousel-item___1BluK{-webkit-transition:-webkit-transform .6s ease-in-out;transition:-webkit-transform .6s ease-in-out;-o-transition:-o-transform .6s ease-in-out;transition:transform .6s ease-in-out;transition:transform .6s ease-in-out,-webkit-transform .6s ease-in-out,-o-transform .6s ease-in-out;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-perspective:1000px;perspective:1000px}}.bootstrap-min__carousel-item-next___1NsjI,.bootstrap-min__carousel-item-prev___stGUr,.bootstrap-min__carousel-item___1BluK.bootstrap-min__active___1ygEY{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.bootstrap-min__carousel-item-next___1NsjI,.bootstrap-min__carousel-item-prev___stGUr{position:absolute;top:0}@media (-webkit-transform-3d){.bootstrap-min__carousel-item-next___1NsjI.bootstrap-min__carousel-item-left___1Y3z5,.bootstrap-min__carousel-item-prev___stGUr.bootstrap-min__carousel-item-right___24Efq{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.bootstrap-min__active___1ygEY.bootstrap-min__carousel-item-right___24Efq,.bootstrap-min__carousel-item-next___1NsjI{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}.bootstrap-min__active___1ygEY.bootstrap-min__carousel-item-left___1Y3z5,.bootstrap-min__carousel-item-prev___stGUr{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}@supports ((-webkit-transform:translate3d(0,0,0)) or (transform:translate3d(0,0,0))){.bootstrap-min__carousel-item-next___1NsjI.bootstrap-min__carousel-item-left___1Y3z5,.bootstrap-min__carousel-item-prev___stGUr.bootstrap-min__carousel-item-right___24Efq{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.bootstrap-min__active___1ygEY.bootstrap-min__carousel-item-right___24Efq,.bootstrap-min__carousel-item-next___1NsjI{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}.bootstrap-min__active___1ygEY.bootstrap-min__carousel-item-left___1Y3z5,.bootstrap-min__carousel-item-prev___stGUr{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}.bootstrap-min__carousel-control-next___q7wph,.bootstrap-min__carousel-control-prev___tueNZ{position:absolute;top:0;bottom:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:15%;color:#fff;text-align:center;opacity:.5}.bootstrap-min__carousel-control-next___q7wph:focus,.bootstrap-min__carousel-control-next___q7wph:hover,.bootstrap-min__carousel-control-prev___tueNZ:focus,.bootstrap-min__carousel-control-prev___tueNZ:hover{color:#fff;text-decoration:none;outline:0;opacity:.9}.bootstrap-min__carousel-control-prev___tueNZ{left:0}.bootstrap-min__carousel-control-next___q7wph{right:0}.bootstrap-min__carousel-control-next-icon___36ygh,.bootstrap-min__carousel-control-prev-icon___KYs0i{display:inline-block;width:20px;height:20px;background:transparent no-repeat center center;-webkit-background-size:100% 100%;background-size:100% 100%}.bootstrap-min__carousel-control-prev-icon___KYs0i{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3E%3Cpath d='M4 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E\")}.bootstrap-min__carousel-control-next-icon___36ygh{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3E%3Cpath d='M1.5 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E\")}.bootstrap-min__carousel-indicators___2lJ0Y{position:absolute;right:0;bottom:10px;left:0;z-index:15;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding-left:0;margin-right:15%;margin-left:15%;list-style:none}.bootstrap-min__carousel-indicators___2lJ0Y li{position:relative;-webkit-box-flex:1;-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;max-width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:rgba(255,255,255,.5)}.bootstrap-min__carousel-indicators___2lJ0Y li::before{position:absolute;top:-10px;left:0;display:inline-block;width:100%;height:10px;content:\"\"}.bootstrap-min__carousel-indicators___2lJ0Y li::after{position:absolute;bottom:-10px;left:0;display:inline-block;width:100%;height:10px;content:\"\"}.bootstrap-min__carousel-indicators___2lJ0Y .bootstrap-min__active___1ygEY{background-color:#fff}.bootstrap-min__carousel-caption___fkH1a{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center}.bootstrap-min__align-baseline___3XFTF{vertical-align:baseline!important}.bootstrap-min__align-top___369fH{vertical-align:top!important}.bootstrap-min__align-middle___103kx{vertical-align:middle!important}.bootstrap-min__align-bottom___2qYRW{vertical-align:bottom!important}.bootstrap-min__align-text-bottom___3VMx0{vertical-align:text-bottom!important}.bootstrap-min__align-text-top___1t5Qx{vertical-align:text-top!important}.bootstrap-min__bg-faded___MtqHI{background-color:#f7f7f7}.bootstrap-min__bg-primary___qM_l8{background-color:#0275d8!important}a.bootstrap-min__bg-primary___qM_l8:focus,a.bootstrap-min__bg-primary___qM_l8:hover{background-color:#025aa5!important}.bootstrap-min__bg-success___14l-0{background-color:#5cb85c!important}a.bootstrap-min__bg-success___14l-0:focus,a.bootstrap-min__bg-success___14l-0:hover{background-color:#449d44!important}.bootstrap-min__bg-info___325VH{background-color:#5bc0de!important}a.bootstrap-min__bg-info___325VH:focus,a.bootstrap-min__bg-info___325VH:hover{background-color:#31b0d5!important}.bootstrap-min__bg-warning___2CgJd{background-color:#f0ad4e!important}a.bootstrap-min__bg-warning___2CgJd:focus,a.bootstrap-min__bg-warning___2CgJd:hover{background-color:#ec971f!important}.bootstrap-min__bg-danger___2voYx{background-color:#d9534f!important}a.bootstrap-min__bg-danger___2voYx:focus,a.bootstrap-min__bg-danger___2voYx:hover{background-color:#c9302c!important}.bootstrap-min__bg-inverse___j9MMr{background-color:#292b2c!important}a.bootstrap-min__bg-inverse___j9MMr:focus,a.bootstrap-min__bg-inverse___j9MMr:hover{background-color:#101112!important}.bootstrap-min__border-0___2A9ru{border:0!important}.bootstrap-min__border-top-0___ZLJmR{border-top:0!important}.bootstrap-min__border-right-0___2tLm4{border-right:0!important}.bootstrap-min__border-bottom-0___2qBMm{border-bottom:0!important}.bootstrap-min__border-left-0___10kCh{border-left:0!important}.bootstrap-min__rounded___1jVDU{border-radius:.25rem}.bootstrap-min__rounded-top___3xMZ3{border-top-right-radius:.25rem;border-top-left-radius:.25rem}.bootstrap-min__rounded-right___24cic{border-bottom-right-radius:.25rem;border-top-right-radius:.25rem}.bootstrap-min__rounded-bottom___3SGdq{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.bootstrap-min__rounded-left___JAShh{border-bottom-left-radius:.25rem;border-top-left-radius:.25rem}.bootstrap-min__rounded-circle___-kL4t{border-radius:50%}.bootstrap-min__rounded-0___17qBX{border-radius:0}.bootstrap-min__clearfix___1C-Ut::after{display:block;content:\"\";clear:both}.bootstrap-min__d-none___1p_nD{display:none!important}.bootstrap-min__d-inline___2hVUm{display:inline!important}.bootstrap-min__d-inline-block___RvjaX{display:inline-block!important}.bootstrap-min__d-block___2W6wm{display:block!important}.bootstrap-min__d-table___3hjOB{display:table!important}.bootstrap-min__d-table-cell___NArxr{display:table-cell!important}.bootstrap-min__d-flex___ATCo4{display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important}.bootstrap-min__d-inline-flex___ft6BX{display:-webkit-inline-box!important;display:-webkit-inline-flex!important;display:-ms-inline-flexbox!important;display:inline-flex!important}@media (min-width:576px){.bootstrap-min__d-sm-none___2HsX-{display:none!important}.bootstrap-min__d-sm-inline___3tnMo{display:inline!important}.bootstrap-min__d-sm-inline-block___1S7Zj{display:inline-block!important}.bootstrap-min__d-sm-block___1UcgT{display:block!important}.bootstrap-min__d-sm-table___139RD{display:table!important}.bootstrap-min__d-sm-table-cell___30FBO{display:table-cell!important}.bootstrap-min__d-sm-flex___3pJJU{display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important}.bootstrap-min__d-sm-inline-flex___1ZRnc{display:-webkit-inline-box!important;display:-webkit-inline-flex!important;display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:768px){.bootstrap-min__d-md-none___2CN04{display:none!important}.bootstrap-min__d-md-inline___2YLC1{display:inline!important}.bootstrap-min__d-md-inline-block___22NT_{display:inline-block!important}.bootstrap-min__d-md-block___2V3O-{display:block!important}.bootstrap-min__d-md-table___2JU2E{display:table!important}.bootstrap-min__d-md-table-cell___mlxH9{display:table-cell!important}.bootstrap-min__d-md-flex___1bGj6{display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important}.bootstrap-min__d-md-inline-flex___2rUrx{display:-webkit-inline-box!important;display:-webkit-inline-flex!important;display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:992px){.bootstrap-min__d-lg-none___FoNvU{display:none!important}.bootstrap-min__d-lg-inline___1Vrs1{display:inline!important}.bootstrap-min__d-lg-inline-block___3iiCs{display:inline-block!important}.bootstrap-min__d-lg-block___MGYVA{display:block!important}.bootstrap-min__d-lg-table___38aSb{display:table!important}.bootstrap-min__d-lg-table-cell___10g-N{display:table-cell!important}.bootstrap-min__d-lg-flex___3dMop{display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important}.bootstrap-min__d-lg-inline-flex___Z0vbK{display:-webkit-inline-box!important;display:-webkit-inline-flex!important;display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:1200px){.bootstrap-min__d-xl-none___px8RG{display:none!important}.bootstrap-min__d-xl-inline___2CgG4{display:inline!important}.bootstrap-min__d-xl-inline-block___15X1-{display:inline-block!important}.bootstrap-min__d-xl-block___3_nBm{display:block!important}.bootstrap-min__d-xl-table___1g7uS{display:table!important}.bootstrap-min__d-xl-table-cell___3g6G4{display:table-cell!important}.bootstrap-min__d-xl-flex___2D2re{display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important}.bootstrap-min__d-xl-inline-flex___1cwJh{display:-webkit-inline-box!important;display:-webkit-inline-flex!important;display:-ms-inline-flexbox!important;display:inline-flex!important}}.bootstrap-min__flex-first___3ppXu{-webkit-box-ordinal-group:0;-webkit-order:-1;-ms-flex-order:-1;order:-1}.bootstrap-min__flex-last___rO-wN{-webkit-box-ordinal-group:2;-webkit-order:1;-ms-flex-order:1;order:1}.bootstrap-min__flex-unordered___1YPaf{-webkit-box-ordinal-group:1;-webkit-order:0;-ms-flex-order:0;order:0}.bootstrap-min__flex-row___1pBjQ{-webkit-box-orient:horizontal!important;-webkit-box-direction:normal!important;-webkit-flex-direction:row!important;-ms-flex-direction:row!important;flex-direction:row!important}.bootstrap-min__flex-column___1tWR_{-webkit-box-orient:vertical!important;-webkit-box-direction:normal!important;-webkit-flex-direction:column!important;-ms-flex-direction:column!important;flex-direction:column!important}.bootstrap-min__flex-row-reverse___uF883{-webkit-box-orient:horizontal!important;-webkit-box-direction:reverse!important;-webkit-flex-direction:row-reverse!important;-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.bootstrap-min__flex-column-reverse___j87G0{-webkit-box-orient:vertical!important;-webkit-box-direction:reverse!important;-webkit-flex-direction:column-reverse!important;-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.bootstrap-min__flex-wrap___3ysiI{-webkit-flex-wrap:wrap!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.bootstrap-min__flex-nowrap___3OAyH{-webkit-flex-wrap:nowrap!important;-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.bootstrap-min__flex-wrap-reverse___Ub0jj{-webkit-flex-wrap:wrap-reverse!important;-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.bootstrap-min__justify-content-start___1k9MS{-webkit-box-pack:start!important;-webkit-justify-content:flex-start!important;-ms-flex-pack:start!important;justify-content:flex-start!important}.bootstrap-min__justify-content-end___V4ooJ{-webkit-box-pack:end!important;-webkit-justify-content:flex-end!important;-ms-flex-pack:end!important;justify-content:flex-end!important}.bootstrap-min__justify-content-center___12Oys{-webkit-box-pack:center!important;-webkit-justify-content:center!important;-ms-flex-pack:center!important;justify-content:center!important}.bootstrap-min__justify-content-between___1CBM7{-webkit-box-pack:justify!important;-webkit-justify-content:space-between!important;-ms-flex-pack:justify!important;justify-content:space-between!important}.bootstrap-min__justify-content-around___b7zZK{-webkit-justify-content:space-around!important;-ms-flex-pack:distribute!important;justify-content:space-around!important}.bootstrap-min__align-items-start___23VWD{-webkit-box-align:start!important;-webkit-align-items:flex-start!important;-ms-flex-align:start!important;align-items:flex-start!important}.bootstrap-min__align-items-end___2jTHp{-webkit-box-align:end!important;-webkit-align-items:flex-end!important;-ms-flex-align:end!important;align-items:flex-end!important}.bootstrap-min__align-items-center___2E7I4{-webkit-box-align:center!important;-webkit-align-items:center!important;-ms-flex-align:center!important;align-items:center!important}.bootstrap-min__align-items-baseline___255OT{-webkit-box-align:baseline!important;-webkit-align-items:baseline!important;-ms-flex-align:baseline!important;align-items:baseline!important}.bootstrap-min__align-items-stretch___34RsL{-webkit-box-align:stretch!important;-webkit-align-items:stretch!important;-ms-flex-align:stretch!important;align-items:stretch!important}.bootstrap-min__align-content-start___14Ymo{-webkit-align-content:flex-start!important;-ms-flex-line-pack:start!important;align-content:flex-start!important}.bootstrap-min__align-content-end___1ArAY{-webkit-align-content:flex-end!important;-ms-flex-line-pack:end!important;align-content:flex-end!important}.bootstrap-min__align-content-center___xut6s{-webkit-align-content:center!important;-ms-flex-line-pack:center!important;align-content:center!important}.bootstrap-min__align-content-between___F5o6j{-webkit-align-content:space-between!important;-ms-flex-line-pack:justify!important;align-content:space-between!important}.bootstrap-min__align-content-around___2HLyZ{-webkit-align-content:space-around!important;-ms-flex-line-pack:distribute!important;align-content:space-around!important}.bootstrap-min__align-content-stretch___1PlXu{-webkit-align-content:stretch!important;-ms-flex-line-pack:stretch!important;align-content:stretch!important}.bootstrap-min__align-self-auto___2q_Nz{-webkit-align-self:auto!important;-ms-flex-item-align:auto!important;-ms-grid-row-align:auto!important;align-self:auto!important}.bootstrap-min__align-self-start___3FudZ{-webkit-align-self:flex-start!important;-ms-flex-item-align:start!important;align-self:flex-start!important}.bootstrap-min__align-self-end___cQkF2{-webkit-align-self:flex-end!important;-ms-flex-item-align:end!important;align-self:flex-end!important}.bootstrap-min__align-self-center___3V9J7{-webkit-align-self:center!important;-ms-flex-item-align:center!important;-ms-grid-row-align:center!important;align-self:center!important}.bootstrap-min__align-self-baseline___Yuwlj{-webkit-align-self:baseline!important;-ms-flex-item-align:baseline!important;align-self:baseline!important}.bootstrap-min__align-self-stretch___2mYhF{-webkit-align-self:stretch!important;-ms-flex-item-align:stretch!important;-ms-grid-row-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.bootstrap-min__flex-sm-first___vM2LC{-webkit-box-ordinal-group:0;-webkit-order:-1;-ms-flex-order:-1;order:-1}.bootstrap-min__flex-sm-last___3I_Dt{-webkit-box-ordinal-group:2;-webkit-order:1;-ms-flex-order:1;order:1}.bootstrap-min__flex-sm-unordered___1hJpE{-webkit-box-ordinal-group:1;-webkit-order:0;-ms-flex-order:0;order:0}.bootstrap-min__flex-sm-row___2wH9V{-webkit-box-orient:horizontal!important;-webkit-box-direction:normal!important;-webkit-flex-direction:row!important;-ms-flex-direction:row!important;flex-direction:row!important}.bootstrap-min__flex-sm-column___1PAzm{-webkit-box-orient:vertical!important;-webkit-box-direction:normal!important;-webkit-flex-direction:column!important;-ms-flex-direction:column!important;flex-direction:column!important}.bootstrap-min__flex-sm-row-reverse___3PgU1{-webkit-box-orient:horizontal!important;-webkit-box-direction:reverse!important;-webkit-flex-direction:row-reverse!important;-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.bootstrap-min__flex-sm-column-reverse___3fJEq{-webkit-box-orient:vertical!important;-webkit-box-direction:reverse!important;-webkit-flex-direction:column-reverse!important;-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.bootstrap-min__flex-sm-wrap___Welmr{-webkit-flex-wrap:wrap!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.bootstrap-min__flex-sm-nowrap___1zjAR{-webkit-flex-wrap:nowrap!important;-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.bootstrap-min__flex-sm-wrap-reverse___3_rtA{-webkit-flex-wrap:wrap-reverse!important;-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.bootstrap-min__justify-content-sm-start___139s0{-webkit-box-pack:start!important;-webkit-justify-content:flex-start!important;-ms-flex-pack:start!important;justify-content:flex-start!important}.bootstrap-min__justify-content-sm-end___xduvp{-webkit-box-pack:end!important;-webkit-justify-content:flex-end!important;-ms-flex-pack:end!important;justify-content:flex-end!important}.bootstrap-min__justify-content-sm-center___31PPx{-webkit-box-pack:center!important;-webkit-justify-content:center!important;-ms-flex-pack:center!important;justify-content:center!important}.bootstrap-min__justify-content-sm-between___1d-na{-webkit-box-pack:justify!important;-webkit-justify-content:space-between!important;-ms-flex-pack:justify!important;justify-content:space-between!important}.bootstrap-min__justify-content-sm-around___3Famm{-webkit-justify-content:space-around!important;-ms-flex-pack:distribute!important;justify-content:space-around!important}.bootstrap-min__align-items-sm-start___MKrQq{-webkit-box-align:start!important;-webkit-align-items:flex-start!important;-ms-flex-align:start!important;align-items:flex-start!important}.bootstrap-min__align-items-sm-end___ocuy0{-webkit-box-align:end!important;-webkit-align-items:flex-end!important;-ms-flex-align:end!important;align-items:flex-end!important}.bootstrap-min__align-items-sm-center___h4brH{-webkit-box-align:center!important;-webkit-align-items:center!important;-ms-flex-align:center!important;align-items:center!important}.bootstrap-min__align-items-sm-baseline___y1ZOS{-webkit-box-align:baseline!important;-webkit-align-items:baseline!important;-ms-flex-align:baseline!important;align-items:baseline!important}.bootstrap-min__align-items-sm-stretch___39SG6{-webkit-box-align:stretch!important;-webkit-align-items:stretch!important;-ms-flex-align:stretch!important;align-items:stretch!important}.bootstrap-min__align-content-sm-start___2i9lT{-webkit-align-content:flex-start!important;-ms-flex-line-pack:start!important;align-content:flex-start!important}.bootstrap-min__align-content-sm-end___2yyO7{-webkit-align-content:flex-end!important;-ms-flex-line-pack:end!important;align-content:flex-end!important}.bootstrap-min__align-content-sm-center___3uo40{-webkit-align-content:center!important;-ms-flex-line-pack:center!important;align-content:center!important}.bootstrap-min__align-content-sm-between___1oU5N{-webkit-align-content:space-between!important;-ms-flex-line-pack:justify!important;align-content:space-between!important}.bootstrap-min__align-content-sm-around___2VCFK{-webkit-align-content:space-around!important;-ms-flex-line-pack:distribute!important;align-content:space-around!important}.bootstrap-min__align-content-sm-stretch___vw1sG{-webkit-align-content:stretch!important;-ms-flex-line-pack:stretch!important;align-content:stretch!important}.bootstrap-min__align-self-sm-auto___3S2Og{-webkit-align-self:auto!important;-ms-flex-item-align:auto!important;-ms-grid-row-align:auto!important;align-self:auto!important}.bootstrap-min__align-self-sm-start____pmEE{-webkit-align-self:flex-start!important;-ms-flex-item-align:start!important;align-self:flex-start!important}.bootstrap-min__align-self-sm-end___3_f6G{-webkit-align-self:flex-end!important;-ms-flex-item-align:end!important;align-self:flex-end!important}.bootstrap-min__align-self-sm-center___2AWlm{-webkit-align-self:center!important;-ms-flex-item-align:center!important;-ms-grid-row-align:center!important;align-self:center!important}.bootstrap-min__align-self-sm-baseline___2tGqa{-webkit-align-self:baseline!important;-ms-flex-item-align:baseline!important;align-self:baseline!important}.bootstrap-min__align-self-sm-stretch___2bziT{-webkit-align-self:stretch!important;-ms-flex-item-align:stretch!important;-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.bootstrap-min__flex-md-first___1BXkO{-webkit-box-ordinal-group:0;-webkit-order:-1;-ms-flex-order:-1;order:-1}.bootstrap-min__flex-md-last___1avoU{-webkit-box-ordinal-group:2;-webkit-order:1;-ms-flex-order:1;order:1}.bootstrap-min__flex-md-unordered___2-eMZ{-webkit-box-ordinal-group:1;-webkit-order:0;-ms-flex-order:0;order:0}.bootstrap-min__flex-md-row___1e6wV{-webkit-box-orient:horizontal!important;-webkit-box-direction:normal!important;-webkit-flex-direction:row!important;-ms-flex-direction:row!important;flex-direction:row!important}.bootstrap-min__flex-md-column___2bzNq{-webkit-box-orient:vertical!important;-webkit-box-direction:normal!important;-webkit-flex-direction:column!important;-ms-flex-direction:column!important;flex-direction:column!important}.bootstrap-min__flex-md-row-reverse___359xp{-webkit-box-orient:horizontal!important;-webkit-box-direction:reverse!important;-webkit-flex-direction:row-reverse!important;-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.bootstrap-min__flex-md-column-reverse___2-qTZ{-webkit-box-orient:vertical!important;-webkit-box-direction:reverse!important;-webkit-flex-direction:column-reverse!important;-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.bootstrap-min__flex-md-wrap___1C5Vd{-webkit-flex-wrap:wrap!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.bootstrap-min__flex-md-nowrap___3apTn{-webkit-flex-wrap:nowrap!important;-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.bootstrap-min__flex-md-wrap-reverse___Enee2{-webkit-flex-wrap:wrap-reverse!important;-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.bootstrap-min__justify-content-md-start___1susL{-webkit-box-pack:start!important;-webkit-justify-content:flex-start!important;-ms-flex-pack:start!important;justify-content:flex-start!important}.bootstrap-min__justify-content-md-end___1QJdx{-webkit-box-pack:end!important;-webkit-justify-content:flex-end!important;-ms-flex-pack:end!important;justify-content:flex-end!important}.bootstrap-min__justify-content-md-center___2SLkY{-webkit-box-pack:center!important;-webkit-justify-content:center!important;-ms-flex-pack:center!important;justify-content:center!important}.bootstrap-min__justify-content-md-between___tv2Y-{-webkit-box-pack:justify!important;-webkit-justify-content:space-between!important;-ms-flex-pack:justify!important;justify-content:space-between!important}.bootstrap-min__justify-content-md-around___37hBP{-webkit-justify-content:space-around!important;-ms-flex-pack:distribute!important;justify-content:space-around!important}.bootstrap-min__align-items-md-start___rX2QZ{-webkit-box-align:start!important;-webkit-align-items:flex-start!important;-ms-flex-align:start!important;align-items:flex-start!important}.bootstrap-min__align-items-md-end___13Eyp{-webkit-box-align:end!important;-webkit-align-items:flex-end!important;-ms-flex-align:end!important;align-items:flex-end!important}.bootstrap-min__align-items-md-center___3Kuxi{-webkit-box-align:center!important;-webkit-align-items:center!important;-ms-flex-align:center!important;align-items:center!important}.bootstrap-min__align-items-md-baseline___1dKZ-{-webkit-box-align:baseline!important;-webkit-align-items:baseline!important;-ms-flex-align:baseline!important;align-items:baseline!important}.bootstrap-min__align-items-md-stretch___1FZ6-{-webkit-box-align:stretch!important;-webkit-align-items:stretch!important;-ms-flex-align:stretch!important;align-items:stretch!important}.bootstrap-min__align-content-md-start___3EPdS{-webkit-align-content:flex-start!important;-ms-flex-line-pack:start!important;align-content:flex-start!important}.bootstrap-min__align-content-md-end___nqKa4{-webkit-align-content:flex-end!important;-ms-flex-line-pack:end!important;align-content:flex-end!important}.bootstrap-min__align-content-md-center___3yEOt{-webkit-align-content:center!important;-ms-flex-line-pack:center!important;align-content:center!important}.bootstrap-min__align-content-md-between___2bJN1{-webkit-align-content:space-between!important;-ms-flex-line-pack:justify!important;align-content:space-between!important}.bootstrap-min__align-content-md-around___1sQDX{-webkit-align-content:space-around!important;-ms-flex-line-pack:distribute!important;align-content:space-around!important}.bootstrap-min__align-content-md-stretch___jZugu{-webkit-align-content:stretch!important;-ms-flex-line-pack:stretch!important;align-content:stretch!important}.bootstrap-min__align-self-md-auto___2azun{-webkit-align-self:auto!important;-ms-flex-item-align:auto!important;-ms-grid-row-align:auto!important;align-self:auto!important}.bootstrap-min__align-self-md-start___1U5rW{-webkit-align-self:flex-start!important;-ms-flex-item-align:start!important;align-self:flex-start!important}.bootstrap-min__align-self-md-end___1Vvxi{-webkit-align-self:flex-end!important;-ms-flex-item-align:end!important;align-self:flex-end!important}.bootstrap-min__align-self-md-center___jBsot{-webkit-align-self:center!important;-ms-flex-item-align:center!important;-ms-grid-row-align:center!important;align-self:center!important}.bootstrap-min__align-self-md-baseline___y7TBB{-webkit-align-self:baseline!important;-ms-flex-item-align:baseline!important;align-self:baseline!important}.bootstrap-min__align-self-md-stretch___eOE5h{-webkit-align-self:stretch!important;-ms-flex-item-align:stretch!important;-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:992px){.bootstrap-min__flex-lg-first___2rEwt{-webkit-box-ordinal-group:0;-webkit-order:-1;-ms-flex-order:-1;order:-1}.bootstrap-min__flex-lg-last___3DI4u{-webkit-box-ordinal-group:2;-webkit-order:1;-ms-flex-order:1;order:1}.bootstrap-min__flex-lg-unordered___1LjxB{-webkit-box-ordinal-group:1;-webkit-order:0;-ms-flex-order:0;order:0}.bootstrap-min__flex-lg-row___1SyWq{-webkit-box-orient:horizontal!important;-webkit-box-direction:normal!important;-webkit-flex-direction:row!important;-ms-flex-direction:row!important;flex-direction:row!important}.bootstrap-min__flex-lg-column___Lle_1{-webkit-box-orient:vertical!important;-webkit-box-direction:normal!important;-webkit-flex-direction:column!important;-ms-flex-direction:column!important;flex-direction:column!important}.bootstrap-min__flex-lg-row-reverse___3ZiYL{-webkit-box-orient:horizontal!important;-webkit-box-direction:reverse!important;-webkit-flex-direction:row-reverse!important;-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.bootstrap-min__flex-lg-column-reverse___1DEYG{-webkit-box-orient:vertical!important;-webkit-box-direction:reverse!important;-webkit-flex-direction:column-reverse!important;-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.bootstrap-min__flex-lg-wrap___3In7n{-webkit-flex-wrap:wrap!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.bootstrap-min__flex-lg-nowrap___2XIyI{-webkit-flex-wrap:nowrap!important;-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.bootstrap-min__flex-lg-wrap-reverse___oA4fs{-webkit-flex-wrap:wrap-reverse!important;-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.bootstrap-min__justify-content-lg-start___3vhPX{-webkit-box-pack:start!important;-webkit-justify-content:flex-start!important;-ms-flex-pack:start!important;justify-content:flex-start!important}.bootstrap-min__justify-content-lg-end___sCpYD{-webkit-box-pack:end!important;-webkit-justify-content:flex-end!important;-ms-flex-pack:end!important;justify-content:flex-end!important}.bootstrap-min__justify-content-lg-center___1GBmS{-webkit-box-pack:center!important;-webkit-justify-content:center!important;-ms-flex-pack:center!important;justify-content:center!important}.bootstrap-min__justify-content-lg-between___-lfhm{-webkit-box-pack:justify!important;-webkit-justify-content:space-between!important;-ms-flex-pack:justify!important;justify-content:space-between!important}.bootstrap-min__justify-content-lg-around___1q6OS{-webkit-justify-content:space-around!important;-ms-flex-pack:distribute!important;justify-content:space-around!important}.bootstrap-min__align-items-lg-start___2-kcE{-webkit-box-align:start!important;-webkit-align-items:flex-start!important;-ms-flex-align:start!important;align-items:flex-start!important}.bootstrap-min__align-items-lg-end___wUGyS{-webkit-box-align:end!important;-webkit-align-items:flex-end!important;-ms-flex-align:end!important;align-items:flex-end!important}.bootstrap-min__align-items-lg-center___2E6UE{-webkit-box-align:center!important;-webkit-align-items:center!important;-ms-flex-align:center!important;align-items:center!important}.bootstrap-min__align-items-lg-baseline___1JWj9{-webkit-box-align:baseline!important;-webkit-align-items:baseline!important;-ms-flex-align:baseline!important;align-items:baseline!important}.bootstrap-min__align-items-lg-stretch___1l48a{-webkit-box-align:stretch!important;-webkit-align-items:stretch!important;-ms-flex-align:stretch!important;align-items:stretch!important}.bootstrap-min__align-content-lg-start___16mMi{-webkit-align-content:flex-start!important;-ms-flex-line-pack:start!important;align-content:flex-start!important}.bootstrap-min__align-content-lg-end___3iFv2{-webkit-align-content:flex-end!important;-ms-flex-line-pack:end!important;align-content:flex-end!important}.bootstrap-min__align-content-lg-center___2wPJp{-webkit-align-content:center!important;-ms-flex-line-pack:center!important;align-content:center!important}.bootstrap-min__align-content-lg-between___1ebKo{-webkit-align-content:space-between!important;-ms-flex-line-pack:justify!important;align-content:space-between!important}.bootstrap-min__align-content-lg-around___1V7fJ{-webkit-align-content:space-around!important;-ms-flex-line-pack:distribute!important;align-content:space-around!important}.bootstrap-min__align-content-lg-stretch___1EH32{-webkit-align-content:stretch!important;-ms-flex-line-pack:stretch!important;align-content:stretch!important}.bootstrap-min__align-self-lg-auto___3pgGW{-webkit-align-self:auto!important;-ms-flex-item-align:auto!important;-ms-grid-row-align:auto!important;align-self:auto!important}.bootstrap-min__align-self-lg-start___1AV94{-webkit-align-self:flex-start!important;-ms-flex-item-align:start!important;align-self:flex-start!important}.bootstrap-min__align-self-lg-end___1wHyY{-webkit-align-self:flex-end!important;-ms-flex-item-align:end!important;align-self:flex-end!important}.bootstrap-min__align-self-lg-center___2u-hc{-webkit-align-self:center!important;-ms-flex-item-align:center!important;-ms-grid-row-align:center!important;align-self:center!important}.bootstrap-min__align-self-lg-baseline___1NGDs{-webkit-align-self:baseline!important;-ms-flex-item-align:baseline!important;align-self:baseline!important}.bootstrap-min__align-self-lg-stretch___q061V{-webkit-align-self:stretch!important;-ms-flex-item-align:stretch!important;-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:1200px){.bootstrap-min__flex-xl-first___2DytZ{-webkit-box-ordinal-group:0;-webkit-order:-1;-ms-flex-order:-1;order:-1}.bootstrap-min__flex-xl-last___ouTEm{-webkit-box-ordinal-group:2;-webkit-order:1;-ms-flex-order:1;order:1}.bootstrap-min__flex-xl-unordered___1fc12{-webkit-box-ordinal-group:1;-webkit-order:0;-ms-flex-order:0;order:0}.bootstrap-min__flex-xl-row___3TMk-{-webkit-box-orient:horizontal!important;-webkit-box-direction:normal!important;-webkit-flex-direction:row!important;-ms-flex-direction:row!important;flex-direction:row!important}.bootstrap-min__flex-xl-column___D4Oyc{-webkit-box-orient:vertical!important;-webkit-box-direction:normal!important;-webkit-flex-direction:column!important;-ms-flex-direction:column!important;flex-direction:column!important}.bootstrap-min__flex-xl-row-reverse___1AwoM{-webkit-box-orient:horizontal!important;-webkit-box-direction:reverse!important;-webkit-flex-direction:row-reverse!important;-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.bootstrap-min__flex-xl-column-reverse___3iwZr{-webkit-box-orient:vertical!important;-webkit-box-direction:reverse!important;-webkit-flex-direction:column-reverse!important;-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.bootstrap-min__flex-xl-wrap___3VXdw{-webkit-flex-wrap:wrap!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.bootstrap-min__flex-xl-nowrap___2XBEs{-webkit-flex-wrap:nowrap!important;-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.bootstrap-min__flex-xl-wrap-reverse___3GRXH{-webkit-flex-wrap:wrap-reverse!important;-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.bootstrap-min__justify-content-xl-start___1BLmb{-webkit-box-pack:start!important;-webkit-justify-content:flex-start!important;-ms-flex-pack:start!important;justify-content:flex-start!important}.bootstrap-min__justify-content-xl-end___2slLJ{-webkit-box-pack:end!important;-webkit-justify-content:flex-end!important;-ms-flex-pack:end!important;justify-content:flex-end!important}.bootstrap-min__justify-content-xl-center___3zY3I{-webkit-box-pack:center!important;-webkit-justify-content:center!important;-ms-flex-pack:center!important;justify-content:center!important}.bootstrap-min__justify-content-xl-between___1NkNU{-webkit-box-pack:justify!important;-webkit-justify-content:space-between!important;-ms-flex-pack:justify!important;justify-content:space-between!important}.bootstrap-min__justify-content-xl-around___1v4lu{-webkit-justify-content:space-around!important;-ms-flex-pack:distribute!important;justify-content:space-around!important}.bootstrap-min__align-items-xl-start___1jy7f{-webkit-box-align:start!important;-webkit-align-items:flex-start!important;-ms-flex-align:start!important;align-items:flex-start!important}.bootstrap-min__align-items-xl-end___1MYZl{-webkit-box-align:end!important;-webkit-align-items:flex-end!important;-ms-flex-align:end!important;align-items:flex-end!important}.bootstrap-min__align-items-xl-center___2Kys4{-webkit-box-align:center!important;-webkit-align-items:center!important;-ms-flex-align:center!important;align-items:center!important}.bootstrap-min__align-items-xl-baseline___3xL48{-webkit-box-align:baseline!important;-webkit-align-items:baseline!important;-ms-flex-align:baseline!important;align-items:baseline!important}.bootstrap-min__align-items-xl-stretch___3o_Ld{-webkit-box-align:stretch!important;-webkit-align-items:stretch!important;-ms-flex-align:stretch!important;align-items:stretch!important}.bootstrap-min__align-content-xl-start___3yfyM{-webkit-align-content:flex-start!important;-ms-flex-line-pack:start!important;align-content:flex-start!important}.bootstrap-min__align-content-xl-end___icdd-{-webkit-align-content:flex-end!important;-ms-flex-line-pack:end!important;align-content:flex-end!important}.bootstrap-min__align-content-xl-center___1EoA6{-webkit-align-content:center!important;-ms-flex-line-pack:center!important;align-content:center!important}.bootstrap-min__align-content-xl-between___JUAP8{-webkit-align-content:space-between!important;-ms-flex-line-pack:justify!important;align-content:space-between!important}.bootstrap-min__align-content-xl-around___1NDZK{-webkit-align-content:space-around!important;-ms-flex-line-pack:distribute!important;align-content:space-around!important}.bootstrap-min__align-content-xl-stretch___1jWjA{-webkit-align-content:stretch!important;-ms-flex-line-pack:stretch!important;align-content:stretch!important}.bootstrap-min__align-self-xl-auto___udMnV{-webkit-align-self:auto!important;-ms-flex-item-align:auto!important;-ms-grid-row-align:auto!important;align-self:auto!important}.bootstrap-min__align-self-xl-start___1MPM1{-webkit-align-self:flex-start!important;-ms-flex-item-align:start!important;align-self:flex-start!important}.bootstrap-min__align-self-xl-end___2faue{-webkit-align-self:flex-end!important;-ms-flex-item-align:end!important;align-self:flex-end!important}.bootstrap-min__align-self-xl-center___3rXkq{-webkit-align-self:center!important;-ms-flex-item-align:center!important;-ms-grid-row-align:center!important;align-self:center!important}.bootstrap-min__align-self-xl-baseline___WE0Nv{-webkit-align-self:baseline!important;-ms-flex-item-align:baseline!important;align-self:baseline!important}.bootstrap-min__align-self-xl-stretch___29Ygy{-webkit-align-self:stretch!important;-ms-flex-item-align:stretch!important;-ms-grid-row-align:stretch!important;align-self:stretch!important}}.bootstrap-min__float-left___n1zsN{float:left!important}.bootstrap-min__float-right___2MIW0{float:right!important}.bootstrap-min__float-none___1uLt7{float:none!important}@media (min-width:576px){.bootstrap-min__float-sm-left___2lkDA{float:left!important}.bootstrap-min__float-sm-right___jB8YL{float:right!important}.bootstrap-min__float-sm-none___39PQA{float:none!important}}@media (min-width:768px){.bootstrap-min__float-md-left___2qR4U{float:left!important}.bootstrap-min__float-md-right____NUt8{float:right!important}.bootstrap-min__float-md-none___1Jc4-{float:none!important}}@media (min-width:992px){.bootstrap-min__float-lg-left___1QB-Y{float:left!important}.bootstrap-min__float-lg-right___2CGw-{float:right!important}.bootstrap-min__float-lg-none___19imE{float:none!important}}@media (min-width:1200px){.bootstrap-min__float-xl-left___1s7o8{float:left!important}.bootstrap-min__float-xl-right___2lr1B{float:right!important}.bootstrap-min__float-xl-none___2cM0i{float:none!important}}.bootstrap-min__fixed-top___1wRIp{position:fixed;top:0;right:0;left:0;z-index:1030}.bootstrap-min__fixed-bottom___HazWz{position:fixed;right:0;bottom:0;left:0;z-index:1030}.bootstrap-min__sticky-top___1Nt4Q{position:-webkit-sticky;position:sticky;top:0;z-index:1030}.bootstrap-min__sr-only___eahFp{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.bootstrap-min__sr-only-focusable___IzP1P:active,.bootstrap-min__sr-only-focusable___IzP1P:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}.bootstrap-min__w-25___hr6CS{width:25%!important}.bootstrap-min__w-50___1PYbN{width:50%!important}.bootstrap-min__w-75___VXWkG{width:75%!important}.bootstrap-min__w-100___308zt{width:100%!important}.bootstrap-min__h-25___3r02M{height:25%!important}.bootstrap-min__h-50___2bcFj{height:50%!important}.bootstrap-min__h-75___31ZnR{height:75%!important}.bootstrap-min__h-100___3LDGq{height:100%!important}.bootstrap-min__mw-100___2epVS{max-width:100%!important}.bootstrap-min__mh-100___2JyQ0{max-height:100%!important}.bootstrap-min__m-0___cdgy5{margin:0 0!important}.bootstrap-min__mt-0___3DvQu{margin-top:0!important}.bootstrap-min__mr-0___26Ufp{margin-right:0!important}.bootstrap-min__mb-0___3Vhoq{margin-bottom:0!important}.bootstrap-min__ml-0___3WutA{margin-left:0!important}.bootstrap-min__mx-0___2knJ6{margin-right:0!important;margin-left:0!important}.bootstrap-min__my-0___3Ygfl{margin-top:0!important;margin-bottom:0!important}.bootstrap-min__m-1___2WRS1{margin:.25rem .25rem!important}.bootstrap-min__mt-1___2SBSQ{margin-top:.25rem!important}.bootstrap-min__mr-1___2mHdR{margin-right:.25rem!important}.bootstrap-min__mb-1___3VyWx{margin-bottom:.25rem!important}.bootstrap-min__ml-1___2VA0H{margin-left:.25rem!important}.bootstrap-min__mx-1___16Vo3{margin-right:.25rem!important;margin-left:.25rem!important}.bootstrap-min__my-1___3QH4c{margin-top:.25rem!important;margin-bottom:.25rem!important}.bootstrap-min__m-2___22U6h{margin:.5rem .5rem!important}.bootstrap-min__mt-2___2NRjA{margin-top:.5rem!important}.bootstrap-min__mr-2___1sm5t{margin-right:.5rem!important}.bootstrap-min__mb-2___1Z5Tu{margin-bottom:.5rem!important}.bootstrap-min__ml-2___5r-Xw{margin-left:.5rem!important}.bootstrap-min__mx-2___3WOHy{margin-right:.5rem!important;margin-left:.5rem!important}.bootstrap-min__my-2___1JSYb{margin-top:.5rem!important;margin-bottom:.5rem!important}.bootstrap-min__m-3___1bOaZ{margin:1rem 1rem!important}.bootstrap-min__mt-3___3edgt{margin-top:1rem!important}.bootstrap-min__mr-3___3-vk9{margin-right:1rem!important}.bootstrap-min__mb-3___uHUTt{margin-bottom:1rem!important}.bootstrap-min__ml-3___1C9pd{margin-left:1rem!important}.bootstrap-min__mx-3___gltay{margin-right:1rem!important;margin-left:1rem!important}.bootstrap-min__my-3___1n3BO{margin-top:1rem!important;margin-bottom:1rem!important}.bootstrap-min__m-4___3eO1K{margin:1.5rem 1.5rem!important}.bootstrap-min__mt-4___nfDFr{margin-top:1.5rem!important}.bootstrap-min__mr-4___2MEaf{margin-right:1.5rem!important}.bootstrap-min__mb-4___90qFl{margin-bottom:1.5rem!important}.bootstrap-min__ml-4___3ENH-{margin-left:1.5rem!important}.bootstrap-min__mx-4___1v_lg{margin-right:1.5rem!important;margin-left:1.5rem!important}.bootstrap-min__my-4___ewD7z{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.bootstrap-min__m-5___13tei{margin:3rem 3rem!important}.bootstrap-min__mt-5___1otnZ{margin-top:3rem!important}.bootstrap-min__mr-5___1MLem{margin-right:3rem!important}.bootstrap-min__mb-5___1Fi5E{margin-bottom:3rem!important}.bootstrap-min__ml-5___319Jk{margin-left:3rem!important}.bootstrap-min__mx-5___3Qfly{margin-right:3rem!important;margin-left:3rem!important}.bootstrap-min__my-5___3BXMn{margin-top:3rem!important;margin-bottom:3rem!important}.bootstrap-min__p-0___3lD53{padding:0 0!important}.bootstrap-min__pt-0___2F-sh{padding-top:0!important}.bootstrap-min__pr-0___3LjW4{padding-right:0!important}.bootstrap-min__pb-0___396K_{padding-bottom:0!important}.bootstrap-min__pl-0___7jt36{padding-left:0!important}.bootstrap-min__px-0___fez2P{padding-right:0!important;padding-left:0!important}.bootstrap-min__py-0___3A_XA{padding-top:0!important;padding-bottom:0!important}.bootstrap-min__p-1___1DEGG{padding:.25rem .25rem!important}.bootstrap-min__pt-1___4F4fO{padding-top:.25rem!important}.bootstrap-min__pr-1___27qX9{padding-right:.25rem!important}.bootstrap-min__pb-1___s6ZoG{padding-bottom:.25rem!important}.bootstrap-min__pl-1___2klSz{padding-left:.25rem!important}.bootstrap-min__px-1___Gzy2V{padding-right:.25rem!important;padding-left:.25rem!important}.bootstrap-min__py-1___Q0DEB{padding-top:.25rem!important;padding-bottom:.25rem!important}.bootstrap-min__p-2___1pIza{padding:.5rem .5rem!important}.bootstrap-min__pt-2___2PpZG{padding-top:.5rem!important}.bootstrap-min__pr-2___2_IoC{padding-right:.5rem!important}.bootstrap-min__pb-2___1Abn_{padding-bottom:.5rem!important}.bootstrap-min__pl-2___xoRMt{padding-left:.5rem!important}.bootstrap-min__px-2___8vkz0{padding-right:.5rem!important;padding-left:.5rem!important}.bootstrap-min__py-2___11CVj{padding-top:.5rem!important;padding-bottom:.5rem!important}.bootstrap-min__p-3___2Ava4{padding:1rem 1rem!important}.bootstrap-min__pt-3___-gXmS{padding-top:1rem!important}.bootstrap-min__pr-3___3ofey{padding-right:1rem!important}.bootstrap-min__pb-3___2GnJ2{padding-bottom:1rem!important}.bootstrap-min__pl-3___1u4bq{padding-left:1rem!important}.bootstrap-min__px-3___3xqo9{padding-right:1rem!important;padding-left:1rem!important}.bootstrap-min__py-3___30L0y{padding-top:1rem!important;padding-bottom:1rem!important}.bootstrap-min__p-4___2BCfS{padding:1.5rem 1.5rem!important}.bootstrap-min__pt-4___1q1mk{padding-top:1.5rem!important}.bootstrap-min__pr-4___nm0iq{padding-right:1.5rem!important}.bootstrap-min__pb-4___1gvQQ{padding-bottom:1.5rem!important}.bootstrap-min__pl-4___1Jk3H{padding-left:1.5rem!important}.bootstrap-min__px-4___1wNEd{padding-right:1.5rem!important;padding-left:1.5rem!important}.bootstrap-min__py-4___j8tu1{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.bootstrap-min__p-5___35MlI{padding:3rem 3rem!important}.bootstrap-min__pt-5___1w84H{padding-top:3rem!important}.bootstrap-min__pr-5___4fW7e{padding-right:3rem!important}.bootstrap-min__pb-5___16FGj{padding-bottom:3rem!important}.bootstrap-min__pl-5___1po-9{padding-left:3rem!important}.bootstrap-min__px-5___qEiTD{padding-right:3rem!important;padding-left:3rem!important}.bootstrap-min__py-5___2m_pC{padding-top:3rem!important;padding-bottom:3rem!important}.bootstrap-min__m-auto___2hAjO{margin:auto!important}.bootstrap-min__mt-auto___2FX5a{margin-top:auto!important}.bootstrap-min__mr-auto___LNFnl{margin-right:auto!important}.bootstrap-min__mb-auto___2Vqdo{margin-bottom:auto!important}.bootstrap-min__ml-auto___2vlQK{margin-left:auto!important}.bootstrap-min__mx-auto___ai120{margin-right:auto!important;margin-left:auto!important}.bootstrap-min__my-auto___2lRbH{margin-top:auto!important;margin-bottom:auto!important}@media (min-width:576px){.bootstrap-min__m-sm-0___3-ios{margin:0 0!important}.bootstrap-min__mt-sm-0___2ITDj{margin-top:0!important}.bootstrap-min__mr-sm-0___chFri{margin-right:0!important}.bootstrap-min__mb-sm-0___3Hl77{margin-bottom:0!important}.bootstrap-min__ml-sm-0___2fU2t{margin-left:0!important}.bootstrap-min__mx-sm-0___28OHq{margin-right:0!important;margin-left:0!important}.bootstrap-min__my-sm-0___3uzUB{margin-top:0!important;margin-bottom:0!important}.bootstrap-min__m-sm-1___3XlnD{margin:.25rem .25rem!important}.bootstrap-min__mt-sm-1___27NkY{margin-top:.25rem!important}.bootstrap-min__mr-sm-1___11AI7{margin-right:.25rem!important}.bootstrap-min__mb-sm-1___27dJC{margin-bottom:.25rem!important}.bootstrap-min__ml-sm-1___2P8Z7{margin-left:.25rem!important}.bootstrap-min__mx-sm-1___o0Sgk{margin-right:.25rem!important;margin-left:.25rem!important}.bootstrap-min__my-sm-1___3IrUL{margin-top:.25rem!important;margin-bottom:.25rem!important}.bootstrap-min__m-sm-2___1aBLk{margin:.5rem .5rem!important}.bootstrap-min__mt-sm-2___1-EqN{margin-top:.5rem!important}.bootstrap-min__mr-sm-2___1OG8x{margin-right:.5rem!important}.bootstrap-min__mb-sm-2___T3CfB{margin-bottom:.5rem!important}.bootstrap-min__ml-sm-2___254xX{margin-left:.5rem!important}.bootstrap-min__mx-sm-2___1hKoy{margin-right:.5rem!important;margin-left:.5rem!important}.bootstrap-min__my-sm-2___17ZvU{margin-top:.5rem!important;margin-bottom:.5rem!important}.bootstrap-min__m-sm-3___2prR4{margin:1rem 1rem!important}.bootstrap-min__mt-sm-3___ci_Zx{margin-top:1rem!important}.bootstrap-min__mr-sm-3___3GZxg{margin-right:1rem!important}.bootstrap-min__mb-sm-3___2FNRo{margin-bottom:1rem!important}.bootstrap-min__ml-sm-3___2D932{margin-left:1rem!important}.bootstrap-min__mx-sm-3___1Z90I{margin-right:1rem!important;margin-left:1rem!important}.bootstrap-min__my-sm-3___1Kn6T{margin-top:1rem!important;margin-bottom:1rem!important}.bootstrap-min__m-sm-4___Gdn7R{margin:1.5rem 1.5rem!important}.bootstrap-min__mt-sm-4___I72cJ{margin-top:1.5rem!important}.bootstrap-min__mr-sm-4___L3l10{margin-right:1.5rem!important}.bootstrap-min__mb-sm-4___1Yqhe{margin-bottom:1.5rem!important}.bootstrap-min__ml-sm-4___1YRzY{margin-left:1.5rem!important}.bootstrap-min__mx-sm-4___3-fnD{margin-right:1.5rem!important;margin-left:1.5rem!important}.bootstrap-min__my-sm-4___3Dk6q{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.bootstrap-min__m-sm-5___27djS{margin:3rem 3rem!important}.bootstrap-min__mt-sm-5___3nLZ1{margin-top:3rem!important}.bootstrap-min__mr-sm-5___1H0cj{margin-right:3rem!important}.bootstrap-min__mb-sm-5___OLK-4{margin-bottom:3rem!important}.bootstrap-min__ml-sm-5___3jePO{margin-left:3rem!important}.bootstrap-min__mx-sm-5___27Y2T{margin-right:3rem!important;margin-left:3rem!important}.bootstrap-min__my-sm-5___3CbT7{margin-top:3rem!important;margin-bottom:3rem!important}.bootstrap-min__p-sm-0___2k-K9{padding:0 0!important}.bootstrap-min__pt-sm-0___3HbJK{padding-top:0!important}.bootstrap-min__pr-sm-0___2m_6p{padding-right:0!important}.bootstrap-min__pb-sm-0___1bncm{padding-bottom:0!important}.bootstrap-min__pl-sm-0___3TWwS{padding-left:0!important}.bootstrap-min__px-sm-0___18S0Q{padding-right:0!important;padding-left:0!important}.bootstrap-min__py-sm-0___2rARx{padding-top:0!important;padding-bottom:0!important}.bootstrap-min__p-sm-1___3PwqF{padding:.25rem .25rem!important}.bootstrap-min__pt-sm-1___iHuAE{padding-top:.25rem!important}.bootstrap-min__pr-sm-1___2gkfm{padding-right:.25rem!important}.bootstrap-min__pb-sm-1___1BZ0L{padding-bottom:.25rem!important}.bootstrap-min__pl-sm-1___xO9ob{padding-left:.25rem!important}.bootstrap-min__px-sm-1___3E0jK{padding-right:.25rem!important;padding-left:.25rem!important}.bootstrap-min__py-sm-1___6iBRx{padding-top:.25rem!important;padding-bottom:.25rem!important}.bootstrap-min__p-sm-2___2bQJO{padding:.5rem .5rem!important}.bootstrap-min__pt-sm-2___1AmF0{padding-top:.5rem!important}.bootstrap-min__pr-sm-2___3gjMG{padding-right:.5rem!important}.bootstrap-min__pb-sm-2___Vv5ZP{padding-bottom:.5rem!important}.bootstrap-min__pl-sm-2___19aQE{padding-left:.5rem!important}.bootstrap-min__px-sm-2___3p6R4{padding-right:.5rem!important;padding-left:.5rem!important}.bootstrap-min__py-sm-2___1kRsW{padding-top:.5rem!important;padding-bottom:.5rem!important}.bootstrap-min__p-sm-3___2Ovc6{padding:1rem 1rem!important}.bootstrap-min__pt-sm-3___3kr42{padding-top:1rem!important}.bootstrap-min__pr-sm-3___lMx-9{padding-right:1rem!important}.bootstrap-min__pb-sm-3___1qWUg{padding-bottom:1rem!important}.bootstrap-min__pl-sm-3___39gRW{padding-left:1rem!important}.bootstrap-min__px-sm-3___3S8CM{padding-right:1rem!important;padding-left:1rem!important}.bootstrap-min__py-sm-3___2LtQB{padding-top:1rem!important;padding-bottom:1rem!important}.bootstrap-min__p-sm-4___3cbss{padding:1.5rem 1.5rem!important}.bootstrap-min__pt-sm-4___1rGy-{padding-top:1.5rem!important}.bootstrap-min__pr-sm-4___3ND66{padding-right:1.5rem!important}.bootstrap-min__pb-sm-4___KzrQf{padding-bottom:1.5rem!important}.bootstrap-min__pl-sm-4___UjJpE{padding-left:1.5rem!important}.bootstrap-min__px-sm-4___1-Dmy{padding-right:1.5rem!important;padding-left:1.5rem!important}.bootstrap-min__py-sm-4___2uWEB{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.bootstrap-min__p-sm-5___1tcCs{padding:3rem 3rem!important}.bootstrap-min__pt-sm-5___1jzar{padding-top:3rem!important}.bootstrap-min__pr-sm-5___2wROz{padding-right:3rem!important}.bootstrap-min__pb-sm-5___25FCP{padding-bottom:3rem!important}.bootstrap-min__pl-sm-5___2QabR{padding-left:3rem!important}.bootstrap-min__px-sm-5___wGXBA{padding-right:3rem!important;padding-left:3rem!important}.bootstrap-min__py-sm-5___1r4JG{padding-top:3rem!important;padding-bottom:3rem!important}.bootstrap-min__m-sm-auto___2ZXXu{margin:auto!important}.bootstrap-min__mt-sm-auto___2wTGd{margin-top:auto!important}.bootstrap-min__mr-sm-auto___2137_{margin-right:auto!important}.bootstrap-min__mb-sm-auto___3fPsk{margin-bottom:auto!important}.bootstrap-min__ml-sm-auto___24uM9{margin-left:auto!important}.bootstrap-min__mx-sm-auto___3Bt6T{margin-right:auto!important;margin-left:auto!important}.bootstrap-min__my-sm-auto___3CD8J{margin-top:auto!important;margin-bottom:auto!important}}@media (min-width:768px){.bootstrap-min__m-md-0___2bdPc{margin:0 0!important}.bootstrap-min__mt-md-0___2OZ54{margin-top:0!important}.bootstrap-min__mr-md-0___2dlFM{margin-right:0!important}.bootstrap-min__mb-md-0___1py9f{margin-bottom:0!important}.bootstrap-min__ml-md-0___1f2sF{margin-left:0!important}.bootstrap-min__mx-md-0___854JW{margin-right:0!important;margin-left:0!important}.bootstrap-min__my-md-0___2PAJV{margin-top:0!important;margin-bottom:0!important}.bootstrap-min__m-md-1___3KdoT{margin:.25rem .25rem!important}.bootstrap-min__mt-md-1___15mLX{margin-top:.25rem!important}.bootstrap-min__mr-md-1___3OG8P{margin-right:.25rem!important}.bootstrap-min__mb-md-1___1k3u2{margin-bottom:.25rem!important}.bootstrap-min__ml-md-1___XnAjD{margin-left:.25rem!important}.bootstrap-min__mx-md-1___3yRf9{margin-right:.25rem!important;margin-left:.25rem!important}.bootstrap-min__my-md-1___3WPCa{margin-top:.25rem!important;margin-bottom:.25rem!important}.bootstrap-min__m-md-2___2u3JN{margin:.5rem .5rem!important}.bootstrap-min__mt-md-2___55AAt{margin-top:.5rem!important}.bootstrap-min__mr-md-2___1EnUh{margin-right:.5rem!important}.bootstrap-min__mb-md-2___1adBY{margin-bottom:.5rem!important}.bootstrap-min__ml-md-2___bkMfE{margin-left:.5rem!important}.bootstrap-min__mx-md-2___5Eqki{margin-right:.5rem!important;margin-left:.5rem!important}.bootstrap-min__my-md-2___1VZbg{margin-top:.5rem!important;margin-bottom:.5rem!important}.bootstrap-min__m-md-3___1C2ss{margin:1rem 1rem!important}.bootstrap-min__mt-md-3___25nuC{margin-top:1rem!important}.bootstrap-min__mr-md-3___3skq-{margin-right:1rem!important}.bootstrap-min__mb-md-3___uPTXr{margin-bottom:1rem!important}.bootstrap-min__ml-md-3___1msY9{margin-left:1rem!important}.bootstrap-min__mx-md-3___1pHo0{margin-right:1rem!important;margin-left:1rem!important}.bootstrap-min__my-md-3___2JACF{margin-top:1rem!important;margin-bottom:1rem!important}.bootstrap-min__m-md-4___1dJSY{margin:1.5rem 1.5rem!important}.bootstrap-min__mt-md-4___1fqmy{margin-top:1.5rem!important}.bootstrap-min__mr-md-4___Js95S{margin-right:1.5rem!important}.bootstrap-min__mb-md-4___1tx_u{margin-bottom:1.5rem!important}.bootstrap-min__ml-md-4___3OqQV{margin-left:1.5rem!important}.bootstrap-min__mx-md-4___110Zn{margin-right:1.5rem!important;margin-left:1.5rem!important}.bootstrap-min__my-md-4___32Hi8{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.bootstrap-min__m-md-5___168h9{margin:3rem 3rem!important}.bootstrap-min__mt-md-5___3KG_I{margin-top:3rem!important}.bootstrap-min__mr-md-5___32uVJ{margin-right:3rem!important}.bootstrap-min__mb-md-5___1BLWc{margin-bottom:3rem!important}.bootstrap-min__ml-md-5___b9lXu{margin-left:3rem!important}.bootstrap-min__mx-md-5___22tdD{margin-right:3rem!important;margin-left:3rem!important}.bootstrap-min__my-md-5___MSPKE{margin-top:3rem!important;margin-bottom:3rem!important}.bootstrap-min__p-md-0___3_W0W{padding:0 0!important}.bootstrap-min__pt-md-0___3uzqz{padding-top:0!important}.bootstrap-min__pr-md-0___2LkPH{padding-right:0!important}.bootstrap-min__pb-md-0___3AuMI{padding-bottom:0!important}.bootstrap-min__pl-md-0___1ZiuR{padding-left:0!important}.bootstrap-min__px-md-0___Un-kz{padding-right:0!important;padding-left:0!important}.bootstrap-min__py-md-0___1PYl8{padding-top:0!important;padding-bottom:0!important}.bootstrap-min__p-md-1___kjYqg{padding:.25rem .25rem!important}.bootstrap-min__pt-md-1___2pREP{padding-top:.25rem!important}.bootstrap-min__pr-md-1___p7FQW{padding-right:.25rem!important}.bootstrap-min__pb-md-1___dObDn{padding-bottom:.25rem!important}.bootstrap-min__pl-md-1___1DUSG{padding-left:.25rem!important}.bootstrap-min__px-md-1___al3hk{padding-right:.25rem!important;padding-left:.25rem!important}.bootstrap-min__py-md-1___2tKJL{padding-top:.25rem!important;padding-bottom:.25rem!important}.bootstrap-min__p-md-2___14CFA{padding:.5rem .5rem!important}.bootstrap-min__pt-md-2___2_o-g{padding-top:.5rem!important}.bootstrap-min__pr-md-2___2SaQo{padding-right:.5rem!important}.bootstrap-min__pb-md-2___1Ok00{padding-bottom:.5rem!important}.bootstrap-min__pl-md-2___fMbiY{padding-left:.5rem!important}.bootstrap-min__px-md-2___8ntT1{padding-right:.5rem!important;padding-left:.5rem!important}.bootstrap-min__py-md-2___1L4Qd{padding-top:.5rem!important;padding-bottom:.5rem!important}.bootstrap-min__p-md-3___tvZys{padding:1rem 1rem!important}.bootstrap-min__pt-md-3___AFREe{padding-top:1rem!important}.bootstrap-min__pr-md-3___32-Eq{padding-right:1rem!important}.bootstrap-min__pb-md-3___3ILBn{padding-bottom:1rem!important}.bootstrap-min__pl-md-3___2jrL8{padding-left:1rem!important}.bootstrap-min__px-md-3___3NAxe{padding-right:1rem!important;padding-left:1rem!important}.bootstrap-min__py-md-3___2hoJN{padding-top:1rem!important;padding-bottom:1rem!important}.bootstrap-min__p-md-4___1k9qR{padding:1.5rem 1.5rem!important}.bootstrap-min__pt-md-4___25N1o{padding-top:1.5rem!important}.bootstrap-min__pr-md-4___1ZoNK{padding-right:1.5rem!important}.bootstrap-min__pb-md-4___1Wlzd{padding-bottom:1.5rem!important}.bootstrap-min__pl-md-4___2wUds{padding-left:1.5rem!important}.bootstrap-min__px-md-4___zkM8X{padding-right:1.5rem!important;padding-left:1.5rem!important}.bootstrap-min__py-md-4___3BGa3{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.bootstrap-min__p-md-5___-Aw_C{padding:3rem 3rem!important}.bootstrap-min__pt-md-5___20uFp{padding-top:3rem!important}.bootstrap-min__pr-md-5___YaKSp{padding-right:3rem!important}.bootstrap-min__pb-md-5___2nlnD{padding-bottom:3rem!important}.bootstrap-min__pl-md-5___JSOrk{padding-left:3rem!important}.bootstrap-min__px-md-5___1cj02{padding-right:3rem!important;padding-left:3rem!important}.bootstrap-min__py-md-5___-fE20{padding-top:3rem!important;padding-bottom:3rem!important}.bootstrap-min__m-md-auto___EmQ_e{margin:auto!important}.bootstrap-min__mt-md-auto___1FNUz{margin-top:auto!important}.bootstrap-min__mr-md-auto___eGaHY{margin-right:auto!important}.bootstrap-min__mb-md-auto___3381r{margin-bottom:auto!important}.bootstrap-min__ml-md-auto___2Tvw-{margin-left:auto!important}.bootstrap-min__mx-md-auto___163-K{margin-right:auto!important;margin-left:auto!important}.bootstrap-min__my-md-auto___1mK5K{margin-top:auto!important;margin-bottom:auto!important}}@media (min-width:992px){.bootstrap-min__m-lg-0___1liXu{margin:0 0!important}.bootstrap-min__mt-lg-0___3CAiA{margin-top:0!important}.bootstrap-min__mr-lg-0___AeJFT{margin-right:0!important}.bootstrap-min__mb-lg-0___1xXtn{margin-bottom:0!important}.bootstrap-min__ml-lg-0___CXmum{margin-left:0!important}.bootstrap-min__mx-lg-0___16b9p{margin-right:0!important;margin-left:0!important}.bootstrap-min__my-lg-0___nmiRP{margin-top:0!important;margin-bottom:0!important}.bootstrap-min__m-lg-1___34g6s{margin:.25rem .25rem!important}.bootstrap-min__mt-lg-1___1Ak3A{margin-top:.25rem!important}.bootstrap-min__mr-lg-1___1uubN{margin-right:.25rem!important}.bootstrap-min__mb-lg-1___2LjDh{margin-bottom:.25rem!important}.bootstrap-min__ml-lg-1___DRvXI{margin-left:.25rem!important}.bootstrap-min__mx-lg-1___2Lasd{margin-right:.25rem!important;margin-left:.25rem!important}.bootstrap-min__my-lg-1___F3NKg{margin-top:.25rem!important;margin-bottom:.25rem!important}.bootstrap-min__m-lg-2___3VmCG{margin:.5rem .5rem!important}.bootstrap-min__mt-lg-2___9YgWC{margin-top:.5rem!important}.bootstrap-min__mr-lg-2___3YeGS{margin-right:.5rem!important}.bootstrap-min__mb-lg-2___2VH6A{margin-bottom:.5rem!important}.bootstrap-min__ml-lg-2___1RogS{margin-left:.5rem!important}.bootstrap-min__mx-lg-2___2xiFY{margin-right:.5rem!important;margin-left:.5rem!important}.bootstrap-min__my-lg-2___6LQMf{margin-top:.5rem!important;margin-bottom:.5rem!important}.bootstrap-min__m-lg-3___1qkEL{margin:1rem 1rem!important}.bootstrap-min__mt-lg-3___bgp70{margin-top:1rem!important}.bootstrap-min__mr-lg-3___-wu_8{margin-right:1rem!important}.bootstrap-min__mb-lg-3___2P6lx{margin-bottom:1rem!important}.bootstrap-min__ml-lg-3___eilu9{margin-left:1rem!important}.bootstrap-min__mx-lg-3___2gY-y{margin-right:1rem!important;margin-left:1rem!important}.bootstrap-min__my-lg-3___lni4T{margin-top:1rem!important;margin-bottom:1rem!important}.bootstrap-min__m-lg-4___37pt4{margin:1.5rem 1.5rem!important}.bootstrap-min__mt-lg-4___2Dhpa{margin-top:1.5rem!important}.bootstrap-min__mr-lg-4___2v1P4{margin-right:1.5rem!important}.bootstrap-min__mb-lg-4___3o4DL{margin-bottom:1.5rem!important}.bootstrap-min__ml-lg-4___3AgvW{margin-left:1.5rem!important}.bootstrap-min__mx-lg-4___16pph{margin-right:1.5rem!important;margin-left:1.5rem!important}.bootstrap-min__my-lg-4___1Ww2y{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.bootstrap-min__m-lg-5___3rOW6{margin:3rem 3rem!important}.bootstrap-min__mt-lg-5___10PMF{margin-top:3rem!important}.bootstrap-min__mr-lg-5___1QFuq{margin-right:3rem!important}.bootstrap-min__mb-lg-5___3-KDQ{margin-bottom:3rem!important}.bootstrap-min__ml-lg-5___2zpnl{margin-left:3rem!important}.bootstrap-min__mx-lg-5___1Il4D{margin-right:3rem!important;margin-left:3rem!important}.bootstrap-min__my-lg-5___O20fW{margin-top:3rem!important;margin-bottom:3rem!important}.bootstrap-min__p-lg-0___UJlsQ{padding:0 0!important}.bootstrap-min__pt-lg-0___2-ums{padding-top:0!important}.bootstrap-min__pr-lg-0___2c7QS{padding-right:0!important}.bootstrap-min__pb-lg-0___3X8rE{padding-bottom:0!important}.bootstrap-min__pl-lg-0___jqdo4{padding-left:0!important}.bootstrap-min__px-lg-0___H2NTK{padding-right:0!important;padding-left:0!important}.bootstrap-min__py-lg-0___Wyqpv{padding-top:0!important;padding-bottom:0!important}.bootstrap-min__p-lg-1___3OBGc{padding:.25rem .25rem!important}.bootstrap-min__pt-lg-1___khFMo{padding-top:.25rem!important}.bootstrap-min__pr-lg-1___1aDqC{padding-right:.25rem!important}.bootstrap-min__pb-lg-1___1_avC{padding-bottom:.25rem!important}.bootstrap-min__pl-lg-1___1sF8p{padding-left:.25rem!important}.bootstrap-min__px-lg-1___B07tD{padding-right:.25rem!important;padding-left:.25rem!important}.bootstrap-min__py-lg-1___1-mAV{padding-top:.25rem!important;padding-bottom:.25rem!important}.bootstrap-min__p-lg-2___1u_u3{padding:.5rem .5rem!important}.bootstrap-min__pt-lg-2___1JWsO{padding-top:.5rem!important}.bootstrap-min__pr-lg-2___2_JMC{padding-right:.5rem!important}.bootstrap-min__pb-lg-2___1lWjS{padding-bottom:.5rem!important}.bootstrap-min__pl-lg-2___1fiOR{padding-left:.5rem!important}.bootstrap-min__px-lg-2___1Yf6y{padding-right:.5rem!important;padding-left:.5rem!important}.bootstrap-min__py-lg-2___2vp-b{padding-top:.5rem!important;padding-bottom:.5rem!important}.bootstrap-min__p-lg-3___334Kf{padding:1rem 1rem!important}.bootstrap-min__pt-lg-3___ldfiM{padding-top:1rem!important}.bootstrap-min__pr-lg-3___2skyj{padding-right:1rem!important}.bootstrap-min__pb-lg-3___IIdRR{padding-bottom:1rem!important}.bootstrap-min__pl-lg-3___2ZExP{padding-left:1rem!important}.bootstrap-min__px-lg-3___XxBTZ{padding-right:1rem!important;padding-left:1rem!important}.bootstrap-min__py-lg-3___1Igus{padding-top:1rem!important;padding-bottom:1rem!important}.bootstrap-min__p-lg-4___Ge4Zz{padding:1.5rem 1.5rem!important}.bootstrap-min__pt-lg-4___Nt1Ff{padding-top:1.5rem!important}.bootstrap-min__pr-lg-4___XUldw{padding-right:1.5rem!important}.bootstrap-min__pb-lg-4___2XtP8{padding-bottom:1.5rem!important}.bootstrap-min__pl-lg-4___194eD{padding-left:1.5rem!important}.bootstrap-min__px-lg-4___13p0o{padding-right:1.5rem!important;padding-left:1.5rem!important}.bootstrap-min__py-lg-4___3rmQP{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.bootstrap-min__p-lg-5___YPOu0{padding:3rem 3rem!important}.bootstrap-min__pt-lg-5___3VKlG{padding-top:3rem!important}.bootstrap-min__pr-lg-5___wbQyS{padding-right:3rem!important}.bootstrap-min__pb-lg-5___1ufaJ{padding-bottom:3rem!important}.bootstrap-min__pl-lg-5___3smWD{padding-left:3rem!important}.bootstrap-min__px-lg-5___3Mj2B{padding-right:3rem!important;padding-left:3rem!important}.bootstrap-min__py-lg-5___2ARZe{padding-top:3rem!important;padding-bottom:3rem!important}.bootstrap-min__m-lg-auto___2yq1a{margin:auto!important}.bootstrap-min__mt-lg-auto___2WFNW{margin-top:auto!important}.bootstrap-min__mr-lg-auto___30flu{margin-right:auto!important}.bootstrap-min__mb-lg-auto___DLIT4{margin-bottom:auto!important}.bootstrap-min__ml-lg-auto___1JALP{margin-left:auto!important}.bootstrap-min__mx-lg-auto___3ueiE{margin-right:auto!important;margin-left:auto!important}.bootstrap-min__my-lg-auto___2MQPs{margin-top:auto!important;margin-bottom:auto!important}}@media (min-width:1200px){.bootstrap-min__m-xl-0___3bJiq{margin:0 0!important}.bootstrap-min__mt-xl-0___3pSMA{margin-top:0!important}.bootstrap-min__mr-xl-0___2fYY2{margin-right:0!important}.bootstrap-min__mb-xl-0___1Jsxw{margin-bottom:0!important}.bootstrap-min__ml-xl-0___1UqKe{margin-left:0!important}.bootstrap-min__mx-xl-0___11YL_{margin-right:0!important;margin-left:0!important}.bootstrap-min__my-xl-0___1K-I4{margin-top:0!important;margin-bottom:0!important}.bootstrap-min__m-xl-1___492SF{margin:.25rem .25rem!important}.bootstrap-min__mt-xl-1___3h0Wq{margin-top:.25rem!important}.bootstrap-min__mr-xl-1___29aNs{margin-right:.25rem!important}.bootstrap-min__mb-xl-1___3c28D{margin-bottom:.25rem!important}.bootstrap-min__ml-xl-1___voOS_{margin-left:.25rem!important}.bootstrap-min__mx-xl-1___3Ma-W{margin-right:.25rem!important;margin-left:.25rem!important}.bootstrap-min__my-xl-1___2k599{margin-top:.25rem!important;margin-bottom:.25rem!important}.bootstrap-min__m-xl-2___3ig5r{margin:.5rem .5rem!important}.bootstrap-min__mt-xl-2___14fHy{margin-top:.5rem!important}.bootstrap-min__mr-xl-2___2C6kM{margin-right:.5rem!important}.bootstrap-min__mb-xl-2___1HHw-{margin-bottom:.5rem!important}.bootstrap-min__ml-xl-2___1yCeD{margin-left:.5rem!important}.bootstrap-min__mx-xl-2___e7Ax_{margin-right:.5rem!important;margin-left:.5rem!important}.bootstrap-min__my-xl-2___uWWJH{margin-top:.5rem!important;margin-bottom:.5rem!important}.bootstrap-min__m-xl-3___3Kufu{margin:1rem 1rem!important}.bootstrap-min__mt-xl-3___1svLh{margin-top:1rem!important}.bootstrap-min__mr-xl-3___pwjuV{margin-right:1rem!important}.bootstrap-min__mb-xl-3___3mM1X{margin-bottom:1rem!important}.bootstrap-min__ml-xl-3___2j3zO{margin-left:1rem!important}.bootstrap-min__mx-xl-3___2VACk{margin-right:1rem!important;margin-left:1rem!important}.bootstrap-min__my-xl-3___1cipK{margin-top:1rem!important;margin-bottom:1rem!important}.bootstrap-min__m-xl-4___oT1u8{margin:1.5rem 1.5rem!important}.bootstrap-min__mt-xl-4___2J5U-{margin-top:1.5rem!important}.bootstrap-min__mr-xl-4___3bZZ9{margin-right:1.5rem!important}.bootstrap-min__mb-xl-4___39SnU{margin-bottom:1.5rem!important}.bootstrap-min__ml-xl-4___1lryN{margin-left:1.5rem!important}.bootstrap-min__mx-xl-4___3WDDU{margin-right:1.5rem!important;margin-left:1.5rem!important}.bootstrap-min__my-xl-4___2wBnv{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.bootstrap-min__m-xl-5___3qvLP{margin:3rem 3rem!important}.bootstrap-min__mt-xl-5___ms8jY{margin-top:3rem!important}.bootstrap-min__mr-xl-5___YxgwQ{margin-right:3rem!important}.bootstrap-min__mb-xl-5___28kGl{margin-bottom:3rem!important}.bootstrap-min__ml-xl-5___1f2EW{margin-left:3rem!important}.bootstrap-min__mx-xl-5___34sgJ{margin-right:3rem!important;margin-left:3rem!important}.bootstrap-min__my-xl-5___3_FrF{margin-top:3rem!important;margin-bottom:3rem!important}.bootstrap-min__p-xl-0___3AlVC{padding:0 0!important}.bootstrap-min__pt-xl-0___2EdyA{padding-top:0!important}.bootstrap-min__pr-xl-0___AdfYv{padding-right:0!important}.bootstrap-min__pb-xl-0___2vcnh{padding-bottom:0!important}.bootstrap-min__pl-xl-0___3XoJw{padding-left:0!important}.bootstrap-min__px-xl-0___5nYx5{padding-right:0!important;padding-left:0!important}.bootstrap-min__py-xl-0___2v-GY{padding-top:0!important;padding-bottom:0!important}.bootstrap-min__p-xl-1___7ho1x{padding:.25rem .25rem!important}.bootstrap-min__pt-xl-1___2cqyj{padding-top:.25rem!important}.bootstrap-min__pr-xl-1___1WvXp{padding-right:.25rem!important}.bootstrap-min__pb-xl-1___HVNCx{padding-bottom:.25rem!important}.bootstrap-min__pl-xl-1___1bcs3{padding-left:.25rem!important}.bootstrap-min__px-xl-1___2Xt8F{padding-right:.25rem!important;padding-left:.25rem!important}.bootstrap-min__py-xl-1___1BTbk{padding-top:.25rem!important;padding-bottom:.25rem!important}.bootstrap-min__p-xl-2___3NLJb{padding:.5rem .5rem!important}.bootstrap-min__pt-xl-2___tdVtR{padding-top:.5rem!important}.bootstrap-min__pr-xl-2___2HOY_{padding-right:.5rem!important}.bootstrap-min__pb-xl-2___n5P_g{padding-bottom:.5rem!important}.bootstrap-min__pl-xl-2___vGHxb{padding-left:.5rem!important}.bootstrap-min__px-xl-2___2vvUi{padding-right:.5rem!important;padding-left:.5rem!important}.bootstrap-min__py-xl-2___3TNzr{padding-top:.5rem!important;padding-bottom:.5rem!important}.bootstrap-min__p-xl-3___35DKD{padding:1rem 1rem!important}.bootstrap-min__pt-xl-3___2YGgz{padding-top:1rem!important}.bootstrap-min__pr-xl-3___M-t-K{padding-right:1rem!important}.bootstrap-min__pb-xl-3___32H_r{padding-bottom:1rem!important}.bootstrap-min__pl-xl-3___3MMY5{padding-left:1rem!important}.bootstrap-min__px-xl-3___2MlQ7{padding-right:1rem!important;padding-left:1rem!important}.bootstrap-min__py-xl-3___2Q11l{padding-top:1rem!important;padding-bottom:1rem!important}.bootstrap-min__p-xl-4___kjBv4{padding:1.5rem 1.5rem!important}.bootstrap-min__pt-xl-4___1PpES{padding-top:1.5rem!important}.bootstrap-min__pr-xl-4___Lkz0l{padding-right:1.5rem!important}.bootstrap-min__pb-xl-4___3WpwL{padding-bottom:1.5rem!important}.bootstrap-min__pl-xl-4___3rig6{padding-left:1.5rem!important}.bootstrap-min__px-xl-4___Ga_cj{padding-right:1.5rem!important;padding-left:1.5rem!important}.bootstrap-min__py-xl-4___3_4Bk{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.bootstrap-min__p-xl-5___1rvna{padding:3rem 3rem!important}.bootstrap-min__pt-xl-5___2gDtv{padding-top:3rem!important}.bootstrap-min__pr-xl-5___3Hc4G{padding-right:3rem!important}.bootstrap-min__pb-xl-5___vyWdb{padding-bottom:3rem!important}.bootstrap-min__pl-xl-5___17zr7{padding-left:3rem!important}.bootstrap-min__px-xl-5___2zd3t{padding-right:3rem!important;padding-left:3rem!important}.bootstrap-min__py-xl-5___3goxY{padding-top:3rem!important;padding-bottom:3rem!important}.bootstrap-min__m-xl-auto___wATEg{margin:auto!important}.bootstrap-min__mt-xl-auto___13b4b{margin-top:auto!important}.bootstrap-min__mr-xl-auto___1CsRo{margin-right:auto!important}.bootstrap-min__mb-xl-auto___3NkL8{margin-bottom:auto!important}.bootstrap-min__ml-xl-auto___Tb1MH{margin-left:auto!important}.bootstrap-min__mx-xl-auto___1mi3H{margin-right:auto!important;margin-left:auto!important}.bootstrap-min__my-xl-auto___21TO2{margin-top:auto!important;margin-bottom:auto!important}}.bootstrap-min__text-justify___3P6Ed{text-align:justify!important}.bootstrap-min__text-nowrap___3OYyv{white-space:nowrap!important}.bootstrap-min__text-truncate___3w8z7{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.bootstrap-min__text-left___2vasQ{text-align:left!important}.bootstrap-min__text-right___HphZE{text-align:right!important}.bootstrap-min__text-center___y108e{text-align:center!important}@media (min-width:576px){.bootstrap-min__text-sm-left___pbN_W{text-align:left!important}.bootstrap-min__text-sm-right___vVGPU{text-align:right!important}.bootstrap-min__text-sm-center___1eqKV{text-align:center!important}}@media (min-width:768px){.bootstrap-min__text-md-left___3wALz{text-align:left!important}.bootstrap-min__text-md-right___2FrCx{text-align:right!important}.bootstrap-min__text-md-center___1oLH9{text-align:center!important}}@media (min-width:992px){.bootstrap-min__text-lg-left___jYHkJ{text-align:left!important}.bootstrap-min__text-lg-right___1xoZQ{text-align:right!important}.bootstrap-min__text-lg-center___1DCJD{text-align:center!important}}@media (min-width:1200px){.bootstrap-min__text-xl-left___3dfvp{text-align:left!important}.bootstrap-min__text-xl-right___pe-Tp{text-align:right!important}.bootstrap-min__text-xl-center___C1O1C{text-align:center!important}}.bootstrap-min__text-lowercase___2qSty{text-transform:lowercase!important}.bootstrap-min__text-uppercase___U4Gw3{text-transform:uppercase!important}.bootstrap-min__text-capitalize___2lFcw{text-transform:capitalize!important}.bootstrap-min__font-weight-normal___JsSN5{font-weight:400}.bootstrap-min__font-weight-bold___2ib-q{font-weight:700}.bootstrap-min__font-italic___2ghM9{font-style:italic}.bootstrap-min__text-white___9HrFA{color:#fff!important}.bootstrap-min__text-muted___1ctyR{color:#636c72!important}a.bootstrap-min__text-muted___1ctyR:focus,a.bootstrap-min__text-muted___1ctyR:hover{color:#4b5257!important}.bootstrap-min__text-primary___zSznH{color:#0275d8!important}a.bootstrap-min__text-primary___zSznH:focus,a.bootstrap-min__text-primary___zSznH:hover{color:#025aa5!important}.bootstrap-min__text-success___X4hfX{color:#5cb85c!important}a.bootstrap-min__text-success___X4hfX:focus,a.bootstrap-min__text-success___X4hfX:hover{color:#449d44!important}.bootstrap-min__text-info___22iej{color:#5bc0de!important}a.bootstrap-min__text-info___22iej:focus,a.bootstrap-min__text-info___22iej:hover{color:#31b0d5!important}.bootstrap-min__text-warning___1vt0G{color:#f0ad4e!important}a.bootstrap-min__text-warning___1vt0G:focus,a.bootstrap-min__text-warning___1vt0G:hover{color:#ec971f!important}.bootstrap-min__text-danger___2mrmQ{color:#d9534f!important}a.bootstrap-min__text-danger___2mrmQ:focus,a.bootstrap-min__text-danger___2mrmQ:hover{color:#c9302c!important}.bootstrap-min__text-gray-dark___3RLiV{color:#292b2c!important}a.bootstrap-min__text-gray-dark___3RLiV:focus,a.bootstrap-min__text-gray-dark___3RLiV:hover{color:#101112!important}.bootstrap-min__text-hide___2Y83z{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.bootstrap-min__invisible___x4USD{visibility:hidden!important}.bootstrap-min__hidden-xs-up___1ionq{display:none!important}@media (max-width:575px){.bootstrap-min__hidden-xs-down___3vhBK{display:none!important}}@media (min-width:576px){.bootstrap-min__hidden-sm-up___SvR-D{display:none!important}}@media (max-width:767px){.bootstrap-min__hidden-sm-down___3dAyy{display:none!important}}@media (min-width:768px){.bootstrap-min__hidden-md-up___2V9RS{display:none!important}}@media (max-width:991px){.bootstrap-min__hidden-md-down___1xHlc{display:none!important}}@media (min-width:992px){.bootstrap-min__hidden-lg-up___23wuW{display:none!important}}@media (max-width:1199px){.bootstrap-min__hidden-lg-down___2344O{display:none!important}}@media (min-width:1200px){.bootstrap-min__hidden-xl-up___3AqDi{display:none!important}}.bootstrap-min__hidden-xl-down___3YVT2{display:none!important}.bootstrap-min__visible-print-block___29B_Z{display:none!important}@media print{.bootstrap-min__visible-print-block___29B_Z{display:block!important}}.bootstrap-min__visible-print-inline___17WsA{display:none!important}@media print{.bootstrap-min__visible-print-inline___17WsA{display:inline!important}}.bootstrap-min__visible-print-inline-block___3h5it{display:none!important}@media print{.bootstrap-min__visible-print-inline-block___3h5it{display:inline-block!important}}@media print{.bootstrap-min__hidden-print___LUOji{display:none!important}}/*# sourceMappingURL=bootstrap.min.css.map */", ""]);

	// exports
	exports.locals = {
		"navbar": "bootstrap-min__navbar___19AjY",
		"badge": "bootstrap-min__badge___iEQnH",
		"table": "bootstrap-min__table___G9cfM",
		"table-bordered": "bootstrap-min__table-bordered___2wXcg",
		"h1": "bootstrap-min__h1___2RF26",
		"h2": "bootstrap-min__h2___22u5_",
		"h3": "bootstrap-min__h3___3Ug8f",
		"h4": "bootstrap-min__h4___1xkVx",
		"h5": "bootstrap-min__h5___2Oy9V",
		"h6": "bootstrap-min__h6___2OAYQ",
		"lead": "bootstrap-min__lead___1OXqo",
		"display-1": "bootstrap-min__display-1___1AghC",
		"display-2": "bootstrap-min__display-2___2ypkO",
		"display-3": "bootstrap-min__display-3___2H0_v",
		"display-4": "bootstrap-min__display-4___3yRYL",
		"small": "bootstrap-min__small___3neFt",
		"mark": "bootstrap-min__mark___3tV9v",
		"list-unstyled": "bootstrap-min__list-unstyled___3azuc",
		"list-inline": "bootstrap-min__list-inline___2vsug",
		"list-inline-item": "bootstrap-min__list-inline-item___1kUdQ",
		"initialism": "bootstrap-min__initialism___38CFW",
		"blockquote": "bootstrap-min__blockquote___2deFi",
		"blockquote-footer": "bootstrap-min__blockquote-footer___24sUF",
		"blockquote-reverse": "bootstrap-min__blockquote-reverse___2eHaS",
		"img-fluid": "bootstrap-min__img-fluid___3bzY4",
		"img-thumbnail": "bootstrap-min__img-thumbnail___1nXXU",
		"figure": "bootstrap-min__figure___3ef7l",
		"figure-img": "bootstrap-min__figure-img___12afO",
		"figure-caption": "bootstrap-min__figure-caption___2qBP1",
		"pre-scrollable": "bootstrap-min__pre-scrollable___2WyQK",
		"container": "bootstrap-min__container___1bva4",
		"container-fluid": "bootstrap-min__container-fluid___2sWQy",
		"row": "bootstrap-min__row___1CS1h",
		"no-gutters": "bootstrap-min__no-gutters___N8Hyq",
		"col": "bootstrap-min__col___34VGP",
		"col-1": "bootstrap-min__col-1___1XCo4",
		"col-10": "bootstrap-min__col-10___2D4Y8",
		"col-11": "bootstrap-min__col-11___32UdW",
		"col-12": "bootstrap-min__col-12___32UbB",
		"col-2": "bootstrap-min__col-2___LoQ5F",
		"col-3": "bootstrap-min__col-3___vEnCU",
		"col-4": "bootstrap-min__col-4___lS0cR",
		"col-5": "bootstrap-min__col-5___30Oqy",
		"col-6": "bootstrap-min__col-6___2nHjo",
		"col-7": "bootstrap-min__col-7___1lufE",
		"col-8": "bootstrap-min__col-8___2m0QV",
		"col-9": "bootstrap-min__col-9___1qfmx",
		"col-lg": "bootstrap-min__col-lg___vSMWq",
		"col-lg-1": "bootstrap-min__col-lg-1___37dD-",
		"col-lg-10": "bootstrap-min__col-lg-10___bcxUb",
		"col-lg-11": "bootstrap-min__col-lg-11___1CVv9",
		"col-lg-12": "bootstrap-min__col-lg-12___1qDLI",
		"col-lg-2": "bootstrap-min__col-lg-2___1xzpl",
		"col-lg-3": "bootstrap-min__col-lg-3___fWDWS",
		"col-lg-4": "bootstrap-min__col-lg-4___3dgOB",
		"col-lg-5": "bootstrap-min__col-lg-5___3XNyT",
		"col-lg-6": "bootstrap-min__col-lg-6___3036d",
		"col-lg-7": "bootstrap-min__col-lg-7___2n9eQ",
		"col-lg-8": "bootstrap-min__col-lg-8___24GJ_",
		"col-lg-9": "bootstrap-min__col-lg-9___1nmw6",
		"col-md": "bootstrap-min__col-md___pDqRZ",
		"col-md-1": "bootstrap-min__col-md-1___18XjH",
		"col-md-10": "bootstrap-min__col-md-10___2d2Uf",
		"col-md-11": "bootstrap-min__col-md-11___2s8zq",
		"col-md-12": "bootstrap-min__col-md-12___1j0Js",
		"col-md-2": "bootstrap-min__col-md-2___3RIYd",
		"col-md-3": "bootstrap-min__col-md-3___1DSXX",
		"col-md-4": "bootstrap-min__col-md-4___1Nm41",
		"col-md-5": "bootstrap-min__col-md-5___3adAT",
		"col-md-6": "bootstrap-min__col-md-6___tacBt",
		"col-md-7": "bootstrap-min__col-md-7___1T0oX",
		"col-md-8": "bootstrap-min__col-md-8___3gwKI",
		"col-md-9": "bootstrap-min__col-md-9___G_uOM",
		"col-sm": "bootstrap-min__col-sm___31oi9",
		"col-sm-1": "bootstrap-min__col-sm-1___2koZw",
		"col-sm-10": "bootstrap-min__col-sm-10___2Tk4o",
		"col-sm-11": "bootstrap-min__col-sm-11___292lh",
		"col-sm-12": "bootstrap-min__col-sm-12___26Fls",
		"col-sm-2": "bootstrap-min__col-sm-2___304kF",
		"col-sm-3": "bootstrap-min__col-sm-3___3CPLw",
		"col-sm-4": "bootstrap-min__col-sm-4___2lHJM",
		"col-sm-5": "bootstrap-min__col-sm-5___BHJ04",
		"col-sm-6": "bootstrap-min__col-sm-6___35ItP",
		"col-sm-7": "bootstrap-min__col-sm-7___1NWAi",
		"col-sm-8": "bootstrap-min__col-sm-8___3M1Jm",
		"col-sm-9": "bootstrap-min__col-sm-9___2E4oC",
		"col-xl": "bootstrap-min__col-xl___HZN3y",
		"col-xl-1": "bootstrap-min__col-xl-1___3FNK5",
		"col-xl-10": "bootstrap-min__col-xl-10___3BxjK",
		"col-xl-11": "bootstrap-min__col-xl-11___2tq6H",
		"col-xl-12": "bootstrap-min__col-xl-12___2SCrq",
		"col-xl-2": "bootstrap-min__col-xl-2___RENcq",
		"col-xl-3": "bootstrap-min__col-xl-3___us2Y_",
		"col-xl-4": "bootstrap-min__col-xl-4___3fzQb",
		"col-xl-5": "bootstrap-min__col-xl-5___3Ngj6",
		"col-xl-6": "bootstrap-min__col-xl-6___27Zn8",
		"col-xl-7": "bootstrap-min__col-xl-7___2ir6I",
		"col-xl-8": "bootstrap-min__col-xl-8___2Eiap",
		"col-xl-9": "bootstrap-min__col-xl-9___2WH8q",
		"col-auto": "bootstrap-min__col-auto___2IN7y",
		"pull-0": "bootstrap-min__pull-0___2ncY7",
		"pull-1": "bootstrap-min__pull-1___1YyAZ",
		"pull-2": "bootstrap-min__pull-2___3APkG",
		"pull-3": "bootstrap-min__pull-3___DzEna",
		"pull-4": "bootstrap-min__pull-4___3u8Mi",
		"pull-5": "bootstrap-min__pull-5___2Blyh",
		"pull-6": "bootstrap-min__pull-6___2r_g_",
		"pull-7": "bootstrap-min__pull-7___1KAEr",
		"pull-8": "bootstrap-min__pull-8___2GuxO",
		"pull-9": "bootstrap-min__pull-9___txFfb",
		"pull-10": "bootstrap-min__pull-10___1FDAb",
		"pull-11": "bootstrap-min__pull-11___19iTx",
		"pull-12": "bootstrap-min__pull-12___d0TLx",
		"push-0": "bootstrap-min__push-0___NDm95",
		"push-1": "bootstrap-min__push-1___2ocrP",
		"push-2": "bootstrap-min__push-2___3P1o0",
		"push-3": "bootstrap-min__push-3___RQPhI",
		"push-4": "bootstrap-min__push-4___3QUFF",
		"push-5": "bootstrap-min__push-5___3siCp",
		"push-6": "bootstrap-min__push-6___2I7RI",
		"push-7": "bootstrap-min__push-7___39X5a",
		"push-8": "bootstrap-min__push-8___2lC5V",
		"push-9": "bootstrap-min__push-9___1O6Tf",
		"push-10": "bootstrap-min__push-10___1TPYM",
		"push-11": "bootstrap-min__push-11___DKcOv",
		"push-12": "bootstrap-min__push-12___2SudU",
		"offset-1": "bootstrap-min__offset-1___22Khx",
		"offset-2": "bootstrap-min__offset-2___yMeCh",
		"offset-3": "bootstrap-min__offset-3___3pj-R",
		"offset-4": "bootstrap-min__offset-4___1zkaJ",
		"offset-5": "bootstrap-min__offset-5___1i8yj",
		"offset-6": "bootstrap-min__offset-6___1SJPZ",
		"offset-7": "bootstrap-min__offset-7___3P65L",
		"offset-8": "bootstrap-min__offset-8___2uYGc",
		"offset-9": "bootstrap-min__offset-9___3RMTs",
		"offset-10": "bootstrap-min__offset-10___2NPbX",
		"offset-11": "bootstrap-min__offset-11___2gFPf",
		"col-sm-auto": "bootstrap-min__col-sm-auto___2T8e9",
		"pull-sm-0": "bootstrap-min__pull-sm-0___2SyWh",
		"pull-sm-1": "bootstrap-min__pull-sm-1___3m_qL",
		"pull-sm-2": "bootstrap-min__pull-sm-2___13LQ_",
		"pull-sm-3": "bootstrap-min__pull-sm-3___30h9l",
		"pull-sm-4": "bootstrap-min__pull-sm-4___1L0w_",
		"pull-sm-5": "bootstrap-min__pull-sm-5___pVJZw",
		"pull-sm-6": "bootstrap-min__pull-sm-6___3pUnK",
		"pull-sm-7": "bootstrap-min__pull-sm-7___2AxfT",
		"pull-sm-8": "bootstrap-min__pull-sm-8___3DlPl",
		"pull-sm-9": "bootstrap-min__pull-sm-9___1KGVe",
		"pull-sm-10": "bootstrap-min__pull-sm-10___1p4T6",
		"pull-sm-11": "bootstrap-min__pull-sm-11___3dANn",
		"pull-sm-12": "bootstrap-min__pull-sm-12___3GT_W",
		"push-sm-0": "bootstrap-min__push-sm-0___QmOqD",
		"push-sm-1": "bootstrap-min__push-sm-1___mYZ7v",
		"push-sm-2": "bootstrap-min__push-sm-2___2juYZ",
		"push-sm-3": "bootstrap-min__push-sm-3___2N2zE",
		"push-sm-4": "bootstrap-min__push-sm-4___2R3Gc",
		"push-sm-5": "bootstrap-min__push-sm-5___2H_Hh",
		"push-sm-6": "bootstrap-min__push-sm-6___396jQ",
		"push-sm-7": "bootstrap-min__push-sm-7___3zjKq",
		"push-sm-8": "bootstrap-min__push-sm-8___2_f4j",
		"push-sm-9": "bootstrap-min__push-sm-9___3Y4KJ",
		"push-sm-10": "bootstrap-min__push-sm-10___2lgGg",
		"push-sm-11": "bootstrap-min__push-sm-11___m_QSe",
		"push-sm-12": "bootstrap-min__push-sm-12___30UcS",
		"offset-sm-0": "bootstrap-min__offset-sm-0___3cnsR",
		"offset-sm-1": "bootstrap-min__offset-sm-1___3lweN",
		"offset-sm-2": "bootstrap-min__offset-sm-2___HoLck",
		"offset-sm-3": "bootstrap-min__offset-sm-3___2mVH1",
		"offset-sm-4": "bootstrap-min__offset-sm-4___1Me_f",
		"offset-sm-5": "bootstrap-min__offset-sm-5___1l8S3",
		"offset-sm-6": "bootstrap-min__offset-sm-6___157LC",
		"offset-sm-7": "bootstrap-min__offset-sm-7___eiLjg",
		"offset-sm-8": "bootstrap-min__offset-sm-8___3MLQk",
		"offset-sm-9": "bootstrap-min__offset-sm-9___qsXUS",
		"offset-sm-10": "bootstrap-min__offset-sm-10___2hiOO",
		"offset-sm-11": "bootstrap-min__offset-sm-11___c12l4",
		"col-md-auto": "bootstrap-min__col-md-auto___10rOF",
		"pull-md-0": "bootstrap-min__pull-md-0___3UTdw",
		"pull-md-1": "bootstrap-min__pull-md-1___1v90r",
		"pull-md-2": "bootstrap-min__pull-md-2___XsCFz",
		"pull-md-3": "bootstrap-min__pull-md-3___21LtA",
		"pull-md-4": "bootstrap-min__pull-md-4___1L4vW",
		"pull-md-5": "bootstrap-min__pull-md-5___2T_y8",
		"pull-md-6": "bootstrap-min__pull-md-6___1Rskr",
		"pull-md-7": "bootstrap-min__pull-md-7___1PEs9",
		"pull-md-8": "bootstrap-min__pull-md-8___1YQG-",
		"pull-md-9": "bootstrap-min__pull-md-9___264SY",
		"pull-md-10": "bootstrap-min__pull-md-10___1oQMG",
		"pull-md-11": "bootstrap-min__pull-md-11___1DE0M",
		"pull-md-12": "bootstrap-min__pull-md-12___2s6Xs",
		"push-md-0": "bootstrap-min__push-md-0___4EvI9",
		"push-md-1": "bootstrap-min__push-md-1___1YRnN",
		"push-md-2": "bootstrap-min__push-md-2___1yie4",
		"push-md-3": "bootstrap-min__push-md-3___1JQyY",
		"push-md-4": "bootstrap-min__push-md-4___Peao-",
		"push-md-5": "bootstrap-min__push-md-5___3wGr2",
		"push-md-6": "bootstrap-min__push-md-6____Je_g",
		"push-md-7": "bootstrap-min__push-md-7___V2PcI",
		"push-md-8": "bootstrap-min__push-md-8___2x85d",
		"push-md-9": "bootstrap-min__push-md-9___1hfu1",
		"push-md-10": "bootstrap-min__push-md-10___7l_oo",
		"push-md-11": "bootstrap-min__push-md-11___J7vNZ",
		"push-md-12": "bootstrap-min__push-md-12___2tQoN",
		"offset-md-0": "bootstrap-min__offset-md-0___2MJln",
		"offset-md-1": "bootstrap-min__offset-md-1___1OV4d",
		"offset-md-2": "bootstrap-min__offset-md-2___xlbye",
		"offset-md-3": "bootstrap-min__offset-md-3____qW6Z",
		"offset-md-4": "bootstrap-min__offset-md-4___2OYNA",
		"offset-md-5": "bootstrap-min__offset-md-5___Mpqku",
		"offset-md-6": "bootstrap-min__offset-md-6___10hLG",
		"offset-md-7": "bootstrap-min__offset-md-7___FdB94",
		"offset-md-8": "bootstrap-min__offset-md-8___245NX",
		"offset-md-9": "bootstrap-min__offset-md-9___bsx4M",
		"offset-md-10": "bootstrap-min__offset-md-10___2LAEw",
		"offset-md-11": "bootstrap-min__offset-md-11___A8zam",
		"col-lg-auto": "bootstrap-min__col-lg-auto___3ex0l",
		"pull-lg-0": "bootstrap-min__pull-lg-0___10mhr",
		"pull-lg-1": "bootstrap-min__pull-lg-1___1OfYm",
		"pull-lg-2": "bootstrap-min__pull-lg-2___3cklb",
		"pull-lg-3": "bootstrap-min__pull-lg-3___1dZiV",
		"pull-lg-4": "bootstrap-min__pull-lg-4___2SXhQ",
		"pull-lg-5": "bootstrap-min__pull-lg-5___1McU2",
		"pull-lg-6": "bootstrap-min__pull-lg-6___2DGvq",
		"pull-lg-7": "bootstrap-min__pull-lg-7___1FqoY",
		"pull-lg-8": "bootstrap-min__pull-lg-8___2Emr-",
		"pull-lg-9": "bootstrap-min__pull-lg-9___3OsCQ",
		"pull-lg-10": "bootstrap-min__pull-lg-10___1GnuM",
		"pull-lg-11": "bootstrap-min__pull-lg-11___1KY92",
		"pull-lg-12": "bootstrap-min__pull-lg-12___1B0Fl",
		"push-lg-0": "bootstrap-min__push-lg-0___oraF2",
		"push-lg-1": "bootstrap-min__push-lg-1___kgjwd",
		"push-lg-2": "bootstrap-min__push-lg-2___2uMkG",
		"push-lg-3": "bootstrap-min__push-lg-3___1eNXv",
		"push-lg-4": "bootstrap-min__push-lg-4___1rRiX",
		"push-lg-5": "bootstrap-min__push-lg-5___3246c",
		"push-lg-6": "bootstrap-min__push-lg-6___pFNqE",
		"push-lg-7": "bootstrap-min__push-lg-7___sCLvn",
		"push-lg-8": "bootstrap-min__push-lg-8___2gNdg",
		"push-lg-9": "bootstrap-min__push-lg-9___1AER4",
		"push-lg-10": "bootstrap-min__push-lg-10___33k5t",
		"push-lg-11": "bootstrap-min__push-lg-11___3YePw",
		"push-lg-12": "bootstrap-min__push-lg-12___1R2bl",
		"offset-lg-0": "bootstrap-min__offset-lg-0___8Njdl",
		"offset-lg-1": "bootstrap-min__offset-lg-1___IU7Du",
		"offset-lg-2": "bootstrap-min__offset-lg-2___2VsOV",
		"offset-lg-3": "bootstrap-min__offset-lg-3___3Pkg_",
		"offset-lg-4": "bootstrap-min__offset-lg-4___1nC55",
		"offset-lg-5": "bootstrap-min__offset-lg-5___1u4ZW",
		"offset-lg-6": "bootstrap-min__offset-lg-6___2vhCB",
		"offset-lg-7": "bootstrap-min__offset-lg-7___2y7ax",
		"offset-lg-8": "bootstrap-min__offset-lg-8___SevyI",
		"offset-lg-9": "bootstrap-min__offset-lg-9___1KWwk",
		"offset-lg-10": "bootstrap-min__offset-lg-10___1Cgwq",
		"offset-lg-11": "bootstrap-min__offset-lg-11___rSUny",
		"col-xl-auto": "bootstrap-min__col-xl-auto___2idtb",
		"pull-xl-0": "bootstrap-min__pull-xl-0___2gZ4A",
		"pull-xl-1": "bootstrap-min__pull-xl-1___2FF1T",
		"pull-xl-2": "bootstrap-min__pull-xl-2___3oxFz",
		"pull-xl-3": "bootstrap-min__pull-xl-3___2PNw4",
		"pull-xl-4": "bootstrap-min__pull-xl-4___ajhDd",
		"pull-xl-5": "bootstrap-min__pull-xl-5___R8svs",
		"pull-xl-6": "bootstrap-min__pull-xl-6___h0XDs",
		"pull-xl-7": "bootstrap-min__pull-xl-7___17e_W",
		"pull-xl-8": "bootstrap-min__pull-xl-8___1Zv8W",
		"pull-xl-9": "bootstrap-min__pull-xl-9___3nqwS",
		"pull-xl-10": "bootstrap-min__pull-xl-10___32bJa",
		"pull-xl-11": "bootstrap-min__pull-xl-11___35Tc_",
		"pull-xl-12": "bootstrap-min__pull-xl-12___3kcIz",
		"push-xl-0": "bootstrap-min__push-xl-0___W6Bex",
		"push-xl-1": "bootstrap-min__push-xl-1___3cY_S",
		"push-xl-2": "bootstrap-min__push-xl-2___1bXNh",
		"push-xl-3": "bootstrap-min__push-xl-3___3zEik",
		"push-xl-4": "bootstrap-min__push-xl-4____8JGV",
		"push-xl-5": "bootstrap-min__push-xl-5___d9kqQ",
		"push-xl-6": "bootstrap-min__push-xl-6___15GSj",
		"push-xl-7": "bootstrap-min__push-xl-7___1yc2E",
		"push-xl-8": "bootstrap-min__push-xl-8___3kWbf",
		"push-xl-9": "bootstrap-min__push-xl-9___1IoJv",
		"push-xl-10": "bootstrap-min__push-xl-10___W63zz",
		"push-xl-11": "bootstrap-min__push-xl-11___HVPpc",
		"push-xl-12": "bootstrap-min__push-xl-12___3fo-_",
		"offset-xl-0": "bootstrap-min__offset-xl-0___3LCRO",
		"offset-xl-1": "bootstrap-min__offset-xl-1___3br_x",
		"offset-xl-2": "bootstrap-min__offset-xl-2___2H9si",
		"offset-xl-3": "bootstrap-min__offset-xl-3___3Fl4_",
		"offset-xl-4": "bootstrap-min__offset-xl-4___2alft",
		"offset-xl-5": "bootstrap-min__offset-xl-5___3gvCw",
		"offset-xl-6": "bootstrap-min__offset-xl-6___2Hif8",
		"offset-xl-7": "bootstrap-min__offset-xl-7___33ZEi",
		"offset-xl-8": "bootstrap-min__offset-xl-8___2YB_6",
		"offset-xl-9": "bootstrap-min__offset-xl-9___MQwnm",
		"offset-xl-10": "bootstrap-min__offset-xl-10___1pUkZ",
		"offset-xl-11": "bootstrap-min__offset-xl-11___SPwjn",
		"table-sm": "bootstrap-min__table-sm___WwsWN",
		"table-striped": "bootstrap-min__table-striped___de-Ip",
		"table-hover": "bootstrap-min__table-hover___mCt_e",
		"table-active": "bootstrap-min__table-active___2iV8A",
		"table-success": "bootstrap-min__table-success___3Khwv",
		"table-info": "bootstrap-min__table-info___IvSag",
		"table-warning": "bootstrap-min__table-warning___DVlhH",
		"table-danger": "bootstrap-min__table-danger___rFxmZ",
		"thead-inverse": "bootstrap-min__thead-inverse___Zxqgq",
		"thead-default": "bootstrap-min__thead-default___3eyPu",
		"table-inverse": "bootstrap-min__table-inverse___tM8vf",
		"table-responsive": "bootstrap-min__table-responsive___25Kee",
		"form-control": "bootstrap-min__form-control___23iuB",
		"form-control-file": "bootstrap-min__form-control-file___2dBjh",
		"form-control-range": "bootstrap-min__form-control-range___3AO8Y",
		"col-form-label": "bootstrap-min__col-form-label___3N6so",
		"col-form-label-lg": "bootstrap-min__col-form-label-lg___36JQt",
		"col-form-label-sm": "bootstrap-min__col-form-label-sm___2slLD",
		"col-form-legend": "bootstrap-min__col-form-legend___1fiRj",
		"form-control-static": "bootstrap-min__form-control-static___7JaJq",
		"form-control-lg": "bootstrap-min__form-control-lg___3Q4X3",
		"form-control-sm": "bootstrap-min__form-control-sm___11qeE",
		"input-group-lg": "bootstrap-min__input-group-lg___3N-4R",
		"input-group-addon": "bootstrap-min__input-group-addon___1fdO2",
		"input-group-btn": "bootstrap-min__input-group-btn___3__05",
		"btn": "bootstrap-min__btn___3UZI1",
		"input-group-sm": "bootstrap-min__input-group-sm___RnEsw",
		"form-group": "bootstrap-min__form-group___30_Te",
		"form-text": "bootstrap-min__form-text___LJS7w",
		"form-check": "bootstrap-min__form-check___t3j3I",
		"disabled": "bootstrap-min__disabled___68pqS",
		"form-check-label": "bootstrap-min__form-check-label___Z6SJ2",
		"form-check-input": "bootstrap-min__form-check-input___37ATF",
		"form-check-inline": "bootstrap-min__form-check-inline___2FJZw",
		"form-control-feedback": "bootstrap-min__form-control-feedback___1ehPe",
		"form-control-danger": "bootstrap-min__form-control-danger___SHtNR",
		"form-control-success": "bootstrap-min__form-control-success___3Vzud",
		"form-control-warning": "bootstrap-min__form-control-warning___1pLzN",
		"has-success": "bootstrap-min__has-success___3JxOl",
		"custom-control": "bootstrap-min__custom-control___1uZee",
		"form-control-label": "bootstrap-min__form-control-label___25GfJ",
		"has-warning": "bootstrap-min__has-warning___2KTmn",
		"has-danger": "bootstrap-min__has-danger___pmjv3",
		"form-inline": "bootstrap-min__form-inline___1Luyi",
		"input-group": "bootstrap-min__input-group___JtC56",
		"custom-control-indicator": "bootstrap-min__custom-control-indicator___tjoky",
		"has-feedback": "bootstrap-min__has-feedback___yQUK7",
		"focus": "bootstrap-min__focus___1aGf9",
		"active": "bootstrap-min__active___1ygEY",
		"btn-primary": "bootstrap-min__btn-primary___3iaqT",
		"show": "bootstrap-min__show___203Kp",
		"dropdown-toggle": "bootstrap-min__dropdown-toggle___3sTmA",
		"btn-secondary": "bootstrap-min__btn-secondary___MsQjy",
		"btn-info": "bootstrap-min__btn-info___vVzp9",
		"btn-success": "bootstrap-min__btn-success___2Dpnu",
		"btn-warning": "bootstrap-min__btn-warning___1ip8D",
		"btn-danger": "bootstrap-min__btn-danger___XCyQl",
		"btn-outline-primary": "bootstrap-min__btn-outline-primary___2EpVj",
		"btn-outline-secondary": "bootstrap-min__btn-outline-secondary___2sSlj",
		"btn-outline-info": "bootstrap-min__btn-outline-info___1MpaJ",
		"btn-outline-success": "bootstrap-min__btn-outline-success___3SmJW",
		"btn-outline-warning": "bootstrap-min__btn-outline-warning___y2OeH",
		"btn-outline-danger": "bootstrap-min__btn-outline-danger___1AZB3",
		"btn-link": "bootstrap-min__btn-link___2-ItE",
		"btn-group-lg": "bootstrap-min__btn-group-lg___1_CLg",
		"btn-lg": "bootstrap-min__btn-lg___23rgC",
		"btn-group-sm": "bootstrap-min__btn-group-sm___oFVqG",
		"btn-sm": "bootstrap-min__btn-sm___25FCO",
		"btn-block": "bootstrap-min__btn-block___2htsM",
		"fade": "bootstrap-min__fade___jy_Yw",
		"collapse": "bootstrap-min__collapse___xLX5h",
		"collapsing": "bootstrap-min__collapsing____IWBC",
		"dropdown": "bootstrap-min__dropdown___2OgyY",
		"dropup": "bootstrap-min__dropup___3lRV8",
		"dropdown-menu": "bootstrap-min__dropdown-menu___1htOP",
		"dropdown-divider": "bootstrap-min__dropdown-divider___3TRXK",
		"dropdown-item": "bootstrap-min__dropdown-item___2Hv1b",
		"dropdown-menu-right": "bootstrap-min__dropdown-menu-right___zhcUP",
		"dropdown-menu-left": "bootstrap-min__dropdown-menu-left___-usyt",
		"dropdown-header": "bootstrap-min__dropdown-header___2U76h",
		"dropdown-backdrop": "bootstrap-min__dropdown-backdrop___1I8SK",
		"btn-group": "bootstrap-min__btn-group___2GE--",
		"btn-group-vertical": "bootstrap-min__btn-group-vertical___2nh6x",
		"btn-toolbar": "bootstrap-min__btn-toolbar___3GEdV",
		"open": "bootstrap-min__open___3syfA",
		"dropdown-toggle-split": "bootstrap-min__dropdown-toggle-split___pzkwz",
		"custom-control-input": "bootstrap-min__custom-control-input___UoSFj",
		"custom-control-description": "bootstrap-min__custom-control-description___2hDno",
		"custom-checkbox": "bootstrap-min__custom-checkbox___PTD0v",
		"custom-radio": "bootstrap-min__custom-radio___83ayj",
		"custom-controls-stacked": "bootstrap-min__custom-controls-stacked___2xyId",
		"custom-select": "bootstrap-min__custom-select___1h3Ya",
		"custom-select-sm": "bootstrap-min__custom-select-sm___2SRFY",
		"custom-file": "bootstrap-min__custom-file___34O0S",
		"custom-file-input": "bootstrap-min__custom-file-input___z2Oc5",
		"custom-file-control": "bootstrap-min__custom-file-control___20-RN",
		"nav": "bootstrap-min__nav___2GHdF",
		"nav-link": "bootstrap-min__nav-link___3JdzW",
		"nav-tabs": "bootstrap-min__nav-tabs___kG_ro",
		"nav-item": "bootstrap-min__nav-item___3T-Wm",
		"nav-pills": "bootstrap-min__nav-pills___18bbm",
		"nav-fill": "bootstrap-min__nav-fill___3D294",
		"nav-justified": "bootstrap-min__nav-justified___2N2N3",
		"tab-content": "bootstrap-min__tab-content___2ZolZ",
		"tab-pane": "bootstrap-min__tab-pane___2qs9v",
		"navbar-brand": "bootstrap-min__navbar-brand___3m9n1",
		"navbar-nav": "bootstrap-min__navbar-nav___2goUy",
		"navbar-text": "bootstrap-min__navbar-text___3Oih2",
		"navbar-toggler": "bootstrap-min__navbar-toggler___2I6UX",
		"navbar-toggler-icon": "bootstrap-min__navbar-toggler-icon___3BE_n",
		"navbar-toggler-left": "bootstrap-min__navbar-toggler-left___1_jI6",
		"navbar-toggler-right": "bootstrap-min__navbar-toggler-right___1FZan",
		"navbar-toggleable": "bootstrap-min__navbar-toggleable___1td1H",
		"navbar-collapse": "bootstrap-min__navbar-collapse___3UY6N",
		"navbar-toggleable-sm": "bootstrap-min__navbar-toggleable-sm___35XVb",
		"navbar-toggleable-md": "bootstrap-min__navbar-toggleable-md___3tUKZ",
		"navbar-toggleable-lg": "bootstrap-min__navbar-toggleable-lg___PowWD",
		"navbar-toggleable-xl": "bootstrap-min__navbar-toggleable-xl___32xDb",
		"navbar-light": "bootstrap-min__navbar-light___FnrHi",
		"navbar-inverse": "bootstrap-min__navbar-inverse___13rKp",
		"card": "bootstrap-min__card___1LLDR",
		"card-block": "bootstrap-min__card-block___jz0BB",
		"card-title": "bootstrap-min__card-title___1FvKf",
		"card-subtitle": "bootstrap-min__card-subtitle___250o2",
		"card-text": "bootstrap-min__card-text___Njfz1",
		"card-link": "bootstrap-min__card-link___3dhwP",
		"list-group": "bootstrap-min__list-group___Ejsji",
		"list-group-item": "bootstrap-min__list-group-item___Q9DWn",
		"card-header": "bootstrap-min__card-header___j5fQ7",
		"card-footer": "bootstrap-min__card-footer___1pgNd",
		"card-header-tabs": "bootstrap-min__card-header-tabs___1tE8h",
		"card-header-pills": "bootstrap-min__card-header-pills___3Lnpw",
		"card-primary": "bootstrap-min__card-primary___1l2c_",
		"card-success": "bootstrap-min__card-success___1Ye66",
		"card-info": "bootstrap-min__card-info___3-OmC",
		"card-warning": "bootstrap-min__card-warning___1FBzo",
		"card-danger": "bootstrap-min__card-danger___svYSt",
		"card-outline-primary": "bootstrap-min__card-outline-primary___1CxTT",
		"card-outline-secondary": "bootstrap-min__card-outline-secondary___31EkW",
		"card-outline-info": "bootstrap-min__card-outline-info___31neB",
		"card-outline-success": "bootstrap-min__card-outline-success___1ZRLe",
		"card-outline-warning": "bootstrap-min__card-outline-warning___1oFeG",
		"card-outline-danger": "bootstrap-min__card-outline-danger___1H_Qq",
		"card-inverse": "bootstrap-min__card-inverse___3_ZkG",
		"card-blockquote": "bootstrap-min__card-blockquote___2wVbJ",
		"card-img": "bootstrap-min__card-img___3i95U",
		"card-img-overlay": "bootstrap-min__card-img-overlay___3c3C3",
		"card-img-top": "bootstrap-min__card-img-top___1ZOF1",
		"card-img-bottom": "bootstrap-min__card-img-bottom___28JsN",
		"card-deck": "bootstrap-min__card-deck___-kEZx",
		"card-group": "bootstrap-min__card-group___3TmaQ",
		"card-columns": "bootstrap-min__card-columns___1TwzX",
		"breadcrumb": "bootstrap-min__breadcrumb___3LW8w",
		"breadcrumb-item": "bootstrap-min__breadcrumb-item___2kXPR",
		"pagination": "bootstrap-min__pagination___2GsD_",
		"page-item": "bootstrap-min__page-item___3OQdE",
		"page-link": "bootstrap-min__page-link___1wVIA",
		"pagination-lg": "bootstrap-min__pagination-lg___1KhFG",
		"pagination-sm": "bootstrap-min__pagination-sm___3l8LE",
		"badge-pill": "bootstrap-min__badge-pill___3F4t4",
		"badge-default": "bootstrap-min__badge-default___2P0Lj",
		"badge-primary": "bootstrap-min__badge-primary___uRDIm",
		"badge-success": "bootstrap-min__badge-success___1uGjt",
		"badge-info": "bootstrap-min__badge-info___2Igo4",
		"badge-warning": "bootstrap-min__badge-warning___2cv9G",
		"badge-danger": "bootstrap-min__badge-danger___1ESsW",
		"jumbotron": "bootstrap-min__jumbotron___COnVO",
		"jumbotron-hr": "bootstrap-min__jumbotron-hr___2gV63",
		"jumbotron-fluid": "bootstrap-min__jumbotron-fluid___1jiB2",
		"alert": "bootstrap-min__alert___1NAfo",
		"alert-heading": "bootstrap-min__alert-heading___3kOws",
		"alert-link": "bootstrap-min__alert-link___2LNB9",
		"alert-dismissible": "bootstrap-min__alert-dismissible___oK1gy",
		"close": "bootstrap-min__close___2cF5v",
		"alert-success": "bootstrap-min__alert-success___2d1AK",
		"alert-info": "bootstrap-min__alert-info___dXW70",
		"alert-warning": "bootstrap-min__alert-warning___14Pau",
		"alert-danger": "bootstrap-min__alert-danger___2IT5f",
		"progress": "bootstrap-min__progress___1IiSD",
		"progress-bar": "bootstrap-min__progress-bar___jOeJx",
		"progress-bar-striped": "bootstrap-min__progress-bar-striped___2_o6Z",
		"progress-bar-animated": "bootstrap-min__progress-bar-animated___1kd7N",
		"progress-bar-stripes": "bootstrap-min__progress-bar-stripes___WVy7g",
		"media": "bootstrap-min__media___4IX9s",
		"media-body": "bootstrap-min__media-body___1u669",
		"list-group-item-action": "bootstrap-min__list-group-item-action___2LWSF",
		"list-group-item-heading": "bootstrap-min__list-group-item-heading___biDFB",
		"list-group-item-text": "bootstrap-min__list-group-item-text___1szIh",
		"list-group-flush": "bootstrap-min__list-group-flush___2dyrC",
		"list-group-item-success": "bootstrap-min__list-group-item-success___L8kg3",
		"list-group-item-info": "bootstrap-min__list-group-item-info___3c3vl",
		"list-group-item-warning": "bootstrap-min__list-group-item-warning___1bSf5",
		"list-group-item-danger": "bootstrap-min__list-group-item-danger___3Hxo4",
		"embed-responsive": "bootstrap-min__embed-responsive___25jTt",
		"embed-responsive-item": "bootstrap-min__embed-responsive-item___27qJu",
		"embed-responsive-21by9": "bootstrap-min__embed-responsive-21by9___3vZ-Q",
		"embed-responsive-16by9": "bootstrap-min__embed-responsive-16by9___2F5p0",
		"embed-responsive-4by3": "bootstrap-min__embed-responsive-4by3___rOavR",
		"embed-responsive-1by1": "bootstrap-min__embed-responsive-1by1___3Aq5R",
		"modal-open": "bootstrap-min__modal-open___16yh-",
		"modal": "bootstrap-min__modal___NdSxv",
		"modal-dialog": "bootstrap-min__modal-dialog___2TkfE",
		"modal-content": "bootstrap-min__modal-content___3j4Hu",
		"modal-backdrop": "bootstrap-min__modal-backdrop___1gVJW",
		"modal-header": "bootstrap-min__modal-header___12P0i",
		"modal-title": "bootstrap-min__modal-title___fP-gS",
		"modal-body": "bootstrap-min__modal-body___3MJVo",
		"modal-footer": "bootstrap-min__modal-footer___1i7hm",
		"modal-scrollbar-measure": "bootstrap-min__modal-scrollbar-measure___13ha4",
		"modal-sm": "bootstrap-min__modal-sm___3PGrD",
		"modal-lg": "bootstrap-min__modal-lg___1gTP2",
		"tooltip": "bootstrap-min__tooltip___1RIDu",
		"bs-tether-element-attached-bottom": "bootstrap-min__bs-tether-element-attached-bottom___22Y8r",
		"tooltip-top": "bootstrap-min__tooltip-top___2H1XG",
		"tooltip-inner": "bootstrap-min__tooltip-inner___2SV7n",
		"bs-tether-element-attached-left": "bootstrap-min__bs-tether-element-attached-left___2zKig",
		"tooltip-right": "bootstrap-min__tooltip-right___2tDdi",
		"bs-tether-element-attached-top": "bootstrap-min__bs-tether-element-attached-top___2HupT",
		"tooltip-bottom": "bootstrap-min__tooltip-bottom___3Riz3",
		"bs-tether-element-attached-right": "bootstrap-min__bs-tether-element-attached-right___LxlGz",
		"tooltip-left": "bootstrap-min__tooltip-left___1qyGw",
		"popover": "bootstrap-min__popover___2gNi1",
		"popover-top": "bootstrap-min__popover-top___2Qxbo",
		"popover-right": "bootstrap-min__popover-right___3rx16",
		"popover-bottom": "bootstrap-min__popover-bottom___HOxsx",
		"popover-title": "bootstrap-min__popover-title___QKgR1",
		"popover-left": "bootstrap-min__popover-left___2XfxF",
		"popover-content": "bootstrap-min__popover-content___uZTSI",
		"carousel": "bootstrap-min__carousel___U5E08",
		"carousel-inner": "bootstrap-min__carousel-inner___1BM4x",
		"carousel-item": "bootstrap-min__carousel-item___1BluK",
		"carousel-item-next": "bootstrap-min__carousel-item-next___1NsjI",
		"carousel-item-prev": "bootstrap-min__carousel-item-prev___stGUr",
		"carousel-item-left": "bootstrap-min__carousel-item-left___1Y3z5",
		"carousel-item-right": "bootstrap-min__carousel-item-right___24Efq",
		"carousel-control-next": "bootstrap-min__carousel-control-next___q7wph",
		"carousel-control-prev": "bootstrap-min__carousel-control-prev___tueNZ",
		"carousel-control-next-icon": "bootstrap-min__carousel-control-next-icon___36ygh",
		"carousel-control-prev-icon": "bootstrap-min__carousel-control-prev-icon___KYs0i",
		"carousel-indicators": "bootstrap-min__carousel-indicators___2lJ0Y",
		"carousel-caption": "bootstrap-min__carousel-caption___fkH1a",
		"align-baseline": "bootstrap-min__align-baseline___3XFTF",
		"align-top": "bootstrap-min__align-top___369fH",
		"align-middle": "bootstrap-min__align-middle___103kx",
		"align-bottom": "bootstrap-min__align-bottom___2qYRW",
		"align-text-bottom": "bootstrap-min__align-text-bottom___3VMx0",
		"align-text-top": "bootstrap-min__align-text-top___1t5Qx",
		"bg-faded": "bootstrap-min__bg-faded___MtqHI",
		"bg-primary": "bootstrap-min__bg-primary___qM_l8",
		"bg-success": "bootstrap-min__bg-success___14l-0",
		"bg-info": "bootstrap-min__bg-info___325VH",
		"bg-warning": "bootstrap-min__bg-warning___2CgJd",
		"bg-danger": "bootstrap-min__bg-danger___2voYx",
		"bg-inverse": "bootstrap-min__bg-inverse___j9MMr",
		"border-0": "bootstrap-min__border-0___2A9ru",
		"border-top-0": "bootstrap-min__border-top-0___ZLJmR",
		"border-right-0": "bootstrap-min__border-right-0___2tLm4",
		"border-bottom-0": "bootstrap-min__border-bottom-0___2qBMm",
		"border-left-0": "bootstrap-min__border-left-0___10kCh",
		"rounded": "bootstrap-min__rounded___1jVDU",
		"rounded-top": "bootstrap-min__rounded-top___3xMZ3",
		"rounded-right": "bootstrap-min__rounded-right___24cic",
		"rounded-bottom": "bootstrap-min__rounded-bottom___3SGdq",
		"rounded-left": "bootstrap-min__rounded-left___JAShh",
		"rounded-circle": "bootstrap-min__rounded-circle___-kL4t",
		"rounded-0": "bootstrap-min__rounded-0___17qBX",
		"clearfix": "bootstrap-min__clearfix___1C-Ut",
		"d-none": "bootstrap-min__d-none___1p_nD",
		"d-inline": "bootstrap-min__d-inline___2hVUm",
		"d-inline-block": "bootstrap-min__d-inline-block___RvjaX",
		"d-block": "bootstrap-min__d-block___2W6wm",
		"d-table": "bootstrap-min__d-table___3hjOB",
		"d-table-cell": "bootstrap-min__d-table-cell___NArxr",
		"d-flex": "bootstrap-min__d-flex___ATCo4",
		"d-inline-flex": "bootstrap-min__d-inline-flex___ft6BX",
		"d-sm-none": "bootstrap-min__d-sm-none___2HsX-",
		"d-sm-inline": "bootstrap-min__d-sm-inline___3tnMo",
		"d-sm-inline-block": "bootstrap-min__d-sm-inline-block___1S7Zj",
		"d-sm-block": "bootstrap-min__d-sm-block___1UcgT",
		"d-sm-table": "bootstrap-min__d-sm-table___139RD",
		"d-sm-table-cell": "bootstrap-min__d-sm-table-cell___30FBO",
		"d-sm-flex": "bootstrap-min__d-sm-flex___3pJJU",
		"d-sm-inline-flex": "bootstrap-min__d-sm-inline-flex___1ZRnc",
		"d-md-none": "bootstrap-min__d-md-none___2CN04",
		"d-md-inline": "bootstrap-min__d-md-inline___2YLC1",
		"d-md-inline-block": "bootstrap-min__d-md-inline-block___22NT_",
		"d-md-block": "bootstrap-min__d-md-block___2V3O-",
		"d-md-table": "bootstrap-min__d-md-table___2JU2E",
		"d-md-table-cell": "bootstrap-min__d-md-table-cell___mlxH9",
		"d-md-flex": "bootstrap-min__d-md-flex___1bGj6",
		"d-md-inline-flex": "bootstrap-min__d-md-inline-flex___2rUrx",
		"d-lg-none": "bootstrap-min__d-lg-none___FoNvU",
		"d-lg-inline": "bootstrap-min__d-lg-inline___1Vrs1",
		"d-lg-inline-block": "bootstrap-min__d-lg-inline-block___3iiCs",
		"d-lg-block": "bootstrap-min__d-lg-block___MGYVA",
		"d-lg-table": "bootstrap-min__d-lg-table___38aSb",
		"d-lg-table-cell": "bootstrap-min__d-lg-table-cell___10g-N",
		"d-lg-flex": "bootstrap-min__d-lg-flex___3dMop",
		"d-lg-inline-flex": "bootstrap-min__d-lg-inline-flex___Z0vbK",
		"d-xl-none": "bootstrap-min__d-xl-none___px8RG",
		"d-xl-inline": "bootstrap-min__d-xl-inline___2CgG4",
		"d-xl-inline-block": "bootstrap-min__d-xl-inline-block___15X1-",
		"d-xl-block": "bootstrap-min__d-xl-block___3_nBm",
		"d-xl-table": "bootstrap-min__d-xl-table___1g7uS",
		"d-xl-table-cell": "bootstrap-min__d-xl-table-cell___3g6G4",
		"d-xl-flex": "bootstrap-min__d-xl-flex___2D2re",
		"d-xl-inline-flex": "bootstrap-min__d-xl-inline-flex___1cwJh",
		"flex-first": "bootstrap-min__flex-first___3ppXu",
		"flex-last": "bootstrap-min__flex-last___rO-wN",
		"flex-unordered": "bootstrap-min__flex-unordered___1YPaf",
		"flex-row": "bootstrap-min__flex-row___1pBjQ",
		"flex-column": "bootstrap-min__flex-column___1tWR_",
		"flex-row-reverse": "bootstrap-min__flex-row-reverse___uF883",
		"flex-column-reverse": "bootstrap-min__flex-column-reverse___j87G0",
		"flex-wrap": "bootstrap-min__flex-wrap___3ysiI",
		"flex-nowrap": "bootstrap-min__flex-nowrap___3OAyH",
		"flex-wrap-reverse": "bootstrap-min__flex-wrap-reverse___Ub0jj",
		"justify-content-start": "bootstrap-min__justify-content-start___1k9MS",
		"justify-content-end": "bootstrap-min__justify-content-end___V4ooJ",
		"justify-content-center": "bootstrap-min__justify-content-center___12Oys",
		"justify-content-between": "bootstrap-min__justify-content-between___1CBM7",
		"justify-content-around": "bootstrap-min__justify-content-around___b7zZK",
		"align-items-start": "bootstrap-min__align-items-start___23VWD",
		"align-items-end": "bootstrap-min__align-items-end___2jTHp",
		"align-items-center": "bootstrap-min__align-items-center___2E7I4",
		"align-items-baseline": "bootstrap-min__align-items-baseline___255OT",
		"align-items-stretch": "bootstrap-min__align-items-stretch___34RsL",
		"align-content-start": "bootstrap-min__align-content-start___14Ymo",
		"align-content-end": "bootstrap-min__align-content-end___1ArAY",
		"align-content-center": "bootstrap-min__align-content-center___xut6s",
		"align-content-between": "bootstrap-min__align-content-between___F5o6j",
		"align-content-around": "bootstrap-min__align-content-around___2HLyZ",
		"align-content-stretch": "bootstrap-min__align-content-stretch___1PlXu",
		"align-self-auto": "bootstrap-min__align-self-auto___2q_Nz",
		"align-self-start": "bootstrap-min__align-self-start___3FudZ",
		"align-self-end": "bootstrap-min__align-self-end___cQkF2",
		"align-self-center": "bootstrap-min__align-self-center___3V9J7",
		"align-self-baseline": "bootstrap-min__align-self-baseline___Yuwlj",
		"align-self-stretch": "bootstrap-min__align-self-stretch___2mYhF",
		"flex-sm-first": "bootstrap-min__flex-sm-first___vM2LC",
		"flex-sm-last": "bootstrap-min__flex-sm-last___3I_Dt",
		"flex-sm-unordered": "bootstrap-min__flex-sm-unordered___1hJpE",
		"flex-sm-row": "bootstrap-min__flex-sm-row___2wH9V",
		"flex-sm-column": "bootstrap-min__flex-sm-column___1PAzm",
		"flex-sm-row-reverse": "bootstrap-min__flex-sm-row-reverse___3PgU1",
		"flex-sm-column-reverse": "bootstrap-min__flex-sm-column-reverse___3fJEq",
		"flex-sm-wrap": "bootstrap-min__flex-sm-wrap___Welmr",
		"flex-sm-nowrap": "bootstrap-min__flex-sm-nowrap___1zjAR",
		"flex-sm-wrap-reverse": "bootstrap-min__flex-sm-wrap-reverse___3_rtA",
		"justify-content-sm-start": "bootstrap-min__justify-content-sm-start___139s0",
		"justify-content-sm-end": "bootstrap-min__justify-content-sm-end___xduvp",
		"justify-content-sm-center": "bootstrap-min__justify-content-sm-center___31PPx",
		"justify-content-sm-between": "bootstrap-min__justify-content-sm-between___1d-na",
		"justify-content-sm-around": "bootstrap-min__justify-content-sm-around___3Famm",
		"align-items-sm-start": "bootstrap-min__align-items-sm-start___MKrQq",
		"align-items-sm-end": "bootstrap-min__align-items-sm-end___ocuy0",
		"align-items-sm-center": "bootstrap-min__align-items-sm-center___h4brH",
		"align-items-sm-baseline": "bootstrap-min__align-items-sm-baseline___y1ZOS",
		"align-items-sm-stretch": "bootstrap-min__align-items-sm-stretch___39SG6",
		"align-content-sm-start": "bootstrap-min__align-content-sm-start___2i9lT",
		"align-content-sm-end": "bootstrap-min__align-content-sm-end___2yyO7",
		"align-content-sm-center": "bootstrap-min__align-content-sm-center___3uo40",
		"align-content-sm-between": "bootstrap-min__align-content-sm-between___1oU5N",
		"align-content-sm-around": "bootstrap-min__align-content-sm-around___2VCFK",
		"align-content-sm-stretch": "bootstrap-min__align-content-sm-stretch___vw1sG",
		"align-self-sm-auto": "bootstrap-min__align-self-sm-auto___3S2Og",
		"align-self-sm-start": "bootstrap-min__align-self-sm-start____pmEE",
		"align-self-sm-end": "bootstrap-min__align-self-sm-end___3_f6G",
		"align-self-sm-center": "bootstrap-min__align-self-sm-center___2AWlm",
		"align-self-sm-baseline": "bootstrap-min__align-self-sm-baseline___2tGqa",
		"align-self-sm-stretch": "bootstrap-min__align-self-sm-stretch___2bziT",
		"flex-md-first": "bootstrap-min__flex-md-first___1BXkO",
		"flex-md-last": "bootstrap-min__flex-md-last___1avoU",
		"flex-md-unordered": "bootstrap-min__flex-md-unordered___2-eMZ",
		"flex-md-row": "bootstrap-min__flex-md-row___1e6wV",
		"flex-md-column": "bootstrap-min__flex-md-column___2bzNq",
		"flex-md-row-reverse": "bootstrap-min__flex-md-row-reverse___359xp",
		"flex-md-column-reverse": "bootstrap-min__flex-md-column-reverse___2-qTZ",
		"flex-md-wrap": "bootstrap-min__flex-md-wrap___1C5Vd",
		"flex-md-nowrap": "bootstrap-min__flex-md-nowrap___3apTn",
		"flex-md-wrap-reverse": "bootstrap-min__flex-md-wrap-reverse___Enee2",
		"justify-content-md-start": "bootstrap-min__justify-content-md-start___1susL",
		"justify-content-md-end": "bootstrap-min__justify-content-md-end___1QJdx",
		"justify-content-md-center": "bootstrap-min__justify-content-md-center___2SLkY",
		"justify-content-md-between": "bootstrap-min__justify-content-md-between___tv2Y-",
		"justify-content-md-around": "bootstrap-min__justify-content-md-around___37hBP",
		"align-items-md-start": "bootstrap-min__align-items-md-start___rX2QZ",
		"align-items-md-end": "bootstrap-min__align-items-md-end___13Eyp",
		"align-items-md-center": "bootstrap-min__align-items-md-center___3Kuxi",
		"align-items-md-baseline": "bootstrap-min__align-items-md-baseline___1dKZ-",
		"align-items-md-stretch": "bootstrap-min__align-items-md-stretch___1FZ6-",
		"align-content-md-start": "bootstrap-min__align-content-md-start___3EPdS",
		"align-content-md-end": "bootstrap-min__align-content-md-end___nqKa4",
		"align-content-md-center": "bootstrap-min__align-content-md-center___3yEOt",
		"align-content-md-between": "bootstrap-min__align-content-md-between___2bJN1",
		"align-content-md-around": "bootstrap-min__align-content-md-around___1sQDX",
		"align-content-md-stretch": "bootstrap-min__align-content-md-stretch___jZugu",
		"align-self-md-auto": "bootstrap-min__align-self-md-auto___2azun",
		"align-self-md-start": "bootstrap-min__align-self-md-start___1U5rW",
		"align-self-md-end": "bootstrap-min__align-self-md-end___1Vvxi",
		"align-self-md-center": "bootstrap-min__align-self-md-center___jBsot",
		"align-self-md-baseline": "bootstrap-min__align-self-md-baseline___y7TBB",
		"align-self-md-stretch": "bootstrap-min__align-self-md-stretch___eOE5h",
		"flex-lg-first": "bootstrap-min__flex-lg-first___2rEwt",
		"flex-lg-last": "bootstrap-min__flex-lg-last___3DI4u",
		"flex-lg-unordered": "bootstrap-min__flex-lg-unordered___1LjxB",
		"flex-lg-row": "bootstrap-min__flex-lg-row___1SyWq",
		"flex-lg-column": "bootstrap-min__flex-lg-column___Lle_1",
		"flex-lg-row-reverse": "bootstrap-min__flex-lg-row-reverse___3ZiYL",
		"flex-lg-column-reverse": "bootstrap-min__flex-lg-column-reverse___1DEYG",
		"flex-lg-wrap": "bootstrap-min__flex-lg-wrap___3In7n",
		"flex-lg-nowrap": "bootstrap-min__flex-lg-nowrap___2XIyI",
		"flex-lg-wrap-reverse": "bootstrap-min__flex-lg-wrap-reverse___oA4fs",
		"justify-content-lg-start": "bootstrap-min__justify-content-lg-start___3vhPX",
		"justify-content-lg-end": "bootstrap-min__justify-content-lg-end___sCpYD",
		"justify-content-lg-center": "bootstrap-min__justify-content-lg-center___1GBmS",
		"justify-content-lg-between": "bootstrap-min__justify-content-lg-between___-lfhm",
		"justify-content-lg-around": "bootstrap-min__justify-content-lg-around___1q6OS",
		"align-items-lg-start": "bootstrap-min__align-items-lg-start___2-kcE",
		"align-items-lg-end": "bootstrap-min__align-items-lg-end___wUGyS",
		"align-items-lg-center": "bootstrap-min__align-items-lg-center___2E6UE",
		"align-items-lg-baseline": "bootstrap-min__align-items-lg-baseline___1JWj9",
		"align-items-lg-stretch": "bootstrap-min__align-items-lg-stretch___1l48a",
		"align-content-lg-start": "bootstrap-min__align-content-lg-start___16mMi",
		"align-content-lg-end": "bootstrap-min__align-content-lg-end___3iFv2",
		"align-content-lg-center": "bootstrap-min__align-content-lg-center___2wPJp",
		"align-content-lg-between": "bootstrap-min__align-content-lg-between___1ebKo",
		"align-content-lg-around": "bootstrap-min__align-content-lg-around___1V7fJ",
		"align-content-lg-stretch": "bootstrap-min__align-content-lg-stretch___1EH32",
		"align-self-lg-auto": "bootstrap-min__align-self-lg-auto___3pgGW",
		"align-self-lg-start": "bootstrap-min__align-self-lg-start___1AV94",
		"align-self-lg-end": "bootstrap-min__align-self-lg-end___1wHyY",
		"align-self-lg-center": "bootstrap-min__align-self-lg-center___2u-hc",
		"align-self-lg-baseline": "bootstrap-min__align-self-lg-baseline___1NGDs",
		"align-self-lg-stretch": "bootstrap-min__align-self-lg-stretch___q061V",
		"flex-xl-first": "bootstrap-min__flex-xl-first___2DytZ",
		"flex-xl-last": "bootstrap-min__flex-xl-last___ouTEm",
		"flex-xl-unordered": "bootstrap-min__flex-xl-unordered___1fc12",
		"flex-xl-row": "bootstrap-min__flex-xl-row___3TMk-",
		"flex-xl-column": "bootstrap-min__flex-xl-column___D4Oyc",
		"flex-xl-row-reverse": "bootstrap-min__flex-xl-row-reverse___1AwoM",
		"flex-xl-column-reverse": "bootstrap-min__flex-xl-column-reverse___3iwZr",
		"flex-xl-wrap": "bootstrap-min__flex-xl-wrap___3VXdw",
		"flex-xl-nowrap": "bootstrap-min__flex-xl-nowrap___2XBEs",
		"flex-xl-wrap-reverse": "bootstrap-min__flex-xl-wrap-reverse___3GRXH",
		"justify-content-xl-start": "bootstrap-min__justify-content-xl-start___1BLmb",
		"justify-content-xl-end": "bootstrap-min__justify-content-xl-end___2slLJ",
		"justify-content-xl-center": "bootstrap-min__justify-content-xl-center___3zY3I",
		"justify-content-xl-between": "bootstrap-min__justify-content-xl-between___1NkNU",
		"justify-content-xl-around": "bootstrap-min__justify-content-xl-around___1v4lu",
		"align-items-xl-start": "bootstrap-min__align-items-xl-start___1jy7f",
		"align-items-xl-end": "bootstrap-min__align-items-xl-end___1MYZl",
		"align-items-xl-center": "bootstrap-min__align-items-xl-center___2Kys4",
		"align-items-xl-baseline": "bootstrap-min__align-items-xl-baseline___3xL48",
		"align-items-xl-stretch": "bootstrap-min__align-items-xl-stretch___3o_Ld",
		"align-content-xl-start": "bootstrap-min__align-content-xl-start___3yfyM",
		"align-content-xl-end": "bootstrap-min__align-content-xl-end___icdd-",
		"align-content-xl-center": "bootstrap-min__align-content-xl-center___1EoA6",
		"align-content-xl-between": "bootstrap-min__align-content-xl-between___JUAP8",
		"align-content-xl-around": "bootstrap-min__align-content-xl-around___1NDZK",
		"align-content-xl-stretch": "bootstrap-min__align-content-xl-stretch___1jWjA",
		"align-self-xl-auto": "bootstrap-min__align-self-xl-auto___udMnV",
		"align-self-xl-start": "bootstrap-min__align-self-xl-start___1MPM1",
		"align-self-xl-end": "bootstrap-min__align-self-xl-end___2faue",
		"align-self-xl-center": "bootstrap-min__align-self-xl-center___3rXkq",
		"align-self-xl-baseline": "bootstrap-min__align-self-xl-baseline___WE0Nv",
		"align-self-xl-stretch": "bootstrap-min__align-self-xl-stretch___29Ygy",
		"float-left": "bootstrap-min__float-left___n1zsN",
		"float-right": "bootstrap-min__float-right___2MIW0",
		"float-none": "bootstrap-min__float-none___1uLt7",
		"float-sm-left": "bootstrap-min__float-sm-left___2lkDA",
		"float-sm-right": "bootstrap-min__float-sm-right___jB8YL",
		"float-sm-none": "bootstrap-min__float-sm-none___39PQA",
		"float-md-left": "bootstrap-min__float-md-left___2qR4U",
		"float-md-right": "bootstrap-min__float-md-right____NUt8",
		"float-md-none": "bootstrap-min__float-md-none___1Jc4-",
		"float-lg-left": "bootstrap-min__float-lg-left___1QB-Y",
		"float-lg-right": "bootstrap-min__float-lg-right___2CGw-",
		"float-lg-none": "bootstrap-min__float-lg-none___19imE",
		"float-xl-left": "bootstrap-min__float-xl-left___1s7o8",
		"float-xl-right": "bootstrap-min__float-xl-right___2lr1B",
		"float-xl-none": "bootstrap-min__float-xl-none___2cM0i",
		"fixed-top": "bootstrap-min__fixed-top___1wRIp",
		"fixed-bottom": "bootstrap-min__fixed-bottom___HazWz",
		"sticky-top": "bootstrap-min__sticky-top___1Nt4Q",
		"sr-only": "bootstrap-min__sr-only___eahFp",
		"sr-only-focusable": "bootstrap-min__sr-only-focusable___IzP1P",
		"w-25": "bootstrap-min__w-25___hr6CS",
		"w-50": "bootstrap-min__w-50___1PYbN",
		"w-75": "bootstrap-min__w-75___VXWkG",
		"w-100": "bootstrap-min__w-100___308zt",
		"h-25": "bootstrap-min__h-25___3r02M",
		"h-50": "bootstrap-min__h-50___2bcFj",
		"h-75": "bootstrap-min__h-75___31ZnR",
		"h-100": "bootstrap-min__h-100___3LDGq",
		"mw-100": "bootstrap-min__mw-100___2epVS",
		"mh-100": "bootstrap-min__mh-100___2JyQ0",
		"m-0": "bootstrap-min__m-0___cdgy5",
		"mt-0": "bootstrap-min__mt-0___3DvQu",
		"mr-0": "bootstrap-min__mr-0___26Ufp",
		"mb-0": "bootstrap-min__mb-0___3Vhoq",
		"ml-0": "bootstrap-min__ml-0___3WutA",
		"mx-0": "bootstrap-min__mx-0___2knJ6",
		"my-0": "bootstrap-min__my-0___3Ygfl",
		"m-1": "bootstrap-min__m-1___2WRS1",
		"mt-1": "bootstrap-min__mt-1___2SBSQ",
		"mr-1": "bootstrap-min__mr-1___2mHdR",
		"mb-1": "bootstrap-min__mb-1___3VyWx",
		"ml-1": "bootstrap-min__ml-1___2VA0H",
		"mx-1": "bootstrap-min__mx-1___16Vo3",
		"my-1": "bootstrap-min__my-1___3QH4c",
		"m-2": "bootstrap-min__m-2___22U6h",
		"mt-2": "bootstrap-min__mt-2___2NRjA",
		"mr-2": "bootstrap-min__mr-2___1sm5t",
		"mb-2": "bootstrap-min__mb-2___1Z5Tu",
		"ml-2": "bootstrap-min__ml-2___5r-Xw",
		"mx-2": "bootstrap-min__mx-2___3WOHy",
		"my-2": "bootstrap-min__my-2___1JSYb",
		"m-3": "bootstrap-min__m-3___1bOaZ",
		"mt-3": "bootstrap-min__mt-3___3edgt",
		"mr-3": "bootstrap-min__mr-3___3-vk9",
		"mb-3": "bootstrap-min__mb-3___uHUTt",
		"ml-3": "bootstrap-min__ml-3___1C9pd",
		"mx-3": "bootstrap-min__mx-3___gltay",
		"my-3": "bootstrap-min__my-3___1n3BO",
		"m-4": "bootstrap-min__m-4___3eO1K",
		"mt-4": "bootstrap-min__mt-4___nfDFr",
		"mr-4": "bootstrap-min__mr-4___2MEaf",
		"mb-4": "bootstrap-min__mb-4___90qFl",
		"ml-4": "bootstrap-min__ml-4___3ENH-",
		"mx-4": "bootstrap-min__mx-4___1v_lg",
		"my-4": "bootstrap-min__my-4___ewD7z",
		"m-5": "bootstrap-min__m-5___13tei",
		"mt-5": "bootstrap-min__mt-5___1otnZ",
		"mr-5": "bootstrap-min__mr-5___1MLem",
		"mb-5": "bootstrap-min__mb-5___1Fi5E",
		"ml-5": "bootstrap-min__ml-5___319Jk",
		"mx-5": "bootstrap-min__mx-5___3Qfly",
		"my-5": "bootstrap-min__my-5___3BXMn",
		"p-0": "bootstrap-min__p-0___3lD53",
		"pt-0": "bootstrap-min__pt-0___2F-sh",
		"pr-0": "bootstrap-min__pr-0___3LjW4",
		"pb-0": "bootstrap-min__pb-0___396K_",
		"pl-0": "bootstrap-min__pl-0___7jt36",
		"px-0": "bootstrap-min__px-0___fez2P",
		"py-0": "bootstrap-min__py-0___3A_XA",
		"p-1": "bootstrap-min__p-1___1DEGG",
		"pt-1": "bootstrap-min__pt-1___4F4fO",
		"pr-1": "bootstrap-min__pr-1___27qX9",
		"pb-1": "bootstrap-min__pb-1___s6ZoG",
		"pl-1": "bootstrap-min__pl-1___2klSz",
		"px-1": "bootstrap-min__px-1___Gzy2V",
		"py-1": "bootstrap-min__py-1___Q0DEB",
		"p-2": "bootstrap-min__p-2___1pIza",
		"pt-2": "bootstrap-min__pt-2___2PpZG",
		"pr-2": "bootstrap-min__pr-2___2_IoC",
		"pb-2": "bootstrap-min__pb-2___1Abn_",
		"pl-2": "bootstrap-min__pl-2___xoRMt",
		"px-2": "bootstrap-min__px-2___8vkz0",
		"py-2": "bootstrap-min__py-2___11CVj",
		"p-3": "bootstrap-min__p-3___2Ava4",
		"pt-3": "bootstrap-min__pt-3___-gXmS",
		"pr-3": "bootstrap-min__pr-3___3ofey",
		"pb-3": "bootstrap-min__pb-3___2GnJ2",
		"pl-3": "bootstrap-min__pl-3___1u4bq",
		"px-3": "bootstrap-min__px-3___3xqo9",
		"py-3": "bootstrap-min__py-3___30L0y",
		"p-4": "bootstrap-min__p-4___2BCfS",
		"pt-4": "bootstrap-min__pt-4___1q1mk",
		"pr-4": "bootstrap-min__pr-4___nm0iq",
		"pb-4": "bootstrap-min__pb-4___1gvQQ",
		"pl-4": "bootstrap-min__pl-4___1Jk3H",
		"px-4": "bootstrap-min__px-4___1wNEd",
		"py-4": "bootstrap-min__py-4___j8tu1",
		"p-5": "bootstrap-min__p-5___35MlI",
		"pt-5": "bootstrap-min__pt-5___1w84H",
		"pr-5": "bootstrap-min__pr-5___4fW7e",
		"pb-5": "bootstrap-min__pb-5___16FGj",
		"pl-5": "bootstrap-min__pl-5___1po-9",
		"px-5": "bootstrap-min__px-5___qEiTD",
		"py-5": "bootstrap-min__py-5___2m_pC",
		"m-auto": "bootstrap-min__m-auto___2hAjO",
		"mt-auto": "bootstrap-min__mt-auto___2FX5a",
		"mr-auto": "bootstrap-min__mr-auto___LNFnl",
		"mb-auto": "bootstrap-min__mb-auto___2Vqdo",
		"ml-auto": "bootstrap-min__ml-auto___2vlQK",
		"mx-auto": "bootstrap-min__mx-auto___ai120",
		"my-auto": "bootstrap-min__my-auto___2lRbH",
		"m-sm-0": "bootstrap-min__m-sm-0___3-ios",
		"mt-sm-0": "bootstrap-min__mt-sm-0___2ITDj",
		"mr-sm-0": "bootstrap-min__mr-sm-0___chFri",
		"mb-sm-0": "bootstrap-min__mb-sm-0___3Hl77",
		"ml-sm-0": "bootstrap-min__ml-sm-0___2fU2t",
		"mx-sm-0": "bootstrap-min__mx-sm-0___28OHq",
		"my-sm-0": "bootstrap-min__my-sm-0___3uzUB",
		"m-sm-1": "bootstrap-min__m-sm-1___3XlnD",
		"mt-sm-1": "bootstrap-min__mt-sm-1___27NkY",
		"mr-sm-1": "bootstrap-min__mr-sm-1___11AI7",
		"mb-sm-1": "bootstrap-min__mb-sm-1___27dJC",
		"ml-sm-1": "bootstrap-min__ml-sm-1___2P8Z7",
		"mx-sm-1": "bootstrap-min__mx-sm-1___o0Sgk",
		"my-sm-1": "bootstrap-min__my-sm-1___3IrUL",
		"m-sm-2": "bootstrap-min__m-sm-2___1aBLk",
		"mt-sm-2": "bootstrap-min__mt-sm-2___1-EqN",
		"mr-sm-2": "bootstrap-min__mr-sm-2___1OG8x",
		"mb-sm-2": "bootstrap-min__mb-sm-2___T3CfB",
		"ml-sm-2": "bootstrap-min__ml-sm-2___254xX",
		"mx-sm-2": "bootstrap-min__mx-sm-2___1hKoy",
		"my-sm-2": "bootstrap-min__my-sm-2___17ZvU",
		"m-sm-3": "bootstrap-min__m-sm-3___2prR4",
		"mt-sm-3": "bootstrap-min__mt-sm-3___ci_Zx",
		"mr-sm-3": "bootstrap-min__mr-sm-3___3GZxg",
		"mb-sm-3": "bootstrap-min__mb-sm-3___2FNRo",
		"ml-sm-3": "bootstrap-min__ml-sm-3___2D932",
		"mx-sm-3": "bootstrap-min__mx-sm-3___1Z90I",
		"my-sm-3": "bootstrap-min__my-sm-3___1Kn6T",
		"m-sm-4": "bootstrap-min__m-sm-4___Gdn7R",
		"mt-sm-4": "bootstrap-min__mt-sm-4___I72cJ",
		"mr-sm-4": "bootstrap-min__mr-sm-4___L3l10",
		"mb-sm-4": "bootstrap-min__mb-sm-4___1Yqhe",
		"ml-sm-4": "bootstrap-min__ml-sm-4___1YRzY",
		"mx-sm-4": "bootstrap-min__mx-sm-4___3-fnD",
		"my-sm-4": "bootstrap-min__my-sm-4___3Dk6q",
		"m-sm-5": "bootstrap-min__m-sm-5___27djS",
		"mt-sm-5": "bootstrap-min__mt-sm-5___3nLZ1",
		"mr-sm-5": "bootstrap-min__mr-sm-5___1H0cj",
		"mb-sm-5": "bootstrap-min__mb-sm-5___OLK-4",
		"ml-sm-5": "bootstrap-min__ml-sm-5___3jePO",
		"mx-sm-5": "bootstrap-min__mx-sm-5___27Y2T",
		"my-sm-5": "bootstrap-min__my-sm-5___3CbT7",
		"p-sm-0": "bootstrap-min__p-sm-0___2k-K9",
		"pt-sm-0": "bootstrap-min__pt-sm-0___3HbJK",
		"pr-sm-0": "bootstrap-min__pr-sm-0___2m_6p",
		"pb-sm-0": "bootstrap-min__pb-sm-0___1bncm",
		"pl-sm-0": "bootstrap-min__pl-sm-0___3TWwS",
		"px-sm-0": "bootstrap-min__px-sm-0___18S0Q",
		"py-sm-0": "bootstrap-min__py-sm-0___2rARx",
		"p-sm-1": "bootstrap-min__p-sm-1___3PwqF",
		"pt-sm-1": "bootstrap-min__pt-sm-1___iHuAE",
		"pr-sm-1": "bootstrap-min__pr-sm-1___2gkfm",
		"pb-sm-1": "bootstrap-min__pb-sm-1___1BZ0L",
		"pl-sm-1": "bootstrap-min__pl-sm-1___xO9ob",
		"px-sm-1": "bootstrap-min__px-sm-1___3E0jK",
		"py-sm-1": "bootstrap-min__py-sm-1___6iBRx",
		"p-sm-2": "bootstrap-min__p-sm-2___2bQJO",
		"pt-sm-2": "bootstrap-min__pt-sm-2___1AmF0",
		"pr-sm-2": "bootstrap-min__pr-sm-2___3gjMG",
		"pb-sm-2": "bootstrap-min__pb-sm-2___Vv5ZP",
		"pl-sm-2": "bootstrap-min__pl-sm-2___19aQE",
		"px-sm-2": "bootstrap-min__px-sm-2___3p6R4",
		"py-sm-2": "bootstrap-min__py-sm-2___1kRsW",
		"p-sm-3": "bootstrap-min__p-sm-3___2Ovc6",
		"pt-sm-3": "bootstrap-min__pt-sm-3___3kr42",
		"pr-sm-3": "bootstrap-min__pr-sm-3___lMx-9",
		"pb-sm-3": "bootstrap-min__pb-sm-3___1qWUg",
		"pl-sm-3": "bootstrap-min__pl-sm-3___39gRW",
		"px-sm-3": "bootstrap-min__px-sm-3___3S8CM",
		"py-sm-3": "bootstrap-min__py-sm-3___2LtQB",
		"p-sm-4": "bootstrap-min__p-sm-4___3cbss",
		"pt-sm-4": "bootstrap-min__pt-sm-4___1rGy-",
		"pr-sm-4": "bootstrap-min__pr-sm-4___3ND66",
		"pb-sm-4": "bootstrap-min__pb-sm-4___KzrQf",
		"pl-sm-4": "bootstrap-min__pl-sm-4___UjJpE",
		"px-sm-4": "bootstrap-min__px-sm-4___1-Dmy",
		"py-sm-4": "bootstrap-min__py-sm-4___2uWEB",
		"p-sm-5": "bootstrap-min__p-sm-5___1tcCs",
		"pt-sm-5": "bootstrap-min__pt-sm-5___1jzar",
		"pr-sm-5": "bootstrap-min__pr-sm-5___2wROz",
		"pb-sm-5": "bootstrap-min__pb-sm-5___25FCP",
		"pl-sm-5": "bootstrap-min__pl-sm-5___2QabR",
		"px-sm-5": "bootstrap-min__px-sm-5___wGXBA",
		"py-sm-5": "bootstrap-min__py-sm-5___1r4JG",
		"m-sm-auto": "bootstrap-min__m-sm-auto___2ZXXu",
		"mt-sm-auto": "bootstrap-min__mt-sm-auto___2wTGd",
		"mr-sm-auto": "bootstrap-min__mr-sm-auto___2137_",
		"mb-sm-auto": "bootstrap-min__mb-sm-auto___3fPsk",
		"ml-sm-auto": "bootstrap-min__ml-sm-auto___24uM9",
		"mx-sm-auto": "bootstrap-min__mx-sm-auto___3Bt6T",
		"my-sm-auto": "bootstrap-min__my-sm-auto___3CD8J",
		"m-md-0": "bootstrap-min__m-md-0___2bdPc",
		"mt-md-0": "bootstrap-min__mt-md-0___2OZ54",
		"mr-md-0": "bootstrap-min__mr-md-0___2dlFM",
		"mb-md-0": "bootstrap-min__mb-md-0___1py9f",
		"ml-md-0": "bootstrap-min__ml-md-0___1f2sF",
		"mx-md-0": "bootstrap-min__mx-md-0___854JW",
		"my-md-0": "bootstrap-min__my-md-0___2PAJV",
		"m-md-1": "bootstrap-min__m-md-1___3KdoT",
		"mt-md-1": "bootstrap-min__mt-md-1___15mLX",
		"mr-md-1": "bootstrap-min__mr-md-1___3OG8P",
		"mb-md-1": "bootstrap-min__mb-md-1___1k3u2",
		"ml-md-1": "bootstrap-min__ml-md-1___XnAjD",
		"mx-md-1": "bootstrap-min__mx-md-1___3yRf9",
		"my-md-1": "bootstrap-min__my-md-1___3WPCa",
		"m-md-2": "bootstrap-min__m-md-2___2u3JN",
		"mt-md-2": "bootstrap-min__mt-md-2___55AAt",
		"mr-md-2": "bootstrap-min__mr-md-2___1EnUh",
		"mb-md-2": "bootstrap-min__mb-md-2___1adBY",
		"ml-md-2": "bootstrap-min__ml-md-2___bkMfE",
		"mx-md-2": "bootstrap-min__mx-md-2___5Eqki",
		"my-md-2": "bootstrap-min__my-md-2___1VZbg",
		"m-md-3": "bootstrap-min__m-md-3___1C2ss",
		"mt-md-3": "bootstrap-min__mt-md-3___25nuC",
		"mr-md-3": "bootstrap-min__mr-md-3___3skq-",
		"mb-md-3": "bootstrap-min__mb-md-3___uPTXr",
		"ml-md-3": "bootstrap-min__ml-md-3___1msY9",
		"mx-md-3": "bootstrap-min__mx-md-3___1pHo0",
		"my-md-3": "bootstrap-min__my-md-3___2JACF",
		"m-md-4": "bootstrap-min__m-md-4___1dJSY",
		"mt-md-4": "bootstrap-min__mt-md-4___1fqmy",
		"mr-md-4": "bootstrap-min__mr-md-4___Js95S",
		"mb-md-4": "bootstrap-min__mb-md-4___1tx_u",
		"ml-md-4": "bootstrap-min__ml-md-4___3OqQV",
		"mx-md-4": "bootstrap-min__mx-md-4___110Zn",
		"my-md-4": "bootstrap-min__my-md-4___32Hi8",
		"m-md-5": "bootstrap-min__m-md-5___168h9",
		"mt-md-5": "bootstrap-min__mt-md-5___3KG_I",
		"mr-md-5": "bootstrap-min__mr-md-5___32uVJ",
		"mb-md-5": "bootstrap-min__mb-md-5___1BLWc",
		"ml-md-5": "bootstrap-min__ml-md-5___b9lXu",
		"mx-md-5": "bootstrap-min__mx-md-5___22tdD",
		"my-md-5": "bootstrap-min__my-md-5___MSPKE",
		"p-md-0": "bootstrap-min__p-md-0___3_W0W",
		"pt-md-0": "bootstrap-min__pt-md-0___3uzqz",
		"pr-md-0": "bootstrap-min__pr-md-0___2LkPH",
		"pb-md-0": "bootstrap-min__pb-md-0___3AuMI",
		"pl-md-0": "bootstrap-min__pl-md-0___1ZiuR",
		"px-md-0": "bootstrap-min__px-md-0___Un-kz",
		"py-md-0": "bootstrap-min__py-md-0___1PYl8",
		"p-md-1": "bootstrap-min__p-md-1___kjYqg",
		"pt-md-1": "bootstrap-min__pt-md-1___2pREP",
		"pr-md-1": "bootstrap-min__pr-md-1___p7FQW",
		"pb-md-1": "bootstrap-min__pb-md-1___dObDn",
		"pl-md-1": "bootstrap-min__pl-md-1___1DUSG",
		"px-md-1": "bootstrap-min__px-md-1___al3hk",
		"py-md-1": "bootstrap-min__py-md-1___2tKJL",
		"p-md-2": "bootstrap-min__p-md-2___14CFA",
		"pt-md-2": "bootstrap-min__pt-md-2___2_o-g",
		"pr-md-2": "bootstrap-min__pr-md-2___2SaQo",
		"pb-md-2": "bootstrap-min__pb-md-2___1Ok00",
		"pl-md-2": "bootstrap-min__pl-md-2___fMbiY",
		"px-md-2": "bootstrap-min__px-md-2___8ntT1",
		"py-md-2": "bootstrap-min__py-md-2___1L4Qd",
		"p-md-3": "bootstrap-min__p-md-3___tvZys",
		"pt-md-3": "bootstrap-min__pt-md-3___AFREe",
		"pr-md-3": "bootstrap-min__pr-md-3___32-Eq",
		"pb-md-3": "bootstrap-min__pb-md-3___3ILBn",
		"pl-md-3": "bootstrap-min__pl-md-3___2jrL8",
		"px-md-3": "bootstrap-min__px-md-3___3NAxe",
		"py-md-3": "bootstrap-min__py-md-3___2hoJN",
		"p-md-4": "bootstrap-min__p-md-4___1k9qR",
		"pt-md-4": "bootstrap-min__pt-md-4___25N1o",
		"pr-md-4": "bootstrap-min__pr-md-4___1ZoNK",
		"pb-md-4": "bootstrap-min__pb-md-4___1Wlzd",
		"pl-md-4": "bootstrap-min__pl-md-4___2wUds",
		"px-md-4": "bootstrap-min__px-md-4___zkM8X",
		"py-md-4": "bootstrap-min__py-md-4___3BGa3",
		"p-md-5": "bootstrap-min__p-md-5___-Aw_C",
		"pt-md-5": "bootstrap-min__pt-md-5___20uFp",
		"pr-md-5": "bootstrap-min__pr-md-5___YaKSp",
		"pb-md-5": "bootstrap-min__pb-md-5___2nlnD",
		"pl-md-5": "bootstrap-min__pl-md-5___JSOrk",
		"px-md-5": "bootstrap-min__px-md-5___1cj02",
		"py-md-5": "bootstrap-min__py-md-5___-fE20",
		"m-md-auto": "bootstrap-min__m-md-auto___EmQ_e",
		"mt-md-auto": "bootstrap-min__mt-md-auto___1FNUz",
		"mr-md-auto": "bootstrap-min__mr-md-auto___eGaHY",
		"mb-md-auto": "bootstrap-min__mb-md-auto___3381r",
		"ml-md-auto": "bootstrap-min__ml-md-auto___2Tvw-",
		"mx-md-auto": "bootstrap-min__mx-md-auto___163-K",
		"my-md-auto": "bootstrap-min__my-md-auto___1mK5K",
		"m-lg-0": "bootstrap-min__m-lg-0___1liXu",
		"mt-lg-0": "bootstrap-min__mt-lg-0___3CAiA",
		"mr-lg-0": "bootstrap-min__mr-lg-0___AeJFT",
		"mb-lg-0": "bootstrap-min__mb-lg-0___1xXtn",
		"ml-lg-0": "bootstrap-min__ml-lg-0___CXmum",
		"mx-lg-0": "bootstrap-min__mx-lg-0___16b9p",
		"my-lg-0": "bootstrap-min__my-lg-0___nmiRP",
		"m-lg-1": "bootstrap-min__m-lg-1___34g6s",
		"mt-lg-1": "bootstrap-min__mt-lg-1___1Ak3A",
		"mr-lg-1": "bootstrap-min__mr-lg-1___1uubN",
		"mb-lg-1": "bootstrap-min__mb-lg-1___2LjDh",
		"ml-lg-1": "bootstrap-min__ml-lg-1___DRvXI",
		"mx-lg-1": "bootstrap-min__mx-lg-1___2Lasd",
		"my-lg-1": "bootstrap-min__my-lg-1___F3NKg",
		"m-lg-2": "bootstrap-min__m-lg-2___3VmCG",
		"mt-lg-2": "bootstrap-min__mt-lg-2___9YgWC",
		"mr-lg-2": "bootstrap-min__mr-lg-2___3YeGS",
		"mb-lg-2": "bootstrap-min__mb-lg-2___2VH6A",
		"ml-lg-2": "bootstrap-min__ml-lg-2___1RogS",
		"mx-lg-2": "bootstrap-min__mx-lg-2___2xiFY",
		"my-lg-2": "bootstrap-min__my-lg-2___6LQMf",
		"m-lg-3": "bootstrap-min__m-lg-3___1qkEL",
		"mt-lg-3": "bootstrap-min__mt-lg-3___bgp70",
		"mr-lg-3": "bootstrap-min__mr-lg-3___-wu_8",
		"mb-lg-3": "bootstrap-min__mb-lg-3___2P6lx",
		"ml-lg-3": "bootstrap-min__ml-lg-3___eilu9",
		"mx-lg-3": "bootstrap-min__mx-lg-3___2gY-y",
		"my-lg-3": "bootstrap-min__my-lg-3___lni4T",
		"m-lg-4": "bootstrap-min__m-lg-4___37pt4",
		"mt-lg-4": "bootstrap-min__mt-lg-4___2Dhpa",
		"mr-lg-4": "bootstrap-min__mr-lg-4___2v1P4",
		"mb-lg-4": "bootstrap-min__mb-lg-4___3o4DL",
		"ml-lg-4": "bootstrap-min__ml-lg-4___3AgvW",
		"mx-lg-4": "bootstrap-min__mx-lg-4___16pph",
		"my-lg-4": "bootstrap-min__my-lg-4___1Ww2y",
		"m-lg-5": "bootstrap-min__m-lg-5___3rOW6",
		"mt-lg-5": "bootstrap-min__mt-lg-5___10PMF",
		"mr-lg-5": "bootstrap-min__mr-lg-5___1QFuq",
		"mb-lg-5": "bootstrap-min__mb-lg-5___3-KDQ",
		"ml-lg-5": "bootstrap-min__ml-lg-5___2zpnl",
		"mx-lg-5": "bootstrap-min__mx-lg-5___1Il4D",
		"my-lg-5": "bootstrap-min__my-lg-5___O20fW",
		"p-lg-0": "bootstrap-min__p-lg-0___UJlsQ",
		"pt-lg-0": "bootstrap-min__pt-lg-0___2-ums",
		"pr-lg-0": "bootstrap-min__pr-lg-0___2c7QS",
		"pb-lg-0": "bootstrap-min__pb-lg-0___3X8rE",
		"pl-lg-0": "bootstrap-min__pl-lg-0___jqdo4",
		"px-lg-0": "bootstrap-min__px-lg-0___H2NTK",
		"py-lg-0": "bootstrap-min__py-lg-0___Wyqpv",
		"p-lg-1": "bootstrap-min__p-lg-1___3OBGc",
		"pt-lg-1": "bootstrap-min__pt-lg-1___khFMo",
		"pr-lg-1": "bootstrap-min__pr-lg-1___1aDqC",
		"pb-lg-1": "bootstrap-min__pb-lg-1___1_avC",
		"pl-lg-1": "bootstrap-min__pl-lg-1___1sF8p",
		"px-lg-1": "bootstrap-min__px-lg-1___B07tD",
		"py-lg-1": "bootstrap-min__py-lg-1___1-mAV",
		"p-lg-2": "bootstrap-min__p-lg-2___1u_u3",
		"pt-lg-2": "bootstrap-min__pt-lg-2___1JWsO",
		"pr-lg-2": "bootstrap-min__pr-lg-2___2_JMC",
		"pb-lg-2": "bootstrap-min__pb-lg-2___1lWjS",
		"pl-lg-2": "bootstrap-min__pl-lg-2___1fiOR",
		"px-lg-2": "bootstrap-min__px-lg-2___1Yf6y",
		"py-lg-2": "bootstrap-min__py-lg-2___2vp-b",
		"p-lg-3": "bootstrap-min__p-lg-3___334Kf",
		"pt-lg-3": "bootstrap-min__pt-lg-3___ldfiM",
		"pr-lg-3": "bootstrap-min__pr-lg-3___2skyj",
		"pb-lg-3": "bootstrap-min__pb-lg-3___IIdRR",
		"pl-lg-3": "bootstrap-min__pl-lg-3___2ZExP",
		"px-lg-3": "bootstrap-min__px-lg-3___XxBTZ",
		"py-lg-3": "bootstrap-min__py-lg-3___1Igus",
		"p-lg-4": "bootstrap-min__p-lg-4___Ge4Zz",
		"pt-lg-4": "bootstrap-min__pt-lg-4___Nt1Ff",
		"pr-lg-4": "bootstrap-min__pr-lg-4___XUldw",
		"pb-lg-4": "bootstrap-min__pb-lg-4___2XtP8",
		"pl-lg-4": "bootstrap-min__pl-lg-4___194eD",
		"px-lg-4": "bootstrap-min__px-lg-4___13p0o",
		"py-lg-4": "bootstrap-min__py-lg-4___3rmQP",
		"p-lg-5": "bootstrap-min__p-lg-5___YPOu0",
		"pt-lg-5": "bootstrap-min__pt-lg-5___3VKlG",
		"pr-lg-5": "bootstrap-min__pr-lg-5___wbQyS",
		"pb-lg-5": "bootstrap-min__pb-lg-5___1ufaJ",
		"pl-lg-5": "bootstrap-min__pl-lg-5___3smWD",
		"px-lg-5": "bootstrap-min__px-lg-5___3Mj2B",
		"py-lg-5": "bootstrap-min__py-lg-5___2ARZe",
		"m-lg-auto": "bootstrap-min__m-lg-auto___2yq1a",
		"mt-lg-auto": "bootstrap-min__mt-lg-auto___2WFNW",
		"mr-lg-auto": "bootstrap-min__mr-lg-auto___30flu",
		"mb-lg-auto": "bootstrap-min__mb-lg-auto___DLIT4",
		"ml-lg-auto": "bootstrap-min__ml-lg-auto___1JALP",
		"mx-lg-auto": "bootstrap-min__mx-lg-auto___3ueiE",
		"my-lg-auto": "bootstrap-min__my-lg-auto___2MQPs",
		"m-xl-0": "bootstrap-min__m-xl-0___3bJiq",
		"mt-xl-0": "bootstrap-min__mt-xl-0___3pSMA",
		"mr-xl-0": "bootstrap-min__mr-xl-0___2fYY2",
		"mb-xl-0": "bootstrap-min__mb-xl-0___1Jsxw",
		"ml-xl-0": "bootstrap-min__ml-xl-0___1UqKe",
		"mx-xl-0": "bootstrap-min__mx-xl-0___11YL_",
		"my-xl-0": "bootstrap-min__my-xl-0___1K-I4",
		"m-xl-1": "bootstrap-min__m-xl-1___492SF",
		"mt-xl-1": "bootstrap-min__mt-xl-1___3h0Wq",
		"mr-xl-1": "bootstrap-min__mr-xl-1___29aNs",
		"mb-xl-1": "bootstrap-min__mb-xl-1___3c28D",
		"ml-xl-1": "bootstrap-min__ml-xl-1___voOS_",
		"mx-xl-1": "bootstrap-min__mx-xl-1___3Ma-W",
		"my-xl-1": "bootstrap-min__my-xl-1___2k599",
		"m-xl-2": "bootstrap-min__m-xl-2___3ig5r",
		"mt-xl-2": "bootstrap-min__mt-xl-2___14fHy",
		"mr-xl-2": "bootstrap-min__mr-xl-2___2C6kM",
		"mb-xl-2": "bootstrap-min__mb-xl-2___1HHw-",
		"ml-xl-2": "bootstrap-min__ml-xl-2___1yCeD",
		"mx-xl-2": "bootstrap-min__mx-xl-2___e7Ax_",
		"my-xl-2": "bootstrap-min__my-xl-2___uWWJH",
		"m-xl-3": "bootstrap-min__m-xl-3___3Kufu",
		"mt-xl-3": "bootstrap-min__mt-xl-3___1svLh",
		"mr-xl-3": "bootstrap-min__mr-xl-3___pwjuV",
		"mb-xl-3": "bootstrap-min__mb-xl-3___3mM1X",
		"ml-xl-3": "bootstrap-min__ml-xl-3___2j3zO",
		"mx-xl-3": "bootstrap-min__mx-xl-3___2VACk",
		"my-xl-3": "bootstrap-min__my-xl-3___1cipK",
		"m-xl-4": "bootstrap-min__m-xl-4___oT1u8",
		"mt-xl-4": "bootstrap-min__mt-xl-4___2J5U-",
		"mr-xl-4": "bootstrap-min__mr-xl-4___3bZZ9",
		"mb-xl-4": "bootstrap-min__mb-xl-4___39SnU",
		"ml-xl-4": "bootstrap-min__ml-xl-4___1lryN",
		"mx-xl-4": "bootstrap-min__mx-xl-4___3WDDU",
		"my-xl-4": "bootstrap-min__my-xl-4___2wBnv",
		"m-xl-5": "bootstrap-min__m-xl-5___3qvLP",
		"mt-xl-5": "bootstrap-min__mt-xl-5___ms8jY",
		"mr-xl-5": "bootstrap-min__mr-xl-5___YxgwQ",
		"mb-xl-5": "bootstrap-min__mb-xl-5___28kGl",
		"ml-xl-5": "bootstrap-min__ml-xl-5___1f2EW",
		"mx-xl-5": "bootstrap-min__mx-xl-5___34sgJ",
		"my-xl-5": "bootstrap-min__my-xl-5___3_FrF",
		"p-xl-0": "bootstrap-min__p-xl-0___3AlVC",
		"pt-xl-0": "bootstrap-min__pt-xl-0___2EdyA",
		"pr-xl-0": "bootstrap-min__pr-xl-0___AdfYv",
		"pb-xl-0": "bootstrap-min__pb-xl-0___2vcnh",
		"pl-xl-0": "bootstrap-min__pl-xl-0___3XoJw",
		"px-xl-0": "bootstrap-min__px-xl-0___5nYx5",
		"py-xl-0": "bootstrap-min__py-xl-0___2v-GY",
		"p-xl-1": "bootstrap-min__p-xl-1___7ho1x",
		"pt-xl-1": "bootstrap-min__pt-xl-1___2cqyj",
		"pr-xl-1": "bootstrap-min__pr-xl-1___1WvXp",
		"pb-xl-1": "bootstrap-min__pb-xl-1___HVNCx",
		"pl-xl-1": "bootstrap-min__pl-xl-1___1bcs3",
		"px-xl-1": "bootstrap-min__px-xl-1___2Xt8F",
		"py-xl-1": "bootstrap-min__py-xl-1___1BTbk",
		"p-xl-2": "bootstrap-min__p-xl-2___3NLJb",
		"pt-xl-2": "bootstrap-min__pt-xl-2___tdVtR",
		"pr-xl-2": "bootstrap-min__pr-xl-2___2HOY_",
		"pb-xl-2": "bootstrap-min__pb-xl-2___n5P_g",
		"pl-xl-2": "bootstrap-min__pl-xl-2___vGHxb",
		"px-xl-2": "bootstrap-min__px-xl-2___2vvUi",
		"py-xl-2": "bootstrap-min__py-xl-2___3TNzr",
		"p-xl-3": "bootstrap-min__p-xl-3___35DKD",
		"pt-xl-3": "bootstrap-min__pt-xl-3___2YGgz",
		"pr-xl-3": "bootstrap-min__pr-xl-3___M-t-K",
		"pb-xl-3": "bootstrap-min__pb-xl-3___32H_r",
		"pl-xl-3": "bootstrap-min__pl-xl-3___3MMY5",
		"px-xl-3": "bootstrap-min__px-xl-3___2MlQ7",
		"py-xl-3": "bootstrap-min__py-xl-3___2Q11l",
		"p-xl-4": "bootstrap-min__p-xl-4___kjBv4",
		"pt-xl-4": "bootstrap-min__pt-xl-4___1PpES",
		"pr-xl-4": "bootstrap-min__pr-xl-4___Lkz0l",
		"pb-xl-4": "bootstrap-min__pb-xl-4___3WpwL",
		"pl-xl-4": "bootstrap-min__pl-xl-4___3rig6",
		"px-xl-4": "bootstrap-min__px-xl-4___Ga_cj",
		"py-xl-4": "bootstrap-min__py-xl-4___3_4Bk",
		"p-xl-5": "bootstrap-min__p-xl-5___1rvna",
		"pt-xl-5": "bootstrap-min__pt-xl-5___2gDtv",
		"pr-xl-5": "bootstrap-min__pr-xl-5___3Hc4G",
		"pb-xl-5": "bootstrap-min__pb-xl-5___vyWdb",
		"pl-xl-5": "bootstrap-min__pl-xl-5___17zr7",
		"px-xl-5": "bootstrap-min__px-xl-5___2zd3t",
		"py-xl-5": "bootstrap-min__py-xl-5___3goxY",
		"m-xl-auto": "bootstrap-min__m-xl-auto___wATEg",
		"mt-xl-auto": "bootstrap-min__mt-xl-auto___13b4b",
		"mr-xl-auto": "bootstrap-min__mr-xl-auto___1CsRo",
		"mb-xl-auto": "bootstrap-min__mb-xl-auto___3NkL8",
		"ml-xl-auto": "bootstrap-min__ml-xl-auto___Tb1MH",
		"mx-xl-auto": "bootstrap-min__mx-xl-auto___1mi3H",
		"my-xl-auto": "bootstrap-min__my-xl-auto___21TO2",
		"text-justify": "bootstrap-min__text-justify___3P6Ed",
		"text-nowrap": "bootstrap-min__text-nowrap___3OYyv",
		"text-truncate": "bootstrap-min__text-truncate___3w8z7",
		"text-left": "bootstrap-min__text-left___2vasQ",
		"text-right": "bootstrap-min__text-right___HphZE",
		"text-center": "bootstrap-min__text-center___y108e",
		"text-sm-left": "bootstrap-min__text-sm-left___pbN_W",
		"text-sm-right": "bootstrap-min__text-sm-right___vVGPU",
		"text-sm-center": "bootstrap-min__text-sm-center___1eqKV",
		"text-md-left": "bootstrap-min__text-md-left___3wALz",
		"text-md-right": "bootstrap-min__text-md-right___2FrCx",
		"text-md-center": "bootstrap-min__text-md-center___1oLH9",
		"text-lg-left": "bootstrap-min__text-lg-left___jYHkJ",
		"text-lg-right": "bootstrap-min__text-lg-right___1xoZQ",
		"text-lg-center": "bootstrap-min__text-lg-center___1DCJD",
		"text-xl-left": "bootstrap-min__text-xl-left___3dfvp",
		"text-xl-right": "bootstrap-min__text-xl-right___pe-Tp",
		"text-xl-center": "bootstrap-min__text-xl-center___C1O1C",
		"text-lowercase": "bootstrap-min__text-lowercase___2qSty",
		"text-uppercase": "bootstrap-min__text-uppercase___U4Gw3",
		"text-capitalize": "bootstrap-min__text-capitalize___2lFcw",
		"font-weight-normal": "bootstrap-min__font-weight-normal___JsSN5",
		"font-weight-bold": "bootstrap-min__font-weight-bold___2ib-q",
		"font-italic": "bootstrap-min__font-italic___2ghM9",
		"text-white": "bootstrap-min__text-white___9HrFA",
		"text-muted": "bootstrap-min__text-muted___1ctyR",
		"text-primary": "bootstrap-min__text-primary___zSznH",
		"text-success": "bootstrap-min__text-success___X4hfX",
		"text-info": "bootstrap-min__text-info___22iej",
		"text-warning": "bootstrap-min__text-warning___1vt0G",
		"text-danger": "bootstrap-min__text-danger___2mrmQ",
		"text-gray-dark": "bootstrap-min__text-gray-dark___3RLiV",
		"text-hide": "bootstrap-min__text-hide___2Y83z",
		"invisible": "bootstrap-min__invisible___x4USD",
		"hidden-xs-up": "bootstrap-min__hidden-xs-up___1ionq",
		"hidden-xs-down": "bootstrap-min__hidden-xs-down___3vhBK",
		"hidden-sm-up": "bootstrap-min__hidden-sm-up___SvR-D",
		"hidden-sm-down": "bootstrap-min__hidden-sm-down___3dAyy",
		"hidden-md-up": "bootstrap-min__hidden-md-up___2V9RS",
		"hidden-md-down": "bootstrap-min__hidden-md-down___1xHlc",
		"hidden-lg-up": "bootstrap-min__hidden-lg-up___23wuW",
		"hidden-lg-down": "bootstrap-min__hidden-lg-down___2344O",
		"hidden-xl-up": "bootstrap-min__hidden-xl-up___3AqDi",
		"hidden-xl-down": "bootstrap-min__hidden-xl-down___3YVT2",
		"visible-print-block": "bootstrap-min__visible-print-block___29B_Z",
		"visible-print-inline": "bootstrap-min__visible-print-inline___17WsA",
		"visible-print-inline-block": "bootstrap-min__visible-print-inline-block___3h5it",
		"hidden-print": "bootstrap-min__hidden-print___LUOji"
	};

/***/ },
/* 234 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};

		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}

	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}

	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}

	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;

		if(media) {
			styleElement.setAttribute("media", media)
		}

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}

	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;

		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		var blob = new Blob([css], { type: "text/css" });

		var oldSrc = linkElement.href;

		linkElement.href = URL.createObjectURL(blob);

		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends3 = __webpack_require__(237);

	var _extends4 = _interopRequireDefault(_extends3);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _elementType = __webpack_require__(322);

	var _elementType2 = _interopRequireDefault(_elementType);

	var _uncontrollable = __webpack_require__(324);

	var _uncontrollable2 = _interopRequireDefault(_uncontrollable);

	var _Grid = __webpack_require__(327);

	var _Grid2 = _interopRequireDefault(_Grid);

	var _NavbarBrand = __webpack_require__(334);

	var _NavbarBrand2 = _interopRequireDefault(_NavbarBrand);

	var _NavbarCollapse = __webpack_require__(335);

	var _NavbarCollapse2 = _interopRequireDefault(_NavbarCollapse);

	var _NavbarHeader = __webpack_require__(351);

	var _NavbarHeader2 = _interopRequireDefault(_NavbarHeader);

	var _NavbarToggle = __webpack_require__(352);

	var _NavbarToggle2 = _interopRequireDefault(_NavbarToggle);

	var _bootstrapUtils = __webpack_require__(328);

	var _StyleConfig = __webpack_require__(333);

	var _createChainedFunction = __webpack_require__(350);

	var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	// TODO: Remove this pragma once we upgrade eslint-config-airbnb.
	/* eslint-disable react/no-multi-comp */

	var propTypes = {
	  /**
	   * Create a fixed navbar along the top of the screen, that scrolls with the
	   * page
	   */
	  fixedTop: _react2['default'].PropTypes.bool,
	  /**
	   * Create a fixed navbar along the bottom of the screen, that scrolls with
	   * the page
	   */
	  fixedBottom: _react2['default'].PropTypes.bool,
	  /**
	   * Create a full-width navbar that scrolls away with the page
	   */
	  staticTop: _react2['default'].PropTypes.bool,
	  /**
	   * An alternative dark visual style for the Navbar
	   */
	  inverse: _react2['default'].PropTypes.bool,
	  /**
	   * Allow the Navbar to fluidly adjust to the page or container width, instead
	   * of at the predefined screen breakpoints
	   */
	  fluid: _react2['default'].PropTypes.bool,

	  /**
	   * Set a custom element for this component.
	   */
	  componentClass: _elementType2['default'],
	  /**
	   * A callback fired when the `<Navbar>` body collapses or expands. Fired when
	   * a `<Navbar.Toggle>` is clicked and called with the new `navExpanded`
	   * boolean value.
	   *
	   * @controllable navExpanded
	   */
	  onToggle: _react2['default'].PropTypes.func,
	  /**
	   * A callback fired when a descendant of a child `<Nav>` is selected. Should
	   * be used to execute complex closing or other miscellaneous actions desired
	   * after selecting a descendant of `<Nav>`. Does nothing if no `<Nav>` or `<Nav>`
	   * descendants exist. The callback is called with an eventKey, which is a
	   * prop from the selected `<Nav>` descendant, and an event.
	   *
	   * ```js
	   * function (
	   * 	Any eventKey,
	   * 	SyntheticEvent event?
	   * )
	   * ```
	   *
	   * For basic closing behavior after all `<Nav>` descendant onSelect events in
	   * mobile viewports, try using collapseOnSelect.
	   *
	   * Note: If you are manually closing the navbar using this `OnSelect` prop,
	   * ensure that you are setting `expanded` to false and not *toggling* between
	   * true and false.
	   */
	  onSelect: _react2['default'].PropTypes.func,
	  /**
	   * Sets `expanded` to `false` after the onSelect event of a descendant of a
	   * child `<Nav>`. Does nothing if no `<Nav>` or `<Nav>` descendants exist.
	   *
	   * The onSelect callback should be used instead for more complex operations
	   * that need to be executed after the `select` event of `<Nav>` descendants.
	   */
	  collapseOnSelect: _react2['default'].PropTypes.bool,
	  /**
	   * Explicitly set the visiblity of the navbar body
	   *
	   * @controllable onToggle
	   */
	  expanded: _react2['default'].PropTypes.bool,

	  role: _react2['default'].PropTypes.string
	};

	var defaultProps = {
	  componentClass: 'nav',
	  fixedTop: false,
	  fixedBottom: false,
	  staticTop: false,
	  inverse: false,
	  fluid: false,
	  collapseOnSelect: false
	};

	var childContextTypes = {
	  $bs_navbar: _react.PropTypes.shape({
	    bsClass: _react.PropTypes.string,
	    expanded: _react.PropTypes.bool,
	    onToggle: _react.PropTypes.func.isRequired,
	    onSelect: _react.PropTypes.func
	  })
	};

	var Navbar = function (_React$Component) {
	  (0, _inherits3['default'])(Navbar, _React$Component);

	  function Navbar(props, context) {
	    (0, _classCallCheck3['default'])(this, Navbar);

	    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));

	    _this.handleToggle = _this.handleToggle.bind(_this);
	    _this.handleCollapse = _this.handleCollapse.bind(_this);
	    return _this;
	  }

	  Navbar.prototype.getChildContext = function getChildContext() {
	    var _props = this.props,
	        bsClass = _props.bsClass,
	        expanded = _props.expanded,
	        onSelect = _props.onSelect,
	        collapseOnSelect = _props.collapseOnSelect;


	    return {
	      $bs_navbar: {
	        bsClass: bsClass,
	        expanded: expanded,
	        onToggle: this.handleToggle,
	        onSelect: (0, _createChainedFunction2['default'])(onSelect, collapseOnSelect ? this.handleCollapse : null)
	      }
	    };
	  };

	  Navbar.prototype.handleCollapse = function handleCollapse() {
	    var _props2 = this.props,
	        onToggle = _props2.onToggle,
	        expanded = _props2.expanded;


	    if (expanded) {
	      onToggle(false);
	    }
	  };

	  Navbar.prototype.handleToggle = function handleToggle() {
	    var _props3 = this.props,
	        onToggle = _props3.onToggle,
	        expanded = _props3.expanded;


	    onToggle(!expanded);
	  };

	  Navbar.prototype.render = function render() {
	    var _extends2;

	    var _props4 = this.props,
	        Component = _props4.componentClass,
	        fixedTop = _props4.fixedTop,
	        fixedBottom = _props4.fixedBottom,
	        staticTop = _props4.staticTop,
	        inverse = _props4.inverse,
	        fluid = _props4.fluid,
	        className = _props4.className,
	        children = _props4.children,
	        props = (0, _objectWithoutProperties3['default'])(_props4, ['componentClass', 'fixedTop', 'fixedBottom', 'staticTop', 'inverse', 'fluid', 'className', 'children']);

	    var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(props, ['expanded', 'onToggle', 'onSelect', 'collapseOnSelect']),
	        bsProps = _splitBsPropsAndOmit[0],
	        elementProps = _splitBsPropsAndOmit[1];

	    // will result in some false positives but that seems better
	    // than false negatives. strict `undefined` check allows explicit
	    // "nulling" of the role if the user really doesn't want one


	    if (elementProps.role === undefined && Component !== 'nav') {
	      elementProps.role = 'navigation';
	    }

	    if (inverse) {
	      bsProps.bsStyle = _StyleConfig.Style.INVERSE;
	    }

	    var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'fixed-top')] = fixedTop, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'fixed-bottom')] = fixedBottom, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'static-top')] = staticTop, _extends2));

	    return _react2['default'].createElement(
	      Component,
	      (0, _extends4['default'])({}, elementProps, {
	        className: (0, _classnames2['default'])(className, classes)
	      }),
	      _react2['default'].createElement(
	        _Grid2['default'],
	        { fluid: fluid },
	        children
	      )
	    );
	  };

	  return Navbar;
	}(_react2['default'].Component);

	Navbar.propTypes = propTypes;
	Navbar.defaultProps = defaultProps;
	Navbar.childContextTypes = childContextTypes;

	(0, _bootstrapUtils.bsClass)('navbar', Navbar);

	var UncontrollableNavbar = (0, _uncontrollable2['default'])(Navbar, { expanded: 'onToggle' });

	function createSimpleWrapper(tag, suffix, displayName) {
	  var Wrapper = function Wrapper(_ref, _ref2) {
	    var _ref2$$bs_navbar = _ref2.$bs_navbar,
	        navbarProps = _ref2$$bs_navbar === undefined ? { bsClass: 'navbar' } : _ref2$$bs_navbar;
	    var Component = _ref.componentClass,
	        className = _ref.className,
	        pullRight = _ref.pullRight,
	        pullLeft = _ref.pullLeft,
	        props = (0, _objectWithoutProperties3['default'])(_ref, ['componentClass', 'className', 'pullRight', 'pullLeft']);
	    return _react2['default'].createElement(Component, (0, _extends4['default'])({}, props, {
	      className: (0, _classnames2['default'])(className, (0, _bootstrapUtils.prefix)(navbarProps, suffix), pullRight && (0, _bootstrapUtils.prefix)(navbarProps, 'right'), pullLeft && (0, _bootstrapUtils.prefix)(navbarProps, 'left'))
	    }));
	  };

	  Wrapper.displayName = displayName;

	  Wrapper.propTypes = {
	    componentClass: _elementType2['default'],
	    pullRight: _react2['default'].PropTypes.bool,
	    pullLeft: _react2['default'].PropTypes.bool
	  };

	  Wrapper.defaultProps = {
	    componentClass: tag,
	    pullRight: false,
	    pullLeft: false
	  };

	  Wrapper.contextTypes = {
	    $bs_navbar: _react.PropTypes.shape({
	      bsClass: _react.PropTypes.string
	    })
	  };

	  return Wrapper;
	}

	UncontrollableNavbar.Brand = _NavbarBrand2['default'];
	UncontrollableNavbar.Header = _NavbarHeader2['default'];
	UncontrollableNavbar.Toggle = _NavbarToggle2['default'];
	UncontrollableNavbar.Collapse = _NavbarCollapse2['default'];

	UncontrollableNavbar.Form = createSimpleWrapper('div', 'form', 'NavbarForm');
	UncontrollableNavbar.Text = createSimpleWrapper('p', 'text', 'NavbarText');
	UncontrollableNavbar.Link = createSimpleWrapper('a', 'link', 'NavbarLink');

	// Set bsStyles here so they can be overridden.
	exports['default'] = (0, _bootstrapUtils.bsStyles)([_StyleConfig.Style.DEFAULT, _StyleConfig.Style.INVERSE], _StyleConfig.Style.DEFAULT, UncontrollableNavbar);
	module.exports = exports['default'];

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _assign = __webpack_require__(238);

	var _assign2 = _interopRequireDefault(_assign);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];

	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }

	  return target;
	};

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(239), __esModule: true };

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(240);
	module.exports = __webpack_require__(243).Object.assign;

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(241);

	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(256)});

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(242)
	  , core      = __webpack_require__(243)
	  , ctx       = __webpack_require__(244)
	  , hide      = __webpack_require__(246)
	  , PROTOTYPE = 'prototype';

	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , IS_WRAP   = type & $export.W
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE]
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
	    , key, own, out;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if(own && key in exports)continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function(C){
	      var F = function(a, b, c){
	        if(this instanceof C){
	          switch(arguments.length){
	            case 0: return new C;
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if(IS_PROTO){
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 242 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 243 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(245);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 245 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(247)
	  , createDesc = __webpack_require__(255);
	module.exports = __webpack_require__(251) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(248)
	  , IE8_DOM_DEFINE = __webpack_require__(250)
	  , toPrimitive    = __webpack_require__(254)
	  , dP             = Object.defineProperty;

	exports.f = __webpack_require__(251) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(249);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 249 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(251) && !__webpack_require__(252)(function(){
	  return Object.defineProperty(__webpack_require__(253)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(252)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 252 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(249)
	  , document = __webpack_require__(242).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(249);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 255 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys  = __webpack_require__(257)
	  , gOPS     = __webpack_require__(272)
	  , pIE      = __webpack_require__(273)
	  , toObject = __webpack_require__(274)
	  , IObject  = __webpack_require__(261)
	  , $assign  = Object.assign;

	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(252)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(258)
	  , enumBugKeys = __webpack_require__(271);

	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(259)
	  , toIObject    = __webpack_require__(260)
	  , arrayIndexOf = __webpack_require__(264)(false)
	  , IE_PROTO     = __webpack_require__(268)('IE_PROTO');

	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 259 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(261)
	  , defined = __webpack_require__(263);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(262);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 262 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 263 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(260)
	  , toLength  = __webpack_require__(265)
	  , toIndex   = __webpack_require__(267);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(266)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 266 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(266)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(269)('keys')
	  , uid    = __webpack_require__(270);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(242)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 270 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 271 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 272 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 273 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(263);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 275 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;

	exports.default = function (obj, keys) {
	  var target = {};

	  for (var i in obj) {
	    if (keys.indexOf(i) >= 0) continue;
	    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
	    target[i] = obj[i];
	  }

	  return target;
	};

/***/ },
/* 276 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;

	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _typeof2 = __webpack_require__(278);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _iterator = __webpack_require__(279);

	var _iterator2 = _interopRequireDefault(_iterator);

	var _symbol = __webpack_require__(299);

	var _symbol2 = _interopRequireDefault(_symbol);

	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(280), __esModule: true };

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(281);
	__webpack_require__(294);
	module.exports = __webpack_require__(298).f('iterator');

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(282)(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(283)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(266)
	  , defined   = __webpack_require__(263);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(284)
	  , $export        = __webpack_require__(241)
	  , redefine       = __webpack_require__(285)
	  , hide           = __webpack_require__(246)
	  , has            = __webpack_require__(259)
	  , Iterators      = __webpack_require__(286)
	  , $iterCreate    = __webpack_require__(287)
	  , setToStringTag = __webpack_require__(291)
	  , getPrototypeOf = __webpack_require__(293)
	  , ITERATOR       = __webpack_require__(292)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';

	var returnThis = function(){ return this; };

	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 284 */
/***/ function(module, exports) {

	module.exports = true;

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(246);

/***/ },
/* 286 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(288)
	  , descriptor     = __webpack_require__(255)
	  , setToStringTag = __webpack_require__(291)
	  , IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(246)(IteratorPrototype, __webpack_require__(292)('iterator'), function(){ return this; });

	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(248)
	  , dPs         = __webpack_require__(289)
	  , enumBugKeys = __webpack_require__(271)
	  , IE_PROTO    = __webpack_require__(268)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(253)('iframe')
	    , i      = enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(290).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};

	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(247)
	  , anObject = __webpack_require__(248)
	  , getKeys  = __webpack_require__(257);

	module.exports = __webpack_require__(251) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(242).document && document.documentElement;

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(247).f
	  , has = __webpack_require__(259)
	  , TAG = __webpack_require__(292)('toStringTag');

	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(269)('wks')
	  , uid        = __webpack_require__(270)
	  , Symbol     = __webpack_require__(242).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(259)
	  , toObject    = __webpack_require__(274)
	  , IE_PROTO    = __webpack_require__(268)('IE_PROTO')
	  , ObjectProto = Object.prototype;

	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(295);
	var global        = __webpack_require__(242)
	  , hide          = __webpack_require__(246)
	  , Iterators     = __webpack_require__(286)
	  , TO_STRING_TAG = __webpack_require__(292)('toStringTag');

	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype;
	  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(296)
	  , step             = __webpack_require__(297)
	  , Iterators        = __webpack_require__(286)
	  , toIObject        = __webpack_require__(260);

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(283)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;

	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 296 */
/***/ function(module, exports) {

	module.exports = function(){ /* empty */ };

/***/ },
/* 297 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(292);

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(300), __esModule: true };

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(301);
	__webpack_require__(310);
	__webpack_require__(311);
	__webpack_require__(312);
	module.exports = __webpack_require__(243).Symbol;

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(242)
	  , has            = __webpack_require__(259)
	  , DESCRIPTORS    = __webpack_require__(251)
	  , $export        = __webpack_require__(241)
	  , redefine       = __webpack_require__(285)
	  , META           = __webpack_require__(302).KEY
	  , $fails         = __webpack_require__(252)
	  , shared         = __webpack_require__(269)
	  , setToStringTag = __webpack_require__(291)
	  , uid            = __webpack_require__(270)
	  , wks            = __webpack_require__(292)
	  , wksExt         = __webpack_require__(298)
	  , wksDefine      = __webpack_require__(303)
	  , keyOf          = __webpack_require__(304)
	  , enumKeys       = __webpack_require__(305)
	  , isArray        = __webpack_require__(306)
	  , anObject       = __webpack_require__(248)
	  , toIObject      = __webpack_require__(260)
	  , toPrimitive    = __webpack_require__(254)
	  , createDesc     = __webpack_require__(255)
	  , _create        = __webpack_require__(288)
	  , gOPNExt        = __webpack_require__(307)
	  , $GOPD          = __webpack_require__(309)
	  , $DP            = __webpack_require__(247)
	  , $keys          = __webpack_require__(257)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;

	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};

	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};

	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};

	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });

	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(308).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(273).f  = $propertyIsEnumerable;
	  __webpack_require__(272).f = $getOwnPropertySymbols;

	  if(DESCRIPTORS && !__webpack_require__(284)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }

	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});

	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});

	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(246)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(270)('meta')
	  , isObject = __webpack_require__(249)
	  , has      = __webpack_require__(259)
	  , setDesc  = __webpack_require__(247).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(252)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(242)
	  , core           = __webpack_require__(243)
	  , LIBRARY        = __webpack_require__(284)
	  , wksExt         = __webpack_require__(298)
	  , defineProperty = __webpack_require__(247).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(257)
	  , toIObject = __webpack_require__(260);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(257)
	  , gOPS    = __webpack_require__(272)
	  , pIE     = __webpack_require__(273);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(262);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(260)
	  , gOPN      = __webpack_require__(308).f
	  , toString  = {}.toString;

	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};

	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(258)
	  , hiddenKeys = __webpack_require__(271).concat('length', 'prototype');

	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(273)
	  , createDesc     = __webpack_require__(255)
	  , toIObject      = __webpack_require__(260)
	  , toPrimitive    = __webpack_require__(254)
	  , has            = __webpack_require__(259)
	  , IE8_DOM_DEFINE = __webpack_require__(250)
	  , gOPD           = Object.getOwnPropertyDescriptor;

	exports.f = __webpack_require__(251) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 310 */
/***/ function(module, exports) {

	

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(303)('asyncIterator');

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(303)('observable');

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _setPrototypeOf = __webpack_require__(314);

	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

	var _create = __webpack_require__(318);

	var _create2 = _interopRequireDefault(_create);

	var _typeof2 = __webpack_require__(278);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }

	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(315), __esModule: true };

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(316);
	module.exports = __webpack_require__(243).Object.setPrototypeOf;

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(241);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(317).set});

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(249)
	  , anObject = __webpack_require__(248);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(244)(Function.call, __webpack_require__(309).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(319), __esModule: true };

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(320);
	var $Object = __webpack_require__(243).Object;
	module.exports = function create(P, D){
	  return $Object.create(P, D);
	};

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(241)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(288)});

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */

	(function () {
		'use strict';

		var hasOwn = {}.hasOwnProperty;

		function classNames () {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _createChainableTypeChecker = __webpack_require__(323);

	var _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function elementType(props, propName, componentName, location, propFullName) {
	  var propValue = props[propName];
	  var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);

	  if (_react2.default.isValidElement(propValue)) {
	    return new Error('Invalid ' + location + ' `' + propFullName + '` of type ReactElement ' + ('supplied to `' + componentName + '`, expected an element type (a string ') + 'or a ReactClass).');
	  }

	  if (propType !== 'function' && propType !== 'string') {
	    return new Error('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected an element type (a string ') + 'or a ReactClass).');
	  }

	  return null;
	}

	exports.default = (0, _createChainableTypeChecker2.default)(elementType);

/***/ },
/* 323 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.default = createChainableTypeChecker;
	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	// Mostly taken from ReactPropTypes.

	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    var componentNameSafe = componentName || '<<anonymous>>';
	    var propFullNameSafe = propFullName || propName;

	    if (props[propName] == null) {
	      if (isRequired) {
	        return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));
	      }

	      return null;
	    }

	    for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {
	      args[_key - 6] = arguments[_key];
	    }

	    return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createUncontrollable = __webpack_require__(325);

	var _createUncontrollable2 = _interopRequireDefault(_createUncontrollable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var mixin = {
	  shouldComponentUpdate: function shouldComponentUpdate() {
	    //let the forceUpdate trigger the update
	    return !this._notifying;
	  }
	};

	function set(component, propName, handler, value, args) {
	  if (handler) {
	    component._notifying = true;
	    handler.call.apply(handler, [component, value].concat(args));
	    component._notifying = false;
	  }

	  component._values[propName] = value;

	  if (component.isMounted()) component.forceUpdate();
	}

	exports.default = (0, _createUncontrollable2.default)([mixin], set);
	module.exports = exports['default'];

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = createUncontrollable;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _utils = __webpack_require__(326);

	var utils = _interopRequireWildcard(_utils);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function createUncontrollable(mixins, set) {

	  return uncontrollable;

	  function uncontrollable(Component, controlledValues) {
	    var methods = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];

	    var displayName = Component.displayName || Component.name || 'Component',
	        basePropTypes = utils.getType(Component).propTypes,
	        isCompositeComponent = utils.isReactComponent(Component),
	        controlledProps = Object.keys(controlledValues),
	        propTypes;

	    var OMIT_PROPS = ['valueLink', 'checkedLink'].concat(controlledProps.map(utils.defaultKey));

	    propTypes = utils.uncontrolledPropTypes(controlledValues, basePropTypes, displayName);

	    (0, _invariant2.default)(isCompositeComponent || !methods.length, '[uncontrollable] stateless function components cannot pass through methods ' + 'because they have no associated instances. Check component: ' + displayName + ', ' + 'attempting to pass through methods: ' + methods.join(', '));

	    methods = utils.transform(methods, function (obj, method) {
	      obj[method] = function () {
	        var _refs$inner;

	        return (_refs$inner = this.refs.inner)[method].apply(_refs$inner, arguments);
	      };
	    }, {});

	    var component = _react2.default.createClass(_extends({

	      displayName: 'Uncontrolled(' + displayName + ')',

	      mixins: mixins,

	      propTypes: propTypes

	    }, methods, {
	      componentWillMount: function componentWillMount() {
	        var _this = this;

	        var props = this.props;

	        this._values = {};

	        controlledProps.forEach(function (key) {
	          _this._values[key] = props[utils.defaultKey(key)];
	        });
	      },


	      /**
	       * If a prop switches from controlled to Uncontrolled
	       * reset its value to the defaultValue
	       */
	      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        var _this2 = this;

	        var props = this.props;

	        controlledProps.forEach(function (key) {
	          if (utils.getValue(nextProps, key) === undefined && utils.getValue(props, key) !== undefined) {
	            _this2._values[key] = nextProps[utils.defaultKey(key)];
	          }
	        });
	      },
	      getControlledInstance: function getControlledInstance() {
	        return this.refs.inner;
	      },
	      render: function render() {
	        var _this3 = this;

	        var newProps = {},
	            props = omitProps(this.props);

	        utils.each(controlledValues, function (handle, propName) {
	          var linkPropName = utils.getLinkName(propName),
	              prop = _this3.props[propName];

	          if (linkPropName && !isProp(_this3.props, propName) && isProp(_this3.props, linkPropName)) {
	            prop = _this3.props[linkPropName].value;
	          }

	          newProps[propName] = prop !== undefined ? prop : _this3._values[propName];

	          newProps[handle] = setAndNotify.bind(_this3, propName);
	        });

	        newProps = _extends({}, props, newProps, {
	          ref: isCompositeComponent ? 'inner' : null
	        });

	        return _react2.default.createElement(Component, newProps);
	      }
	    }));

	    component.ControlledComponent = Component;

	    /**
	     * useful when wrapping a Component and you want to control
	     * everything
	     */
	    component.deferControlTo = function (newComponent) {
	      var additions = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	      var nextMethods = arguments[2];

	      return uncontrollable(newComponent, _extends({}, controlledValues, additions), nextMethods);
	    };

	    return component;

	    function setAndNotify(propName, value) {
	      var linkName = utils.getLinkName(propName),
	          handler = this.props[controlledValues[propName]];

	      if (linkName && isProp(this.props, linkName) && !handler) {
	        handler = this.props[linkName].requestChange;
	      }

	      for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	        args[_key - 2] = arguments[_key];
	      }

	      set(this, propName, handler, value, args);
	    }

	    function isProp(props, prop) {
	      return props[prop] !== undefined;
	    }

	    function omitProps(props) {
	      var result = {};

	      utils.each(props, function (value, key) {
	        if (OMIT_PROPS.indexOf(key) === -1) result[key] = value;
	      });

	      return result;
	    }
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.version = undefined;
	exports.uncontrolledPropTypes = uncontrolledPropTypes;
	exports.getType = getType;
	exports.getValue = getValue;
	exports.getLinkName = getLinkName;
	exports.defaultKey = defaultKey;
	exports.chain = chain;
	exports.transform = transform;
	exports.each = each;
	exports.has = has;
	exports.isReactComponent = isReactComponent;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function readOnlyPropType(handler, name) {
	  return function (props, propName) {
	    if (props[propName] !== undefined) {
	      if (!props[handler]) {
	        return new Error('You have provided a `' + propName + '` prop to ' + '`' + name + '` without an `' + handler + '` handler. This will render a read-only field. ' + 'If the field should be mutable use `' + defaultKey(propName) + '`. Otherwise, set `' + handler + '`');
	      }
	    }
	  };
	}

	function uncontrolledPropTypes(controlledValues, basePropTypes, displayName) {
	  var propTypes = {};

	  if (false) {
	    transform(controlledValues, function (obj, handler, prop) {
	      (0, _invariant2.default)(typeof handler === 'string' && handler.trim().length, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop);

	      obj[prop] = readOnlyPropType(handler, displayName);
	    }, propTypes);
	  }

	  return propTypes;
	}

	var version = exports.version = _react2.default.version.split('.').map(parseFloat);

	function getType(component) {
	  if (version[0] >= 15 || version[0] === 0 && version[1] >= 13) return component;

	  return component.type;
	}

	function getValue(props, name) {
	  var linkPropName = getLinkName(name);

	  if (linkPropName && !isProp(props, name) && isProp(props, linkPropName)) return props[linkPropName].value;

	  return props[name];
	}

	function isProp(props, prop) {
	  return props[prop] !== undefined;
	}

	function getLinkName(name) {
	  return name === 'value' ? 'valueLink' : name === 'checked' ? 'checkedLink' : null;
	}

	function defaultKey(key) {
	  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);
	}

	function chain(thisArg, a, b) {
	  return function chainedFunction() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    a && a.call.apply(a, [thisArg].concat(args));
	    b && b.call.apply(b, [thisArg].concat(args));
	  };
	}

	function transform(obj, cb, seed) {
	  each(obj, cb.bind(null, seed = seed || (Array.isArray(obj) ? [] : {})));
	  return seed;
	}

	function each(obj, cb, thisArg) {
	  if (Array.isArray(obj)) return obj.forEach(cb, thisArg);

	  for (var key in obj) {
	    if (has(obj, key)) cb.call(thisArg, obj[key], key, obj);
	  }
	}

	function has(o, k) {
	  return o ? Object.prototype.hasOwnProperty.call(o, k) : false;
	}

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	function isReactComponent(component) {
	  return !!(component && component.prototype && component.prototype.isReactComponent);
	}

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _elementType = __webpack_require__(322);

	var _elementType2 = _interopRequireDefault(_elementType);

	var _bootstrapUtils = __webpack_require__(328);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  /**
	   * Turn any fixed-width grid layout into a full-width layout by this property.
	   *
	   * Adds `container-fluid` class.
	   */
	  fluid: _react2['default'].PropTypes.bool,
	  /**
	   * You can use a custom element for this component
	   */
	  componentClass: _elementType2['default']
	};

	var defaultProps = {
	  componentClass: 'div',
	  fluid: false
	};

	var Grid = function (_React$Component) {
	  (0, _inherits3['default'])(Grid, _React$Component);

	  function Grid() {
	    (0, _classCallCheck3['default'])(this, Grid);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  Grid.prototype.render = function render() {
	    var _props = this.props,
	        fluid = _props.fluid,
	        Component = _props.componentClass,
	        className = _props.className,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['fluid', 'componentClass', 'className']);

	    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
	        bsProps = _splitBsProps[0],
	        elementProps = _splitBsProps[1];

	    var classes = (0, _bootstrapUtils.prefix)(bsProps, fluid && 'fluid');

	    return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, {
	      className: (0, _classnames2['default'])(className, classes)
	    }));
	  };

	  return Grid;
	}(_react2['default'].Component);

	Grid.propTypes = propTypes;
	Grid.defaultProps = defaultProps;

	exports['default'] = (0, _bootstrapUtils.bsClass)('container', Grid);
	module.exports = exports['default'];

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports._curry = exports.bsSizes = exports.bsStyles = exports.bsClass = undefined;

	var _entries = __webpack_require__(329);

	var _entries2 = _interopRequireDefault(_entries);

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	exports.prefix = prefix;
	exports.getClassSet = getClassSet;
	exports.splitBsProps = splitBsProps;
	exports.splitBsPropsAndOmit = splitBsPropsAndOmit;
	exports.addStyle = addStyle;

	var _invariant = __webpack_require__(175);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(1);

	var _StyleConfig = __webpack_require__(333);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function curry(fn) {
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    var last = args[args.length - 1];
	    if (typeof last === 'function') {
	      return fn.apply(undefined, args);
	    }
	    return function (Component) {
	      return fn.apply(undefined, args.concat([Component]));
	    };
	  };
	} // TODO: The publicly exposed parts of this should be in lib/BootstrapUtils.

	function prefix(props, variant) {
	  !(props.bsClass != null) ?  false ? (0, _invariant2['default'])(false, 'A `bsClass` prop is required for this component') : (0, _invariant2['default'])(false) : void 0;
	  return props.bsClass + (variant ? '-' + variant : '');
	}

	var bsClass = exports.bsClass = curry(function (defaultClass, Component) {
	  var propTypes = Component.propTypes || (Component.propTypes = {});
	  var defaultProps = Component.defaultProps || (Component.defaultProps = {});

	  propTypes.bsClass = _react.PropTypes.string;
	  defaultProps.bsClass = defaultClass;

	  return Component;
	});

	var bsStyles = exports.bsStyles = curry(function (styles, defaultStyle, Component) {
	  if (typeof defaultStyle !== 'string') {
	    Component = defaultStyle;
	    defaultStyle = undefined;
	  }

	  var existing = Component.STYLES || [];
	  var propTypes = Component.propTypes || {};

	  styles.forEach(function (style) {
	    if (existing.indexOf(style) === -1) {
	      existing.push(style);
	    }
	  });

	  var propType = _react.PropTypes.oneOf(existing);

	  // expose the values on the propType function for documentation
	  Component.STYLES = propType._values = existing;

	  Component.propTypes = (0, _extends3['default'])({}, propTypes, {
	    bsStyle: propType
	  });

	  if (defaultStyle !== undefined) {
	    var defaultProps = Component.defaultProps || (Component.defaultProps = {});
	    defaultProps.bsStyle = defaultStyle;
	  }

	  return Component;
	});

	var bsSizes = exports.bsSizes = curry(function (sizes, defaultSize, Component) {
	  if (typeof defaultSize !== 'string') {
	    Component = defaultSize;
	    defaultSize = undefined;
	  }

	  var existing = Component.SIZES || [];
	  var propTypes = Component.propTypes || {};

	  sizes.forEach(function (size) {
	    if (existing.indexOf(size) === -1) {
	      existing.push(size);
	    }
	  });

	  var values = [];
	  existing.forEach(function (size) {
	    var mappedSize = _StyleConfig.SIZE_MAP[size];
	    if (mappedSize && mappedSize !== size) {
	      values.push(mappedSize);
	    }

	    values.push(size);
	  });

	  var propType = _react.PropTypes.oneOf(values);
	  propType._values = values;

	  // expose the values on the propType function for documentation
	  Component.SIZES = existing;

	  Component.propTypes = (0, _extends3['default'])({}, propTypes, {
	    bsSize: propType
	  });

	  if (defaultSize !== undefined) {
	    if (!Component.defaultProps) {
	      Component.defaultProps = {};
	    }
	    Component.defaultProps.bsSize = defaultSize;
	  }

	  return Component;
	});

	function getClassSet(props) {
	  var _classes;

	  var classes = (_classes = {}, _classes[prefix(props)] = true, _classes);

	  if (props.bsSize) {
	    var bsSize = _StyleConfig.SIZE_MAP[props.bsSize] || props.bsSize;
	    classes[prefix(props, bsSize)] = true;
	  }

	  if (props.bsStyle) {
	    classes[prefix(props, props.bsStyle)] = true;
	  }

	  return classes;
	}

	function getBsProps(props) {
	  return {
	    bsClass: props.bsClass,
	    bsSize: props.bsSize,
	    bsStyle: props.bsStyle,
	    bsRole: props.bsRole
	  };
	}

	function isBsProp(propName) {
	  return propName === 'bsClass' || propName === 'bsSize' || propName === 'bsStyle' || propName === 'bsRole';
	}

	function splitBsProps(props) {
	  var elementProps = {};
	  (0, _entries2['default'])(props).forEach(function (_ref) {
	    var propName = _ref[0],
	        propValue = _ref[1];

	    if (!isBsProp(propName)) {
	      elementProps[propName] = propValue;
	    }
	  });

	  return [getBsProps(props), elementProps];
	}

	function splitBsPropsAndOmit(props, omittedPropNames) {
	  var isOmittedProp = {};
	  omittedPropNames.forEach(function (propName) {
	    isOmittedProp[propName] = true;
	  });

	  var elementProps = {};
	  (0, _entries2['default'])(props).forEach(function (_ref2) {
	    var propName = _ref2[0],
	        propValue = _ref2[1];

	    if (!isBsProp(propName) && !isOmittedProp[propName]) {
	      elementProps[propName] = propValue;
	    }
	  });

	  return [getBsProps(props), elementProps];
	}

	/**
	 * Add a style variant to a Component. Mutates the propTypes of the component
	 * in order to validate the new variant.
	 */
	function addStyle(Component) {
	  for (var _len2 = arguments.length, styleVariant = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	    styleVariant[_key2 - 1] = arguments[_key2];
	  }

	  bsStyles(styleVariant, Component);
	}

	var _curry = exports._curry = curry;

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(330), __esModule: true };

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(331);
	module.exports = __webpack_require__(243).Object.entries;

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export  = __webpack_require__(241)
	  , $entries = __webpack_require__(332)(true);

	$export($export.S, 'Object', {
	  entries: function entries(it){
	    return $entries(it);
	  }
	});

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(257)
	  , toIObject = __webpack_require__(260)
	  , isEnum    = __webpack_require__(273).f;
	module.exports = function(isEntries){
	  return function(it){
	    var O      = toIObject(it)
	      , keys   = getKeys(O)
	      , length = keys.length
	      , i      = 0
	      , result = []
	      , key;
	    while(length > i)if(isEnum.call(O, key = keys[i++])){
	      result.push(isEntries ? [key, O[key]] : O[key]);
	    } return result;
	  };
	};

/***/ },
/* 333 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var Size = exports.Size = {
	  LARGE: 'large',
	  SMALL: 'small',
	  XSMALL: 'xsmall'
	};

	var SIZE_MAP = exports.SIZE_MAP = {
	  large: 'lg',
	  medium: 'md',
	  small: 'sm',
	  xsmall: 'xs',
	  lg: 'lg',
	  md: 'md',
	  sm: 'sm',
	  xs: 'xs'
	};

	var DEVICE_SIZES = exports.DEVICE_SIZES = ['lg', 'md', 'sm', 'xs'];

	var State = exports.State = {
	  SUCCESS: 'success',
	  WARNING: 'warning',
	  DANGER: 'danger',
	  INFO: 'info'
	};

	var Style = exports.Style = {
	  DEFAULT: 'default',
	  PRIMARY: 'primary',
	  LINK: 'link',
	  INVERSE: 'inverse'
	};

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _bootstrapUtils = __webpack_require__(328);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var contextTypes = {
	  $bs_navbar: _react2['default'].PropTypes.shape({
	    bsClass: _react2['default'].PropTypes.string
	  })
	};

	var NavbarBrand = function (_React$Component) {
	  (0, _inherits3['default'])(NavbarBrand, _React$Component);

	  function NavbarBrand() {
	    (0, _classCallCheck3['default'])(this, NavbarBrand);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  NavbarBrand.prototype.render = function render() {
	    var _props = this.props,
	        className = _props.className,
	        children = _props.children,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['className', 'children']);

	    var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };

	    var bsClassName = (0, _bootstrapUtils.prefix)(navbarProps, 'brand');

	    if (_react2['default'].isValidElement(children)) {
	      return _react2['default'].cloneElement(children, {
	        className: (0, _classnames2['default'])(children.props.className, className, bsClassName)
	      });
	    }

	    return _react2['default'].createElement(
	      'span',
	      (0, _extends3['default'])({}, props, { className: (0, _classnames2['default'])(className, bsClassName) }),
	      children
	    );
	  };

	  return NavbarBrand;
	}(_react2['default'].Component);

	NavbarBrand.contextTypes = contextTypes;

	exports['default'] = NavbarBrand;
	module.exports = exports['default'];

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _Collapse = __webpack_require__(336);

	var _Collapse2 = _interopRequireDefault(_Collapse);

	var _bootstrapUtils = __webpack_require__(328);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var contextTypes = {
	  $bs_navbar: _react.PropTypes.shape({
	    bsClass: _react.PropTypes.string,
	    expanded: _react.PropTypes.bool
	  })
	};

	var NavbarCollapse = function (_React$Component) {
	  (0, _inherits3['default'])(NavbarCollapse, _React$Component);

	  function NavbarCollapse() {
	    (0, _classCallCheck3['default'])(this, NavbarCollapse);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  NavbarCollapse.prototype.render = function render() {
	    var _props = this.props,
	        children = _props.children,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['children']);

	    var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };

	    var bsClassName = (0, _bootstrapUtils.prefix)(navbarProps, 'collapse');

	    return _react2['default'].createElement(
	      _Collapse2['default'],
	      (0, _extends3['default'])({ 'in': navbarProps.expanded }, props),
	      _react2['default'].createElement(
	        'div',
	        { className: bsClassName },
	        children
	      )
	    );
	  };

	  return NavbarCollapse;
	}(_react2['default'].Component);

	NavbarCollapse.contextTypes = contextTypes;

	exports['default'] = NavbarCollapse;
	module.exports = exports['default'];

/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _style = __webpack_require__(337);

	var _style2 = _interopRequireDefault(_style);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _Transition = __webpack_require__(345);

	var _Transition2 = _interopRequireDefault(_Transition);

	var _capitalize = __webpack_require__(349);

	var _capitalize2 = _interopRequireDefault(_capitalize);

	var _createChainedFunction = __webpack_require__(350);

	var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var MARGINS = {
	  height: ['marginTop', 'marginBottom'],
	  width: ['marginLeft', 'marginRight']
	};

	// reading a dimension prop will cause the browser to recalculate,
	// which will let our animations work
	function triggerBrowserReflow(node) {
	  node.offsetHeight; // eslint-disable-line no-unused-expressions
	}

	function getDimensionValue(dimension, elem) {
	  var value = elem['offset' + (0, _capitalize2['default'])(dimension)];
	  var margins = MARGINS[dimension];

	  return value + parseInt((0, _style2['default'])(elem, margins[0]), 10) + parseInt((0, _style2['default'])(elem, margins[1]), 10);
	}

	var propTypes = {
	  /**
	   * Show the component; triggers the expand or collapse animation
	   */
	  'in': _react2['default'].PropTypes.bool,

	  /**
	   * Unmount the component (remove it from the DOM) when it is collapsed
	   */
	  unmountOnExit: _react2['default'].PropTypes.bool,

	  /**
	   * Run the expand animation when the component mounts, if it is initially
	   * shown
	   */
	  transitionAppear: _react2['default'].PropTypes.bool,

	  /**
	   * Duration of the collapse animation in milliseconds, to ensure that
	   * finishing callbacks are fired even if the original browser transition end
	   * events are canceled
	   */
	  timeout: _react2['default'].PropTypes.number,

	  /**
	   * Callback fired before the component expands
	   */
	  onEnter: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component starts to expand
	   */
	  onEntering: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component has expanded
	   */
	  onEntered: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired before the component collapses
	   */
	  onExit: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component starts to collapse
	   */
	  onExiting: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component has collapsed
	   */
	  onExited: _react2['default'].PropTypes.func,

	  /**
	   * The dimension used when collapsing, or a function that returns the
	   * dimension
	   *
	   * _Note: Bootstrap only partially supports 'width'!
	   * You will need to supply your own CSS animation for the `.width` CSS class._
	   */
	  dimension: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.oneOf(['height', 'width']), _react2['default'].PropTypes.func]),

	  /**
	   * Function that returns the height or width of the animating DOM node
	   *
	   * Allows for providing some custom logic for how much the Collapse component
	   * should animate in its specified dimension. Called with the current
	   * dimension prop value and the DOM node.
	   */
	  getDimensionValue: _react2['default'].PropTypes.func,

	  /**
	   * ARIA role of collapsible element
	   */
	  role: _react2['default'].PropTypes.string
	};

	var defaultProps = {
	  'in': false,
	  timeout: 300,
	  unmountOnExit: false,
	  transitionAppear: false,

	  dimension: 'height',
	  getDimensionValue: getDimensionValue
	};

	var Collapse = function (_React$Component) {
	  (0, _inherits3['default'])(Collapse, _React$Component);

	  function Collapse(props, context) {
	    (0, _classCallCheck3['default'])(this, Collapse);

	    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));

	    _this.handleEnter = _this.handleEnter.bind(_this);
	    _this.handleEntering = _this.handleEntering.bind(_this);
	    _this.handleEntered = _this.handleEntered.bind(_this);
	    _this.handleExit = _this.handleExit.bind(_this);
	    _this.handleExiting = _this.handleExiting.bind(_this);
	    return _this;
	  }

	  /* -- Expanding -- */


	  Collapse.prototype.handleEnter = function handleEnter(elem) {
	    var dimension = this._dimension();
	    elem.style[dimension] = '0';
	  };

	  Collapse.prototype.handleEntering = function handleEntering(elem) {
	    var dimension = this._dimension();
	    elem.style[dimension] = this._getScrollDimensionValue(elem, dimension);
	  };

	  Collapse.prototype.handleEntered = function handleEntered(elem) {
	    var dimension = this._dimension();
	    elem.style[dimension] = null;
	  };

	  /* -- Collapsing -- */


	  Collapse.prototype.handleExit = function handleExit(elem) {
	    var dimension = this._dimension();
	    elem.style[dimension] = this.props.getDimensionValue(dimension, elem) + 'px';
	    triggerBrowserReflow(elem);
	  };

	  Collapse.prototype.handleExiting = function handleExiting(elem) {
	    var dimension = this._dimension();
	    elem.style[dimension] = '0';
	  };

	  Collapse.prototype._dimension = function _dimension() {
	    return typeof this.props.dimension === 'function' ? this.props.dimension() : this.props.dimension;
	  };

	  // for testing


	  Collapse.prototype._getScrollDimensionValue = function _getScrollDimensionValue(elem, dimension) {
	    return elem['scroll' + (0, _capitalize2['default'])(dimension)] + 'px';
	  };

	  Collapse.prototype.render = function render() {
	    var _props = this.props,
	        onEnter = _props.onEnter,
	        onEntering = _props.onEntering,
	        onEntered = _props.onEntered,
	        onExit = _props.onExit,
	        onExiting = _props.onExiting,
	        className = _props.className,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'className']);


	    delete props.dimension;
	    delete props.getDimensionValue;

	    var handleEnter = (0, _createChainedFunction2['default'])(this.handleEnter, onEnter);
	    var handleEntering = (0, _createChainedFunction2['default'])(this.handleEntering, onEntering);
	    var handleEntered = (0, _createChainedFunction2['default'])(this.handleEntered, onEntered);
	    var handleExit = (0, _createChainedFunction2['default'])(this.handleExit, onExit);
	    var handleExiting = (0, _createChainedFunction2['default'])(this.handleExiting, onExiting);

	    var classes = {
	      width: this._dimension() === 'width'
	    };

	    return _react2['default'].createElement(_Transition2['default'], (0, _extends3['default'])({}, props, {
	      'aria-expanded': props.role ? props['in'] : null,
	      className: (0, _classnames2['default'])(className, classes),
	      exitedClassName: 'collapse',
	      exitingClassName: 'collapsing',
	      enteredClassName: 'collapse in',
	      enteringClassName: 'collapsing',
	      onEnter: handleEnter,
	      onEntering: handleEntering,
	      onEntered: handleEntered,
	      onExit: handleExit,
	      onExiting: handleExiting
	    }));
	  };

	  return Collapse;
	}(_react2['default'].Component);

	Collapse.propTypes = propTypes;
	Collapse.defaultProps = defaultProps;

	exports['default'] = Collapse;
	module.exports = exports['default'];

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var camelize = __webpack_require__(338),
	    hyphenate = __webpack_require__(340),
	    _getComputedStyle = __webpack_require__(342),
	    removeStyle = __webpack_require__(344);

	var has = Object.prototype.hasOwnProperty;

	module.exports = function style(node, property, value) {
	  var css = '',
	      props = property;

	  if (typeof property === 'string') {

	    if (value === undefined) return node.style[camelize(property)] || _getComputedStyle(node).getPropertyValue(hyphenate(property));else (props = {})[property] = value;
	  }

	  for (var key in props) if (has.call(props, key)) {
	    !props[key] && props[key] !== 0 ? removeStyle(node, hyphenate(key)) : css += hyphenate(key) + ':' + props[key] + ';';
	  }

	  node.style.cssText += ';' + css;
	};

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/camelizeStyleName.js
	 */

	'use strict';
	var camelize = __webpack_require__(339);
	var msPattern = /^-ms-/;

	module.exports = function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	};

/***/ },
/* 339 */
/***/ function(module, exports) {

	"use strict";

	var rHyphen = /-(.)/g;

	module.exports = function camelize(string) {
	  return string.replace(rHyphen, function (_, chr) {
	    return chr.toUpperCase();
	  });
	};

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014, Facebook, Inc.
	 * All rights reserved.
	 * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js
	 */

	"use strict";

	var hyphenate = __webpack_require__(341);
	var msPattern = /^ms-/;

	module.exports = function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, "-ms-");
	};

/***/ },
/* 341 */
/***/ function(module, exports) {

	'use strict';

	var rUpper = /([A-Z])/g;

	module.exports = function hyphenate(string) {
	  return string.replace(rUpper, '-$1').toLowerCase();
	};

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var babelHelpers = __webpack_require__(343);

	var _utilCamelizeStyle = __webpack_require__(338);

	var _utilCamelizeStyle2 = babelHelpers.interopRequireDefault(_utilCamelizeStyle);

	var rposition = /^(top|right|bottom|left)$/;
	var rnumnonpx = /^([+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|))(?!px)[a-z%]+$/i;

	module.exports = function _getComputedStyle(node) {
	  if (!node) throw new TypeError('No Element passed to `getComputedStyle()`');
	  var doc = node.ownerDocument;

	  return 'defaultView' in doc ? doc.defaultView.opener ? node.ownerDocument.defaultView.getComputedStyle(node, null) : window.getComputedStyle(node, null) : { //ie 8 "magic" from: https://github.com/jquery/jquery/blob/1.11-stable/src/css/curCSS.js#L72
	    getPropertyValue: function getPropertyValue(prop) {
	      var style = node.style;

	      prop = (0, _utilCamelizeStyle2['default'])(prop);

	      if (prop == 'float') prop = 'styleFloat';

	      var current = node.currentStyle[prop] || null;

	      if (current == null && style && style[prop]) current = style[prop];

	      if (rnumnonpx.test(current) && !rposition.test(prop)) {
	        // Remember the original values
	        var left = style.left;
	        var runStyle = node.runtimeStyle;
	        var rsLeft = runStyle && runStyle.left;

	        // Put in the new values to get a computed value out
	        if (rsLeft) runStyle.left = node.currentStyle.left;

	        style.left = prop === 'fontSize' ? '1em' : current;
	        current = style.pixelLeft + 'px';

	        // Revert the changed values
	        style.left = left;
	        if (rsLeft) runStyle.left = rsLeft;
	      }

	      return current;
	    }
	  };
	};

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports === "object") {
	    factory(exports);
	  } else {
	    factory(root.babelHelpers = {});
	  }
	})(this, function (global) {
	  var babelHelpers = global;

	  babelHelpers.interopRequireDefault = function (obj) {
	    return obj && obj.__esModule ? obj : {
	      "default": obj
	    };
	  };

	  babelHelpers._extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];

	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }

	    return target;
	  };
	})

/***/ },
/* 344 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function removeStyle(node, key) {
	  return 'removeProperty' in node.style ? node.style.removeProperty(key) : node.style.removeAttribute(key);
	};

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(28);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _properties = __webpack_require__(346);

	var _properties2 = _interopRequireDefault(_properties);

	var _on = __webpack_require__(348);

	var _on2 = _interopRequireDefault(_on);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var transitionEndEvent = _properties2.default.end;

	var UNMOUNTED = exports.UNMOUNTED = 0;
	var EXITED = exports.EXITED = 1;
	var ENTERING = exports.ENTERING = 2;
	var ENTERED = exports.ENTERED = 3;
	var EXITING = exports.EXITING = 4;

	/**
	 * The Transition component lets you define and run css transitions with a simple declarative api.
	 * It works similar to React's own [CSSTransitionGroup](http://facebook.github.io/react/docs/animation.html#high-level-api-reactcsstransitiongroup)
	 * but is specifically optimized for transitioning a single child "in" or "out".
	 *
	 * You don't even need to use class based css transitions if you don't want to (but it is easiest).
	 * The extensive set of lifecyle callbacks means you have control over
	 * the transitioning now at each step of the way.
	 */

	var Transition = function (_React$Component) {
	  _inherits(Transition, _React$Component);

	  function Transition(props, context) {
	    _classCallCheck(this, Transition);

	    var _this = _possibleConstructorReturn(this, (Transition.__proto__ || Object.getPrototypeOf(Transition)).call(this, props, context));

	    var initialStatus = void 0;
	    if (props.in) {
	      // Start enter transition in componentDidMount.
	      initialStatus = props.transitionAppear ? EXITED : ENTERED;
	    } else {
	      initialStatus = props.unmountOnExit ? UNMOUNTED : EXITED;
	    }
	    _this.state = { status: initialStatus };

	    _this.nextCallback = null;
	    return _this;
	  }

	  _createClass(Transition, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (this.props.transitionAppear && this.props.in) {
	        this.performEnter(this.props);
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.in && this.props.unmountOnExit) {
	        if (this.state.status === UNMOUNTED) {
	          // Start enter transition in componentDidUpdate.
	          this.setState({ status: EXITED });
	        }
	      } else {
	        this._needsUpdate = true;
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      var status = this.state.status;

	      if (this.props.unmountOnExit && status === EXITED) {
	        // EXITED is always a transitional state to either ENTERING or UNMOUNTED
	        // when using unmountOnExit.
	        if (this.props.in) {
	          this.performEnter(this.props);
	        } else {
	          this.setState({ status: UNMOUNTED });
	        }

	        return;
	      }

	      // guard ensures we are only responding to prop changes
	      if (this._needsUpdate) {
	        this._needsUpdate = false;

	        if (this.props.in) {
	          if (status === EXITING) {
	            this.performEnter(this.props);
	          } else if (status === EXITED) {
	            this.performEnter(this.props);
	          }
	          // Otherwise we're already entering or entered.
	        } else {
	          if (status === ENTERING || status === ENTERED) {
	            this.performExit(this.props);
	          }
	          // Otherwise we're already exited or exiting.
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.cancelNextCallback();
	    }
	  }, {
	    key: 'performEnter',
	    value: function performEnter(props) {
	      var _this2 = this;

	      this.cancelNextCallback();
	      var node = _reactDom2.default.findDOMNode(this);

	      // Not this.props, because we might be about to receive new props.
	      props.onEnter(node);

	      this.safeSetState({ status: ENTERING }, function () {
	        _this2.props.onEntering(node);

	        _this2.onTransitionEnd(node, function () {
	          _this2.safeSetState({ status: ENTERED }, function () {
	            _this2.props.onEntered(node);
	          });
	        });
	      });
	    }
	  }, {
	    key: 'performExit',
	    value: function performExit(props) {
	      var _this3 = this;

	      this.cancelNextCallback();
	      var node = _reactDom2.default.findDOMNode(this);

	      // Not this.props, because we might be about to receive new props.
	      props.onExit(node);

	      this.safeSetState({ status: EXITING }, function () {
	        _this3.props.onExiting(node);

	        _this3.onTransitionEnd(node, function () {
	          _this3.safeSetState({ status: EXITED }, function () {
	            _this3.props.onExited(node);
	          });
	        });
	      });
	    }
	  }, {
	    key: 'cancelNextCallback',
	    value: function cancelNextCallback() {
	      if (this.nextCallback !== null) {
	        this.nextCallback.cancel();
	        this.nextCallback = null;
	      }
	    }
	  }, {
	    key: 'safeSetState',
	    value: function safeSetState(nextState, callback) {
	      // This shouldn't be necessary, but there are weird race conditions with
	      // setState callbacks and unmounting in testing, so always make sure that
	      // we can cancel any pending setState callbacks after we unmount.
	      this.setState(nextState, this.setNextCallback(callback));
	    }
	  }, {
	    key: 'setNextCallback',
	    value: function setNextCallback(callback) {
	      var _this4 = this;

	      var active = true;

	      this.nextCallback = function (event) {
	        if (active) {
	          active = false;
	          _this4.nextCallback = null;

	          callback(event);
	        }
	      };

	      this.nextCallback.cancel = function () {
	        active = false;
	      };

	      return this.nextCallback;
	    }
	  }, {
	    key: 'onTransitionEnd',
	    value: function onTransitionEnd(node, handler) {
	      this.setNextCallback(handler);

	      if (node) {
	        (0, _on2.default)(node, transitionEndEvent, this.nextCallback);
	        setTimeout(this.nextCallback, this.props.timeout);
	      } else {
	        setTimeout(this.nextCallback, 0);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var status = this.state.status;
	      if (status === UNMOUNTED) {
	        return null;
	      }

	      var _props = this.props,
	          children = _props.children,
	          className = _props.className,
	          childProps = _objectWithoutProperties(_props, ['children', 'className']);

	      Object.keys(Transition.propTypes).forEach(function (key) {
	        return delete childProps[key];
	      });

	      var transitionClassName = void 0;
	      if (status === EXITED) {
	        transitionClassName = this.props.exitedClassName;
	      } else if (status === ENTERING) {
	        transitionClassName = this.props.enteringClassName;
	      } else if (status === ENTERED) {
	        transitionClassName = this.props.enteredClassName;
	      } else if (status === EXITING) {
	        transitionClassName = this.props.exitingClassName;
	      }

	      var child = _react2.default.Children.only(children);
	      return _react2.default.cloneElement(child, _extends({}, childProps, {
	        className: (0, _classnames2.default)(child.props.className, className, transitionClassName)
	      }));
	    }
	  }]);

	  return Transition;
	}(_react2.default.Component);

	Transition.propTypes = {
	  /**
	   * Show the component; triggers the enter or exit animation
	   */
	  in: _react2.default.PropTypes.bool,

	  /**
	   * Unmount the component (remove it from the DOM) when it is not shown
	   */
	  unmountOnExit: _react2.default.PropTypes.bool,

	  /**
	   * Run the enter animation when the component mounts, if it is initially
	   * shown
	   */
	  transitionAppear: _react2.default.PropTypes.bool,

	  /**
	   * A Timeout for the animation, in milliseconds, to ensure that a node doesn't
	   * transition indefinately if the browser transitionEnd events are
	   * canceled or interrupted.
	   *
	   * By default this is set to a high number (5 seconds) as a failsafe. You should consider
	   * setting this to the duration of your animation (or a bit above it).
	   */
	  timeout: _react2.default.PropTypes.number,

	  /**
	   * CSS class or classes applied when the component is exited
	   */
	  exitedClassName: _react2.default.PropTypes.string,
	  /**
	   * CSS class or classes applied while the component is exiting
	   */
	  exitingClassName: _react2.default.PropTypes.string,
	  /**
	   * CSS class or classes applied when the component is entered
	   */
	  enteredClassName: _react2.default.PropTypes.string,
	  /**
	   * CSS class or classes applied while the component is entering
	   */
	  enteringClassName: _react2.default.PropTypes.string,

	  /**
	   * Callback fired before the "entering" classes are applied
	   */
	  onEnter: _react2.default.PropTypes.func,
	  /**
	   * Callback fired after the "entering" classes are applied
	   */
	  onEntering: _react2.default.PropTypes.func,
	  /**
	   * Callback fired after the "enter" classes are applied
	   */
	  onEntered: _react2.default.PropTypes.func,
	  /**
	   * Callback fired before the "exiting" classes are applied
	   */
	  onExit: _react2.default.PropTypes.func,
	  /**
	   * Callback fired after the "exiting" classes are applied
	   */
	  onExiting: _react2.default.PropTypes.func,
	  /**
	   * Callback fired after the "exited" classes are applied
	   */
	  onExited: _react2.default.PropTypes.func
	};

	// Name the function so it is clearer in the documentation
	function noop() {}

	Transition.displayName = 'Transition';

	Transition.defaultProps = {
	  in: false,
	  unmountOnExit: false,
	  transitionAppear: false,

	  timeout: 5000,

	  onEnter: noop,
	  onEntering: noop,
	  onEntered: noop,

	  onExit: noop,
	  onExiting: noop,
	  onExited: noop
	};

	exports.default = Transition;

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = undefined;

	var _inDOM = __webpack_require__(347);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var transform = 'transform';
	var prefix = void 0,
	    transitionEnd = void 0,
	    animationEnd = void 0;
	var transitionProperty = void 0,
	    transitionDuration = void 0,
	    transitionTiming = void 0,
	    transitionDelay = void 0;
	var animationName = void 0,
	    animationDuration = void 0,
	    animationTiming = void 0,
	    animationDelay = void 0;

	if (_inDOM2.default) {
	  var _getTransitionPropert = getTransitionProperties();

	  prefix = _getTransitionPropert.prefix;
	  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;
	  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;


	  exports.transform = transform = prefix + '-' + transform;
	  exports.transitionProperty = transitionProperty = prefix + '-transition-property';
	  exports.transitionDuration = transitionDuration = prefix + '-transition-duration';
	  exports.transitionDelay = transitionDelay = prefix + '-transition-delay';
	  exports.transitionTiming = transitionTiming = prefix + '-transition-timing-function';

	  exports.animationName = animationName = prefix + '-animation-name';
	  exports.animationDuration = animationDuration = prefix + '-animation-duration';
	  exports.animationTiming = animationTiming = prefix + '-animation-delay';
	  exports.animationDelay = animationDelay = prefix + '-animation-timing-function';
	}

	exports.transform = transform;
	exports.transitionProperty = transitionProperty;
	exports.transitionTiming = transitionTiming;
	exports.transitionDelay = transitionDelay;
	exports.transitionDuration = transitionDuration;
	exports.transitionEnd = transitionEnd;
	exports.animationName = animationName;
	exports.animationDuration = animationDuration;
	exports.animationTiming = animationTiming;
	exports.animationDelay = animationDelay;
	exports.animationEnd = animationEnd;
	exports.default = {
	  transform: transform,
	  end: transitionEnd,
	  property: transitionProperty,
	  timing: transitionTiming,
	  delay: transitionDelay,
	  duration: transitionDuration
	};


	function getTransitionProperties() {
	  var style = document.createElement('div').style;

	  var vendorMap = {
	    O: function O(e) {
	      return 'o' + e.toLowerCase();
	    },
	    Moz: function Moz(e) {
	      return e.toLowerCase();
	    },
	    Webkit: function Webkit(e) {
	      return 'webkit' + e;
	    },
	    ms: function ms(e) {
	      return 'MS' + e;
	    }
	  };

	  var vendors = Object.keys(vendorMap);

	  var transitionEnd = void 0,
	      animationEnd = void 0;
	  var prefix = '';

	  for (var i = 0; i < vendors.length; i++) {
	    var vendor = vendors[i];

	    if (vendor + 'TransitionProperty' in style) {
	      prefix = '-' + vendor.toLowerCase();
	      transitionEnd = vendorMap[vendor]('TransitionEnd');
	      animationEnd = vendorMap[vendor]('AnimationEnd');
	      break;
	    }
	  }

	  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';

	  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';

	  style = null;

	  return { animationEnd: animationEnd, transitionEnd: transitionEnd, prefix: prefix };
	}

/***/ },
/* 347 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	module.exports = exports['default'];

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _inDOM = __webpack_require__(347);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var on = function on() {};
	if (_inDOM2.default) {
	  on = function () {

	    if (document.addEventListener) return function (node, eventName, handler, capture) {
	      return node.addEventListener(eventName, handler, capture || false);
	    };else if (document.attachEvent) return function (node, eventName, handler) {
	      return node.attachEvent('on' + eventName, function (e) {
	        e = e || window.event;
	        e.target = e.target || e.srcElement;
	        e.currentTarget = node;
	        handler.call(node, e);
	      });
	    };
	  }();
	}

	exports.default = on;
	module.exports = exports['default'];

/***/ },
/* 349 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = capitalize;
	function capitalize(string) {
	  return "" + string.charAt(0).toUpperCase() + string.slice(1);
	}
	module.exports = exports["default"];

/***/ },
/* 350 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	/**
	 * Safe chained function
	 *
	 * Will only create a new function if needed,
	 * otherwise will pass back existing functions or null.
	 *
	 * @param {function} functions to chain
	 * @returns {function|null}
	 */
	function createChainedFunction() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }

	  return funcs.filter(function (f) {
	    return f != null;
	  }).reduce(function (acc, f) {
	    if (typeof f !== 'function') {
	      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');
	    }

	    if (acc === null) {
	      return f;
	    }

	    return function chainedFunction() {
	      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }

	      acc.apply(this, args);
	      f.apply(this, args);
	    };
	  }, null);
	}

	exports['default'] = createChainedFunction;
	module.exports = exports['default'];

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _bootstrapUtils = __webpack_require__(328);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var contextTypes = {
	  $bs_navbar: _react2['default'].PropTypes.shape({
	    bsClass: _react2['default'].PropTypes.string
	  })
	};

	var NavbarHeader = function (_React$Component) {
	  (0, _inherits3['default'])(NavbarHeader, _React$Component);

	  function NavbarHeader() {
	    (0, _classCallCheck3['default'])(this, NavbarHeader);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  NavbarHeader.prototype.render = function render() {
	    var _props = this.props,
	        className = _props.className,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['className']);

	    var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };

	    var bsClassName = (0, _bootstrapUtils.prefix)(navbarProps, 'header');

	    return _react2['default'].createElement('div', (0, _extends3['default'])({}, props, { className: (0, _classnames2['default'])(className, bsClassName) }));
	  };

	  return NavbarHeader;
	}(_react2['default'].Component);

	NavbarHeader.contextTypes = contextTypes;

	exports['default'] = NavbarHeader;
	module.exports = exports['default'];

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _bootstrapUtils = __webpack_require__(328);

	var _createChainedFunction = __webpack_require__(350);

	var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  onClick: _react.PropTypes.func,
	  /**
	   * The toggle content, if left empty it will render the default toggle (seen above).
	   */
	  children: _react.PropTypes.node
	};

	var contextTypes = {
	  $bs_navbar: _react.PropTypes.shape({
	    bsClass: _react.PropTypes.string,
	    expanded: _react.PropTypes.bool,
	    onToggle: _react.PropTypes.func.isRequired
	  })
	};

	var NavbarToggle = function (_React$Component) {
	  (0, _inherits3['default'])(NavbarToggle, _React$Component);

	  function NavbarToggle() {
	    (0, _classCallCheck3['default'])(this, NavbarToggle);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  NavbarToggle.prototype.render = function render() {
	    var _props = this.props,
	        onClick = _props.onClick,
	        className = _props.className,
	        children = _props.children,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['onClick', 'className', 'children']);

	    var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };

	    var buttonProps = (0, _extends3['default'])({
	      type: 'button'
	    }, props, {
	      onClick: (0, _createChainedFunction2['default'])(onClick, navbarProps.onToggle),
	      className: (0, _classnames2['default'])(className, (0, _bootstrapUtils.prefix)(navbarProps, 'toggle'), !navbarProps.expanded && 'collapsed')
	    });

	    if (children) {
	      return _react2['default'].createElement(
	        'button',
	        buttonProps,
	        children
	      );
	    }

	    return _react2['default'].createElement(
	      'button',
	      buttonProps,
	      _react2['default'].createElement(
	        'span',
	        { className: 'sr-only' },
	        'Toggle navigation'
	      ),
	      _react2['default'].createElement('span', { className: 'icon-bar' }),
	      _react2['default'].createElement('span', { className: 'icon-bar' }),
	      _react2['default'].createElement('span', { className: 'icon-bar' })
	    );
	  };

	  return NavbarToggle;
	}(_react2['default'].Component);

	NavbarToggle.propTypes = propTypes;
	NavbarToggle.contextTypes = contextTypes;

	exports['default'] = NavbarToggle;
	module.exports = exports['default'];

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends3 = __webpack_require__(237);

	var _extends4 = _interopRequireDefault(_extends3);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _keycode = __webpack_require__(354);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(28);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _all = __webpack_require__(355);

	var _all2 = _interopRequireDefault(_all);

	var _warning = __webpack_require__(179);

	var _warning2 = _interopRequireDefault(_warning);

	var _bootstrapUtils = __webpack_require__(328);

	var _createChainedFunction = __webpack_require__(350);

	var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

	var _ValidComponentChildren = __webpack_require__(356);

	var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	// TODO: Should we expose `<NavItem>` as `<Nav.Item>`?

	// TODO: This `bsStyle` is very unlike the others. Should we rename it?

	// TODO: `pullRight` and `pullLeft` don't render right outside of `navbar`.
	// Consider renaming or replacing them.

	var propTypes = {
	  /**
	   * Marks the NavItem with a matching `eventKey` as active. Has a
	   * higher precedence over `activeHref`.
	   */
	  activeKey: _react2['default'].PropTypes.any,

	  /**
	   * Marks the child NavItem with a matching `href` prop as active.
	   */
	  activeHref: _react2['default'].PropTypes.string,

	  /**
	   * NavItems are be positioned vertically.
	   */
	  stacked: _react2['default'].PropTypes.bool,

	  justified: (0, _all2['default'])(_react2['default'].PropTypes.bool, function (_ref) {
	    var justified = _ref.justified,
	        navbar = _ref.navbar;
	    return justified && navbar ? Error('justified navbar `Nav`s are not supported') : null;
	  }),

	  /**
	   * A callback fired when a NavItem is selected.
	   *
	   * ```js
	   * function (
	   * 	Any eventKey,
	   * 	SyntheticEvent event?
	   * )
	   * ```
	   */
	  onSelect: _react2['default'].PropTypes.func,

	  /**
	   * ARIA role for the Nav, in the context of a TabContainer, the default will
	   * be set to "tablist", but can be overridden by the Nav when set explicitly.
	   *
	   * When the role is set to "tablist" NavItem focus is managed according to
	   * the ARIA authoring practices for tabs:
	   * https://www.w3.org/TR/2013/WD-wai-aria-practices-20130307/#tabpanel
	   */
	  role: _react2['default'].PropTypes.string,

	  /**
	   * Apply styling an alignment for use in a Navbar. This prop will be set
	   * automatically when the Nav is used inside a Navbar.
	   */
	  navbar: _react2['default'].PropTypes.bool,

	  /**
	   * Float the Nav to the right. When `navbar` is `true` the appropriate
	   * contextual classes are added as well.
	   */
	  pullRight: _react2['default'].PropTypes.bool,

	  /**
	   * Float the Nav to the left. When `navbar` is `true` the appropriate
	   * contextual classes are added as well.
	   */
	  pullLeft: _react2['default'].PropTypes.bool
	};

	var defaultProps = {
	  justified: false,
	  pullRight: false,
	  pullLeft: false,
	  stacked: false
	};

	var contextTypes = {
	  $bs_navbar: _react2['default'].PropTypes.shape({
	    bsClass: _react2['default'].PropTypes.string,
	    onSelect: _react2['default'].PropTypes.func
	  }),

	  $bs_tabContainer: _react2['default'].PropTypes.shape({
	    activeKey: _react2['default'].PropTypes.any,
	    onSelect: _react2['default'].PropTypes.func.isRequired,
	    getTabId: _react2['default'].PropTypes.func.isRequired,
	    getPaneId: _react2['default'].PropTypes.func.isRequired
	  })
	};

	var Nav = function (_React$Component) {
	  (0, _inherits3['default'])(Nav, _React$Component);

	  function Nav() {
	    (0, _classCallCheck3['default'])(this, Nav);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  Nav.prototype.componentDidUpdate = function componentDidUpdate() {
	    var _this2 = this;

	    if (!this._needsRefocus) {
	      return;
	    }

	    this._needsRefocus = false;

	    var children = this.props.children;

	    var _getActiveProps = this.getActiveProps(),
	        activeKey = _getActiveProps.activeKey,
	        activeHref = _getActiveProps.activeHref;

	    var activeChild = _ValidComponentChildren2['default'].find(children, function (child) {
	      return _this2.isActive(child, activeKey, activeHref);
	    });

	    var childrenArray = _ValidComponentChildren2['default'].toArray(children);
	    var activeChildIndex = childrenArray.indexOf(activeChild);

	    var childNodes = _reactDom2['default'].findDOMNode(this).children;
	    var activeNode = childNodes && childNodes[activeChildIndex];

	    if (!activeNode || !activeNode.firstChild) {
	      return;
	    }

	    activeNode.firstChild.focus();
	  };

	  Nav.prototype.handleTabKeyDown = function handleTabKeyDown(onSelect, event) {
	    var nextActiveChild = void 0;

	    switch (event.keyCode) {
	      case _keycode2['default'].codes.left:
	      case _keycode2['default'].codes.up:
	        nextActiveChild = this.getNextActiveChild(-1);
	        break;
	      case _keycode2['default'].codes.right:
	      case _keycode2['default'].codes.down:
	        nextActiveChild = this.getNextActiveChild(1);
	        break;
	      default:
	        // It was a different key; don't handle this keypress.
	        return;
	    }

	    event.preventDefault();

	    if (onSelect && nextActiveChild && nextActiveChild.props.eventKey) {
	      onSelect(nextActiveChild.props.eventKey);
	    }

	    this._needsRefocus = true;
	  };

	  Nav.prototype.getNextActiveChild = function getNextActiveChild(offset) {
	    var _this3 = this;

	    var children = this.props.children;

	    var validChildren = children.filter(function (child) {
	      return child.props.eventKey && !child.props.disabled;
	    });

	    var _getActiveProps2 = this.getActiveProps(),
	        activeKey = _getActiveProps2.activeKey,
	        activeHref = _getActiveProps2.activeHref;

	    var activeChild = _ValidComponentChildren2['default'].find(children, function (child) {
	      return _this3.isActive(child, activeKey, activeHref);
	    });

	    // This assumes the active child is not disabled.
	    var activeChildIndex = validChildren.indexOf(activeChild);
	    if (activeChildIndex === -1) {
	      // Something has gone wrong. Select the first valid child we can find.
	      return validChildren[0];
	    }

	    var nextIndex = activeChildIndex + offset;
	    var numValidChildren = validChildren.length;

	    if (nextIndex >= numValidChildren) {
	      nextIndex = 0;
	    } else if (nextIndex < 0) {
	      nextIndex = numValidChildren - 1;
	    }

	    return validChildren[nextIndex];
	  };

	  Nav.prototype.getActiveProps = function getActiveProps() {
	    var tabContainer = this.context.$bs_tabContainer;

	    if (tabContainer) {
	       false ? (0, _warning2['default'])(this.props.activeKey == null && !this.props.activeHref, 'Specifying a `<Nav>` `activeKey` or `activeHref` in the context of ' + 'a `<TabContainer>` is not supported. Instead use `<TabContainer ' + ('activeKey={' + this.props.activeKey + '} />`.')) : void 0;

	      return tabContainer;
	    }

	    return this.props;
	  };

	  Nav.prototype.isActive = function isActive(_ref2, activeKey, activeHref) {
	    var props = _ref2.props;

	    if (props.active || activeKey != null && props.eventKey === activeKey || activeHref && props.href === activeHref) {
	      return true;
	    }

	    return props.active;
	  };

	  Nav.prototype.getTabProps = function getTabProps(child, tabContainer, navRole, active, onSelect) {
	    var _this4 = this;

	    if (!tabContainer && navRole !== 'tablist') {
	      // No tab props here.
	      return null;
	    }

	    var _child$props = child.props,
	        id = _child$props.id,
	        controls = _child$props['aria-controls'],
	        eventKey = _child$props.eventKey,
	        role = _child$props.role,
	        onKeyDown = _child$props.onKeyDown,
	        tabIndex = _child$props.tabIndex;


	    if (tabContainer) {
	       false ? (0, _warning2['default'])(!id && !controls, 'In the context of a `<TabContainer>`, `<NavItem>`s are given ' + 'generated `id` and `aria-controls` attributes for the sake of ' + 'proper component accessibility. Any provided ones will be ignored. ' + 'To control these attributes directly, provide a `generateChildId` ' + 'prop to the parent `<TabContainer>`.') : void 0;

	      id = tabContainer.getTabId(eventKey);
	      controls = tabContainer.getPaneId(eventKey);
	    }

	    if (navRole === 'tablist') {
	      role = role || 'tab';
	      onKeyDown = (0, _createChainedFunction2['default'])(function (event) {
	        return _this4.handleTabKeyDown(onSelect, event);
	      }, onKeyDown);
	      tabIndex = active ? tabIndex : -1;
	    }

	    return {
	      id: id,
	      role: role,
	      onKeyDown: onKeyDown,
	      'aria-controls': controls,
	      tabIndex: tabIndex
	    };
	  };

	  Nav.prototype.render = function render() {
	    var _extends2,
	        _this5 = this;

	    var _props = this.props,
	        stacked = _props.stacked,
	        justified = _props.justified,
	        onSelect = _props.onSelect,
	        propsRole = _props.role,
	        propsNavbar = _props.navbar,
	        pullRight = _props.pullRight,
	        pullLeft = _props.pullLeft,
	        className = _props.className,
	        children = _props.children,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['stacked', 'justified', 'onSelect', 'role', 'navbar', 'pullRight', 'pullLeft', 'className', 'children']);


	    var tabContainer = this.context.$bs_tabContainer;
	    var role = propsRole || (tabContainer ? 'tablist' : null);

	    var _getActiveProps3 = this.getActiveProps(),
	        activeKey = _getActiveProps3.activeKey,
	        activeHref = _getActiveProps3.activeHref;

	    delete props.activeKey; // Accessed via this.getActiveProps().
	    delete props.activeHref; // Accessed via this.getActiveProps().

	    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
	        bsProps = _splitBsProps[0],
	        elementProps = _splitBsProps[1];

	    var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'stacked')] = stacked, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'justified')] = justified, _extends2));

	    var navbar = propsNavbar != null ? propsNavbar : this.context.$bs_navbar;
	    var pullLeftClassName = void 0;
	    var pullRightClassName = void 0;

	    if (navbar) {
	      var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };

	      classes[(0, _bootstrapUtils.prefix)(navbarProps, 'nav')] = true;

	      pullRightClassName = (0, _bootstrapUtils.prefix)(navbarProps, 'right');
	      pullLeftClassName = (0, _bootstrapUtils.prefix)(navbarProps, 'left');
	    } else {
	      pullRightClassName = 'pull-right';
	      pullLeftClassName = 'pull-left';
	    }

	    classes[pullRightClassName] = pullRight;
	    classes[pullLeftClassName] = pullLeft;

	    return _react2['default'].createElement(
	      'ul',
	      (0, _extends4['default'])({}, elementProps, {
	        role: role,
	        className: (0, _classnames2['default'])(className, classes)
	      }),
	      _ValidComponentChildren2['default'].map(children, function (child) {
	        var active = _this5.isActive(child, activeKey, activeHref);
	        var childOnSelect = (0, _createChainedFunction2['default'])(child.props.onSelect, onSelect, navbar && navbar.onSelect, tabContainer && tabContainer.onSelect);

	        return (0, _react.cloneElement)(child, (0, _extends4['default'])({}, _this5.getTabProps(child, tabContainer, role, active, childOnSelect), {
	          active: active,
	          activeKey: activeKey,
	          activeHref: activeHref,
	          onSelect: childOnSelect
	        }));
	      })
	    );
	  };

	  return Nav;
	}(_react2['default'].Component);

	Nav.propTypes = propTypes;
	Nav.defaultProps = defaultProps;
	Nav.contextTypes = contextTypes;

	exports['default'] = (0, _bootstrapUtils.bsClass)('nav', (0, _bootstrapUtils.bsStyles)(['tabs', 'pills'], Nav));
	module.exports = exports['default'];

/***/ },
/* 354 */
/***/ function(module, exports) {

	// Source: http://jsfiddle.net/vWx8V/
	// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes

	/**
	 * Conenience method returns corresponding value for given keyName or keyCode.
	 *
	 * @param {Mixed} keyCode {Number} or keyName {String}
	 * @return {Mixed}
	 * @api public
	 */

	exports = module.exports = function(searchInput) {
	  // Keyboard Events
	  if (searchInput && 'object' === typeof searchInput) {
	    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode
	    if (hasKeyCode) searchInput = hasKeyCode
	  }

	  // Numbers
	  if ('number' === typeof searchInput) return names[searchInput]

	  // Everything else (cast to string)
	  var search = String(searchInput)

	  // check codes
	  var foundNamedKey = codes[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey

	  // check aliases
	  var foundNamedKey = aliases[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey

	  // weird character?
	  if (search.length === 1) return search.charCodeAt(0)

	  return undefined
	}

	/**
	 * Get by name
	 *
	 *   exports.code['enter'] // => 13
	 */

	var codes = exports.code = exports.codes = {
	  'backspace': 8,
	  'tab': 9,
	  'enter': 13,
	  'shift': 16,
	  'ctrl': 17,
	  'alt': 18,
	  'pause/break': 19,
	  'caps lock': 20,
	  'esc': 27,
	  'space': 32,
	  'page up': 33,
	  'page down': 34,
	  'end': 35,
	  'home': 36,
	  'left': 37,
	  'up': 38,
	  'right': 39,
	  'down': 40,
	  'insert': 45,
	  'delete': 46,
	  'command': 91,
	  'left command': 91,
	  'right command': 93,
	  'numpad *': 106,
	  'numpad +': 107,
	  'numpad -': 109,
	  'numpad .': 110,
	  'numpad /': 111,
	  'num lock': 144,
	  'scroll lock': 145,
	  'my computer': 182,
	  'my calculator': 183,
	  ';': 186,
	  '=': 187,
	  ',': 188,
	  '-': 189,
	  '.': 190,
	  '/': 191,
	  '`': 192,
	  '[': 219,
	  '\\': 220,
	  ']': 221,
	  "'": 222
	}

	// Helper aliases

	var aliases = exports.aliases = {
	  'windows': 91,
	  '⇧': 16,
	  '⌥': 18,
	  '⌃': 17,
	  '⌘': 91,
	  'ctl': 17,
	  'control': 17,
	  'option': 18,
	  'pause': 19,
	  'break': 19,
	  'caps': 20,
	  'return': 13,
	  'escape': 27,
	  'spc': 32,
	  'pgup': 33,
	  'pgdn': 34,
	  'ins': 45,
	  'del': 46,
	  'cmd': 91
	}


	/*!
	 * Programatically add the following
	 */

	// lower case chars
	for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32

	// numbers
	for (var i = 48; i < 58; i++) codes[i - 48] = i

	// function keys
	for (i = 1; i < 13; i++) codes['f'+i] = i + 111

	// numpad keys
	for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96

	/**
	 * Get by code
	 *
	 *   exports.name[13] // => 'Enter'
	 */

	var names = exports.names = exports.title = {} // title for backward compat

	// Create reverse mapping
	for (i in codes) names[codes[i]] = i

	// Add aliases
	for (var alias in aliases) {
	  codes[alias] = aliases[alias]
	}


/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = all;

	var _createChainableTypeChecker = __webpack_require__(323);

	var _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function all() {
	  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {
	    validators[_key] = arguments[_key];
	  }

	  function allPropTypes() {
	    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	      args[_key2] = arguments[_key2];
	    }

	    var error = null;

	    validators.forEach(function (validator) {
	      if (error != null) {
	        return;
	      }

	      var result = validator.apply(undefined, args);
	      if (result != null) {
	        error = result;
	      }
	    });

	    return error;
	  }

	  return (0, _createChainableTypeChecker2.default)(allPropTypes);
	}

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	/**
	 * Iterates through children that are typically specified as `props.children`,
	 * but only maps over children that are "valid components".
	 *
	 * The mapFunction provided index will be normalised to the components mapped,
	 * so an invalid component would not increase the index.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func.
	 * @param {*} context Context for func.
	 * @return {object} Object containing the ordered map of results.
	 */
	function map(children, func, context) {
	  var index = 0;

	  return _react2['default'].Children.map(children, function (child) {
	    if (!_react2['default'].isValidElement(child)) {
	      return child;
	    }

	    return func.call(context, child, index++);
	  });
	}

	/**
	 * Iterates through children that are "valid components".
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child with the index reflecting the position relative to "valid components".
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func.
	 * @param {*} context Context for context.
	 */
	// TODO: This module should be ElementChildren, and should use named exports.

	function forEach(children, func, context) {
	  var index = 0;

	  _react2['default'].Children.forEach(children, function (child) {
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    func.call(context, child, index++);
	  });
	}

	/**
	 * Count the number of "valid components" in the Children container.
	 *
	 * @param {?*} children Children tree container.
	 * @returns {number}
	 */
	function count(children) {
	  var result = 0;

	  _react2['default'].Children.forEach(children, function (child) {
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    ++result;
	  });

	  return result;
	}

	/**
	 * Finds children that are typically specified as `props.children`,
	 * but only iterates over children that are "valid components".
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child with the index reflecting the position relative to "valid components".
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func.
	 * @param {*} context Context for func.
	 * @returns {array} of children that meet the func return statement
	 */
	function filter(children, func, context) {
	  var index = 0;
	  var result = [];

	  _react2['default'].Children.forEach(children, function (child) {
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    if (func.call(context, child, index++)) {
	      result.push(child);
	    }
	  });

	  return result;
	}

	function find(children, func, context) {
	  var index = 0;
	  var result = undefined;

	  _react2['default'].Children.forEach(children, function (child) {
	    if (result) {
	      return;
	    }
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    if (func.call(context, child, index++)) {
	      result = child;
	    }
	  });

	  return result;
	}

	function every(children, func, context) {
	  var index = 0;
	  var result = true;

	  _react2['default'].Children.forEach(children, function (child) {
	    if (!result) {
	      return;
	    }
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    if (!func.call(context, child, index++)) {
	      result = false;
	    }
	  });

	  return result;
	}

	function some(children, func, context) {
	  var index = 0;
	  var result = false;

	  _react2['default'].Children.forEach(children, function (child) {
	    if (result) {
	      return;
	    }
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    if (func.call(context, child, index++)) {
	      result = true;
	    }
	  });

	  return result;
	}

	function toArray(children) {
	  var result = [];

	  _react2['default'].Children.forEach(children, function (child) {
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    result.push(child);
	  });

	  return result;
	}

	exports['default'] = {
	  map: map,
	  forEach: forEach,
	  count: count,
	  find: find,
	  filter: filter,
	  every: every,
	  some: some,
	  toArray: toArray
	};
	module.exports = exports['default'];

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _Dropdown = __webpack_require__(358);

	var _Dropdown2 = _interopRequireDefault(_Dropdown);

	var _splitComponentProps2 = __webpack_require__(388);

	var _splitComponentProps3 = _interopRequireDefault(_splitComponentProps2);

	var _ValidComponentChildren = __webpack_require__(356);

	var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = (0, _extends3['default'])({}, _Dropdown2['default'].propTypes, {

	  // Toggle props.
	  title: _react2['default'].PropTypes.node.isRequired,
	  noCaret: _react2['default'].PropTypes.bool,
	  active: _react2['default'].PropTypes.bool,

	  // Override generated docs from <Dropdown>.
	  /**
	   * @private
	   */
	  children: _react2['default'].PropTypes.node
	});

	var NavDropdown = function (_React$Component) {
	  (0, _inherits3['default'])(NavDropdown, _React$Component);

	  function NavDropdown() {
	    (0, _classCallCheck3['default'])(this, NavDropdown);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  NavDropdown.prototype.isActive = function isActive(_ref, activeKey, activeHref) {
	    var props = _ref.props;

	    var _this2 = this;

	    if (props.active || activeKey != null && props.eventKey === activeKey || activeHref && props.href === activeHref) {
	      return true;
	    }

	    if (_ValidComponentChildren2['default'].some(props.children, function (child) {
	      return _this2.isActive(child, activeKey, activeHref);
	    })) {
	      return true;
	    }

	    return props.active;
	  };

	  NavDropdown.prototype.render = function render() {
	    var _this3 = this;

	    var _props = this.props,
	        title = _props.title,
	        activeKey = _props.activeKey,
	        activeHref = _props.activeHref,
	        className = _props.className,
	        style = _props.style,
	        children = _props.children,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['title', 'activeKey', 'activeHref', 'className', 'style', 'children']);


	    var active = this.isActive(this, activeKey, activeHref);
	    delete props.active; // Accessed via this.isActive().
	    delete props.eventKey; // Accessed via this.isActive().

	    var _splitComponentProps = (0, _splitComponentProps3['default'])(props, _Dropdown2['default'].ControlledComponent),
	        dropdownProps = _splitComponentProps[0],
	        toggleProps = _splitComponentProps[1];

	    // Unlike for the other dropdowns, styling needs to go to the `<Dropdown>`
	    // rather than the `<Dropdown.Toggle>`.

	    return _react2['default'].createElement(
	      _Dropdown2['default'],
	      (0, _extends3['default'])({}, dropdownProps, {
	        componentClass: 'li',
	        className: (0, _classnames2['default'])(className, { active: active }),
	        style: style
	      }),
	      _react2['default'].createElement(
	        _Dropdown2['default'].Toggle,
	        (0, _extends3['default'])({}, toggleProps, { useAnchor: true }),
	        title
	      ),
	      _react2['default'].createElement(
	        _Dropdown2['default'].Menu,
	        null,
	        _ValidComponentChildren2['default'].map(children, function (child) {
	          return _react2['default'].cloneElement(child, {
	            active: _this3.isActive(child, activeKey, activeHref)
	          });
	        })
	      )
	    );
	  };

	  return NavDropdown;
	}(_react2['default'].Component);

	NavDropdown.propTypes = propTypes;

	exports['default'] = NavDropdown;
	module.exports = exports['default'];

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _activeElement = __webpack_require__(359);

	var _activeElement2 = _interopRequireDefault(_activeElement);

	var _contains = __webpack_require__(361);

	var _contains2 = _interopRequireDefault(_contains);

	var _keycode = __webpack_require__(354);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(28);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _all = __webpack_require__(355);

	var _all2 = _interopRequireDefault(_all);

	var _elementType = __webpack_require__(322);

	var _elementType2 = _interopRequireDefault(_elementType);

	var _isRequiredForA11y = __webpack_require__(363);

	var _isRequiredForA11y2 = _interopRequireDefault(_isRequiredForA11y);

	var _uncontrollable = __webpack_require__(324);

	var _uncontrollable2 = _interopRequireDefault(_uncontrollable);

	var _warning = __webpack_require__(179);

	var _warning2 = _interopRequireDefault(_warning);

	var _ButtonGroup = __webpack_require__(364);

	var _ButtonGroup2 = _interopRequireDefault(_ButtonGroup);

	var _DropdownMenu = __webpack_require__(370);

	var _DropdownMenu2 = _interopRequireDefault(_DropdownMenu);

	var _DropdownToggle = __webpack_require__(386);

	var _DropdownToggle2 = _interopRequireDefault(_DropdownToggle);

	var _bootstrapUtils = __webpack_require__(328);

	var _createChainedFunction = __webpack_require__(350);

	var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

	var _PropTypes = __webpack_require__(387);

	var _ValidComponentChildren = __webpack_require__(356);

	var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var TOGGLE_ROLE = _DropdownToggle2['default'].defaultProps.bsRole;
	var MENU_ROLE = _DropdownMenu2['default'].defaultProps.bsRole;

	var propTypes = {
	  /**
	   * The menu will open above the dropdown button, instead of below it.
	   */
	  dropup: _react2['default'].PropTypes.bool,

	  /**
	   * An html id attribute, necessary for assistive technologies, such as screen readers.
	   * @type {string|number}
	   * @required
	   */
	  id: (0, _isRequiredForA11y2['default'])(_react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.number])),

	  componentClass: _elementType2['default'],

	  /**
	   * The children of a Dropdown may be a `<Dropdown.Toggle>` or a `<Dropdown.Menu>`.
	   * @type {node}
	   */
	  children: (0, _all2['default'])((0, _PropTypes.requiredRoles)(TOGGLE_ROLE, MENU_ROLE), (0, _PropTypes.exclusiveRoles)(MENU_ROLE)),

	  /**
	   * Whether or not component is disabled.
	   */
	  disabled: _react2['default'].PropTypes.bool,

	  /**
	   * Align the menu to the right side of the Dropdown toggle
	   */
	  pullRight: _react2['default'].PropTypes.bool,

	  /**
	   * Whether or not the Dropdown is visible.
	   *
	   * @controllable onToggle
	   */
	  open: _react2['default'].PropTypes.bool,

	  /**
	   * A callback fired when the Dropdown closes.
	   */
	  onClose: _react2['default'].PropTypes.func,

	  /**
	   * A callback fired when the Dropdown wishes to change visibility. Called with the requested
	   * `open` value.
	   *
	   * ```js
	   * function(Boolean isOpen) {}
	   * ```
	   * @controllable open
	   */
	  onToggle: _react2['default'].PropTypes.func,

	  /**
	   * A callback fired when a menu item is selected.
	   *
	   * ```js
	   * (eventKey: any, event: Object) => any
	   * ```
	   */
	  onSelect: _react2['default'].PropTypes.func,

	  /**
	   * If `'menuitem'`, causes the dropdown to behave like a menu item rather than
	   * a menu button.
	   */
	  role: _react2['default'].PropTypes.string,

	  /**
	   * Which event when fired outside the component will cause it to be closed
	   */
	  rootCloseEvent: _react2['default'].PropTypes.oneOf(['click', 'mousedown']),

	  /**
	   * @private
	   */
	  onMouseEnter: _react2['default'].PropTypes.func,
	  /**
	   * @private
	   */
	  onMouseLeave: _react2['default'].PropTypes.func
	};

	var defaultProps = {
	  componentClass: _ButtonGroup2['default']
	};

	var Dropdown = function (_React$Component) {
	  (0, _inherits3['default'])(Dropdown, _React$Component);

	  function Dropdown(props, context) {
	    (0, _classCallCheck3['default'])(this, Dropdown);

	    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));

	    _this.handleClick = _this.handleClick.bind(_this);
	    _this.handleKeyDown = _this.handleKeyDown.bind(_this);
	    _this.handleClose = _this.handleClose.bind(_this);

	    _this._focusInDropdown = false;
	    _this.lastOpenEventType = null;
	    return _this;
	  }

	  Dropdown.prototype.componentDidMount = function componentDidMount() {
	    this.focusNextOnOpen();
	  };

	  Dropdown.prototype.componentWillUpdate = function componentWillUpdate(nextProps) {
	    if (!nextProps.open && this.props.open) {
	      this._focusInDropdown = (0, _contains2['default'])(_reactDom2['default'].findDOMNode(this.menu), (0, _activeElement2['default'])(document));
	    }
	  };

	  Dropdown.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
	    var open = this.props.open;

	    var prevOpen = prevProps.open;

	    if (open && !prevOpen) {
	      this.focusNextOnOpen();
	    }

	    if (!open && prevOpen) {
	      // if focus hasn't already moved from the menu lets return it
	      // to the toggle
	      if (this._focusInDropdown) {
	        this._focusInDropdown = false;
	        this.focus();
	      }
	    }
	  };

	  Dropdown.prototype.handleClick = function handleClick() {
	    if (this.props.disabled) {
	      return;
	    }

	    this.toggleOpen('click');
	  };

	  Dropdown.prototype.handleKeyDown = function handleKeyDown(event) {
	    if (this.props.disabled) {
	      return;
	    }

	    switch (event.keyCode) {
	      case _keycode2['default'].codes.down:
	        if (!this.props.open) {
	          this.toggleOpen('keydown');
	        } else if (this.menu.focusNext) {
	          this.menu.focusNext();
	        }
	        event.preventDefault();
	        break;
	      case _keycode2['default'].codes.esc:
	      case _keycode2['default'].codes.tab:
	        this.handleClose(event);
	        break;
	      default:
	    }
	  };

	  Dropdown.prototype.toggleOpen = function toggleOpen(eventType) {
	    var open = !this.props.open;

	    if (open) {
	      this.lastOpenEventType = eventType;
	    }

	    if (this.props.onToggle) {
	      this.props.onToggle(open);
	    }
	  };

	  Dropdown.prototype.handleClose = function handleClose() {
	    if (!this.props.open) {
	      return;
	    }

	    this.toggleOpen(null);
	  };

	  Dropdown.prototype.focusNextOnOpen = function focusNextOnOpen() {
	    var menu = this.menu;

	    if (!menu.focusNext) {
	      return;
	    }

	    if (this.lastOpenEventType === 'keydown' || this.props.role === 'menuitem') {
	      menu.focusNext();
	    }
	  };

	  Dropdown.prototype.focus = function focus() {
	    var toggle = _reactDom2['default'].findDOMNode(this.toggle);

	    if (toggle && toggle.focus) {
	      toggle.focus();
	    }
	  };

	  Dropdown.prototype.renderToggle = function renderToggle(child, props) {
	    var _this2 = this;

	    var ref = function ref(c) {
	      _this2.toggle = c;
	    };

	    if (typeof child.ref === 'string') {
	       false ? (0, _warning2['default'])(false, 'String refs are not supported on `<Dropdown.Toggle>` components. ' + 'To apply a ref to the component use the callback signature:\n\n ' + 'https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute') : void 0;
	    } else {
	      ref = (0, _createChainedFunction2['default'])(child.ref, ref);
	    }

	    return (0, _react.cloneElement)(child, (0, _extends3['default'])({}, props, {
	      ref: ref,
	      bsClass: (0, _bootstrapUtils.prefix)(props, 'toggle'),
	      onClick: (0, _createChainedFunction2['default'])(child.props.onClick, this.handleClick),
	      onKeyDown: (0, _createChainedFunction2['default'])(child.props.onKeyDown, this.handleKeyDown)
	    }));
	  };

	  Dropdown.prototype.renderMenu = function renderMenu(child, _ref) {
	    var _this3 = this;

	    var id = _ref.id,
	        onClose = _ref.onClose,
	        onSelect = _ref.onSelect,
	        rootCloseEvent = _ref.rootCloseEvent,
	        props = (0, _objectWithoutProperties3['default'])(_ref, ['id', 'onClose', 'onSelect', 'rootCloseEvent']);

	    var ref = function ref(c) {
	      _this3.menu = c;
	    };

	    if (typeof child.ref === 'string') {
	       false ? (0, _warning2['default'])(false, 'String refs are not supported on `<Dropdown.Menu>` components. ' + 'To apply a ref to the component use the callback signature:\n\n ' + 'https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute') : void 0;
	    } else {
	      ref = (0, _createChainedFunction2['default'])(child.ref, ref);
	    }

	    return (0, _react.cloneElement)(child, (0, _extends3['default'])({}, props, {
	      ref: ref,
	      labelledBy: id,
	      bsClass: (0, _bootstrapUtils.prefix)(props, 'menu'),
	      onClose: (0, _createChainedFunction2['default'])(child.props.onClose, onClose, this.handleClose),
	      onSelect: (0, _createChainedFunction2['default'])(child.props.onSelect, onSelect, this.handleClose),
	      rootCloseEvent: rootCloseEvent
	    }));
	  };

	  Dropdown.prototype.render = function render() {
	    var _classes,
	        _this4 = this;

	    var _props = this.props,
	        Component = _props.componentClass,
	        id = _props.id,
	        dropup = _props.dropup,
	        disabled = _props.disabled,
	        pullRight = _props.pullRight,
	        open = _props.open,
	        onClose = _props.onClose,
	        onSelect = _props.onSelect,
	        role = _props.role,
	        bsClass = _props.bsClass,
	        className = _props.className,
	        rootCloseEvent = _props.rootCloseEvent,
	        children = _props.children,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'id', 'dropup', 'disabled', 'pullRight', 'open', 'onClose', 'onSelect', 'role', 'bsClass', 'className', 'rootCloseEvent', 'children']);


	    delete props.onToggle;

	    var classes = (_classes = {}, _classes[bsClass] = true, _classes.open = open, _classes.disabled = disabled, _classes);

	    if (dropup) {
	      classes[bsClass] = false;
	      classes.dropup = true;
	    }

	    // This intentionally forwards bsSize and bsStyle (if set) to the
	    // underlying component, to allow it to render size and style variants.

	    return _react2['default'].createElement(
	      Component,
	      (0, _extends3['default'])({}, props, {
	        className: (0, _classnames2['default'])(className, classes)
	      }),
	      _ValidComponentChildren2['default'].map(children, function (child) {
	        switch (child.props.bsRole) {
	          case TOGGLE_ROLE:
	            return _this4.renderToggle(child, {
	              id: id, disabled: disabled, open: open, role: role, bsClass: bsClass
	            });
	          case MENU_ROLE:
	            return _this4.renderMenu(child, {
	              id: id, open: open, pullRight: pullRight, bsClass: bsClass, onClose: onClose, onSelect: onSelect, rootCloseEvent: rootCloseEvent
	            });
	          default:
	            return child;
	        }
	      })
	    );
	  };

	  return Dropdown;
	}(_react2['default'].Component);

	Dropdown.propTypes = propTypes;
	Dropdown.defaultProps = defaultProps;

	(0, _bootstrapUtils.bsClass)('dropdown', Dropdown);

	var UncontrolledDropdown = (0, _uncontrollable2['default'])(Dropdown, { open: 'onToggle' });

	UncontrolledDropdown.Toggle = _DropdownToggle2['default'];
	UncontrolledDropdown.Menu = _DropdownMenu2['default'];

	exports['default'] = UncontrolledDropdown;
	module.exports = exports['default'];

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var babelHelpers = __webpack_require__(343);

	exports.__esModule = true;

	/**
	 * document.activeElement
	 */
	exports['default'] = activeElement;

	var _ownerDocument = __webpack_require__(360);

	var _ownerDocument2 = babelHelpers.interopRequireDefault(_ownerDocument);

	function activeElement() {
	  var doc = arguments[0] === undefined ? document : arguments[0];

	  try {
	    return doc.activeElement;
	  } catch (e) {}
	}

	module.exports = exports['default'];

/***/ },
/* 360 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = ownerDocument;

	function ownerDocument(node) {
	  return node && node.ownerDocument || document;
	}

	module.exports = exports["default"];

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var canUseDOM = __webpack_require__(362);

	var contains = (function () {
	  var root = canUseDOM && document.documentElement;

	  return root && root.contains ? function (context, node) {
	    return context.contains(node);
	  } : root && root.compareDocumentPosition ? function (context, node) {
	    return context === node || !!(context.compareDocumentPosition(node) & 16);
	  } : function (context, node) {
	    if (node) do {
	      if (node === context) return true;
	    } while (node = node.parentNode);

	    return false;
	  };
	})();

	module.exports = contains;

/***/ },
/* 362 */
/***/ function(module, exports) {

	'use strict';
	module.exports = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/***/ },
/* 363 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.default = isRequiredForA11y;
	function isRequiredForA11y(validator) {
	  return function validate(props, propName, componentName, location, propFullName) {
	    var componentNameSafe = componentName || '<<anonymous>>';
	    var propFullNameSafe = propFullName || propName;

	    if (props[propName] == null) {
	      return new Error('The ' + location + ' `' + propFullNameSafe + '` is required to make ' + ('`' + componentNameSafe + '` accessible for users of assistive ') + 'technologies such as screen readers.');
	    }

	    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
	      args[_key - 5] = arguments[_key];
	    }

	    return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));
	  };
	}

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends3 = __webpack_require__(237);

	var _extends4 = _interopRequireDefault(_extends3);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _all = __webpack_require__(355);

	var _all2 = _interopRequireDefault(_all);

	var _Button = __webpack_require__(365);

	var _Button2 = _interopRequireDefault(_Button);

	var _bootstrapUtils = __webpack_require__(328);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  vertical: _react2['default'].PropTypes.bool,
	  justified: _react2['default'].PropTypes.bool,

	  /**
	   * Display block buttons; only useful when used with the "vertical" prop.
	   * @type {bool}
	   */
	  block: (0, _all2['default'])(_react2['default'].PropTypes.bool, function (_ref) {
	    var block = _ref.block,
	        vertical = _ref.vertical;
	    return block && !vertical ? new Error('`block` requires `vertical` to be set to have any effect') : null;
	  })
	};

	var defaultProps = {
	  block: false,
	  justified: false,
	  vertical: false
	};

	var ButtonGroup = function (_React$Component) {
	  (0, _inherits3['default'])(ButtonGroup, _React$Component);

	  function ButtonGroup() {
	    (0, _classCallCheck3['default'])(this, ButtonGroup);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  ButtonGroup.prototype.render = function render() {
	    var _extends2;

	    var _props = this.props,
	        block = _props.block,
	        justified = _props.justified,
	        vertical = _props.vertical,
	        className = _props.className,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['block', 'justified', 'vertical', 'className']);

	    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
	        bsProps = _splitBsProps[0],
	        elementProps = _splitBsProps[1];

	    var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[(0, _bootstrapUtils.prefix)(bsProps)] = !vertical, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'vertical')] = vertical, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'justified')] = justified, _extends2[(0, _bootstrapUtils.prefix)(_Button2['default'].defaultProps, 'block')] = block, _extends2));

	    return _react2['default'].createElement('div', (0, _extends4['default'])({}, elementProps, {
	      className: (0, _classnames2['default'])(className, classes)
	    }));
	  };

	  return ButtonGroup;
	}(_react2['default'].Component);

	ButtonGroup.propTypes = propTypes;
	ButtonGroup.defaultProps = defaultProps;

	exports['default'] = (0, _bootstrapUtils.bsClass)('btn-group', ButtonGroup);
	module.exports = exports['default'];

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _values = __webpack_require__(366);

	var _values2 = _interopRequireDefault(_values);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _extends3 = __webpack_require__(237);

	var _extends4 = _interopRequireDefault(_extends3);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _elementType = __webpack_require__(322);

	var _elementType2 = _interopRequireDefault(_elementType);

	var _bootstrapUtils = __webpack_require__(328);

	var _StyleConfig = __webpack_require__(333);

	var _SafeAnchor = __webpack_require__(369);

	var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  active: _react2['default'].PropTypes.bool,
	  disabled: _react2['default'].PropTypes.bool,
	  block: _react2['default'].PropTypes.bool,
	  onClick: _react2['default'].PropTypes.func,
	  componentClass: _elementType2['default'],
	  href: _react2['default'].PropTypes.string,
	  /**
	   * Defines HTML button type attribute
	   * @defaultValue 'button'
	   */
	  type: _react2['default'].PropTypes.oneOf(['button', 'reset', 'submit'])
	};

	var defaultProps = {
	  active: false,
	  block: false,
	  disabled: false
	};

	var Button = function (_React$Component) {
	  (0, _inherits3['default'])(Button, _React$Component);

	  function Button() {
	    (0, _classCallCheck3['default'])(this, Button);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  Button.prototype.renderAnchor = function renderAnchor(elementProps, className) {
	    return _react2['default'].createElement(_SafeAnchor2['default'], (0, _extends4['default'])({}, elementProps, {
	      className: (0, _classnames2['default'])(className, elementProps.disabled && 'disabled')
	    }));
	  };

	  Button.prototype.renderButton = function renderButton(_ref, className) {
	    var componentClass = _ref.componentClass,
	        elementProps = (0, _objectWithoutProperties3['default'])(_ref, ['componentClass']);

	    var Component = componentClass || 'button';

	    return _react2['default'].createElement(Component, (0, _extends4['default'])({}, elementProps, {
	      type: elementProps.type || 'button',
	      className: className
	    }));
	  };

	  Button.prototype.render = function render() {
	    var _extends2;

	    var _props = this.props,
	        active = _props.active,
	        block = _props.block,
	        className = _props.className,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['active', 'block', 'className']);

	    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
	        bsProps = _splitBsProps[0],
	        elementProps = _splitBsProps[1];

	    var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {
	      active: active
	    }, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'block')] = block, _extends2));
	    var fullClassName = (0, _classnames2['default'])(className, classes);

	    if (elementProps.href) {
	      return this.renderAnchor(elementProps, fullClassName);
	    }

	    return this.renderButton(elementProps, fullClassName);
	  };

	  return Button;
	}(_react2['default'].Component);

	Button.propTypes = propTypes;
	Button.defaultProps = defaultProps;

	exports['default'] = (0, _bootstrapUtils.bsClass)('btn', (0, _bootstrapUtils.bsSizes)([_StyleConfig.Size.LARGE, _StyleConfig.Size.SMALL, _StyleConfig.Size.XSMALL], (0, _bootstrapUtils.bsStyles)([].concat((0, _values2['default'])(_StyleConfig.State), [_StyleConfig.Style.DEFAULT, _StyleConfig.Style.PRIMARY, _StyleConfig.Style.LINK]), _StyleConfig.Style.DEFAULT, Button)));
	module.exports = exports['default'];

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(367), __esModule: true };

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(368);
	module.exports = __webpack_require__(243).Object.values;

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export = __webpack_require__(241)
	  , $values = __webpack_require__(332)(false);

	$export($export.S, 'Object', {
	  values: function values(it){
	    return $values(it);
	  }
	});

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _elementType = __webpack_require__(322);

	var _elementType2 = _interopRequireDefault(_elementType);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  href: _react2['default'].PropTypes.string,
	  onClick: _react2['default'].PropTypes.func,
	  disabled: _react2['default'].PropTypes.bool,
	  role: _react2['default'].PropTypes.string,
	  tabIndex: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.string]),
	  /**
	   * this is sort of silly but needed for Button
	   */
	  componentClass: _elementType2['default']
	};

	var defaultProps = {
	  componentClass: 'a'
	};

	function isTrivialHref(href) {
	  return !href || href.trim() === '#';
	}

	/**
	 * There are situations due to browser quirks or Bootstrap CSS where
	 * an anchor tag is needed, when semantically a button tag is the
	 * better choice. SafeAnchor ensures that when an anchor is used like a
	 * button its accessible. It also emulates input `disabled` behavior for
	 * links, which is usually desirable for Buttons, NavItems, MenuItems, etc.
	 */

	var SafeAnchor = function (_React$Component) {
	  (0, _inherits3['default'])(SafeAnchor, _React$Component);

	  function SafeAnchor(props, context) {
	    (0, _classCallCheck3['default'])(this, SafeAnchor);

	    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));

	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }

	  SafeAnchor.prototype.handleClick = function handleClick(event) {
	    var _props = this.props,
	        disabled = _props.disabled,
	        href = _props.href,
	        onClick = _props.onClick;


	    if (disabled || isTrivialHref(href)) {
	      event.preventDefault();
	    }

	    if (disabled) {
	      event.stopPropagation();
	      return;
	    }

	    if (onClick) {
	      onClick(event);
	    }
	  };

	  SafeAnchor.prototype.render = function render() {
	    var _props2 = this.props,
	        Component = _props2.componentClass,
	        disabled = _props2.disabled,
	        props = (0, _objectWithoutProperties3['default'])(_props2, ['componentClass', 'disabled']);


	    if (isTrivialHref(props.href)) {
	      props.role = props.role || 'button';
	      // we want to make sure there is a href attribute on the node
	      // otherwise, the cursor incorrectly styled (except with role='button')
	      props.href = props.href || '#';
	    }

	    if (disabled) {
	      props.tabIndex = -1;
	      props.style = (0, _extends3['default'])({ pointerEvents: 'none' }, props.style);
	    }

	    return _react2['default'].createElement(Component, (0, _extends3['default'])({}, props, {
	      onClick: this.handleClick
	    }));
	  };

	  return SafeAnchor;
	}(_react2['default'].Component);

	SafeAnchor.propTypes = propTypes;
	SafeAnchor.defaultProps = defaultProps;

	exports['default'] = SafeAnchor;
	module.exports = exports['default'];

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends3 = __webpack_require__(237);

	var _extends4 = _interopRequireDefault(_extends3);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _from = __webpack_require__(371);

	var _from2 = _interopRequireDefault(_from);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _keycode = __webpack_require__(354);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(28);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _RootCloseWrapper = __webpack_require__(380);

	var _RootCloseWrapper2 = _interopRequireDefault(_RootCloseWrapper);

	var _bootstrapUtils = __webpack_require__(328);

	var _createChainedFunction = __webpack_require__(350);

	var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

	var _ValidComponentChildren = __webpack_require__(356);

	var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  open: _react2['default'].PropTypes.bool,
	  pullRight: _react2['default'].PropTypes.bool,
	  onClose: _react2['default'].PropTypes.func,
	  labelledBy: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.number]),
	  onSelect: _react2['default'].PropTypes.func,
	  rootCloseEvent: _react2['default'].PropTypes.oneOf(['click', 'mousedown'])
	};

	var defaultProps = {
	  bsRole: 'menu',
	  pullRight: false
	};

	var DropdownMenu = function (_React$Component) {
	  (0, _inherits3['default'])(DropdownMenu, _React$Component);

	  function DropdownMenu(props) {
	    (0, _classCallCheck3['default'])(this, DropdownMenu);

	    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));

	    _this.handleKeyDown = _this.handleKeyDown.bind(_this);
	    return _this;
	  }

	  DropdownMenu.prototype.handleKeyDown = function handleKeyDown(event) {
	    switch (event.keyCode) {
	      case _keycode2['default'].codes.down:
	        this.focusNext();
	        event.preventDefault();
	        break;
	      case _keycode2['default'].codes.up:
	        this.focusPrevious();
	        event.preventDefault();
	        break;
	      case _keycode2['default'].codes.esc:
	      case _keycode2['default'].codes.tab:
	        this.props.onClose(event);
	        break;
	      default:
	    }
	  };

	  DropdownMenu.prototype.getItemsAndActiveIndex = function getItemsAndActiveIndex() {
	    var items = this.getFocusableMenuItems();
	    var activeIndex = items.indexOf(document.activeElement);

	    return { items: items, activeIndex: activeIndex };
	  };

	  DropdownMenu.prototype.getFocusableMenuItems = function getFocusableMenuItems() {
	    var node = _reactDom2['default'].findDOMNode(this);
	    if (!node) {
	      return [];
	    }

	    return (0, _from2['default'])(node.querySelectorAll('[tabIndex="-1"]'));
	  };

	  DropdownMenu.prototype.focusNext = function focusNext() {
	    var _getItemsAndActiveInd = this.getItemsAndActiveIndex(),
	        items = _getItemsAndActiveInd.items,
	        activeIndex = _getItemsAndActiveInd.activeIndex;

	    if (items.length === 0) {
	      return;
	    }

	    var nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;
	    items[nextIndex].focus();
	  };

	  DropdownMenu.prototype.focusPrevious = function focusPrevious() {
	    var _getItemsAndActiveInd2 = this.getItemsAndActiveIndex(),
	        items = _getItemsAndActiveInd2.items,
	        activeIndex = _getItemsAndActiveInd2.activeIndex;

	    if (items.length === 0) {
	      return;
	    }

	    var prevIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;
	    items[prevIndex].focus();
	  };

	  DropdownMenu.prototype.render = function render() {
	    var _extends2,
	        _this2 = this;

	    var _props = this.props,
	        open = _props.open,
	        pullRight = _props.pullRight,
	        onClose = _props.onClose,
	        labelledBy = _props.labelledBy,
	        onSelect = _props.onSelect,
	        className = _props.className,
	        rootCloseEvent = _props.rootCloseEvent,
	        children = _props.children,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['open', 'pullRight', 'onClose', 'labelledBy', 'onSelect', 'className', 'rootCloseEvent', 'children']);

	    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
	        bsProps = _splitBsProps[0],
	        elementProps = _splitBsProps[1];

	    var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'right')] = pullRight, _extends2));

	    return _react2['default'].createElement(
	      _RootCloseWrapper2['default'],
	      {
	        disabled: !open,
	        onRootClose: onClose,
	        event: rootCloseEvent
	      },
	      _react2['default'].createElement(
	        'ul',
	        (0, _extends4['default'])({}, elementProps, {
	          role: 'menu',
	          className: (0, _classnames2['default'])(className, classes),
	          'aria-labelledby': labelledBy
	        }),
	        _ValidComponentChildren2['default'].map(children, function (child) {
	          return _react2['default'].cloneElement(child, {
	            onKeyDown: (0, _createChainedFunction2['default'])(child.props.onKeyDown, _this2.handleKeyDown),
	            onSelect: (0, _createChainedFunction2['default'])(child.props.onSelect, onSelect)
	          });
	        })
	      )
	    );
	  };

	  return DropdownMenu;
	}(_react2['default'].Component);

	DropdownMenu.propTypes = propTypes;
	DropdownMenu.defaultProps = defaultProps;

	exports['default'] = (0, _bootstrapUtils.bsClass)('dropdown-menu', DropdownMenu);
	module.exports = exports['default'];

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(372), __esModule: true };

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(281);
	__webpack_require__(373);
	module.exports = __webpack_require__(243).Array.from;

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(244)
	  , $export        = __webpack_require__(241)
	  , toObject       = __webpack_require__(274)
	  , call           = __webpack_require__(374)
	  , isArrayIter    = __webpack_require__(375)
	  , toLength       = __webpack_require__(265)
	  , createProperty = __webpack_require__(376)
	  , getIterFn      = __webpack_require__(377);

	$export($export.S + $export.F * !__webpack_require__(379)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(248);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(286)
	  , ITERATOR   = __webpack_require__(292)('iterator')
	  , ArrayProto = Array.prototype;

	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(247)
	  , createDesc      = __webpack_require__(255);

	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(378)
	  , ITERATOR  = __webpack_require__(292)('iterator')
	  , Iterators = __webpack_require__(286);
	module.exports = __webpack_require__(243).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(262)
	  , TAG = __webpack_require__(292)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};

	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(292)('iterator')
	  , SAFE_CLOSING = false;

	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }

	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _contains = __webpack_require__(381);

	var _contains2 = _interopRequireDefault(_contains);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(28);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _addEventListener = __webpack_require__(382);

	var _addEventListener2 = _interopRequireDefault(_addEventListener);

	var _ownerDocument = __webpack_require__(384);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var escapeKeyCode = 27;

	function isLeftClickEvent(event) {
	  return event.button === 0;
	}

	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}

	var RootCloseWrapper = function (_React$Component) {
	  _inherits(RootCloseWrapper, _React$Component);

	  function RootCloseWrapper(props, context) {
	    _classCallCheck(this, RootCloseWrapper);

	    var _this = _possibleConstructorReturn(this, (RootCloseWrapper.__proto__ || Object.getPrototypeOf(RootCloseWrapper)).call(this, props, context));

	    _this.handleMouseCapture = function (e) {
	      _this.preventMouseRootClose = isModifiedEvent(e) || !isLeftClickEvent(e) || (0, _contains2.default)(_reactDom2.default.findDOMNode(_this), e.target);
	    };

	    _this.handleMouse = function (e) {
	      if (!_this.preventMouseRootClose && _this.props.onRootClose) {
	        _this.props.onRootClose(e);
	      }
	    };

	    _this.handleKeyUp = function (e) {
	      if (e.keyCode === escapeKeyCode && _this.props.onRootClose) {
	        _this.props.onRootClose(e);
	      }
	    };

	    _this.preventMouseRootClose = false;
	    return _this;
	  }

	  _createClass(RootCloseWrapper, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (!this.props.disabled) {
	        this.addEventListeners();
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps) {
	      if (!this.props.disabled && prevProps.disabled) {
	        this.addEventListeners();
	      } else if (this.props.disabled && !prevProps.disabled) {
	        this.removeEventListeners();
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      if (!this.props.disabled) {
	        this.removeEventListeners();
	      }
	    }
	  }, {
	    key: 'addEventListeners',
	    value: function addEventListeners() {
	      var event = this.props.event;

	      var doc = (0, _ownerDocument2.default)(this);

	      // Use capture for this listener so it fires before React's listener, to
	      // avoid false positives in the contains() check below if the target DOM
	      // element is removed in the React mouse callback.
	      this.documentMouseCaptureListener = (0, _addEventListener2.default)(doc, event, this.handleMouseCapture, true);

	      this.documentMouseListener = (0, _addEventListener2.default)(doc, event, this.handleMouse);

	      this.documentKeyupListener = (0, _addEventListener2.default)(doc, 'keyup', this.handleKeyUp);
	    }
	  }, {
	    key: 'removeEventListeners',
	    value: function removeEventListeners() {
	      if (this.documentMouseCaptureListener) {
	        this.documentMouseCaptureListener.remove();
	      }

	      if (this.documentMouseListener) {
	        this.documentMouseListener.remove();
	      }

	      if (this.documentKeyupListener) {
	        this.documentKeyupListener.remove();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return this.props.children;
	    }
	  }]);

	  return RootCloseWrapper;
	}(_react2.default.Component);

	exports.default = RootCloseWrapper;


	RootCloseWrapper.displayName = 'RootCloseWrapper';

	RootCloseWrapper.propTypes = {
	  onRootClose: _react2.default.PropTypes.func,
	  children: _react2.default.PropTypes.element,

	  /**
	   * Disable the the RootCloseWrapper, preventing it from triggering
	   * `onRootClose`.
	   */
	  disabled: _react2.default.PropTypes.bool,
	  /**
	   * Choose which document mouse event to bind to
	   */
	  event: _react2.default.PropTypes.oneOf(['click', 'mousedown'])
	};

	RootCloseWrapper.defaultProps = {
	  event: 'click'
	};
	module.exports = exports['default'];

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _inDOM = __webpack_require__(347);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  // HTML DOM and SVG DOM may have different support levels,
	  // so we need to check on context instead of a document root element.
	  return _inDOM2.default ? function (context, node) {
	    if (context.contains) {
	      return context.contains(node);
	    } else if (context.compareDocumentPosition) {
	      return context === node || !!(context.compareDocumentPosition(node) & 16);
	    } else {
	      return fallback(context, node);
	    }
	  } : fallback;
	}();

	function fallback(context, node) {
	  if (node) do {
	    if (node === context) return true;
	  } while (node = node.parentNode);

	  return false;
	}
	module.exports = exports['default'];

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (node, event, handler, capture) {
	  (0, _on2.default)(node, event, handler, capture);

	  return {
	    remove: function remove() {
	      (0, _off2.default)(node, event, handler, capture);
	    }
	  };
	};

	var _on = __webpack_require__(348);

	var _on2 = _interopRequireDefault(_on);

	var _off = __webpack_require__(383);

	var _off2 = _interopRequireDefault(_off);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports['default'];

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _inDOM = __webpack_require__(347);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var off = function off() {};
	if (_inDOM2.default) {
	  off = function () {
	    if (document.addEventListener) return function (node, eventName, handler, capture) {
	      return node.removeEventListener(eventName, handler, capture || false);
	    };else if (document.attachEvent) return function (node, eventName, handler) {
	      return node.detachEvent('on' + eventName, handler);
	    };
	  }();
	}

	exports.default = off;
	module.exports = exports['default'];

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (componentOrElement) {
	  return (0, _ownerDocument2.default)(_reactDom2.default.findDOMNode(componentOrElement));
	};

	var _reactDom = __webpack_require__(28);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _ownerDocument = __webpack_require__(385);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports['default'];

/***/ },
/* 385 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = ownerDocument;
	function ownerDocument(node) {
	  return node && node.ownerDocument || document;
	}
	module.exports = exports["default"];

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _Button = __webpack_require__(365);

	var _Button2 = _interopRequireDefault(_Button);

	var _SafeAnchor = __webpack_require__(369);

	var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

	var _bootstrapUtils = __webpack_require__(328);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  noCaret: _react2['default'].PropTypes.bool,
	  open: _react2['default'].PropTypes.bool,
	  title: _react2['default'].PropTypes.string,
	  useAnchor: _react2['default'].PropTypes.bool
	};

	var defaultProps = {
	  open: false,
	  useAnchor: false,
	  bsRole: 'toggle'
	};

	var DropdownToggle = function (_React$Component) {
	  (0, _inherits3['default'])(DropdownToggle, _React$Component);

	  function DropdownToggle() {
	    (0, _classCallCheck3['default'])(this, DropdownToggle);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  DropdownToggle.prototype.render = function render() {
	    var _props = this.props,
	        noCaret = _props.noCaret,
	        open = _props.open,
	        useAnchor = _props.useAnchor,
	        bsClass = _props.bsClass,
	        className = _props.className,
	        children = _props.children,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['noCaret', 'open', 'useAnchor', 'bsClass', 'className', 'children']);


	    delete props.bsRole;

	    var Component = useAnchor ? _SafeAnchor2['default'] : _Button2['default'];
	    var useCaret = !noCaret;

	    // This intentionally forwards bsSize and bsStyle (if set) to the
	    // underlying component, to allow it to render size and style variants.

	    // FIXME: Should this really fall back to `title` as children?

	    return _react2['default'].createElement(
	      Component,
	      (0, _extends3['default'])({}, props, {
	        role: 'button',
	        className: (0, _classnames2['default'])(className, bsClass),
	        'aria-haspopup': true,
	        'aria-expanded': open
	      }),
	      children || props.title,
	      useCaret && ' ',
	      useCaret && _react2['default'].createElement('span', { className: 'caret' })
	    );
	  };

	  return DropdownToggle;
	}(_react2['default'].Component);

	DropdownToggle.propTypes = propTypes;
	DropdownToggle.defaultProps = defaultProps;

	exports['default'] = (0, _bootstrapUtils.bsClass)('dropdown-toggle', DropdownToggle);
	module.exports = exports['default'];

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.requiredRoles = requiredRoles;
	exports.exclusiveRoles = exclusiveRoles;

	var _createChainableTypeChecker = __webpack_require__(323);

	var _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);

	var _ValidComponentChildren = __webpack_require__(356);

	var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function requiredRoles() {
	  for (var _len = arguments.length, roles = Array(_len), _key = 0; _key < _len; _key++) {
	    roles[_key] = arguments[_key];
	  }

	  return (0, _createChainableTypeChecker2['default'])(function (props, propName, component) {
	    var missing = void 0;

	    roles.every(function (role) {
	      if (!_ValidComponentChildren2['default'].some(props.children, function (child) {
	        return child.props.bsRole === role;
	      })) {
	        missing = role;
	        return false;
	      }

	      return true;
	    });

	    if (missing) {
	      return new Error('(children) ' + component + ' - Missing a required child with bsRole: ' + (missing + '. ' + component + ' must have at least one child of each of ') + ('the following bsRoles: ' + roles.join(', ')));
	    }

	    return null;
	  });
	}

	function exclusiveRoles() {
	  for (var _len2 = arguments.length, roles = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	    roles[_key2] = arguments[_key2];
	  }

	  return (0, _createChainableTypeChecker2['default'])(function (props, propName, component) {
	    var duplicate = void 0;

	    roles.every(function (role) {
	      var childrenWithRole = _ValidComponentChildren2['default'].filter(props.children, function (child) {
	        return child.props.bsRole === role;
	      });

	      if (childrenWithRole.length > 1) {
	        duplicate = role;
	        return false;
	      }

	      return true;
	    });

	    if (duplicate) {
	      return new Error('(children) ' + component + ' - Duplicate children detected of bsRole: ' + (duplicate + '. Only one child each allowed with the following ') + ('bsRoles: ' + roles.join(', ')));
	    }

	    return null;
	  });
	}

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _entries = __webpack_require__(329);

	var _entries2 = _interopRequireDefault(_entries);

	exports["default"] = splitComponentProps;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	function splitComponentProps(props, Component) {
	  var componentPropTypes = Component.propTypes;

	  var parentProps = {};
	  var childProps = {};

	  (0, _entries2["default"])(props).forEach(function (_ref) {
	    var propName = _ref[0],
	        propValue = _ref[1];

	    if (componentPropTypes[propName]) {
	      parentProps[propName] = propValue;
	    } else {
	      childProps[propName] = propValue;
	    }
	  });

	  return [parentProps, childProps];
	}
	module.exports = exports["default"];

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _all = __webpack_require__(355);

	var _all2 = _interopRequireDefault(_all);

	var _SafeAnchor = __webpack_require__(369);

	var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

	var _bootstrapUtils = __webpack_require__(328);

	var _createChainedFunction = __webpack_require__(350);

	var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  /**
	   * Highlight the menu item as active.
	   */
	  active: _react2['default'].PropTypes.bool,

	  /**
	   * Disable the menu item, making it unselectable.
	   */
	  disabled: _react2['default'].PropTypes.bool,

	  /**
	   * Styles the menu item as a horizontal rule, providing visual separation between
	   * groups of menu items.
	   */
	  divider: (0, _all2['default'])(_react2['default'].PropTypes.bool, function (_ref) {
	    var divider = _ref.divider,
	        children = _ref.children;
	    return divider && children ? new Error('Children will not be rendered for dividers') : null;
	  }),

	  /**
	   * Value passed to the `onSelect` handler, useful for identifying the selected menu item.
	   */
	  eventKey: _react2['default'].PropTypes.any,

	  /**
	   * Styles the menu item as a header label, useful for describing a group of menu items.
	   */
	  header: _react2['default'].PropTypes.bool,

	  /**
	   * HTML `href` attribute corresponding to `a.href`.
	   */
	  href: _react2['default'].PropTypes.string,

	  /**
	   * Callback fired when the menu item is clicked.
	   */
	  onClick: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired when the menu item is selected.
	   *
	   * ```js
	   * (eventKey: any, event: Object) => any
	   * ```
	   */
	  onSelect: _react2['default'].PropTypes.func
	};

	var defaultProps = {
	  divider: false,
	  disabled: false,
	  header: false
	};

	var MenuItem = function (_React$Component) {
	  (0, _inherits3['default'])(MenuItem, _React$Component);

	  function MenuItem(props, context) {
	    (0, _classCallCheck3['default'])(this, MenuItem);

	    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));

	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }

	  MenuItem.prototype.handleClick = function handleClick(event) {
	    var _props = this.props,
	        href = _props.href,
	        disabled = _props.disabled,
	        onSelect = _props.onSelect,
	        eventKey = _props.eventKey;


	    if (!href || disabled) {
	      event.preventDefault();
	    }

	    if (disabled) {
	      return;
	    }

	    if (onSelect) {
	      onSelect(eventKey, event);
	    }
	  };

	  MenuItem.prototype.render = function render() {
	    var _props2 = this.props,
	        active = _props2.active,
	        disabled = _props2.disabled,
	        divider = _props2.divider,
	        header = _props2.header,
	        onClick = _props2.onClick,
	        className = _props2.className,
	        style = _props2.style,
	        props = (0, _objectWithoutProperties3['default'])(_props2, ['active', 'disabled', 'divider', 'header', 'onClick', 'className', 'style']);

	    var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(props, ['eventKey', 'onSelect']),
	        bsProps = _splitBsPropsAndOmit[0],
	        elementProps = _splitBsPropsAndOmit[1];

	    if (divider) {
	      // Forcibly blank out the children; separators shouldn't render any.
	      elementProps.children = undefined;

	      return _react2['default'].createElement('li', (0, _extends3['default'])({}, elementProps, {
	        role: 'separator',
	        className: (0, _classnames2['default'])(className, 'divider'),
	        style: style
	      }));
	    }

	    if (header) {
	      return _react2['default'].createElement('li', (0, _extends3['default'])({}, elementProps, {
	        role: 'heading',
	        className: (0, _classnames2['default'])(className, (0, _bootstrapUtils.prefix)(bsProps, 'header')),
	        style: style
	      }));
	    }

	    return _react2['default'].createElement(
	      'li',
	      {
	        role: 'presentation',
	        className: (0, _classnames2['default'])(className, { active: active, disabled: disabled }),
	        style: style
	      },
	      _react2['default'].createElement(_SafeAnchor2['default'], (0, _extends3['default'])({}, elementProps, {
	        role: 'menuitem',
	        tabIndex: '-1',
	        onClick: (0, _createChainedFunction2['default'])(onClick, this.handleClick)
	      }))
	    );
	  };

	  return MenuItem;
	}(_react2['default'].Component);

	MenuItem.propTypes = propTypes;
	MenuItem.defaultProps = defaultProps;

	exports['default'] = (0, _bootstrapUtils.bsClass)('dropdown', MenuItem);
	module.exports = exports['default'];

/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _SafeAnchor = __webpack_require__(369);

	var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

	var _createChainedFunction = __webpack_require__(350);

	var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  active: _react2['default'].PropTypes.bool,
	  disabled: _react2['default'].PropTypes.bool,
	  role: _react2['default'].PropTypes.string,
	  href: _react2['default'].PropTypes.string,
	  onClick: _react2['default'].PropTypes.func,
	  onSelect: _react2['default'].PropTypes.func,
	  eventKey: _react2['default'].PropTypes.any
	};

	var defaultProps = {
	  active: false,
	  disabled: false
	};

	var NavItem = function (_React$Component) {
	  (0, _inherits3['default'])(NavItem, _React$Component);

	  function NavItem(props, context) {
	    (0, _classCallCheck3['default'])(this, NavItem);

	    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));

	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }

	  NavItem.prototype.handleClick = function handleClick(e) {
	    if (this.props.onSelect) {
	      e.preventDefault();

	      if (!this.props.disabled) {
	        this.props.onSelect(this.props.eventKey, e);
	      }
	    }
	  };

	  NavItem.prototype.render = function render() {
	    var _props = this.props,
	        active = _props.active,
	        disabled = _props.disabled,
	        onClick = _props.onClick,
	        className = _props.className,
	        style = _props.style,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['active', 'disabled', 'onClick', 'className', 'style']);


	    delete props.onSelect;
	    delete props.eventKey;

	    // These are injected down by `<Nav>` for building `<SubNav>`s.
	    delete props.activeKey;
	    delete props.activeHref;

	    if (!props.role) {
	      if (props.href === '#') {
	        props.role = 'button';
	      }
	    } else if (props.role === 'tab') {
	      props['aria-selected'] = active;
	    }

	    return _react2['default'].createElement(
	      'li',
	      {
	        role: 'presentation',
	        className: (0, _classnames2['default'])(className, { active: active, disabled: disabled }),
	        style: style
	      },
	      _react2['default'].createElement(_SafeAnchor2['default'], (0, _extends3['default'])({}, props, {
	        disabled: disabled,
	        onClick: (0, _createChainedFunction2['default'])(onClick, this.handleClick)
	      }))
	    );
	  };

	  return NavItem;
	}(_react2['default'].Component);

	NavItem.propTypes = propTypes;
	NavItem.defaultProps = defaultProps;

	exports['default'] = NavItem;
	module.exports = exports['default'];

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _elementType = __webpack_require__(322);

	var _elementType2 = _interopRequireDefault(_elementType);

	var _bootstrapUtils = __webpack_require__(328);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  componentClass: _elementType2['default']
	};

	var defaultProps = {
	  componentClass: 'div'
	};

	var Row = function (_React$Component) {
	  (0, _inherits3['default'])(Row, _React$Component);

	  function Row() {
	    (0, _classCallCheck3['default'])(this, Row);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  Row.prototype.render = function render() {
	    var _props = this.props,
	        Component = _props.componentClass,
	        className = _props.className,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);

	    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
	        bsProps = _splitBsProps[0],
	        elementProps = _splitBsProps[1];

	    var classes = (0, _bootstrapUtils.getClassSet)(bsProps);

	    return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, {
	      className: (0, _classnames2['default'])(className, classes)
	    }));
	  };

	  return Row;
	}(_react2['default'].Component);

	Row.propTypes = propTypes;
	Row.defaultProps = defaultProps;

	exports['default'] = (0, _bootstrapUtils.bsClass)('row', Row);
	module.exports = exports['default'];

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _elementType = __webpack_require__(322);

	var _elementType2 = _interopRequireDefault(_elementType);

	var _bootstrapUtils = __webpack_require__(328);

	var _StyleConfig = __webpack_require__(333);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  componentClass: _elementType2['default'],

	  /**
	   * The number of columns you wish to span
	   *
	   * for Extra small devices Phones (<768px)
	   *
	   * class-prefix `col-xs-`
	   */
	  xs: _react2['default'].PropTypes.number,
	  /**
	   * The number of columns you wish to span
	   *
	   * for Small devices Tablets (≥768px)
	   *
	   * class-prefix `col-sm-`
	   */
	  sm: _react2['default'].PropTypes.number,
	  /**
	   * The number of columns you wish to span
	   *
	   * for Medium devices Desktops (≥992px)
	   *
	   * class-prefix `col-md-`
	   */
	  md: _react2['default'].PropTypes.number,
	  /**
	   * The number of columns you wish to span
	   *
	   * for Large devices Desktops (≥1200px)
	   *
	   * class-prefix `col-lg-`
	   */
	  lg: _react2['default'].PropTypes.number,
	  /**
	   * Hide column
	   *
	   * on Extra small devices Phones
	   *
	   * adds class `hidden-xs`
	   */
	  xsHidden: _react2['default'].PropTypes.bool,
	  /**
	   * Hide column
	   *
	   * on Small devices Tablets
	   *
	   * adds class `hidden-sm`
	   */
	  smHidden: _react2['default'].PropTypes.bool,
	  /**
	   * Hide column
	   *
	   * on Medium devices Desktops
	   *
	   * adds class `hidden-md`
	   */
	  mdHidden: _react2['default'].PropTypes.bool,
	  /**
	   * Hide column
	   *
	   * on Large devices Desktops
	   *
	   * adds class `hidden-lg`
	   */
	  lgHidden: _react2['default'].PropTypes.bool,
	  /**
	   * Move columns to the right
	   *
	   * for Extra small devices Phones
	   *
	   * class-prefix `col-xs-offset-`
	   */
	  xsOffset: _react2['default'].PropTypes.number,
	  /**
	   * Move columns to the right
	   *
	   * for Small devices Tablets
	   *
	   * class-prefix `col-sm-offset-`
	   */
	  smOffset: _react2['default'].PropTypes.number,
	  /**
	   * Move columns to the right
	   *
	   * for Medium devices Desktops
	   *
	   * class-prefix `col-md-offset-`
	   */
	  mdOffset: _react2['default'].PropTypes.number,
	  /**
	   * Move columns to the right
	   *
	   * for Large devices Desktops
	   *
	   * class-prefix `col-lg-offset-`
	   */
	  lgOffset: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the right
	   *
	   * for Extra small devices Phones
	   *
	   * class-prefix `col-xs-push-`
	   */
	  xsPush: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the right
	   *
	   * for Small devices Tablets
	   *
	   * class-prefix `col-sm-push-`
	   */
	  smPush: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the right
	   *
	   * for Medium devices Desktops
	   *
	   * class-prefix `col-md-push-`
	   */
	  mdPush: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the right
	   *
	   * for Large devices Desktops
	   *
	   * class-prefix `col-lg-push-`
	   */
	  lgPush: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the left
	   *
	   * for Extra small devices Phones
	   *
	   * class-prefix `col-xs-pull-`
	   */
	  xsPull: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the left
	   *
	   * for Small devices Tablets
	   *
	   * class-prefix `col-sm-pull-`
	   */
	  smPull: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the left
	   *
	   * for Medium devices Desktops
	   *
	   * class-prefix `col-md-pull-`
	   */
	  mdPull: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the left
	   *
	   * for Large devices Desktops
	   *
	   * class-prefix `col-lg-pull-`
	   */
	  lgPull: _react2['default'].PropTypes.number
	};

	var defaultProps = {
	  componentClass: 'div'
	};

	var Col = function (_React$Component) {
	  (0, _inherits3['default'])(Col, _React$Component);

	  function Col() {
	    (0, _classCallCheck3['default'])(this, Col);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  Col.prototype.render = function render() {
	    var _props = this.props,
	        Component = _props.componentClass,
	        className = _props.className,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);

	    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
	        bsProps = _splitBsProps[0],
	        elementProps = _splitBsProps[1];

	    var classes = [];

	    _StyleConfig.DEVICE_SIZES.forEach(function (size) {
	      function popProp(propSuffix, modifier) {
	        var propName = '' + size + propSuffix;
	        var propValue = elementProps[propName];

	        if (propValue != null) {
	          classes.push((0, _bootstrapUtils.prefix)(bsProps, '' + size + modifier + '-' + propValue));
	        }

	        delete elementProps[propName];
	      }

	      popProp('', '');
	      popProp('Offset', '-offset');
	      popProp('Push', '-push');
	      popProp('Pull', '-pull');

	      var hiddenPropName = size + 'Hidden';
	      if (elementProps[hiddenPropName]) {
	        classes.push('hidden-' + size);
	      }
	      delete elementProps[hiddenPropName];
	    });

	    return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, {
	      className: (0, _classnames2['default'])(className, classes)
	    }));
	  };

	  return Col;
	}(_react2['default'].Component);

	Col.propTypes = propTypes;
	Col.defaultProps = defaultProps;

	exports['default'] = (0, _bootstrapUtils.bsClass)('col', Col);
	module.exports = exports['default'];

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _events = __webpack_require__(394);

	var _events2 = _interopRequireDefault(_events);

	var _ownerDocument = __webpack_require__(360);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	var _inDOM = __webpack_require__(362);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	var _scrollbarSize = __webpack_require__(399);

	var _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(28);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _Modal = __webpack_require__(400);

	var _Modal2 = _interopRequireDefault(_Modal);

	var _isOverflowing = __webpack_require__(418);

	var _isOverflowing2 = _interopRequireDefault(_isOverflowing);

	var _elementType = __webpack_require__(322);

	var _elementType2 = _interopRequireDefault(_elementType);

	var _Fade = __webpack_require__(423);

	var _Fade2 = _interopRequireDefault(_Fade);

	var _ModalBody = __webpack_require__(424);

	var _ModalBody2 = _interopRequireDefault(_ModalBody);

	var _ModalDialog = __webpack_require__(425);

	var _ModalDialog2 = _interopRequireDefault(_ModalDialog);

	var _ModalFooter = __webpack_require__(426);

	var _ModalFooter2 = _interopRequireDefault(_ModalFooter);

	var _ModalHeader = __webpack_require__(427);

	var _ModalHeader2 = _interopRequireDefault(_ModalHeader);

	var _ModalTitle = __webpack_require__(428);

	var _ModalTitle2 = _interopRequireDefault(_ModalTitle);

	var _bootstrapUtils = __webpack_require__(328);

	var _createChainedFunction = __webpack_require__(350);

	var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

	var _splitComponentProps2 = __webpack_require__(388);

	var _splitComponentProps3 = _interopRequireDefault(_splitComponentProps2);

	var _StyleConfig = __webpack_require__(333);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = (0, _extends3['default'])({}, _Modal2['default'].propTypes, _ModalDialog2['default'].propTypes, {

	  /**
	   * Include a backdrop component. Specify 'static' for a backdrop that doesn't
	   * trigger an "onHide" when clicked.
	   */
	  backdrop: _react2['default'].PropTypes.oneOf(['static', true, false]),

	  /**
	   * Close the modal when escape key is pressed
	   */
	  keyboard: _react2['default'].PropTypes.bool,

	  /**
	   * Open and close the Modal with a slide and fade animation.
	   */
	  animation: _react2['default'].PropTypes.bool,

	  /**
	   * A Component type that provides the modal content Markup. This is a useful
	   * prop when you want to use your own styles and markup to create a custom
	   * modal component.
	   */
	  dialogComponentClass: _elementType2['default'],

	  /**
	   * When `true` The modal will automatically shift focus to itself when it
	   * opens, and replace it to the last focused element when it closes.
	   * Generally this should never be set to false as it makes the Modal less
	   * accessible to assistive technologies, like screen-readers.
	   */
	  autoFocus: _react2['default'].PropTypes.bool,

	  /**
	   * When `true` The modal will prevent focus from leaving the Modal while
	   * open. Consider leaving the default value here, as it is necessary to make
	   * the Modal work well with assistive technologies, such as screen readers.
	   */
	  enforceFocus: _react2['default'].PropTypes.bool,

	  /**
	   * When `true` The modal will show itself.
	   */
	  show: _react2['default'].PropTypes.bool,

	  /**
	   * A callback fired when the header closeButton or non-static backdrop is
	   * clicked. Required if either are specified.
	   */
	  onHide: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired before the Modal transitions in
	   */
	  onEnter: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired as the Modal begins to transition in
	   */
	  onEntering: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired after the Modal finishes transitioning in
	   */
	  onEntered: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired right before the Modal transitions out
	   */
	  onExit: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired as the Modal begins to transition out
	   */
	  onExiting: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired after the Modal finishes transitioning out
	   */
	  onExited: _react2['default'].PropTypes.func,

	  /**
	   * @private
	   */
	  container: _Modal2['default'].propTypes.container
	});

	var defaultProps = (0, _extends3['default'])({}, _Modal2['default'].defaultProps, {
	  animation: true,
	  dialogComponentClass: _ModalDialog2['default']
	});

	var childContextTypes = {
	  $bs_modal: _react2['default'].PropTypes.shape({
	    onHide: _react2['default'].PropTypes.func
	  })
	};

	var Modal = function (_React$Component) {
	  (0, _inherits3['default'])(Modal, _React$Component);

	  function Modal(props, context) {
	    (0, _classCallCheck3['default'])(this, Modal);

	    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));

	    _this.handleEntering = _this.handleEntering.bind(_this);
	    _this.handleExited = _this.handleExited.bind(_this);
	    _this.handleWindowResize = _this.handleWindowResize.bind(_this);
	    _this.handleDialogClick = _this.handleDialogClick.bind(_this);

	    _this.state = {
	      style: {}
	    };
	    return _this;
	  }

	  Modal.prototype.getChildContext = function getChildContext() {
	    return {
	      $bs_modal: {
	        onHide: this.props.onHide
	      }
	    };
	  };

	  Modal.prototype.componentWillUnmount = function componentWillUnmount() {
	    // Clean up the listener if we need to.
	    this.handleExited();
	  };

	  Modal.prototype.handleEntering = function handleEntering() {
	    // FIXME: This should work even when animation is disabled.
	    _events2['default'].on(window, 'resize', this.handleWindowResize);
	    this.updateStyle();
	  };

	  Modal.prototype.handleExited = function handleExited() {
	    // FIXME: This should work even when animation is disabled.
	    _events2['default'].off(window, 'resize', this.handleWindowResize);
	  };

	  Modal.prototype.handleWindowResize = function handleWindowResize() {
	    this.updateStyle();
	  };

	  Modal.prototype.handleDialogClick = function handleDialogClick(e) {
	    if (e.target !== e.currentTarget) {
	      return;
	    }

	    this.props.onHide();
	  };

	  Modal.prototype.updateStyle = function updateStyle() {
	    if (!_inDOM2['default']) {
	      return;
	    }

	    var dialogNode = this._modal.getDialogElement();
	    var dialogHeight = dialogNode.scrollHeight;

	    var document = (0, _ownerDocument2['default'])(dialogNode);
	    var bodyIsOverflowing = (0, _isOverflowing2['default'])(_reactDom2['default'].findDOMNode(this.props.container || document.body));
	    var modalIsOverflowing = dialogHeight > document.documentElement.clientHeight;

	    this.setState({
	      style: {
	        paddingRight: bodyIsOverflowing && !modalIsOverflowing ? (0, _scrollbarSize2['default'])() : undefined,
	        paddingLeft: !bodyIsOverflowing && modalIsOverflowing ? (0, _scrollbarSize2['default'])() : undefined
	      }
	    });
	  };

	  Modal.prototype.render = function render() {
	    var _this2 = this;

	    var _props = this.props,
	        backdrop = _props.backdrop,
	        animation = _props.animation,
	        show = _props.show,
	        Dialog = _props.dialogComponentClass,
	        className = _props.className,
	        style = _props.style,
	        children = _props.children,
	        onEntering = _props.onEntering,
	        onExited = _props.onExited,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['backdrop', 'animation', 'show', 'dialogComponentClass', 'className', 'style', 'children', 'onEntering', 'onExited']);

	    var _splitComponentProps = (0, _splitComponentProps3['default'])(props, _Modal2['default']),
	        baseModalProps = _splitComponentProps[0],
	        dialogProps = _splitComponentProps[1];

	    var inClassName = show && !animation && 'in';

	    return _react2['default'].createElement(
	      _Modal2['default'],
	      (0, _extends3['default'])({}, baseModalProps, {
	        ref: function ref(c) {
	          _this2._modal = c;
	        },
	        show: show,
	        onEntering: (0, _createChainedFunction2['default'])(onEntering, this.handleEntering),
	        onExited: (0, _createChainedFunction2['default'])(onExited, this.handleExited),
	        backdrop: backdrop,
	        backdropClassName: (0, _classnames2['default'])((0, _bootstrapUtils.prefix)(props, 'backdrop'), inClassName),
	        containerClassName: (0, _bootstrapUtils.prefix)(props, 'open'),
	        transition: animation ? _Fade2['default'] : undefined,
	        dialogTransitionTimeout: Modal.TRANSITION_DURATION,
	        backdropTransitionTimeout: Modal.BACKDROP_TRANSITION_DURATION
	      }),
	      _react2['default'].createElement(
	        Dialog,
	        (0, _extends3['default'])({}, dialogProps, {
	          style: (0, _extends3['default'])({}, this.state.style, style),
	          className: (0, _classnames2['default'])(className, inClassName),
	          onClick: backdrop === true ? this.handleDialogClick : null
	        }),
	        children
	      )
	    );
	  };

	  return Modal;
	}(_react2['default'].Component);

	Modal.propTypes = propTypes;
	Modal.defaultProps = defaultProps;
	Modal.childContextTypes = childContextTypes;

	Modal.Body = _ModalBody2['default'];
	Modal.Header = _ModalHeader2['default'];
	Modal.Title = _ModalTitle2['default'];
	Modal.Footer = _ModalFooter2['default'];

	Modal.Dialog = _ModalDialog2['default'];

	Modal.TRANSITION_DURATION = 300;
	Modal.BACKDROP_TRANSITION_DURATION = 150;

	exports['default'] = (0, _bootstrapUtils.bsClass)('modal', (0, _bootstrapUtils.bsSizes)([_StyleConfig.Size.LARGE, _StyleConfig.Size.SMALL], Modal));
	module.exports = exports['default'];

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var on = __webpack_require__(395),
	    off = __webpack_require__(396),
	    filter = __webpack_require__(397);

	module.exports = { on: on, off: off, filter: filter };

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var canUseDOM = __webpack_require__(362);
	var on = function on() {};

	if (canUseDOM) {
	  on = (function () {

	    if (document.addEventListener) return function (node, eventName, handler, capture) {
	      return node.addEventListener(eventName, handler, capture || false);
	    };else if (document.attachEvent) return function (node, eventName, handler) {
	      return node.attachEvent('on' + eventName, handler);
	    };
	  })();
	}

	module.exports = on;

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var canUseDOM = __webpack_require__(362);
	var off = function off() {};

	if (canUseDOM) {

	  off = (function () {

	    if (document.addEventListener) return function (node, eventName, handler, capture) {
	      return node.removeEventListener(eventName, handler, capture || false);
	    };else if (document.attachEvent) return function (node, eventName, handler) {
	      return node.detachEvent('on' + eventName, handler);
	    };
	  })();
	}

	module.exports = off;

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var contains = __webpack_require__(361),
	    qsa = __webpack_require__(398);

	module.exports = function (selector, handler) {
	  return function (e) {
	    var top = e.currentTarget,
	        target = e.target,
	        matches = qsa(top, selector);

	    if (matches.some(function (match) {
	      return contains(match, target);
	    })) handler.call(this, e);
	  };
	};

/***/ },
/* 398 */
/***/ function(module, exports) {

	'use strict';
	//     Zepto.js
	//     (c) 2010-2015 Thomas Fuchs
	//     Zepto.js may be freely distributed under the MIT license.
	var simpleSelectorRE = /^[\w-]*$/,
	    toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);

	module.exports = function qsa(element, selector) {
	  var maybeID = selector[0] === '#',
	      maybeClass = selector[0] === '.',
	      nameOnly = maybeID || maybeClass ? selector.slice(1) : selector,
	      isSimple = simpleSelectorRE.test(nameOnly),
	      found;

	  if (isSimple) {
	    if (maybeID) {
	      element = element.getElementById ? element : document;
	      return (found = element.getElementById(nameOnly)) ? [found] : [];
	    }

	    if (element.getElementsByClassName && maybeClass) return toArray(element.getElementsByClassName(nameOnly));

	    return toArray(element.getElementsByTagName(selector));
	  }

	  return toArray(element.querySelectorAll(selector));
	};

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var canUseDOM = __webpack_require__(362);

	var size;

	module.exports = function (recalc) {
	  if (!size || recalc) {
	    if (canUseDOM) {
	      var scrollDiv = document.createElement('div');

	      scrollDiv.style.position = 'absolute';
	      scrollDiv.style.top = '-9999px';
	      scrollDiv.style.width = '50px';
	      scrollDiv.style.height = '50px';
	      scrollDiv.style.overflow = 'scroll';

	      document.body.appendChild(scrollDiv);
	      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;
	      document.body.removeChild(scrollDiv);
	    }
	  }

	  return size;
	};

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*eslint-disable react/prop-types */


	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _warning = __webpack_require__(179);

	var _warning2 = _interopRequireDefault(_warning);

	var _componentOrElement = __webpack_require__(401);

	var _componentOrElement2 = _interopRequireDefault(_componentOrElement);

	var _elementType = __webpack_require__(322);

	var _elementType2 = _interopRequireDefault(_elementType);

	var _Portal = __webpack_require__(402);

	var _Portal2 = _interopRequireDefault(_Portal);

	var _ModalManager = __webpack_require__(404);

	var _ModalManager2 = _interopRequireDefault(_ModalManager);

	var _ownerDocument = __webpack_require__(384);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	var _addEventListener = __webpack_require__(382);

	var _addEventListener2 = _interopRequireDefault(_addEventListener);

	var _addFocusListener = __webpack_require__(421);

	var _addFocusListener2 = _interopRequireDefault(_addFocusListener);

	var _inDOM = __webpack_require__(347);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	var _activeElement = __webpack_require__(422);

	var _activeElement2 = _interopRequireDefault(_activeElement);

	var _contains = __webpack_require__(381);

	var _contains2 = _interopRequireDefault(_contains);

	var _getContainer = __webpack_require__(403);

	var _getContainer2 = _interopRequireDefault(_getContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var modalManager = new _ModalManager2.default();

	/**
	 * Love them or hate them, `<Modal/>` provides a solid foundation for creating dialogs, lightboxes, or whatever else.
	 * The Modal component renders its `children` node in front of a backdrop component.
	 *
	 * The Modal offers a few helpful features over using just a `<Portal/>` component and some styles:
	 *
	 * - Manages dialog stacking when one-at-a-time just isn't enough.
	 * - Creates a backdrop, for disabling interaction below the modal.
	 * - It properly manages focus; moving to the modal content, and keeping it there until the modal is closed.
	 * - It disables scrolling of the page content while open.
	 * - Adds the appropriate ARIA roles are automatically.
	 * - Easily pluggable animations via a `<Transition/>` component.
	 *
	 * Note that, in the same way the backdrop element prevents users from clicking or interacting
	 * with the page content underneath the Modal, Screen readers also need to be signaled to not to
	 * interact with page content while the Modal is open. To do this, we use a common technique of applying
	 * the `aria-hidden='true'` attribute to the non-Modal elements in the Modal `container`. This means that for
	 * a Modal to be truly modal, it should have a `container` that is _outside_ your app's
	 * React hierarchy (such as the default: document.body).
	 */
	var Modal = _react2.default.createClass({
	  displayName: 'Modal',


	  propTypes: _extends({}, _Portal2.default.propTypes, {

	    /**
	     * Set the visibility of the Modal
	     */
	    show: _react2.default.PropTypes.bool,

	    /**
	     * A Node, Component instance, or function that returns either. The Modal is appended to it's container element.
	     *
	     * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the
	     * page content can be placed behind a virtual backdrop as well as a visual one.
	     */
	    container: _react2.default.PropTypes.oneOfType([_componentOrElement2.default, _react2.default.PropTypes.func]),

	    /**
	     * A callback fired when the Modal is opening.
	     */
	    onShow: _react2.default.PropTypes.func,

	    /**
	     * A callback fired when either the backdrop is clicked, or the escape key is pressed.
	     *
	     * The `onHide` callback only signals intent from the Modal,
	     * you must actually set the `show` prop to `false` for the Modal to close.
	     */
	    onHide: _react2.default.PropTypes.func,

	    /**
	     * Include a backdrop component.
	     */
	    backdrop: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.oneOf(['static'])]),

	    /**
	     * A function that returns a backdrop component. Useful for custom
	     * backdrop rendering.
	     *
	     * ```js
	     *  renderBackdrop={props => <MyBackdrop {...props} />}
	     * ```
	     */
	    renderBackdrop: _react2.default.PropTypes.func,

	    /**
	     * A callback fired when the escape key, if specified in `keyboard`, is pressed.
	     */
	    onEscapeKeyUp: _react2.default.PropTypes.func,

	    /**
	     * A callback fired when the backdrop, if specified, is clicked.
	     */
	    onBackdropClick: _react2.default.PropTypes.func,

	    /**
	     * A style object for the backdrop component.
	     */
	    backdropStyle: _react2.default.PropTypes.object,

	    /**
	     * A css class or classes for the backdrop component.
	     */
	    backdropClassName: _react2.default.PropTypes.string,

	    /**
	     * A css class or set of classes applied to the modal container when the modal is open,
	     * and removed when it is closed.
	     */
	    containerClassName: _react2.default.PropTypes.string,

	    /**
	     * Close the modal when escape key is pressed
	     */
	    keyboard: _react2.default.PropTypes.bool,

	    /**
	     * A `<Transition/>` component to use for the dialog and backdrop components.
	     */
	    transition: _elementType2.default,

	    /**
	     * The `timeout` of the dialog transition if specified. This number is used to ensure that
	     * transition callbacks are always fired, even if browser transition events are canceled.
	     *
	     * See the Transition `timeout` prop for more infomation.
	     */
	    dialogTransitionTimeout: _react2.default.PropTypes.number,

	    /**
	     * The `timeout` of the backdrop transition if specified. This number is used to
	     * ensure that transition callbacks are always fired, even if browser transition events are canceled.
	     *
	     * See the Transition `timeout` prop for more infomation.
	     */
	    backdropTransitionTimeout: _react2.default.PropTypes.number,

	    /**
	     * When `true` The modal will automatically shift focus to itself when it opens, and
	     * replace it to the last focused element when it closes. This also
	     * works correctly with any Modal children that have the `autoFocus` prop.
	     *
	     * Generally this should never be set to `false` as it makes the Modal less
	     * accessible to assistive technologies, like screen readers.
	     */
	    autoFocus: _react2.default.PropTypes.bool,

	    /**
	     * When `true` The modal will prevent focus from leaving the Modal while open.
	     *
	     * Generally this should never be set to `false` as it makes the Modal less
	     * accessible to assistive technologies, like screen readers.
	     */
	    enforceFocus: _react2.default.PropTypes.bool,

	    /**
	     * Callback fired before the Modal transitions in
	     */
	    onEnter: _react2.default.PropTypes.func,

	    /**
	     * Callback fired as the Modal begins to transition in
	     */
	    onEntering: _react2.default.PropTypes.func,

	    /**
	     * Callback fired after the Modal finishes transitioning in
	     */
	    onEntered: _react2.default.PropTypes.func,

	    /**
	     * Callback fired right before the Modal transitions out
	     */
	    onExit: _react2.default.PropTypes.func,

	    /**
	     * Callback fired as the Modal begins to transition out
	     */
	    onExiting: _react2.default.PropTypes.func,

	    /**
	     * Callback fired after the Modal finishes transitioning out
	     */
	    onExited: _react2.default.PropTypes.func,

	    /**
	     * A ModalManager instance used to track and manage the state of open
	     * Modals. Useful when customizing how modals interact within a container
	     */
	    manager: _react2.default.PropTypes.object.isRequired
	  }),

	  getDefaultProps: function getDefaultProps() {
	    var noop = function noop() {};

	    return {
	      show: false,
	      backdrop: true,
	      keyboard: true,
	      autoFocus: true,
	      enforceFocus: true,
	      onHide: noop,
	      manager: modalManager,
	      renderBackdrop: function renderBackdrop(props) {
	        return _react2.default.createElement('div', props);
	      }
	    };
	  },
	  omitProps: function omitProps(props, propTypes) {

	    var keys = Object.keys(props);
	    var newProps = {};
	    keys.map(function (prop) {
	      if (!Object.prototype.hasOwnProperty.call(propTypes, prop)) {
	        newProps[prop] = props[prop];
	      }
	    });

	    return newProps;
	  },
	  getInitialState: function getInitialState() {
	    return { exited: !this.props.show };
	  },
	  render: function render() {
	    var _props = this.props,
	        show = _props.show,
	        container = _props.container,
	        children = _props.children,
	        Transition = _props.transition,
	        backdrop = _props.backdrop,
	        dialogTransitionTimeout = _props.dialogTransitionTimeout,
	        className = _props.className,
	        style = _props.style,
	        onExit = _props.onExit,
	        onExiting = _props.onExiting,
	        onEnter = _props.onEnter,
	        onEntering = _props.onEntering,
	        onEntered = _props.onEntered;


	    var dialog = _react2.default.Children.only(children);
	    var filteredProps = this.omitProps(this.props, Modal.propTypes);

	    var mountModal = show || Transition && !this.state.exited;
	    if (!mountModal) {
	      return null;
	    }

	    var _dialog$props = dialog.props,
	        role = _dialog$props.role,
	        tabIndex = _dialog$props.tabIndex;


	    if (role === undefined || tabIndex === undefined) {
	      dialog = (0, _react.cloneElement)(dialog, {
	        role: role === undefined ? 'document' : role,
	        tabIndex: tabIndex == null ? '-1' : tabIndex
	      });
	    }

	    if (Transition) {
	      dialog = _react2.default.createElement(
	        Transition,
	        {
	          transitionAppear: true,
	          unmountOnExit: true,
	          'in': show,
	          timeout: dialogTransitionTimeout,
	          onExit: onExit,
	          onExiting: onExiting,
	          onExited: this.handleHidden,
	          onEnter: onEnter,
	          onEntering: onEntering,
	          onEntered: onEntered
	        },
	        dialog
	      );
	    }

	    return _react2.default.createElement(
	      _Portal2.default,
	      {
	        ref: this.setMountNode,
	        container: container
	      },
	      _react2.default.createElement(
	        'div',
	        _extends({
	          ref: 'modal',
	          role: role || 'dialog'
	        }, filteredProps, {
	          style: style,
	          className: className
	        }),
	        backdrop && this.renderBackdrop(),
	        dialog
	      )
	    );
	  },
	  renderBackdrop: function renderBackdrop() {
	    var _this = this;

	    var _props2 = this.props,
	        backdropStyle = _props2.backdropStyle,
	        backdropClassName = _props2.backdropClassName,
	        renderBackdrop = _props2.renderBackdrop,
	        Transition = _props2.transition,
	        backdropTransitionTimeout = _props2.backdropTransitionTimeout;


	    var backdropRef = function backdropRef(ref) {
	      return _this.backdrop = ref;
	    };

	    var backdrop = _react2.default.createElement('div', {
	      ref: backdropRef,
	      style: this.props.backdropStyle,
	      className: this.props.backdropClassName,
	      onClick: this.handleBackdropClick
	    });

	    if (Transition) {
	      backdrop = _react2.default.createElement(
	        Transition,
	        { transitionAppear: true,
	          'in': this.props.show,
	          timeout: backdropTransitionTimeout
	        },
	        renderBackdrop({
	          ref: backdropRef,
	          style: backdropStyle,
	          className: backdropClassName,
	          onClick: this.handleBackdropClick
	        })
	      );
	    }

	    return backdrop;
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    if (nextProps.show) {
	      this.setState({ exited: false });
	    } else if (!nextProps.transition) {
	      // Otherwise let handleHidden take care of marking exited.
	      this.setState({ exited: true });
	    }
	  },
	  componentWillUpdate: function componentWillUpdate(nextProps) {
	    if (!this.props.show && nextProps.show) {
	      this.checkForFocus();
	    }
	  },
	  componentDidMount: function componentDidMount() {
	    if (this.props.show) {
	      this.onShow();
	    }
	  },
	  componentDidUpdate: function componentDidUpdate(prevProps) {
	    var transition = this.props.transition;


	    if (prevProps.show && !this.props.show && !transition) {
	      // Otherwise handleHidden will call this.
	      this.onHide();
	    } else if (!prevProps.show && this.props.show) {
	      this.onShow();
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var _props3 = this.props,
	        show = _props3.show,
	        transition = _props3.transition;


	    if (show || transition && !this.state.exited) {
	      this.onHide();
	    }
	  },
	  onShow: function onShow() {
	    var doc = (0, _ownerDocument2.default)(this);
	    var container = (0, _getContainer2.default)(this.props.container, doc.body);

	    this.props.manager.add(this, container, this.props.containerClassName);

	    this._onDocumentKeyupListener = (0, _addEventListener2.default)(doc, 'keyup', this.handleDocumentKeyUp);

	    this._onFocusinListener = (0, _addFocusListener2.default)(this.enforceFocus);

	    this.focus();

	    if (this.props.onShow) {
	      this.props.onShow();
	    }
	  },
	  onHide: function onHide() {
	    this.props.manager.remove(this);

	    this._onDocumentKeyupListener.remove();

	    this._onFocusinListener.remove();

	    this.restoreLastFocus();
	  },
	  setMountNode: function setMountNode(ref) {
	    this.mountNode = ref ? ref.getMountNode() : ref;
	  },
	  handleHidden: function handleHidden() {
	    this.setState({ exited: true });
	    this.onHide();

	    if (this.props.onExited) {
	      var _props4;

	      (_props4 = this.props).onExited.apply(_props4, arguments);
	    }
	  },
	  handleBackdropClick: function handleBackdropClick(e) {
	    if (e.target !== e.currentTarget) {
	      return;
	    }

	    if (this.props.onBackdropClick) {
	      this.props.onBackdropClick(e);
	    }

	    if (this.props.backdrop === true) {
	      this.props.onHide();
	    }
	  },
	  handleDocumentKeyUp: function handleDocumentKeyUp(e) {
	    if (this.props.keyboard && e.keyCode === 27 && this.isTopModal()) {
	      if (this.props.onEscapeKeyUp) {
	        this.props.onEscapeKeyUp(e);
	      }
	      this.props.onHide();
	    }
	  },
	  checkForFocus: function checkForFocus() {
	    if (_inDOM2.default) {
	      this.lastFocus = (0, _activeElement2.default)();
	    }
	  },
	  focus: function focus() {
	    var autoFocus = this.props.autoFocus;
	    var modalContent = this.getDialogElement();
	    var current = (0, _activeElement2.default)((0, _ownerDocument2.default)(this));
	    var focusInModal = current && (0, _contains2.default)(modalContent, current);

	    if (modalContent && autoFocus && !focusInModal) {
	      this.lastFocus = current;

	      if (!modalContent.hasAttribute('tabIndex')) {
	        modalContent.setAttribute('tabIndex', -1);
	        (0, _warning2.default)(false, 'The modal content node does not accept focus. ' + 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".');
	      }

	      modalContent.focus();
	    }
	  },
	  restoreLastFocus: function restoreLastFocus() {
	    // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)
	    if (this.lastFocus && this.lastFocus.focus) {
	      this.lastFocus.focus();
	      this.lastFocus = null;
	    }
	  },
	  enforceFocus: function enforceFocus() {
	    var enforceFocus = this.props.enforceFocus;


	    if (!enforceFocus || !this.isMounted() || !this.isTopModal()) {
	      return;
	    }

	    var active = (0, _activeElement2.default)((0, _ownerDocument2.default)(this));
	    var modal = this.getDialogElement();

	    if (modal && modal !== active && !(0, _contains2.default)(modal, active)) {
	      modal.focus();
	    }
	  },


	  //instead of a ref, which might conflict with one the parent applied.
	  getDialogElement: function getDialogElement() {
	    var node = this.refs.modal;
	    return node && node.lastChild;
	  },
	  isTopModal: function isTopModal() {
	    return this.props.manager.isTopModal(this);
	  }
	});

	Modal.Manager = _ModalManager2.default;

	exports.default = Modal;
	module.exports = exports['default'];

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _createChainableTypeChecker = __webpack_require__(323);

	var _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function validate(props, propName, componentName, location, propFullName) {
	  var propValue = props[propName];
	  var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);

	  if (_react2.default.isValidElement(propValue)) {
	    return new Error('Invalid ' + location + ' `' + propFullName + '` of type ReactElement ' + ('supplied to `' + componentName + '`, expected a ReactComponent or a ') + 'DOMElement. You can usually obtain a ReactComponent or DOMElement ' + 'from a ReactElement by attaching a ref to it.');
	  }

	  if ((propType !== 'object' || typeof propValue.render !== 'function') && propValue.nodeType !== 1) {
	    return new Error('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected a ReactComponent or a ') + 'DOMElement.');
	  }

	  return null;
	}

	exports.default = (0, _createChainableTypeChecker2.default)(validate);

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(28);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _componentOrElement = __webpack_require__(401);

	var _componentOrElement2 = _interopRequireDefault(_componentOrElement);

	var _ownerDocument = __webpack_require__(384);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	var _getContainer = __webpack_require__(403);

	var _getContainer2 = _interopRequireDefault(_getContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * The `<Portal/>` component renders its children into a new "subtree" outside of current component hierarchy.
	 * You can think of it as a declarative `appendChild()`, or jQuery's `$.fn.appendTo()`.
	 * The children of `<Portal/>` component will be appended to the `container` specified.
	 */
	var Portal = _react2.default.createClass({

	  displayName: 'Portal',

	  propTypes: {
	    /**
	     * A Node, Component instance, or function that returns either. The `container` will have the Portal children
	     * appended to it.
	     */
	    container: _react2.default.PropTypes.oneOfType([_componentOrElement2.default, _react2.default.PropTypes.func])
	  },

	  componentDidMount: function componentDidMount() {
	    this._renderOverlay();
	  },
	  componentDidUpdate: function componentDidUpdate() {
	    this._renderOverlay();
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    if (this._overlayTarget && nextProps.container !== this.props.container) {
	      this._portalContainerNode.removeChild(this._overlayTarget);
	      this._portalContainerNode = (0, _getContainer2.default)(nextProps.container, (0, _ownerDocument2.default)(this).body);
	      this._portalContainerNode.appendChild(this._overlayTarget);
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    this._unrenderOverlay();
	    this._unmountOverlayTarget();
	  },
	  _mountOverlayTarget: function _mountOverlayTarget() {
	    if (!this._overlayTarget) {
	      this._overlayTarget = document.createElement('div');
	      this._portalContainerNode = (0, _getContainer2.default)(this.props.container, (0, _ownerDocument2.default)(this).body);
	      this._portalContainerNode.appendChild(this._overlayTarget);
	    }
	  },
	  _unmountOverlayTarget: function _unmountOverlayTarget() {
	    if (this._overlayTarget) {
	      this._portalContainerNode.removeChild(this._overlayTarget);
	      this._overlayTarget = null;
	    }
	    this._portalContainerNode = null;
	  },
	  _renderOverlay: function _renderOverlay() {

	    var overlay = !this.props.children ? null : _react2.default.Children.only(this.props.children);

	    // Save reference for future access.
	    if (overlay !== null) {
	      this._mountOverlayTarget();
	      this._overlayInstance = _reactDom2.default.unstable_renderSubtreeIntoContainer(this, overlay, this._overlayTarget);
	    } else {
	      // Unrender if the component is null for transitions to null
	      this._unrenderOverlay();
	      this._unmountOverlayTarget();
	    }
	  },
	  _unrenderOverlay: function _unrenderOverlay() {
	    if (this._overlayTarget) {
	      _reactDom2.default.unmountComponentAtNode(this._overlayTarget);
	      this._overlayInstance = null;
	    }
	  },
	  render: function render() {
	    return null;
	  },
	  getMountNode: function getMountNode() {
	    return this._overlayTarget;
	  },
	  getOverlayDOMNode: function getOverlayDOMNode() {
	    if (!this.isMounted()) {
	      throw new Error('getOverlayDOMNode(): A component must be mounted to have a DOM node.');
	    }

	    if (this._overlayInstance) {
	      return _reactDom2.default.findDOMNode(this._overlayInstance);
	    }

	    return null;
	  }
	});

	exports.default = Portal;
	module.exports = exports['default'];

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getContainer;

	var _reactDom = __webpack_require__(28);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getContainer(container, defaultContainer) {
	  container = typeof container === 'function' ? container() : container;
	  return _reactDom2.default.findDOMNode(container) || defaultContainer;
	}
	module.exports = exports['default'];

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _style = __webpack_require__(405);

	var _style2 = _interopRequireDefault(_style);

	var _class = __webpack_require__(413);

	var _class2 = _interopRequireDefault(_class);

	var _scrollbarSize = __webpack_require__(417);

	var _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);

	var _isOverflowing = __webpack_require__(418);

	var _isOverflowing2 = _interopRequireDefault(_isOverflowing);

	var _manageAriaHidden = __webpack_require__(420);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function findIndexOf(arr, cb) {
	  var idx = -1;
	  arr.some(function (d, i) {
	    if (cb(d, i)) {
	      idx = i;
	      return true;
	    }
	  });
	  return idx;
	}

	function findContainer(data, modal) {
	  return findIndexOf(data, function (d) {
	    return d.modals.indexOf(modal) !== -1;
	  });
	}

	function setContainerStyle(state, container) {
	  var style = { overflow: 'hidden' };

	  // we are only interested in the actual `style` here
	  // becasue we will override it
	  state.style = {
	    overflow: container.style.overflow,
	    paddingRight: container.style.paddingRight
	  };

	  if (state.overflowing) {
	    // use computed style, here to get the real padding
	    // to add our scrollbar width
	    style.paddingRight = parseInt((0, _style2.default)(container, 'paddingRight') || 0, 10) + (0, _scrollbarSize2.default)() + 'px';
	  }

	  (0, _style2.default)(container, style);
	}

	function removeContainerStyle(_ref, container) {
	  var style = _ref.style;


	  Object.keys(style).forEach(function (key) {
	    return container.style[key] = style[key];
	  });
	}
	/**
	 * Proper state managment for containers and the modals in those containers.
	 *
	 * @internal Used by the Modal to ensure proper styling of containers.
	 */

	var ModalManager = function () {
	  function ModalManager() {
	    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref2$hideSiblingNode = _ref2.hideSiblingNodes,
	        hideSiblingNodes = _ref2$hideSiblingNode === undefined ? true : _ref2$hideSiblingNode,
	        _ref2$handleContainer = _ref2.handleContainerOverflow,
	        handleContainerOverflow = _ref2$handleContainer === undefined ? true : _ref2$handleContainer;

	    _classCallCheck(this, ModalManager);

	    this.hideSiblingNodes = hideSiblingNodes;
	    this.handleContainerOverflow = handleContainerOverflow;
	    this.modals = [];
	    this.containers = [];
	    this.data = [];
	  }

	  _createClass(ModalManager, [{
	    key: 'add',
	    value: function add(modal, container, className) {
	      var modalIdx = this.modals.indexOf(modal);
	      var containerIdx = this.containers.indexOf(container);

	      if (modalIdx !== -1) {
	        return modalIdx;
	      }

	      modalIdx = this.modals.length;
	      this.modals.push(modal);

	      if (this.hideSiblingNodes) {
	        (0, _manageAriaHidden.hideSiblings)(container, modal.mountNode);
	      }

	      if (containerIdx !== -1) {
	        this.data[containerIdx].modals.push(modal);
	        return modalIdx;
	      }

	      var data = {
	        modals: [modal],
	        //right now only the first modal of a container will have its classes applied
	        classes: className ? className.split(/\s+/) : [],

	        overflowing: (0, _isOverflowing2.default)(container)
	      };

	      if (this.handleContainerOverflow) {
	        setContainerStyle(data, container);
	      }

	      data.classes.forEach(_class2.default.addClass.bind(null, container));

	      this.containers.push(container);
	      this.data.push(data);

	      return modalIdx;
	    }
	  }, {
	    key: 'remove',
	    value: function remove(modal) {
	      var modalIdx = this.modals.indexOf(modal);

	      if (modalIdx === -1) {
	        return;
	      }

	      var containerIdx = findContainer(this.data, modal);
	      var data = this.data[containerIdx];
	      var container = this.containers[containerIdx];

	      data.modals.splice(data.modals.indexOf(modal), 1);

	      this.modals.splice(modalIdx, 1);

	      // if that was the last modal in a container,
	      // clean up the container
	      if (data.modals.length === 0) {
	        data.classes.forEach(_class2.default.removeClass.bind(null, container));

	        if (this.handleContainerOverflow) {
	          removeContainerStyle(data, container);
	        }

	        if (this.hideSiblingNodes) {
	          (0, _manageAriaHidden.showSiblings)(container, modal.mountNode);
	        }
	        this.containers.splice(containerIdx, 1);
	        this.data.splice(containerIdx, 1);
	      } else if (this.hideSiblingNodes) {
	        //otherwise make sure the next top modal is visible to a SR
	        (0, _manageAriaHidden.ariaHidden)(false, data.modals[data.modals.length - 1].mountNode);
	      }
	    }
	  }, {
	    key: 'isTopModal',
	    value: function isTopModal(modal) {
	      return !!this.modals.length && this.modals[this.modals.length - 1] === modal;
	    }
	  }]);

	  return ModalManager;
	}();

	exports.default = ModalManager;
	module.exports = exports['default'];

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = style;

	var _camelizeStyle = __webpack_require__(406);

	var _camelizeStyle2 = _interopRequireDefault(_camelizeStyle);

	var _hyphenateStyle = __webpack_require__(408);

	var _hyphenateStyle2 = _interopRequireDefault(_hyphenateStyle);

	var _getComputedStyle2 = __webpack_require__(410);

	var _getComputedStyle3 = _interopRequireDefault(_getComputedStyle2);

	var _removeStyle = __webpack_require__(411);

	var _removeStyle2 = _interopRequireDefault(_removeStyle);

	var _properties = __webpack_require__(346);

	var _isTransform = __webpack_require__(412);

	var _isTransform2 = _interopRequireDefault(_isTransform);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function style(node, property, value) {
	  var css = '';
	  var transforms = '';
	  var props = property;

	  if (typeof property === 'string') {
	    if (value === undefined) {
	      return node.style[(0, _camelizeStyle2.default)(property)] || (0, _getComputedStyle3.default)(node).getPropertyValue((0, _hyphenateStyle2.default)(property));
	    } else {
	      (props = {})[property] = value;
	    }
	  }

	  Object.keys(props).forEach(function (key) {
	    var value = props[key];
	    if (!value && value !== 0) {
	      (0, _removeStyle2.default)(node, (0, _hyphenateStyle2.default)(key));
	    } else if ((0, _isTransform2.default)(key)) {
	      transforms += key + '(' + value + ') ';
	    } else {
	      css += (0, _hyphenateStyle2.default)(key) + ': ' + value + ';';
	    }
	  });

	  if (transforms) {
	    css += _properties.transform + ': ' + transforms + ';';
	  }

	  node.style.cssText += ';' + css;
	}
	module.exports = exports['default'];

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = camelizeStyleName;

	var _camelize = __webpack_require__(407);

	var _camelize2 = _interopRequireDefault(_camelize);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var msPattern = /^-ms-/; /**
	                          * Copyright 2014-2015, Facebook, Inc.
	                          * All rights reserved.
	                          * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/camelizeStyleName.js
	                          */
	function camelizeStyleName(string) {
	  return (0, _camelize2.default)(string.replace(msPattern, 'ms-'));
	}
	module.exports = exports['default'];

/***/ },
/* 407 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = camelize;
	var rHyphen = /-(.)/g;

	function camelize(string) {
	  return string.replace(rHyphen, function (_, chr) {
	    return chr.toUpperCase();
	  });
	}
	module.exports = exports["default"];

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = hyphenateStyleName;

	var _hyphenate = __webpack_require__(409);

	var _hyphenate2 = _interopRequireDefault(_hyphenate);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var msPattern = /^ms-/; /**
	                         * Copyright 2013-2014, Facebook, Inc.
	                         * All rights reserved.
	                         * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js
	                         */

	function hyphenateStyleName(string) {
	  return (0, _hyphenate2.default)(string).replace(msPattern, '-ms-');
	}
	module.exports = exports['default'];

/***/ },
/* 409 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = hyphenate;

	var rUpper = /([A-Z])/g;

	function hyphenate(string) {
	  return string.replace(rUpper, '-$1').toLowerCase();
	}
	module.exports = exports['default'];

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = _getComputedStyle;

	var _camelizeStyle = __webpack_require__(406);

	var _camelizeStyle2 = _interopRequireDefault(_camelizeStyle);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var rposition = /^(top|right|bottom|left)$/;
	var rnumnonpx = /^([+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|))(?!px)[a-z%]+$/i;

	function _getComputedStyle(node) {
	  if (!node) throw new TypeError('No Element passed to `getComputedStyle()`');
	  var doc = node.ownerDocument;

	  return 'defaultView' in doc ? doc.defaultView.opener ? node.ownerDocument.defaultView.getComputedStyle(node, null) : window.getComputedStyle(node, null) : {
	    //ie 8 "magic" from: https://github.com/jquery/jquery/blob/1.11-stable/src/css/curCSS.js#L72
	    getPropertyValue: function getPropertyValue(prop) {
	      var style = node.style;

	      prop = (0, _camelizeStyle2.default)(prop);

	      if (prop == 'float') prop = 'styleFloat';

	      var current = node.currentStyle[prop] || null;

	      if (current == null && style && style[prop]) current = style[prop];

	      if (rnumnonpx.test(current) && !rposition.test(prop)) {
	        // Remember the original values
	        var left = style.left;
	        var runStyle = node.runtimeStyle;
	        var rsLeft = runStyle && runStyle.left;

	        // Put in the new values to get a computed value out
	        if (rsLeft) runStyle.left = node.currentStyle.left;

	        style.left = prop === 'fontSize' ? '1em' : current;
	        current = style.pixelLeft + 'px';

	        // Revert the changed values
	        style.left = left;
	        if (rsLeft) runStyle.left = rsLeft;
	      }

	      return current;
	    }
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 411 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = removeStyle;
	function removeStyle(node, key) {
	  return 'removeProperty' in node.style ? node.style.removeProperty(key) : node.style.removeAttribute(key);
	}
	module.exports = exports['default'];

/***/ },
/* 412 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isTransform;
	var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;

	function isTransform(property) {
	  return !!(property && supportedTransforms.test(property));
	}
	module.exports = exports["default"];

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.hasClass = exports.removeClass = exports.addClass = undefined;

	var _addClass = __webpack_require__(414);

	var _addClass2 = _interopRequireDefault(_addClass);

	var _removeClass = __webpack_require__(416);

	var _removeClass2 = _interopRequireDefault(_removeClass);

	var _hasClass = __webpack_require__(415);

	var _hasClass2 = _interopRequireDefault(_hasClass);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.addClass = _addClass2.default;
	exports.removeClass = _removeClass2.default;
	exports.hasClass = _hasClass2.default;
	exports.default = { addClass: _addClass2.default, removeClass: _removeClass2.default, hasClass: _hasClass2.default };

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = addClass;

	var _hasClass = __webpack_require__(415);

	var _hasClass2 = _interopRequireDefault(_hasClass);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function addClass(element, className) {
	  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element)) element.className = element.className + ' ' + className;
	}
	module.exports = exports['default'];

/***/ },
/* 415 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = hasClass;
	function hasClass(element, className) {
	  if (element.classList) return !!className && element.classList.contains(className);else return (" " + element.className + " ").indexOf(" " + className + " ") !== -1;
	}
	module.exports = exports["default"];

/***/ },
/* 416 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function removeClass(element, className) {
	  if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\s)' + className + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
	};

/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (recalc) {
	  if (!size || recalc) {
	    if (_inDOM2.default) {
	      var scrollDiv = document.createElement('div');

	      scrollDiv.style.position = 'absolute';
	      scrollDiv.style.top = '-9999px';
	      scrollDiv.style.width = '50px';
	      scrollDiv.style.height = '50px';
	      scrollDiv.style.overflow = 'scroll';

	      document.body.appendChild(scrollDiv);
	      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;
	      document.body.removeChild(scrollDiv);
	    }
	  }

	  return size;
	};

	var _inDOM = __webpack_require__(347);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var size = void 0;

	module.exports = exports['default'];

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isOverflowing;

	var _isWindow = __webpack_require__(419);

	var _isWindow2 = _interopRequireDefault(_isWindow);

	var _ownerDocument = __webpack_require__(385);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function isBody(node) {
	  return node && node.tagName.toLowerCase() === 'body';
	}

	function bodyIsOverflowing(node) {
	  var doc = (0, _ownerDocument2.default)(node);
	  var win = (0, _isWindow2.default)(doc);
	  var fullWidth = win.innerWidth;

	  // Support: ie8, no innerWidth
	  if (!fullWidth) {
	    var documentElementRect = doc.documentElement.getBoundingClientRect();
	    fullWidth = documentElementRect.right - Math.abs(documentElementRect.left);
	  }

	  return doc.body.clientWidth < fullWidth;
	}

	function isOverflowing(container) {
	  var win = (0, _isWindow2.default)(container);

	  return win || isBody(container) ? bodyIsOverflowing(container) : container.scrollHeight > container.clientHeight;
	}
	module.exports = exports['default'];

/***/ },
/* 419 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getWindow;
	function getWindow(node) {
	  return node === node.window ? node : node.nodeType === 9 ? node.defaultView || node.parentWindow : false;
	}
	module.exports = exports["default"];

/***/ },
/* 420 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ariaHidden = ariaHidden;
	exports.hideSiblings = hideSiblings;
	exports.showSiblings = showSiblings;

	var BLACKLIST = ['template', 'script', 'style'];

	var isHidable = function isHidable(_ref) {
	  var nodeType = _ref.nodeType,
	      tagName = _ref.tagName;
	  return nodeType === 1 && BLACKLIST.indexOf(tagName.toLowerCase()) === -1;
	};

	var siblings = function siblings(container, mount, cb) {
	  mount = [].concat(mount);

	  [].forEach.call(container.children, function (node) {
	    if (mount.indexOf(node) === -1 && isHidable(node)) {
	      cb(node);
	    }
	  });
	};

	function ariaHidden(show, node) {
	  if (!node) {
	    return;
	  }
	  if (show) {
	    node.setAttribute('aria-hidden', 'true');
	  } else {
	    node.removeAttribute('aria-hidden');
	  }
	}

	function hideSiblings(container, mountNode) {
	  siblings(container, mountNode, function (node) {
	    return ariaHidden(true, node);
	  });
	}

	function showSiblings(container, mountNode) {
	  siblings(container, mountNode, function (node) {
	    return ariaHidden(false, node);
	  });
	}

/***/ },
/* 421 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = addFocusListener;
	/**
	 * Firefox doesn't have a focusin event so using capture is easiest way to get bubbling
	 * IE8 can't do addEventListener, but does have onfocusin, so we use that in ie8
	 *
	 * We only allow one Listener at a time to avoid stack overflows
	 */
	function addFocusListener(handler) {
	  var useFocusin = !document.addEventListener;
	  var remove = void 0;

	  if (useFocusin) {
	    document.attachEvent('onfocusin', handler);
	    remove = function remove() {
	      return document.detachEvent('onfocusin', handler);
	    };
	  } else {
	    document.addEventListener('focus', handler, true);
	    remove = function remove() {
	      return document.removeEventListener('focus', handler, true);
	    };
	  }

	  return { remove: remove };
	}
	module.exports = exports['default'];

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = activeElement;

	var _ownerDocument = __webpack_require__(385);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function activeElement() {
	  var doc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _ownerDocument2.default)();

	  try {
	    return doc.activeElement;
	  } catch (e) {/* ie throws if no active element */}
	}
	module.exports = exports['default'];

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _Transition = __webpack_require__(345);

	var _Transition2 = _interopRequireDefault(_Transition);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  /**
	   * Show the component; triggers the fade in or fade out animation
	   */
	  'in': _react2['default'].PropTypes.bool,

	  /**
	   * Unmount the component (remove it from the DOM) when it is faded out
	   */
	  unmountOnExit: _react2['default'].PropTypes.bool,

	  /**
	   * Run the fade in animation when the component mounts, if it is initially
	   * shown
	   */
	  transitionAppear: _react2['default'].PropTypes.bool,

	  /**
	   * Duration of the fade animation in milliseconds, to ensure that finishing
	   * callbacks are fired even if the original browser transition end events are
	   * canceled
	   */
	  timeout: _react2['default'].PropTypes.number,

	  /**
	   * Callback fired before the component fades in
	   */
	  onEnter: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component starts to fade in
	   */
	  onEntering: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the has component faded in
	   */
	  onEntered: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired before the component fades out
	   */
	  onExit: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component starts to fade out
	   */
	  onExiting: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component has faded out
	   */
	  onExited: _react2['default'].PropTypes.func
	};

	var defaultProps = {
	  'in': false,
	  timeout: 300,
	  unmountOnExit: false,
	  transitionAppear: false
	};

	var Fade = function (_React$Component) {
	  (0, _inherits3['default'])(Fade, _React$Component);

	  function Fade() {
	    (0, _classCallCheck3['default'])(this, Fade);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  Fade.prototype.render = function render() {
	    return _react2['default'].createElement(_Transition2['default'], (0, _extends3['default'])({}, this.props, {
	      className: (0, _classnames2['default'])(this.props.className, 'fade'),
	      enteredClassName: 'in',
	      enteringClassName: 'in'
	    }));
	  };

	  return Fade;
	}(_react2['default'].Component);

	Fade.propTypes = propTypes;
	Fade.defaultProps = defaultProps;

	exports['default'] = Fade;
	module.exports = exports['default'];

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _elementType = __webpack_require__(322);

	var _elementType2 = _interopRequireDefault(_elementType);

	var _bootstrapUtils = __webpack_require__(328);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  componentClass: _elementType2['default']
	};

	var defaultProps = {
	  componentClass: 'div'
	};

	var ModalBody = function (_React$Component) {
	  (0, _inherits3['default'])(ModalBody, _React$Component);

	  function ModalBody() {
	    (0, _classCallCheck3['default'])(this, ModalBody);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  ModalBody.prototype.render = function render() {
	    var _props = this.props,
	        Component = _props.componentClass,
	        className = _props.className,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);

	    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
	        bsProps = _splitBsProps[0],
	        elementProps = _splitBsProps[1];

	    var classes = (0, _bootstrapUtils.getClassSet)(bsProps);

	    return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, {
	      className: (0, _classnames2['default'])(className, classes)
	    }));
	  };

	  return ModalBody;
	}(_react2['default'].Component);

	ModalBody.propTypes = propTypes;
	ModalBody.defaultProps = defaultProps;

	exports['default'] = (0, _bootstrapUtils.bsClass)('modal-body', ModalBody);
	module.exports = exports['default'];

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends3 = __webpack_require__(237);

	var _extends4 = _interopRequireDefault(_extends3);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _bootstrapUtils = __webpack_require__(328);

	var _StyleConfig = __webpack_require__(333);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  /**
	   * A css class to apply to the Modal dialog DOM node.
	   */
	  dialogClassName: _react2['default'].PropTypes.string
	};

	var ModalDialog = function (_React$Component) {
	  (0, _inherits3['default'])(ModalDialog, _React$Component);

	  function ModalDialog() {
	    (0, _classCallCheck3['default'])(this, ModalDialog);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  ModalDialog.prototype.render = function render() {
	    var _extends2;

	    var _props = this.props,
	        dialogClassName = _props.dialogClassName,
	        className = _props.className,
	        style = _props.style,
	        children = _props.children,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['dialogClassName', 'className', 'style', 'children']);

	    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
	        bsProps = _splitBsProps[0],
	        elementProps = _splitBsProps[1];

	    var bsClassName = (0, _bootstrapUtils.prefix)(bsProps);

	    var modalStyle = (0, _extends4['default'])({ display: 'block' }, style);

	    var dialogClasses = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[bsClassName] = false, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'dialog')] = true, _extends2));

	    return _react2['default'].createElement(
	      'div',
	      (0, _extends4['default'])({}, elementProps, {
	        tabIndex: '-1',
	        role: 'dialog',
	        style: modalStyle,
	        className: (0, _classnames2['default'])(className, bsClassName)
	      }),
	      _react2['default'].createElement(
	        'div',
	        { className: (0, _classnames2['default'])(dialogClassName, dialogClasses) },
	        _react2['default'].createElement(
	          'div',
	          { className: (0, _bootstrapUtils.prefix)(bsProps, 'content'), role: 'document' },
	          children
	        )
	      )
	    );
	  };

	  return ModalDialog;
	}(_react2['default'].Component);

	ModalDialog.propTypes = propTypes;

	exports['default'] = (0, _bootstrapUtils.bsClass)('modal', (0, _bootstrapUtils.bsSizes)([_StyleConfig.Size.LARGE, _StyleConfig.Size.SMALL], ModalDialog));
	module.exports = exports['default'];

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _elementType = __webpack_require__(322);

	var _elementType2 = _interopRequireDefault(_elementType);

	var _bootstrapUtils = __webpack_require__(328);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  componentClass: _elementType2['default']
	};

	var defaultProps = {
	  componentClass: 'div'
	};

	var ModalFooter = function (_React$Component) {
	  (0, _inherits3['default'])(ModalFooter, _React$Component);

	  function ModalFooter() {
	    (0, _classCallCheck3['default'])(this, ModalFooter);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  ModalFooter.prototype.render = function render() {
	    var _props = this.props,
	        Component = _props.componentClass,
	        className = _props.className,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);

	    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
	        bsProps = _splitBsProps[0],
	        elementProps = _splitBsProps[1];

	    var classes = (0, _bootstrapUtils.getClassSet)(bsProps);

	    return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, {
	      className: (0, _classnames2['default'])(className, classes)
	    }));
	  };

	  return ModalFooter;
	}(_react2['default'].Component);

	ModalFooter.propTypes = propTypes;
	ModalFooter.defaultProps = defaultProps;

	exports['default'] = (0, _bootstrapUtils.bsClass)('modal-footer', ModalFooter);
	module.exports = exports['default'];

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _bootstrapUtils = __webpack_require__(328);

	var _createChainedFunction = __webpack_require__(350);

	var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	// TODO: `aria-label` should be `closeLabel`.

	var propTypes = {
	  /**
	   * The 'aria-label' attribute provides an accessible label for the close
	   * button. It is used for Assistive Technology when the label text is not
	   * readable.
	   */
	  'aria-label': _react2['default'].PropTypes.string,

	  /**
	   * Specify whether the Component should contain a close button
	   */
	  closeButton: _react2['default'].PropTypes.bool,

	  /**
	   * A Callback fired when the close button is clicked. If used directly inside
	   * a Modal component, the onHide will automatically be propagated up to the
	   * parent Modal `onHide`.
	   */
	  onHide: _react2['default'].PropTypes.func
	};

	var defaultProps = {
	  'aria-label': 'Close',
	  closeButton: false
	};

	var contextTypes = {
	  $bs_modal: _react2['default'].PropTypes.shape({
	    onHide: _react2['default'].PropTypes.func
	  })
	};

	var ModalHeader = function (_React$Component) {
	  (0, _inherits3['default'])(ModalHeader, _React$Component);

	  function ModalHeader() {
	    (0, _classCallCheck3['default'])(this, ModalHeader);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  ModalHeader.prototype.render = function render() {
	    var _props = this.props,
	        label = _props['aria-label'],
	        closeButton = _props.closeButton,
	        onHide = _props.onHide,
	        className = _props.className,
	        children = _props.children,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['aria-label', 'closeButton', 'onHide', 'className', 'children']);


	    var modal = this.context.$bs_modal;

	    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
	        bsProps = _splitBsProps[0],
	        elementProps = _splitBsProps[1];

	    var classes = (0, _bootstrapUtils.getClassSet)(bsProps);

	    return _react2['default'].createElement(
	      'div',
	      (0, _extends3['default'])({}, elementProps, {
	        className: (0, _classnames2['default'])(className, classes)
	      }),
	      closeButton && _react2['default'].createElement(
	        'button',
	        {
	          type: 'button',
	          className: 'close',
	          'aria-label': label,
	          onClick: (0, _createChainedFunction2['default'])(modal.onHide, onHide)
	        },
	        _react2['default'].createElement(
	          'span',
	          { 'aria-hidden': 'true' },
	          '\xD7'
	        )
	      ),
	      children
	    );
	  };

	  return ModalHeader;
	}(_react2['default'].Component);

	ModalHeader.propTypes = propTypes;
	ModalHeader.defaultProps = defaultProps;
	ModalHeader.contextTypes = contextTypes;

	exports['default'] = (0, _bootstrapUtils.bsClass)('modal-header', ModalHeader);
	module.exports = exports['default'];

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _elementType = __webpack_require__(322);

	var _elementType2 = _interopRequireDefault(_elementType);

	var _bootstrapUtils = __webpack_require__(328);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = {
	  componentClass: _elementType2['default']
	};

	var defaultProps = {
	  componentClass: 'h4'
	};

	var ModalTitle = function (_React$Component) {
	  (0, _inherits3['default'])(ModalTitle, _React$Component);

	  function ModalTitle() {
	    (0, _classCallCheck3['default'])(this, ModalTitle);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  ModalTitle.prototype.render = function render() {
	    var _props = this.props,
	        Component = _props.componentClass,
	        className = _props.className,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);

	    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
	        bsProps = _splitBsProps[0],
	        elementProps = _splitBsProps[1];

	    var classes = (0, _bootstrapUtils.getClassSet)(bsProps);

	    return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, {
	      className: (0, _classnames2['default'])(className, classes)
	    }));
	  };

	  return ModalTitle;
	}(_react2['default'].Component);

	ModalTitle.propTypes = propTypes;
	ModalTitle.defaultProps = defaultProps;

	exports['default'] = (0, _bootstrapUtils.bsClass)('modal-title', ModalTitle);
	module.exports = exports['default'];

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "/assets/images/Okechi_Onyeje_original.png";

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "/assets/images/Okechi_Onyeje_music_producer.png";

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "/assets/images/Okechi_Onyeje_hobbyist_hacker.png";

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "/assets/images/Okechi_Onyeje_professional.png";

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "/assets/images/Okechi_Onyeje_professional_software_engineer.png";

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _ContentLoaderComponent = __webpack_require__(435);

	var _ContentLoaderComponent2 = _interopRequireDefault(_ContentLoaderComponent);

	var _contentContainer = __webpack_require__(477);

	var _contentContainer2 = _interopRequireDefault(_contentContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	//pages to be rendered based on navigation


	var ContentContainerComponent = function (_React$Component) {
	  _inherits(ContentContainerComponent, _React$Component);

	  function ContentContainerComponent() {
	    _classCallCheck(this, ContentContainerComponent);

	    return _possibleConstructorReturn(this, (ContentContainerComponent.__proto__ || Object.getPrototypeOf(ContentContainerComponent)).apply(this, arguments));
	  }

	  _createClass(ContentContainerComponent, [{
	    key: 'renderOnPath',

	    //var currentRouteName = this.context.router.getCurrentPathname();
	    //console.log(currentRouteName);
	    value: function renderOnPath(path) {
	      var aquaInvisionURL = 'https://projects.invisionapp.com/share/QV9OA25MA#/screens';
	      var vendooInvisionURL = 'https://www.kroleo.com/invision/Vendoo/#/screens';
	      var getHipInvisionURL = 'https://www.kroleo.com/invision/GetHip/#/screens';

	      switch (path) {
	        case '/personal':
	          return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'coming-soon', invisionURL: '', style: _contentContainer2.default, currentRoute: this.props.currentRoute })
	          );
	        case '/professional':
	          return _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'coming-soon', invisionURL: '', style: _contentContainer2.default, currentRoute: this.props.currentRoute });
	        case '/web-development':
	          return _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'dev-cover', invisionURL: '', style: _contentContainer2.default, currentRoute: this.props.currentRoute });
	        case '/web-development/aqua':
	          return _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'invision', invisionURL: aquaInvisionURL, style: _contentContainer2.default, currentRoute: this.props.currentRoute });
	        case '/web-development/pearlception':
	          return _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'coming-soon', invisionURL: '', style: _contentContainer2.default, currentRoute: this.props.currentRoute });
	        case '/mobile-development':
	          return _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'dev-cover', invisionURL: '', style: _contentContainer2.default, currentRoute: this.props.currentRoute });
	        case '/mobile-development/vendoo':
	          return _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'invision', invisionURL: vendooInvisionURL, style: _contentContainer2.default, currentRoute: this.props.currentRoute });
	        case '/mobile-development/gethip':
	          return _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'invision', invisionURL: getHipInvisionURL, style: _contentContainer2.default, currentRoute: this.props.currentRoute });
	        case '/audio-software-development':
	          return _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'dev-cover', invisionURL: '', style: _contentContainer2.default, currentRoute: this.props.currentRoute });
	        case '/audio-software-development/wav-blocks-studio':
	          return _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'coming-soon', invisionURL: '', style: _contentContainer2.default, currentRoute: this.props.currentRoute });
	        case '/audio-software-development/ultra-muse-player':
	          return _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'coming-soon', invisionURL: '', style: _contentContainer2.default, currentRoute: this.props.currentRoute });
	        case '/audio-software-development/umuse-audio-plugin':
	          return _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'coming-soon', invisionURL: '', style: _contentContainer2.default, currentRoute: this.props.currentRoute });
	        case '/audio-production':
	          return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'coming-soon', invisionURL: '', style: _contentContainer2.default, currentRoute: this.props.currentRoute })
	          );
	        case '/podcasting':
	          return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'coming-soon', invisionURL: '', style: _contentContainer2.default, currentRoute: this.props.currentRoute })
	          );
	        case '/hacks':
	          return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(_ContentLoaderComponent2.default, { viewerType: 'coming-soon', invisionURL: '', style: _contentContainer2.default, currentRoute: this.props.currentRoute })
	          );
	        default:
	          return _react2.default.createElement(
	            'div',
	            null,
	            path
	          );
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        this.renderOnPath(this.props.currentRoute)
	      );
	    }
	  }]);

	  return ContentContainerComponent;
	}(_react2.default.Component);

	exports.default = ContentContainerComponent;

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _DropdownButton = __webpack_require__(436);

	var _DropdownButton2 = _interopRequireDefault(_DropdownButton);

	var _ButtonToolbar = __webpack_require__(437);

	var _ButtonToolbar2 = _interopRequireDefault(_ButtonToolbar);

	var _MenuItem = __webpack_require__(389);

	var _MenuItem2 = _interopRequireDefault(_MenuItem);

	var _Col = __webpack_require__(392);

	var _Col2 = _interopRequireDefault(_Col);

	var _PDFViewerComponent = __webpack_require__(438);

	var _PDFViewerComponent2 = _interopRequireDefault(_PDFViewerComponent);

	var _ComingSoonComponent = __webpack_require__(468);

	var _ComingSoonComponent2 = _interopRequireDefault(_ComingSoonComponent);

	var _DevCoverComponent = __webpack_require__(469);

	var _DevCoverComponent2 = _interopRequireDefault(_DevCoverComponent);

	var _Okechi_Onyeje_original = __webpack_require__(429);

	var _Okechi_Onyeje_original2 = _interopRequireDefault(_Okechi_Onyeje_original);

	var _Okechi_Onyeje_music_producer = __webpack_require__(430);

	var _Okechi_Onyeje_music_producer2 = _interopRequireDefault(_Okechi_Onyeje_music_producer);

	var _Okechi_Onyeje_hobbyist_hacker = __webpack_require__(431);

	var _Okechi_Onyeje_hobbyist_hacker2 = _interopRequireDefault(_Okechi_Onyeje_hobbyist_hacker);

	var _Okechi_Onyeje_professional = __webpack_require__(432);

	var _Okechi_Onyeje_professional2 = _interopRequireDefault(_Okechi_Onyeje_professional);

	var _Okechi_Onyeje_professional_software_engineer = __webpack_require__(433);

	var _Okechi_Onyeje_professional_software_engineer2 = _interopRequireDefault(_Okechi_Onyeje_professional_software_engineer);

	var _reactRouter = __webpack_require__(171);

	var _lodash = __webpack_require__(476);

	var _lodash2 = _interopRequireDefault(_lodash);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	//import logo images


	var ContentLoaderComponent = function (_React$Component) {
	    _inherits(ContentLoaderComponent, _React$Component);

	    function ContentLoaderComponent() {
	        _classCallCheck(this, ContentLoaderComponent);

	        var _this = _possibleConstructorReturn(this, (ContentLoaderComponent.__proto__ || Object.getPrototypeOf(ContentLoaderComponent)).call(this));

	        _this.iframe = _this.iframe.bind(_this);
	        _this.renderBarButtons = _this.renderBarButtons.bind(_this);
	        _this.onContentSelect = _this.onContentSelect.bind(_this);
	        _this.renderViewPort = _this.renderViewPort.bind(_this);
	        _this.renderLogo = _this.renderLogo.bind(_this);
	        _this.state = {
	            _content: 'none'
	        };
	        return _this;
	    }

	    _createClass(ContentLoaderComponent, [{
	        key: 'renderLogo',
	        value: function renderLogo() {
	            var logoStyle = {
	                width: "200",
	                height: "200"
	            };

	            if (_lodash2.default.includes(this.props.currentRoute, '/web-development') || _lodash2.default.includes(this.props.currentRoute, '/mobile-development')) {

	                logoStyle.backgroundImage = _Okechi_Onyeje_professional_software_engineer2.default;
	            } else if (_lodash2.default.includes(this.props.currentRoute, '/professional')) {

	                logoStyle.backgroundImage = _Okechi_Onyeje_professional2.default;
	            } else if (_lodash2.default.includes(this.props.currentRoute, '/audio-production') || _lodash2.default.includes(this.props.currentRoute, '/podcasting')) {

	                logoStyle.backgroundImage = _Okechi_Onyeje_music_producer2.default;
	            } else if (_lodash2.default.includes(this.props.currentRoute, '/audio-software-development') || _lodash2.default.includes(this.props.currentRoute, '/hacks')) {

	                logoStyle.backgroundImage = _Okechi_Onyeje_hobbyist_hacker2.default;
	            } else {

	                logoStyle.backgroundImage = _Okechi_Onyeje_original2.default;
	            }
	            return logoStyle.backgroundImage;
	        }
	    }, {
	        key: 'onContentSelect',
	        value: function onContentSelect(content) {
	            this.setState({ _content: content });
	        }
	    }, {
	        key: 'renderViewPort',
	        value: function renderViewPort(viewPortType) {
	            if (viewPortType == 'invision') {
	                return _react2.default.createElement('div', { style: { height: '100%',
	                        width: '100%'
	                    }, dangerouslySetInnerHTML: this.iframe() });
	            } else if (viewPortType == 'dev-cover') {
	                return _react2.default.createElement(
	                    'div',
	                    { style: { height: '100%', width: '100%' } },
	                    _react2.default.createElement(_DevCoverComponent2.default, { currentRoute: this.props.currentRoute })
	                );
	            } else if (viewPortType == 'coming-soon') {
	                return _react2.default.createElement(
	                    'div',
	                    { style: { height: '100%', width: '100%' } },
	                    _react2.default.createElement(_ComingSoonComponent2.default, { logoPath: this.renderLogo() })
	                );
	            } else {
	                return _react2.default.createElement(
	                    'div',
	                    { style: { height: '100%',
	                            width: '100%'
	                        } },
	                    _react2.default.createElement(_PDFViewerComponent2.default, {
	                        pdfFile: '/assets/pdfs/WavBlocks.pdf' })
	                );
	            }
	        }
	    }, {
	        key: 'iframe',
	        value: function iframe() {
	            return {
	                __html: '<iframe src=' + '"' + this.props.invisionURL + '" width="100%" height="100%" frameborder= "0"></iframe>'
	            };
	        }
	    }, {
	        key: 'renderBarButtons',
	        value: function renderBarButtons() {
	            if (_lodash2.default.includes(this.props.currentRoute, '/web-development')) {
	                return _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                        _ButtonToolbar2.default,
	                        null,
	                        _react2.default.createElement(
	                            _DropdownButton2.default,
	                            { bsStyle: 'danger', dropup: true, title: 'Ruby on Rails' },
	                            _react2.default.createElement(
	                                _MenuItem2.default,
	                                { eventKey: '1' },
	                                _react2.default.createElement(
	                                    'li',
	                                    null,
	                                    _react2.default.createElement(
	                                        _reactRouter.Link,
	                                        { to: '/web-development/aqua' },
	                                        'Aqua Hotel Management'
	                                    )
	                                )
	                            ),
	                            _react2.default.createElement(
	                                _MenuItem2.default,
	                                { eventKey: '2' },
	                                _react2.default.createElement(
	                                    'li',
	                                    null,
	                                    _react2.default.createElement(
	                                        _reactRouter.Link,
	                                        { to: '/web-development/pearlception' },
	                                        'Pearlception Dashboard'
	                                    )
	                                )
	                            )
	                        )
	                    )
	                );
	            }
	            if (_lodash2.default.includes(this.props.currentRoute, '/mobile-development')) {
	                return _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                        _ButtonToolbar2.default,
	                        null,
	                        _react2.default.createElement(
	                            _DropdownButton2.default,
	                            { bsStyle: 'warning', dropup: true, title: 'Swift' },
	                            _react2.default.createElement(
	                                _MenuItem2.default,
	                                { eventKey: '1' },
	                                _react2.default.createElement(
	                                    'li',
	                                    null,
	                                    _react2.default.createElement(
	                                        _reactRouter.Link,
	                                        { to: '/mobile-development/gethip' },
	                                        'GetHip!'
	                                    )
	                                )
	                            ),
	                            _react2.default.createElement(
	                                _MenuItem2.default,
	                                { eventKey: '2' },
	                                _react2.default.createElement(
	                                    'li',
	                                    null,
	                                    _react2.default.createElement(
	                                        _reactRouter.Link,
	                                        { to: '/mobile-development/vendoo' },
	                                        'Vendoo'
	                                    )
	                                )
	                            )
	                        )
	                    )
	                );
	            }
	            if (_lodash2.default.includes(this.props.currentRoute, '/audio-software-development')) {
	                return _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                        _ButtonToolbar2.default,
	                        null,
	                        _react2.default.createElement(
	                            _DropdownButton2.default,
	                            { bsStyle: 'primary', dropup: true, title: 'C++' },
	                            _react2.default.createElement(
	                                _MenuItem2.default,
	                                { eventKey: '1' },
	                                _react2.default.createElement(
	                                    'li',
	                                    null,
	                                    _react2.default.createElement(
	                                        _reactRouter.Link,
	                                        { to: '/audio-software-development/wav-blocks-studio' },
	                                        'WavBlocks Studio'
	                                    )
	                                )
	                            ),
	                            _react2.default.createElement(
	                                _MenuItem2.default,
	                                { eventKey: '2' },
	                                _react2.default.createElement(
	                                    'li',
	                                    null,
	                                    _react2.default.createElement(
	                                        _reactRouter.Link,
	                                        { to: '/audio-software-development/umuse-audio-plugin' },
	                                        'UMuse DAW Plugin'
	                                    )
	                                )
	                            )
	                        ),
	                        _react2.default.createElement(
	                            _DropdownButton2.default,
	                            { bsStyle: 'success', dropup: true, title: 'React/Electron' },
	                            _react2.default.createElement(
	                                _MenuItem2.default,
	                                { eventKey: '1' },
	                                _react2.default.createElement(
	                                    'li',
	                                    null,
	                                    _react2.default.createElement(
	                                        _reactRouter.Link,
	                                        { to: '/audio-software-development/ultra-muse-player' },
	                                        'UltraMuse Player'
	                                    )
	                                )
	                            )
	                        )
	                    )
	                );
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                { className: this.props.style.content_container },
	                _react2.default.createElement('div', { className: 'project_selector_tBar_container' }),
	                _react2.default.createElement(
	                    'div',
	                    { className: this.props.style.content_component },
	                    this.renderViewPort(this.props.viewerType)
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: "this.props.style.project_type_selector_bBar_container" },
	                    _react2.default.createElement(
	                        _Col2.default,
	                        { xs: 6, xsOffset: 3 },
	                        this.renderBarButtons()
	                    )
	                )
	            );
	        }
	    }]);

	    return ContentLoaderComponent;
	}(_react2.default.Component);

	exports.default = ContentLoaderComponent;

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _Dropdown = __webpack_require__(358);

	var _Dropdown2 = _interopRequireDefault(_Dropdown);

	var _splitComponentProps2 = __webpack_require__(388);

	var _splitComponentProps3 = _interopRequireDefault(_splitComponentProps2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var propTypes = (0, _extends3['default'])({}, _Dropdown2['default'].propTypes, {

	  // Toggle props.
	  bsStyle: _react2['default'].PropTypes.string,
	  bsSize: _react2['default'].PropTypes.string,
	  title: _react2['default'].PropTypes.node.isRequired,
	  noCaret: _react2['default'].PropTypes.bool,

	  // Override generated docs from <Dropdown>.
	  /**
	   * @private
	   */
	  children: _react2['default'].PropTypes.node
	});

	var DropdownButton = function (_React$Component) {
	  (0, _inherits3['default'])(DropdownButton, _React$Component);

	  function DropdownButton() {
	    (0, _classCallCheck3['default'])(this, DropdownButton);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  DropdownButton.prototype.render = function render() {
	    var _props = this.props,
	        bsSize = _props.bsSize,
	        bsStyle = _props.bsStyle,
	        title = _props.title,
	        children = _props.children,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['bsSize', 'bsStyle', 'title', 'children']);

	    var _splitComponentProps = (0, _splitComponentProps3['default'])(props, _Dropdown2['default'].ControlledComponent),
	        dropdownProps = _splitComponentProps[0],
	        toggleProps = _splitComponentProps[1];

	    return _react2['default'].createElement(
	      _Dropdown2['default'],
	      (0, _extends3['default'])({}, dropdownProps, {
	        bsSize: bsSize,
	        bsStyle: bsStyle
	      }),
	      _react2['default'].createElement(
	        _Dropdown2['default'].Toggle,
	        (0, _extends3['default'])({}, toggleProps, {
	          bsSize: bsSize,
	          bsStyle: bsStyle
	        }),
	        title
	      ),
	      _react2['default'].createElement(
	        _Dropdown2['default'].Menu,
	        null,
	        children
	      )
	    );
	  };

	  return DropdownButton;
	}(_react2['default'].Component);

	DropdownButton.propTypes = propTypes;

	exports['default'] = DropdownButton;
	module.exports = exports['default'];

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends2 = __webpack_require__(237);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(275);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(321);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _Button = __webpack_require__(365);

	var _Button2 = _interopRequireDefault(_Button);

	var _bootstrapUtils = __webpack_require__(328);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var ButtonToolbar = function (_React$Component) {
	  (0, _inherits3['default'])(ButtonToolbar, _React$Component);

	  function ButtonToolbar() {
	    (0, _classCallCheck3['default'])(this, ButtonToolbar);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }

	  ButtonToolbar.prototype.render = function render() {
	    var _props = this.props,
	        className = _props.className,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['className']);

	    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
	        bsProps = _splitBsProps[0],
	        elementProps = _splitBsProps[1];

	    var classes = (0, _bootstrapUtils.getClassSet)(bsProps);

	    return _react2['default'].createElement('div', (0, _extends3['default'])({}, elementProps, {
	      role: 'toolbar',
	      className: (0, _classnames2['default'])(className, classes)
	    }));
	  };

	  return ButtonToolbar;
	}(_react2['default'].Component);

	exports['default'] = (0, _bootstrapUtils.bsClass)('btn-toolbar', (0, _bootstrapUtils.bsSizes)(_Button2['default'].SIZES, ButtonToolbar));
	module.exports = exports['default'];

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactPdfJs = __webpack_require__(439);

	var _reactPdfJs2 = _interopRequireDefault(_reactPdfJs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PDFViewerComponent = function (_React$Component) {
	  _inherits(PDFViewerComponent, _React$Component);

	  function PDFViewerComponent(props) {
	    _classCallCheck(this, PDFViewerComponent);

	    var _this = _possibleConstructorReturn(this, (PDFViewerComponent.__proto__ || Object.getPrototypeOf(PDFViewerComponent)).call(this, props));

	    _this.onDocumentComplete = _this.onDocumentComplete.bind(_this);
	    _this.onPageComplete = _this.onPageComplete.bind(_this);
	    _this.handlePrevious = _this.handlePrevious.bind(_this);
	    _this.handleNext = _this.handleNext.bind(_this);
	    _this.state = {
	      page: 1,
	      pages: 0
	    };
	    return _this;
	  }

	  _createClass(PDFViewerComponent, [{
	    key: 'onDocumentComplete',
	    value: function onDocumentComplete(pages) {
	      this.setState({ page: 1, pages: pages });
	    }
	  }, {
	    key: 'onPageComplete',
	    value: function onPageComplete(page) {
	      this.setState({ page: page });
	    }
	  }, {
	    key: 'handlePrevious',
	    value: function handlePrevious() {
	      this.setState({ page: this.state.page - 1 });
	    }
	  }, {
	    key: 'handleNext',
	    value: function handleNext() {
	      this.setState({ page: this.state.page + 1 });
	    }
	  }, {
	    key: 'renderPagination',
	    value: function renderPagination(page, pages) {
	      var previousButton = _react2.default.createElement(
	        'li',
	        { className: 'previous', onClick: this.handlePrevious },
	        _react2.default.createElement(
	          'a',
	          { href: '#' },
	          _react2.default.createElement('i', { className: 'fa fa-arrow-left' }),
	          ' Previous'
	        )
	      );
	      if (page === 1) {
	        previousButton = _react2.default.createElement(
	          'li',
	          { className: 'previous disabled' },
	          _react2.default.createElement(
	            'a',
	            { href: '#' },
	            _react2.default.createElement('i', { className: 'fa fa-arrow-left' }),
	            ' Previous'
	          )
	        );
	      }
	      var nextButton = _react2.default.createElement(
	        'li',
	        { className: 'next', onClick: this.handleNext },
	        _react2.default.createElement(
	          'a',
	          { href: '#' },
	          'Next ',
	          _react2.default.createElement('i', { className: 'fa fa-arrow-right' })
	        )
	      );
	      if (page === pages) {
	        nextButton = _react2.default.createElement(
	          'li',
	          { className: 'next disabled' },
	          _react2.default.createElement(
	            'a',
	            { href: '#' },
	            'Next ',
	            _react2.default.createElement('i', { className: 'fa fa-arrow-right' })
	          )
	        );
	      }
	      return _react2.default.createElement(
	        'nav',
	        null,
	        _react2.default.createElement(
	          'ul',
	          { className: 'pager' },
	          previousButton,
	          nextButton
	        )
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var pagination = null;
	      if (this.state.pages) {
	        pagination = this.renderPagination(this.state.page, this.state.pages);
	      }
	      return _react2.default.createElement(
	        'div',
	        { style: { height: '100%',
	            width: '100%'
	          } },
	        _react2.default.createElement(_reactPdfJs2.default, { style: { height: '100%',
	            width: '100%'
	          }, file: this.props.pdfFile, onDocumentComplete: this.onDocumentComplete, onPageComplete: this.onPageComplete, page: this.state.page }),
	        pagination
	      );
	    }
	  }]);

	  return PDFViewerComponent;
	}(_react2.default.Component);

	exports.default = PDFViewerComponent;

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Pdf = __webpack_require__(440);

	var _Pdf2 = _interopRequireDefault(_Pdf);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Pdf2.default;

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _stringify = __webpack_require__(441);

	var _stringify2 = _interopRequireDefault(_stringify);

	var _keys = __webpack_require__(443);

	var _keys2 = _interopRequireDefault(_keys);

	var _typeof2 = __webpack_require__(278);

	var _typeof3 = _interopRequireDefault(_typeof2);

	var _getPrototypeOf = __webpack_require__(447);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(276);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(277);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _createClass2 = __webpack_require__(450);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _inherits2 = __webpack_require__(313);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _promise = __webpack_require__(454);

	var _promise2 = _interopRequireDefault(_promise);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	__webpack_require__(465);
	__webpack_require__(467);

	var makeCancelable = function makeCancelable(promise) {
	  var hasCanceled = false;

	  var wrappedPromise = new _promise2.default(function (resolve, reject) {
	    promise.then(function (val) {
	      return hasCanceled ? reject({ pdf: val, isCanceled: true }) : resolve(val);
	    });
	    promise.catch(function (error) {
	      return hasCanceled ? reject({ isCanceled: true }) : reject(error);
	    });
	  });

	  return {
	    promise: wrappedPromise,
	    cancel: function cancel() {
	      hasCanceled = true;
	    }
	  };
	};

	var Pdf = function (_React$Component) {
	  (0, _inherits3.default)(Pdf, _React$Component);
	  (0, _createClass3.default)(Pdf, null, [{
	    key: 'onDocumentError',
	    value: function onDocumentError(err) {
	      if (err.isCanceled && err.pdf) {
	        err.pdf.destroy();
	      }
	    }

	    // Converts an ArrayBuffer directly to base64, without any intermediate 'convert to string then
	    // use window.btoa' step and without risking a blow of the stack. According to [Jon Leightons's]
	    // tests, this appears to be a faster approach: http://jsperf.com/encoding-xhr-image-data/5
	    // Jon Leighton https://gist.github.com/jonleighton/958841

	  }, {
	    key: 'defaultBinaryToBase64',
	    value: function defaultBinaryToBase64(arrayBuffer) {
	      var base64 = '';
	      var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

	      var bytes = new Uint8Array(arrayBuffer);
	      var byteLength = bytes.byteLength;
	      var byteRemainder = byteLength % 3;
	      var mainLength = byteLength - byteRemainder;

	      var a = void 0;
	      var b = void 0;
	      var c = void 0;
	      var d = void 0;
	      var chunk = void 0;

	      // Main loop deals with bytes in chunks of 3
	      for (var i = 0; i < mainLength; i += 3) {
	        // Combine the three bytes into a single integer
	        chunk = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2];

	        // Use bitmasks to extract 6-bit segments from the triplet
	        a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18
	        b = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12
	        c = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6
	        d = chunk & 63; // 63       = 2^6 - 1

	        // Convert the raw binary segments to the appropriate ASCII encoding
	        base64 = [base64, encodings[a], encodings[b], encodings[c], encodings[d]].join('');
	      }

	      // Deal with the remaining bytes and padding
	      if (byteRemainder === 1) {
	        chunk = bytes[mainLength];

	        a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2

	        // Set the 4 least significant bits to zero
	        b = (chunk & 3) << 4; // 3   = 2^2 - 1

	        base64 = [base64, encodings[a], encodings[b], '=='].join('');
	      } else if (byteRemainder === 2) {
	        chunk = bytes[mainLength] << 8 | bytes[mainLength + 1];

	        a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10
	        b = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4

	        // Set the 2 least significant bits to zero
	        c = (chunk & 15) << 2; // 15    = 2^4 - 1

	        base64 = [base64, encodings[a], encodings[b], encodings[c], '='].join('');
	      }

	      return base64;
	    }
	  }]);

	  function Pdf(props) {
	    (0, _classCallCheck3.default)(this, Pdf);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Pdf.__proto__ || (0, _getPrototypeOf2.default)(Pdf)).call(this, props));

	    _this.state = {};
	    _this.onGetPdfRaw = _this.onGetPdfRaw.bind(_this);

	    if (!(typeof _this.onGetPdfRaw === 'function')) {
	      throw new TypeError('Value of "this.onGetPdfRaw" violates contract.\n\nExpected:\n(any) => any\n\nGot:\n' + _inspect(_this.onGetPdfRaw));
	    }

	    _this.onDocumentComplete = _this.onDocumentComplete.bind(_this);

	    if (!(typeof _this.onDocumentComplete === 'function')) {
	      throw new TypeError('Value of "this.onDocumentComplete" violates contract.\n\nExpected:\n(any) => any\n\nGot:\n' + _inspect(_this.onDocumentComplete));
	    }

	    _this.onPageComplete = _this.onPageComplete.bind(_this);

	    if (!(typeof _this.onPageComplete === 'function')) {
	      throw new TypeError('Value of "this.onPageComplete" violates contract.\n\nExpected:\n(any) => any\n\nGot:\n' + _inspect(_this.onPageComplete));
	    }

	    _this.getDocument = _this.getDocument.bind(_this);

	    if (!(typeof _this.getDocument === 'function')) {
	      throw new TypeError('Value of "this.getDocument" violates contract.\n\nExpected:\n(any) => any\n\nGot:\n' + _inspect(_this.getDocument));
	    }

	    return _this;
	  }

	  (0, _createClass3.default)(Pdf, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.loadPDFDocument(this.props);
	      this.renderPdf();
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(newProps) {
	      var pdf = this.state.pdf;


	      var newDocInit = newProps.documentInitParameters;
	      var docInit = this.props.documentInitParameters;

	      // Only reload if the most significant source has changed!
	      var newSource = newProps.file;
	      var oldSource = newSource ? this.props.file : null;
	      newSource = newSource || newProps.binaryContent;
	      oldSource = newSource && !oldSource ? this.props.binaryContent : oldSource;
	      newSource = newSource || newProps.content;
	      oldSource = newSource && !oldSource ? this.props.content : oldSource;

	      if (newSource && newSource !== oldSource && (newProps.file && newProps.file !== this.props.file || newProps.content && newProps.content !== this.props.content || newDocInit && newDocInit !== docInit || newDocInit && docInit && newDocInit.url !== docInit.url)) {
	        this.loadPDFDocument(newProps);
	      }

	      if (pdf && (newProps.page && newProps.page !== this.props.page || newProps.scale && newProps.scale !== this.props.scale || newProps.rotate && newProps.rotate !== this.props.rotate)) {
	        this.setState({ page: null });
	        pdf.getPage(newProps.page).then(this.onPageComplete);
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      var pdf = this.state.pdf;

	      if (pdf) {
	        pdf.destroy();
	      }
	      if (this.documentPromise) {
	        this.documentPromise.cancel();
	      }
	    }
	  }, {
	    key: 'onGetPdfRaw',
	    value: function onGetPdfRaw(pdfRaw) {
	      var _props = this.props,
	          onContentAvailable = _props.onContentAvailable,
	          onBinaryContentAvailable = _props.onBinaryContentAvailable,
	          binaryToBase64 = _props.binaryToBase64;

	      if (typeof onBinaryContentAvailable === 'function') {
	        onBinaryContentAvailable(pdfRaw);
	      }
	      if (typeof onContentAvailable === 'function') {
	        var convertBinaryToBase64 = this.defaultBinaryToBase64;
	        if (typeof binaryToBase64 === 'function') {
	          convertBinaryToBase64 = binaryToBase64;
	        }
	        onContentAvailable(convertBinaryToBase64(pdfRaw));
	      }
	    }
	  }, {
	    key: 'onDocumentComplete',
	    value: function onDocumentComplete(pdf) {
	      this.setState({ pdf: pdf });
	      var _props2 = this.props,
	          onDocumentComplete = _props2.onDocumentComplete,
	          onContentAvailable = _props2.onContentAvailable,
	          onBinaryContentAvailable = _props2.onBinaryContentAvailable;

	      if (typeof onDocumentComplete === 'function') {
	        onDocumentComplete(pdf.numPages);
	      }
	      if (typeof onContentAvailable === 'function' || typeof onBinaryContentAvailable === 'function') {
	        pdf.getData().then(this.onGetPdfRaw);
	      }
	      pdf.getPage(this.props.page).then(this.onPageComplete);
	    }
	  }, {
	    key: 'onPageComplete',
	    value: function onPageComplete(page) {
	      this.setState({ page: page });
	      this.renderPdf();
	      var onPageComplete = this.props.onPageComplete;

	      if (typeof onPageComplete === 'function') {
	        onPageComplete(page.pageIndex + 1);
	      }
	    }
	  }, {
	    key: 'getDocument',
	    value: function getDocument(val) {
	      if (this.documentPromise) {
	        this.documentPromise.cancel();
	      }
	      this.documentPromise = makeCancelable(window.PDFJS.getDocument(val).promise);
	      this.documentPromise.promise.then(this.onDocumentComplete).catch(this.onDocumentError);
	      return this.documentPromise;
	    }
	  }, {
	    key: 'loadByteArray',
	    value: function loadByteArray(byteArray) {
	      this.getDocument(byteArray);
	    }
	  }, {
	    key: 'loadPDFDocument',
	    value: function loadPDFDocument(props) {
	      var _this2 = this;

	      if (props.file) {
	        var _ret = function () {
	          if (typeof props.file === 'string') {
	            return {
	              v: _this2.getDocument(props.file)
	            };
	          }
	          // Is a File object
	          var reader = new FileReader();
	          reader.onloadend = function () {
	            return _this2.loadByteArray(new Uint8Array(reader.result));
	          };
	          reader.readAsArrayBuffer(props.file);
	        }();

	        if ((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === "object") return _ret.v;
	      } else if (props.binaryContent) {
	        this.loadByteArray(props.binaryContent);
	      } else if (props.content) {
	        var bytes = window.atob(props.content);
	        var byteLength = bytes.length;
	        var byteArray = new Uint8Array(new ArrayBuffer(byteLength));
	        for (var index = 0; index < byteLength; index += 1) {
	          byteArray[index] = bytes.charCodeAt(index);
	        }
	        this.loadByteArray(byteArray);
	      } else if (props.documentInitParameters) {
	        return this.getDocument(props.documentInitParameters);
	      } else {
	        throw new Error('react-pdf-js works with a file(URL) or (base64)content. At least one needs to be provided!');
	      }
	    }
	  }, {
	    key: 'renderPdf',
	    value: function renderPdf() {
	      var page = this.state.page;

	      if (page) {
	        var canvas = this.canvas;

	        var canvasContext = canvas.getContext('2d');
	        var _props3 = this.props,
	            scale = _props3.scale,
	            rotate = _props3.rotate;

	        var viewport = page.getViewport(scale, rotate);
	        canvas.height = viewport.height;
	        canvas.width = viewport.width;
	        page.render({ canvasContext: canvasContext, viewport: viewport });
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this3 = this;

	      var loading = this.props.loading;
	      var page = this.state.page;

	      return page ? _react2.default.createElement('canvas', {
	        ref: function ref(c) {
	          _this3.canvas = c;
	        },
	        className: this.props.className,
	        style: this.props.style
	      }) : loading || _react2.default.createElement(
	        'div',
	        null,
	        'Loading PDF...'
	      );
	    }
	  }]);
	  return Pdf;
	}(_react2.default.Component);

	Pdf.propTypes = {
	  content: _react2.default.PropTypes.string,
	  documentInitParameters: _react2.default.PropTypes.shape({
	    url: _react2.default.PropTypes.string
	  }),
	  binaryContent: _react2.default.PropTypes.shape({
	    data: _react2.default.PropTypes.any
	  }),
	  file: _react2.default.PropTypes.any, // Could be File object or URL string.
	  loading: _react2.default.PropTypes.any,
	  page: _react2.default.PropTypes.number,
	  scale: _react2.default.PropTypes.number,
	  rotate: _react2.default.PropTypes.number,
	  onContentAvailable: _react2.default.PropTypes.func,
	  onBinaryContentAvailable: _react2.default.PropTypes.func,
	  binaryToBase64: _react2.default.PropTypes.func,
	  onDocumentComplete: _react2.default.PropTypes.func,
	  onPageComplete: _react2.default.PropTypes.func,
	  className: _react2.default.PropTypes.string,
	  style: _react2.default.PropTypes.object
	};
	Pdf.defaultProps = {
	  page: 1,
	  scale: 1.0
	};


	Pdf.displayName = 'react-pdf-js';

	exports.default = Pdf;

	function _inspect(input, depth) {
	  var maxDepth = 4;
	  var maxKeys = 15;

	  if (depth === undefined) {
	    depth = 0;
	  }

	  depth += 1;

	  if (input === null) {
	    return 'null';
	  } else if (input === undefined) {
	    return 'void';
	  } else if (typeof input === 'string' || typeof input === 'number' || typeof input === 'boolean') {
	    return typeof input === 'undefined' ? 'undefined' : (0, _typeof3.default)(input);
	  } else if (Array.isArray(input)) {
	    if (input.length > 0) {
	      var _ret2 = function () {
	        if (depth > maxDepth) return {
	            v: '[...]'
	          };

	        var first = _inspect(input[0], depth);

	        if (input.every(function (item) {
	          return _inspect(item, depth) === first;
	        })) {
	          return {
	            v: first.trim() + '[]'
	          };
	        } else {
	          return {
	            v: '[' + input.slice(0, maxKeys).map(function (item) {
	              return _inspect(item, depth);
	            }).join(', ') + (input.length >= maxKeys ? ', ...' : '') + ']'
	          };
	        }
	      }();

	      if ((typeof _ret2 === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret2)) === "object") return _ret2.v;
	    } else {
	      return 'Array';
	    }
	  } else {
	    var keys = (0, _keys2.default)(input);

	    if (!keys.length) {
	      if (input.constructor && input.constructor.name && input.constructor.name !== 'Object') {
	        return input.constructor.name;
	      } else {
	        return 'Object';
	      }
	    }

	    if (depth > maxDepth) return '{...}';
	    var indent = '  '.repeat(depth - 1);
	    var entries = keys.slice(0, maxKeys).map(function (key) {
	      return (/^([A-Z_$][A-Z0-9_$]*)$/i.test(key) ? key : (0, _stringify2.default)(key)) + ': ' + _inspect(input[key], depth) + ';';
	    }).join('\n  ' + indent);

	    if (keys.length >= maxKeys) {
	      entries += '\n  ' + indent + '...';
	    }

	    if (input.constructor && input.constructor.name && input.constructor.name !== 'Object') {
	      return input.constructor.name + ' {\n  ' + indent + entries + '\n' + indent + '}';
	    } else {
	      return '{\n  ' + indent + entries + '\n' + indent + '}';
	    }
	  }
	}

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(442), __esModule: true };

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	var core  = __webpack_require__(243)
	  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});
	module.exports = function stringify(it){ // eslint-disable-line no-unused-vars
	  return $JSON.stringify.apply($JSON, arguments);
	};

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(444), __esModule: true };

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(445);
	module.exports = __webpack_require__(243).Object.keys;

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(274)
	  , $keys    = __webpack_require__(257);

	__webpack_require__(446)('keys', function(){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(241)
	  , core    = __webpack_require__(243)
	  , fails   = __webpack_require__(252);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(448), __esModule: true };

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(449);
	module.exports = __webpack_require__(243).Object.getPrototypeOf;

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject        = __webpack_require__(274)
	  , $getPrototypeOf = __webpack_require__(293);

	__webpack_require__(446)('getPrototypeOf', function(){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _defineProperty = __webpack_require__(451);

	var _defineProperty2 = _interopRequireDefault(_defineProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(452), __esModule: true };

/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(453);
	var $Object = __webpack_require__(243).Object;
	module.exports = function defineProperty(it, key, desc){
	  return $Object.defineProperty(it, key, desc);
	};

/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(241);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(251), 'Object', {defineProperty: __webpack_require__(247).f});

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(455), __esModule: true };

/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(310);
	__webpack_require__(281);
	__webpack_require__(294);
	__webpack_require__(456);
	module.exports = __webpack_require__(243).Promise;

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY            = __webpack_require__(284)
	  , global             = __webpack_require__(242)
	  , ctx                = __webpack_require__(244)
	  , classof            = __webpack_require__(378)
	  , $export            = __webpack_require__(241)
	  , isObject           = __webpack_require__(249)
	  , aFunction          = __webpack_require__(245)
	  , anInstance         = __webpack_require__(457)
	  , forOf              = __webpack_require__(458)
	  , speciesConstructor = __webpack_require__(459)
	  , task               = __webpack_require__(460).set
	  , microtask          = __webpack_require__(462)()
	  , PROMISE            = 'Promise'
	  , TypeError          = global.TypeError
	  , process            = global.process
	  , $Promise           = global[PROMISE]
	  , process            = global.process
	  , isNode             = classof(process) == 'process'
	  , empty              = function(){ /* empty */ }
	  , Internal, GenericPromiseCapability, Wrapper;

	var USE_NATIVE = !!function(){
	  try {
	    // correct subclassing with @@species support
	    var promise     = $Promise.resolve(1)
	      , FakePromise = (promise.constructor = {})[__webpack_require__(292)('species')] = function(exec){ exec(empty, empty); };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch(e){ /* empty */ }
	}();

	// helpers
	var sameConstructor = function(a, b){
	  // with library wrapper special case
	  return a === b || a === $Promise && b === Wrapper;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var newPromiseCapability = function(C){
	  return sameConstructor($Promise, C)
	    ? new PromiseCapability(C)
	    : new GenericPromiseCapability(C);
	};
	var PromiseCapability = GenericPromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject  = aFunction(reject);
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(promise, isReject){
	  if(promise._n)return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function(){
	    var value = promise._v
	      , ok    = promise._s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , domain  = reaction.domain
	        , result, then;
	      try {
	        if(handler){
	          if(!ok){
	            if(promise._h == 2)onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if(handler === true)result = value;
	          else {
	            if(domain)domain.enter();
	            result = handler(value);
	            if(domain)domain.exit();
	          }
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if(isReject && !promise._h)onUnhandled(promise);
	  });
	};
	var onUnhandled = function(promise){
	  task.call(global, function(){
	    var value = promise._v
	      , abrupt, handler, console;
	    if(isUnhandled(promise)){
	      abrupt = perform(function(){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if(abrupt)throw abrupt.error;
	  });
	};
	var isUnhandled = function(promise){
	  if(promise._h == 1)return false;
	  var chain = promise._a || promise._c
	    , i     = 0
	    , reaction;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var onHandleUnhandled = function(promise){
	  task.call(global, function(){
	    var handler;
	    if(isNode){
	      process.emit('rejectionHandled', promise);
	    } else if(handler = global.onrejectionhandled){
	      handler({promise: promise, reason: promise._v});
	    }
	  });
	};
	var $reject = function(value){
	  var promise = this;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if(!promise._a)promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function(value){
	  var promise = this
	    , then;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if(promise === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      microtask(function(){
	        var wrapper = {_w: promise, _d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch(e){
	    $reject.call({_w: promise, _d: false}, e); // wrap
	  }
	};

	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor){
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch(err){
	      $reject.call(this, err);
	    }
	  };
	  Internal = function Promise(executor){
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(463)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail   = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if(this._a)this._a.push(reaction);
	      if(this._s)notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	  PromiseCapability = function(){
	    var promise  = new Internal;
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject  = ctx($reject, promise, 1);
	  };
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
	__webpack_require__(291)($Promise, PROMISE);
	__webpack_require__(464)(PROMISE);
	Wrapper = __webpack_require__(243)[PROMISE];

	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = newPromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
	    var capability = newPromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(379)(function(iter){
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      var values    = []
	        , index     = 0
	        , remaining = 1;
	      forOf(iterable, false, function(promise){
	        var $index        = index++
	          , alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled  = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 457 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(244)
	  , call        = __webpack_require__(374)
	  , isArrayIter = __webpack_require__(375)
	  , anObject    = __webpack_require__(248)
	  , toLength    = __webpack_require__(265)
	  , getIterFn   = __webpack_require__(377)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(248)
	  , aFunction = __webpack_require__(245)
	  , SPECIES   = __webpack_require__(292)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(244)
	  , invoke             = __webpack_require__(461)
	  , html               = __webpack_require__(290)
	  , cel                = __webpack_require__(253)
	  , global             = __webpack_require__(242)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(262)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ },
/* 461 */
/***/ function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(242)
	  , macrotask = __webpack_require__(460).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(262)(process) == 'process';

	module.exports = function(){
	  var head, last, notify;

	  var flush = function(){
	    var parent, fn;
	    if(isNode && (parent = process.domain))parent.exit();
	    while(head){
	      fn   = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch(e){
	        if(head)notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if(parent)parent.enter();
	  };

	  // Node.js
	  if(isNode){
	    notify = function(){
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver
	  } else if(Observer){
	    var toggle = true
	      , node   = document.createTextNode('');
	    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	    notify = function(){
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if(Promise && Promise.resolve){
	    var promise = Promise.resolve();
	    notify = function(){
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function(){
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }

	  return function(fn){
	    var task = {fn: fn, next: undefined};
	    if(last)last.next = task;
	    if(!head){
	      head = task;
	      notify();
	    } last = task;
	  };
	};

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	var hide = __webpack_require__(246);
	module.exports = function(target, src, safe){
	  for(var key in src){
	    if(safe && target[key])target[key] = src[key];
	    else hide(target, key, src[key]);
	  } return target;
	};

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(242)
	  , core        = __webpack_require__(243)
	  , dP          = __webpack_require__(247)
	  , DESCRIPTORS = __webpack_require__(251)
	  , SPECIES     = __webpack_require__(292)('species');

	module.exports = function(KEY){
	  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/* Copyright 2012 Mozilla Foundation
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *     http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	(function (root, factory) {
	 'use strict';
	 if (true) {
	  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	 } else if (typeof exports !== 'undefined') {
	  factory(exports);
	 } else {
	  factory(root['pdfjsDistBuildPdfCombined'] = {});
	 }
	}(this, function (exports) {
	 'use strict';
	 var pdfjsVersion = '1.7.235';
	 var pdfjsBuild = '3f320f0';
	 var pdfjsFilePath = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : null;
	 var pdfjsLibs = {};
	 (function pdfjsWrapper() {
	  (function (root, factory) {
	   factory(root.pdfjsCoreArithmeticDecoder = {});
	  }(this, function (exports) {
	   var ArithmeticDecoder = function ArithmeticDecoderClosure() {
	    var QeTable = [
	     {
	      qe: 0x5601,
	      nmps: 1,
	      nlps: 1,
	      switchFlag: 1
	     },
	     {
	      qe: 0x3401,
	      nmps: 2,
	      nlps: 6,
	      switchFlag: 0
	     },
	     {
	      qe: 0x1801,
	      nmps: 3,
	      nlps: 9,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0AC1,
	      nmps: 4,
	      nlps: 12,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0521,
	      nmps: 5,
	      nlps: 29,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0221,
	      nmps: 38,
	      nlps: 33,
	      switchFlag: 0
	     },
	     {
	      qe: 0x5601,
	      nmps: 7,
	      nlps: 6,
	      switchFlag: 1
	     },
	     {
	      qe: 0x5401,
	      nmps: 8,
	      nlps: 14,
	      switchFlag: 0
	     },
	     {
	      qe: 0x4801,
	      nmps: 9,
	      nlps: 14,
	      switchFlag: 0
	     },
	     {
	      qe: 0x3801,
	      nmps: 10,
	      nlps: 14,
	      switchFlag: 0
	     },
	     {
	      qe: 0x3001,
	      nmps: 11,
	      nlps: 17,
	      switchFlag: 0
	     },
	     {
	      qe: 0x2401,
	      nmps: 12,
	      nlps: 18,
	      switchFlag: 0
	     },
	     {
	      qe: 0x1C01,
	      nmps: 13,
	      nlps: 20,
	      switchFlag: 0
	     },
	     {
	      qe: 0x1601,
	      nmps: 29,
	      nlps: 21,
	      switchFlag: 0
	     },
	     {
	      qe: 0x5601,
	      nmps: 15,
	      nlps: 14,
	      switchFlag: 1
	     },
	     {
	      qe: 0x5401,
	      nmps: 16,
	      nlps: 14,
	      switchFlag: 0
	     },
	     {
	      qe: 0x5101,
	      nmps: 17,
	      nlps: 15,
	      switchFlag: 0
	     },
	     {
	      qe: 0x4801,
	      nmps: 18,
	      nlps: 16,
	      switchFlag: 0
	     },
	     {
	      qe: 0x3801,
	      nmps: 19,
	      nlps: 17,
	      switchFlag: 0
	     },
	     {
	      qe: 0x3401,
	      nmps: 20,
	      nlps: 18,
	      switchFlag: 0
	     },
	     {
	      qe: 0x3001,
	      nmps: 21,
	      nlps: 19,
	      switchFlag: 0
	     },
	     {
	      qe: 0x2801,
	      nmps: 22,
	      nlps: 19,
	      switchFlag: 0
	     },
	     {
	      qe: 0x2401,
	      nmps: 23,
	      nlps: 20,
	      switchFlag: 0
	     },
	     {
	      qe: 0x2201,
	      nmps: 24,
	      nlps: 21,
	      switchFlag: 0
	     },
	     {
	      qe: 0x1C01,
	      nmps: 25,
	      nlps: 22,
	      switchFlag: 0
	     },
	     {
	      qe: 0x1801,
	      nmps: 26,
	      nlps: 23,
	      switchFlag: 0
	     },
	     {
	      qe: 0x1601,
	      nmps: 27,
	      nlps: 24,
	      switchFlag: 0
	     },
	     {
	      qe: 0x1401,
	      nmps: 28,
	      nlps: 25,
	      switchFlag: 0
	     },
	     {
	      qe: 0x1201,
	      nmps: 29,
	      nlps: 26,
	      switchFlag: 0
	     },
	     {
	      qe: 0x1101,
	      nmps: 30,
	      nlps: 27,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0AC1,
	      nmps: 31,
	      nlps: 28,
	      switchFlag: 0
	     },
	     {
	      qe: 0x09C1,
	      nmps: 32,
	      nlps: 29,
	      switchFlag: 0
	     },
	     {
	      qe: 0x08A1,
	      nmps: 33,
	      nlps: 30,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0521,
	      nmps: 34,
	      nlps: 31,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0441,
	      nmps: 35,
	      nlps: 32,
	      switchFlag: 0
	     },
	     {
	      qe: 0x02A1,
	      nmps: 36,
	      nlps: 33,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0221,
	      nmps: 37,
	      nlps: 34,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0141,
	      nmps: 38,
	      nlps: 35,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0111,
	      nmps: 39,
	      nlps: 36,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0085,
	      nmps: 40,
	      nlps: 37,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0049,
	      nmps: 41,
	      nlps: 38,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0025,
	      nmps: 42,
	      nlps: 39,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0015,
	      nmps: 43,
	      nlps: 40,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0009,
	      nmps: 44,
	      nlps: 41,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0005,
	      nmps: 45,
	      nlps: 42,
	      switchFlag: 0
	     },
	     {
	      qe: 0x0001,
	      nmps: 45,
	      nlps: 43,
	      switchFlag: 0
	     },
	     {
	      qe: 0x5601,
	      nmps: 46,
	      nlps: 46,
	      switchFlag: 0
	     }
	    ];
	    function ArithmeticDecoder(data, start, end) {
	     this.data = data;
	     this.bp = start;
	     this.dataEnd = end;
	     this.chigh = data[start];
	     this.clow = 0;
	     this.byteIn();
	     this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;
	     this.clow = this.clow << 7 & 0xFFFF;
	     this.ct -= 7;
	     this.a = 0x8000;
	    }
	    ArithmeticDecoder.prototype = {
	     byteIn: function ArithmeticDecoder_byteIn() {
	      var data = this.data;
	      var bp = this.bp;
	      if (data[bp] === 0xFF) {
	       var b1 = data[bp + 1];
	       if (b1 > 0x8F) {
	        this.clow += 0xFF00;
	        this.ct = 8;
	       } else {
	        bp++;
	        this.clow += data[bp] << 9;
	        this.ct = 7;
	        this.bp = bp;
	       }
	      } else {
	       bp++;
	       this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;
	       this.ct = 8;
	       this.bp = bp;
	      }
	      if (this.clow > 0xFFFF) {
	       this.chigh += this.clow >> 16;
	       this.clow &= 0xFFFF;
	      }
	     },
	     readBit: function ArithmeticDecoder_readBit(contexts, pos) {
	      var cx_index = contexts[pos] >> 1, cx_mps = contexts[pos] & 1;
	      var qeTableIcx = QeTable[cx_index];
	      var qeIcx = qeTableIcx.qe;
	      var d;
	      var a = this.a - qeIcx;
	      if (this.chigh < qeIcx) {
	       if (a < qeIcx) {
	        a = qeIcx;
	        d = cx_mps;
	        cx_index = qeTableIcx.nmps;
	       } else {
	        a = qeIcx;
	        d = 1 ^ cx_mps;
	        if (qeTableIcx.switchFlag === 1) {
	         cx_mps = d;
	        }
	        cx_index = qeTableIcx.nlps;
	       }
	      } else {
	       this.chigh -= qeIcx;
	       if ((a & 0x8000) !== 0) {
	        this.a = a;
	        return cx_mps;
	       }
	       if (a < qeIcx) {
	        d = 1 ^ cx_mps;
	        if (qeTableIcx.switchFlag === 1) {
	         cx_mps = d;
	        }
	        cx_index = qeTableIcx.nlps;
	       } else {
	        d = cx_mps;
	        cx_index = qeTableIcx.nmps;
	       }
	      }
	      do {
	       if (this.ct === 0) {
	        this.byteIn();
	       }
	       a <<= 1;
	       this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;
	       this.clow = this.clow << 1 & 0xFFFF;
	       this.ct--;
	      } while ((a & 0x8000) === 0);
	      this.a = a;
	      contexts[pos] = cx_index << 1 | cx_mps;
	      return d;
	     }
	    };
	    return ArithmeticDecoder;
	   }();
	   exports.ArithmeticDecoder = ArithmeticDecoder;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreCharsets = {});
	  }(this, function (exports) {
	   var ISOAdobeCharset = [
	    '.notdef',
	    'space',
	    'exclam',
	    'quotedbl',
	    'numbersign',
	    'dollar',
	    'percent',
	    'ampersand',
	    'quoteright',
	    'parenleft',
	    'parenright',
	    'asterisk',
	    'plus',
	    'comma',
	    'hyphen',
	    'period',
	    'slash',
	    'zero',
	    'one',
	    'two',
	    'three',
	    'four',
	    'five',
	    'six',
	    'seven',
	    'eight',
	    'nine',
	    'colon',
	    'semicolon',
	    'less',
	    'equal',
	    'greater',
	    'question',
	    'at',
	    'A',
	    'B',
	    'C',
	    'D',
	    'E',
	    'F',
	    'G',
	    'H',
	    'I',
	    'J',
	    'K',
	    'L',
	    'M',
	    'N',
	    'O',
	    'P',
	    'Q',
	    'R',
	    'S',
	    'T',
	    'U',
	    'V',
	    'W',
	    'X',
	    'Y',
	    'Z',
	    'bracketleft',
	    'backslash',
	    'bracketright',
	    'asciicircum',
	    'underscore',
	    'quoteleft',
	    'a',
	    'b',
	    'c',
	    'd',
	    'e',
	    'f',
	    'g',
	    'h',
	    'i',
	    'j',
	    'k',
	    'l',
	    'm',
	    'n',
	    'o',
	    'p',
	    'q',
	    'r',
	    's',
	    't',
	    'u',
	    'v',
	    'w',
	    'x',
	    'y',
	    'z',
	    'braceleft',
	    'bar',
	    'braceright',
	    'asciitilde',
	    'exclamdown',
	    'cent',
	    'sterling',
	    'fraction',
	    'yen',
	    'florin',
	    'section',
	    'currency',
	    'quotesingle',
	    'quotedblleft',
	    'guillemotleft',
	    'guilsinglleft',
	    'guilsinglright',
	    'fi',
	    'fl',
	    'endash',
	    'dagger',
	    'daggerdbl',
	    'periodcentered',
	    'paragraph',
	    'bullet',
	    'quotesinglbase',
	    'quotedblbase',
	    'quotedblright',
	    'guillemotright',
	    'ellipsis',
	    'perthousand',
	    'questiondown',
	    'grave',
	    'acute',
	    'circumflex',
	    'tilde',
	    'macron',
	    'breve',
	    'dotaccent',
	    'dieresis',
	    'ring',
	    'cedilla',
	    'hungarumlaut',
	    'ogonek',
	    'caron',
	    'emdash',
	    'AE',
	    'ordfeminine',
	    'Lslash',
	    'Oslash',
	    'OE',
	    'ordmasculine',
	    'ae',
	    'dotlessi',
	    'lslash',
	    'oslash',
	    'oe',
	    'germandbls',
	    'onesuperior',
	    'logicalnot',
	    'mu',
	    'trademark',
	    'Eth',
	    'onehalf',
	    'plusminus',
	    'Thorn',
	    'onequarter',
	    'divide',
	    'brokenbar',
	    'degree',
	    'thorn',
	    'threequarters',
	    'twosuperior',
	    'registered',
	    'minus',
	    'eth',
	    'multiply',
	    'threesuperior',
	    'copyright',
	    'Aacute',
	    'Acircumflex',
	    'Adieresis',
	    'Agrave',
	    'Aring',
	    'Atilde',
	    'Ccedilla',
	    'Eacute',
	    'Ecircumflex',
	    'Edieresis',
	    'Egrave',
	    'Iacute',
	    'Icircumflex',
	    'Idieresis',
	    'Igrave',
	    'Ntilde',
	    'Oacute',
	    'Ocircumflex',
	    'Odieresis',
	    'Ograve',
	    'Otilde',
	    'Scaron',
	    'Uacute',
	    'Ucircumflex',
	    'Udieresis',
	    'Ugrave',
	    'Yacute',
	    'Ydieresis',
	    'Zcaron',
	    'aacute',
	    'acircumflex',
	    'adieresis',
	    'agrave',
	    'aring',
	    'atilde',
	    'ccedilla',
	    'eacute',
	    'ecircumflex',
	    'edieresis',
	    'egrave',
	    'iacute',
	    'icircumflex',
	    'idieresis',
	    'igrave',
	    'ntilde',
	    'oacute',
	    'ocircumflex',
	    'odieresis',
	    'ograve',
	    'otilde',
	    'scaron',
	    'uacute',
	    'ucircumflex',
	    'udieresis',
	    'ugrave',
	    'yacute',
	    'ydieresis',
	    'zcaron'
	   ];
	   var ExpertCharset = [
	    '.notdef',
	    'space',
	    'exclamsmall',
	    'Hungarumlautsmall',
	    'dollaroldstyle',
	    'dollarsuperior',
	    'ampersandsmall',
	    'Acutesmall',
	    'parenleftsuperior',
	    'parenrightsuperior',
	    'twodotenleader',
	    'onedotenleader',
	    'comma',
	    'hyphen',
	    'period',
	    'fraction',
	    'zerooldstyle',
	    'oneoldstyle',
	    'twooldstyle',
	    'threeoldstyle',
	    'fouroldstyle',
	    'fiveoldstyle',
	    'sixoldstyle',
	    'sevenoldstyle',
	    'eightoldstyle',
	    'nineoldstyle',
	    'colon',
	    'semicolon',
	    'commasuperior',
	    'threequartersemdash',
	    'periodsuperior',
	    'questionsmall',
	    'asuperior',
	    'bsuperior',
	    'centsuperior',
	    'dsuperior',
	    'esuperior',
	    'isuperior',
	    'lsuperior',
	    'msuperior',
	    'nsuperior',
	    'osuperior',
	    'rsuperior',
	    'ssuperior',
	    'tsuperior',
	    'ff',
	    'fi',
	    'fl',
	    'ffi',
	    'ffl',
	    'parenleftinferior',
	    'parenrightinferior',
	    'Circumflexsmall',
	    'hyphensuperior',
	    'Gravesmall',
	    'Asmall',
	    'Bsmall',
	    'Csmall',
	    'Dsmall',
	    'Esmall',
	    'Fsmall',
	    'Gsmall',
	    'Hsmall',
	    'Ismall',
	    'Jsmall',
	    'Ksmall',
	    'Lsmall',
	    'Msmall',
	    'Nsmall',
	    'Osmall',
	    'Psmall',
	    'Qsmall',
	    'Rsmall',
	    'Ssmall',
	    'Tsmall',
	    'Usmall',
	    'Vsmall',
	    'Wsmall',
	    'Xsmall',
	    'Ysmall',
	    'Zsmall',
	    'colonmonetary',
	    'onefitted',
	    'rupiah',
	    'Tildesmall',
	    'exclamdownsmall',
	    'centoldstyle',
	    'Lslashsmall',
	    'Scaronsmall',
	    'Zcaronsmall',
	    'Dieresissmall',
	    'Brevesmall',
	    'Caronsmall',
	    'Dotaccentsmall',
	    'Macronsmall',
	    'figuredash',
	    'hypheninferior',
	    'Ogoneksmall',
	    'Ringsmall',
	    'Cedillasmall',
	    'onequarter',
	    'onehalf',
	    'threequarters',
	    'questiondownsmall',
	    'oneeighth',
	    'threeeighths',
	    'fiveeighths',
	    'seveneighths',
	    'onethird',
	    'twothirds',
	    'zerosuperior',
	    'onesuperior',
	    'twosuperior',
	    'threesuperior',
	    'foursuperior',
	    'fivesuperior',
	    'sixsuperior',
	    'sevensuperior',
	    'eightsuperior',
	    'ninesuperior',
	    'zeroinferior',
	    'oneinferior',
	    'twoinferior',
	    'threeinferior',
	    'fourinferior',
	    'fiveinferior',
	    'sixinferior',
	    'seveninferior',
	    'eightinferior',
	    'nineinferior',
	    'centinferior',
	    'dollarinferior',
	    'periodinferior',
	    'commainferior',
	    'Agravesmall',
	    'Aacutesmall',
	    'Acircumflexsmall',
	    'Atildesmall',
	    'Adieresissmall',
	    'Aringsmall',
	    'AEsmall',
	    'Ccedillasmall',
	    'Egravesmall',
	    'Eacutesmall',
	    'Ecircumflexsmall',
	    'Edieresissmall',
	    'Igravesmall',
	    'Iacutesmall',
	    'Icircumflexsmall',
	    'Idieresissmall',
	    'Ethsmall',
	    'Ntildesmall',
	    'Ogravesmall',
	    'Oacutesmall',
	    'Ocircumflexsmall',
	    'Otildesmall',
	    'Odieresissmall',
	    'OEsmall',
	    'Oslashsmall',
	    'Ugravesmall',
	    'Uacutesmall',
	    'Ucircumflexsmall',
	    'Udieresissmall',
	    'Yacutesmall',
	    'Thornsmall',
	    'Ydieresissmall'
	   ];
	   var ExpertSubsetCharset = [
	    '.notdef',
	    'space',
	    'dollaroldstyle',
	    'dollarsuperior',
	    'parenleftsuperior',
	    'parenrightsuperior',
	    'twodotenleader',
	    'onedotenleader',
	    'comma',
	    'hyphen',
	    'period',
	    'fraction',
	    'zerooldstyle',
	    'oneoldstyle',
	    'twooldstyle',
	    'threeoldstyle',
	    'fouroldstyle',
	    'fiveoldstyle',
	    'sixoldstyle',
	    'sevenoldstyle',
	    'eightoldstyle',
	    'nineoldstyle',
	    'colon',
	    'semicolon',
	    'commasuperior',
	    'threequartersemdash',
	    'periodsuperior',
	    'asuperior',
	    'bsuperior',
	    'centsuperior',
	    'dsuperior',
	    'esuperior',
	    'isuperior',
	    'lsuperior',
	    'msuperior',
	    'nsuperior',
	    'osuperior',
	    'rsuperior',
	    'ssuperior',
	    'tsuperior',
	    'ff',
	    'fi',
	    'fl',
	    'ffi',
	    'ffl',
	    'parenleftinferior',
	    'parenrightinferior',
	    'hyphensuperior',
	    'colonmonetary',
	    'onefitted',
	    'rupiah',
	    'centoldstyle',
	    'figuredash',
	    'hypheninferior',
	    'onequarter',
	    'onehalf',
	    'threequarters',
	    'oneeighth',
	    'threeeighths',
	    'fiveeighths',
	    'seveneighths',
	    'onethird',
	    'twothirds',
	    'zerosuperior',
	    'onesuperior',
	    'twosuperior',
	    'threesuperior',
	    'foursuperior',
	    'fivesuperior',
	    'sixsuperior',
	    'sevensuperior',
	    'eightsuperior',
	    'ninesuperior',
	    'zeroinferior',
	    'oneinferior',
	    'twoinferior',
	    'threeinferior',
	    'fourinferior',
	    'fiveinferior',
	    'sixinferior',
	    'seveninferior',
	    'eightinferior',
	    'nineinferior',
	    'centinferior',
	    'dollarinferior',
	    'periodinferior',
	    'commainferior'
	   ];
	   exports.ISOAdobeCharset = ISOAdobeCharset;
	   exports.ExpertCharset = ExpertCharset;
	   exports.ExpertSubsetCharset = ExpertSubsetCharset;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreEncodings = {});
	  }(this, function (exports) {
	   var ExpertEncoding = [
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'space',
	    'exclamsmall',
	    'Hungarumlautsmall',
	    '',
	    'dollaroldstyle',
	    'dollarsuperior',
	    'ampersandsmall',
	    'Acutesmall',
	    'parenleftsuperior',
	    'parenrightsuperior',
	    'twodotenleader',
	    'onedotenleader',
	    'comma',
	    'hyphen',
	    'period',
	    'fraction',
	    'zerooldstyle',
	    'oneoldstyle',
	    'twooldstyle',
	    'threeoldstyle',
	    'fouroldstyle',
	    'fiveoldstyle',
	    'sixoldstyle',
	    'sevenoldstyle',
	    'eightoldstyle',
	    'nineoldstyle',
	    'colon',
	    'semicolon',
	    'commasuperior',
	    'threequartersemdash',
	    'periodsuperior',
	    'questionsmall',
	    '',
	    'asuperior',
	    'bsuperior',
	    'centsuperior',
	    'dsuperior',
	    'esuperior',
	    '',
	    '',
	    'isuperior',
	    '',
	    '',
	    'lsuperior',
	    'msuperior',
	    'nsuperior',
	    'osuperior',
	    '',
	    '',
	    'rsuperior',
	    'ssuperior',
	    'tsuperior',
	    '',
	    'ff',
	    'fi',
	    'fl',
	    'ffi',
	    'ffl',
	    'parenleftinferior',
	    '',
	    'parenrightinferior',
	    'Circumflexsmall',
	    'hyphensuperior',
	    'Gravesmall',
	    'Asmall',
	    'Bsmall',
	    'Csmall',
	    'Dsmall',
	    'Esmall',
	    'Fsmall',
	    'Gsmall',
	    'Hsmall',
	    'Ismall',
	    'Jsmall',
	    'Ksmall',
	    'Lsmall',
	    'Msmall',
	    'Nsmall',
	    'Osmall',
	    'Psmall',
	    'Qsmall',
	    'Rsmall',
	    'Ssmall',
	    'Tsmall',
	    'Usmall',
	    'Vsmall',
	    'Wsmall',
	    'Xsmall',
	    'Ysmall',
	    'Zsmall',
	    'colonmonetary',
	    'onefitted',
	    'rupiah',
	    'Tildesmall',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'exclamdownsmall',
	    'centoldstyle',
	    'Lslashsmall',
	    '',
	    '',
	    'Scaronsmall',
	    'Zcaronsmall',
	    'Dieresissmall',
	    'Brevesmall',
	    'Caronsmall',
	    '',
	    'Dotaccentsmall',
	    '',
	    '',
	    'Macronsmall',
	    '',
	    '',
	    'figuredash',
	    'hypheninferior',
	    '',
	    '',
	    'Ogoneksmall',
	    'Ringsmall',
	    'Cedillasmall',
	    '',
	    '',
	    '',
	    'onequarter',
	    'onehalf',
	    'threequarters',
	    'questiondownsmall',
	    'oneeighth',
	    'threeeighths',
	    'fiveeighths',
	    'seveneighths',
	    'onethird',
	    'twothirds',
	    '',
	    '',
	    'zerosuperior',
	    'onesuperior',
	    'twosuperior',
	    'threesuperior',
	    'foursuperior',
	    'fivesuperior',
	    'sixsuperior',
	    'sevensuperior',
	    'eightsuperior',
	    'ninesuperior',
	    'zeroinferior',
	    'oneinferior',
	    'twoinferior',
	    'threeinferior',
	    'fourinferior',
	    'fiveinferior',
	    'sixinferior',
	    'seveninferior',
	    'eightinferior',
	    'nineinferior',
	    'centinferior',
	    'dollarinferior',
	    'periodinferior',
	    'commainferior',
	    'Agravesmall',
	    'Aacutesmall',
	    'Acircumflexsmall',
	    'Atildesmall',
	    'Adieresissmall',
	    'Aringsmall',
	    'AEsmall',
	    'Ccedillasmall',
	    'Egravesmall',
	    'Eacutesmall',
	    'Ecircumflexsmall',
	    'Edieresissmall',
	    'Igravesmall',
	    'Iacutesmall',
	    'Icircumflexsmall',
	    'Idieresissmall',
	    'Ethsmall',
	    'Ntildesmall',
	    'Ogravesmall',
	    'Oacutesmall',
	    'Ocircumflexsmall',
	    'Otildesmall',
	    'Odieresissmall',
	    'OEsmall',
	    'Oslashsmall',
	    'Ugravesmall',
	    'Uacutesmall',
	    'Ucircumflexsmall',
	    'Udieresissmall',
	    'Yacutesmall',
	    'Thornsmall',
	    'Ydieresissmall'
	   ];
	   var MacExpertEncoding = [
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'space',
	    'exclamsmall',
	    'Hungarumlautsmall',
	    'centoldstyle',
	    'dollaroldstyle',
	    'dollarsuperior',
	    'ampersandsmall',
	    'Acutesmall',
	    'parenleftsuperior',
	    'parenrightsuperior',
	    'twodotenleader',
	    'onedotenleader',
	    'comma',
	    'hyphen',
	    'period',
	    'fraction',
	    'zerooldstyle',
	    'oneoldstyle',
	    'twooldstyle',
	    'threeoldstyle',
	    'fouroldstyle',
	    'fiveoldstyle',
	    'sixoldstyle',
	    'sevenoldstyle',
	    'eightoldstyle',
	    'nineoldstyle',
	    'colon',
	    'semicolon',
	    '',
	    'threequartersemdash',
	    '',
	    'questionsmall',
	    '',
	    '',
	    '',
	    '',
	    'Ethsmall',
	    '',
	    '',
	    'onequarter',
	    'onehalf',
	    'threequarters',
	    'oneeighth',
	    'threeeighths',
	    'fiveeighths',
	    'seveneighths',
	    'onethird',
	    'twothirds',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'ff',
	    'fi',
	    'fl',
	    'ffi',
	    'ffl',
	    'parenleftinferior',
	    '',
	    'parenrightinferior',
	    'Circumflexsmall',
	    'hypheninferior',
	    'Gravesmall',
	    'Asmall',
	    'Bsmall',
	    'Csmall',
	    'Dsmall',
	    'Esmall',
	    'Fsmall',
	    'Gsmall',
	    'Hsmall',
	    'Ismall',
	    'Jsmall',
	    'Ksmall',
	    'Lsmall',
	    'Msmall',
	    'Nsmall',
	    'Osmall',
	    'Psmall',
	    'Qsmall',
	    'Rsmall',
	    'Ssmall',
	    'Tsmall',
	    'Usmall',
	    'Vsmall',
	    'Wsmall',
	    'Xsmall',
	    'Ysmall',
	    'Zsmall',
	    'colonmonetary',
	    'onefitted',
	    'rupiah',
	    'Tildesmall',
	    '',
	    '',
	    'asuperior',
	    'centsuperior',
	    '',
	    '',
	    '',
	    '',
	    'Aacutesmall',
	    'Agravesmall',
	    'Acircumflexsmall',
	    'Adieresissmall',
	    'Atildesmall',
	    'Aringsmall',
	    'Ccedillasmall',
	    'Eacutesmall',
	    'Egravesmall',
	    'Ecircumflexsmall',
	    'Edieresissmall',
	    'Iacutesmall',
	    'Igravesmall',
	    'Icircumflexsmall',
	    'Idieresissmall',
	    'Ntildesmall',
	    'Oacutesmall',
	    'Ogravesmall',
	    'Ocircumflexsmall',
	    'Odieresissmall',
	    'Otildesmall',
	    'Uacutesmall',
	    'Ugravesmall',
	    'Ucircumflexsmall',
	    'Udieresissmall',
	    '',
	    'eightsuperior',
	    'fourinferior',
	    'threeinferior',
	    'sixinferior',
	    'eightinferior',
	    'seveninferior',
	    'Scaronsmall',
	    '',
	    'centinferior',
	    'twoinferior',
	    '',
	    'Dieresissmall',
	    '',
	    'Caronsmall',
	    'osuperior',
	    'fiveinferior',
	    '',
	    'commainferior',
	    'periodinferior',
	    'Yacutesmall',
	    '',
	    'dollarinferior',
	    '',
	    'Thornsmall',
	    '',
	    'nineinferior',
	    'zeroinferior',
	    'Zcaronsmall',
	    'AEsmall',
	    'Oslashsmall',
	    'questiondownsmall',
	    'oneinferior',
	    'Lslashsmall',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'Cedillasmall',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'OEsmall',
	    'figuredash',
	    'hyphensuperior',
	    '',
	    '',
	    '',
	    '',
	    'exclamdownsmall',
	    '',
	    'Ydieresissmall',
	    '',
	    'onesuperior',
	    'twosuperior',
	    'threesuperior',
	    'foursuperior',
	    'fivesuperior',
	    'sixsuperior',
	    'sevensuperior',
	    'ninesuperior',
	    'zerosuperior',
	    '',
	    'esuperior',
	    'rsuperior',
	    'tsuperior',
	    '',
	    '',
	    'isuperior',
	    'ssuperior',
	    'dsuperior',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'lsuperior',
	    'Ogoneksmall',
	    'Brevesmall',
	    'Macronsmall',
	    'bsuperior',
	    'nsuperior',
	    'msuperior',
	    'commasuperior',
	    'periodsuperior',
	    'Dotaccentsmall',
	    'Ringsmall'
	   ];
	   var MacRomanEncoding = [
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'space',
	    'exclam',
	    'quotedbl',
	    'numbersign',
	    'dollar',
	    'percent',
	    'ampersand',
	    'quotesingle',
	    'parenleft',
	    'parenright',
	    'asterisk',
	    'plus',
	    'comma',
	    'hyphen',
	    'period',
	    'slash',
	    'zero',
	    'one',
	    'two',
	    'three',
	    'four',
	    'five',
	    'six',
	    'seven',
	    'eight',
	    'nine',
	    'colon',
	    'semicolon',
	    'less',
	    'equal',
	    'greater',
	    'question',
	    'at',
	    'A',
	    'B',
	    'C',
	    'D',
	    'E',
	    'F',
	    'G',
	    'H',
	    'I',
	    'J',
	    'K',
	    'L',
	    'M',
	    'N',
	    'O',
	    'P',
	    'Q',
	    'R',
	    'S',
	    'T',
	    'U',
	    'V',
	    'W',
	    'X',
	    'Y',
	    'Z',
	    'bracketleft',
	    'backslash',
	    'bracketright',
	    'asciicircum',
	    'underscore',
	    'grave',
	    'a',
	    'b',
	    'c',
	    'd',
	    'e',
	    'f',
	    'g',
	    'h',
	    'i',
	    'j',
	    'k',
	    'l',
	    'm',
	    'n',
	    'o',
	    'p',
	    'q',
	    'r',
	    's',
	    't',
	    'u',
	    'v',
	    'w',
	    'x',
	    'y',
	    'z',
	    'braceleft',
	    'bar',
	    'braceright',
	    'asciitilde',
	    '',
	    'Adieresis',
	    'Aring',
	    'Ccedilla',
	    'Eacute',
	    'Ntilde',
	    'Odieresis',
	    'Udieresis',
	    'aacute',
	    'agrave',
	    'acircumflex',
	    'adieresis',
	    'atilde',
	    'aring',
	    'ccedilla',
	    'eacute',
	    'egrave',
	    'ecircumflex',
	    'edieresis',
	    'iacute',
	    'igrave',
	    'icircumflex',
	    'idieresis',
	    'ntilde',
	    'oacute',
	    'ograve',
	    'ocircumflex',
	    'odieresis',
	    'otilde',
	    'uacute',
	    'ugrave',
	    'ucircumflex',
	    'udieresis',
	    'dagger',
	    'degree',
	    'cent',
	    'sterling',
	    'section',
	    'bullet',
	    'paragraph',
	    'germandbls',
	    'registered',
	    'copyright',
	    'trademark',
	    'acute',
	    'dieresis',
	    'notequal',
	    'AE',
	    'Oslash',
	    'infinity',
	    'plusminus',
	    'lessequal',
	    'greaterequal',
	    'yen',
	    'mu',
	    'partialdiff',
	    'summation',
	    'product',
	    'pi',
	    'integral',
	    'ordfeminine',
	    'ordmasculine',
	    'Omega',
	    'ae',
	    'oslash',
	    'questiondown',
	    'exclamdown',
	    'logicalnot',
	    'radical',
	    'florin',
	    'approxequal',
	    'Delta',
	    'guillemotleft',
	    'guillemotright',
	    'ellipsis',
	    'space',
	    'Agrave',
	    'Atilde',
	    'Otilde',
	    'OE',
	    'oe',
	    'endash',
	    'emdash',
	    'quotedblleft',
	    'quotedblright',
	    'quoteleft',
	    'quoteright',
	    'divide',
	    'lozenge',
	    'ydieresis',
	    'Ydieresis',
	    'fraction',
	    'currency',
	    'guilsinglleft',
	    'guilsinglright',
	    'fi',
	    'fl',
	    'daggerdbl',
	    'periodcentered',
	    'quotesinglbase',
	    'quotedblbase',
	    'perthousand',
	    'Acircumflex',
	    'Ecircumflex',
	    'Aacute',
	    'Edieresis',
	    'Egrave',
	    'Iacute',
	    'Icircumflex',
	    'Idieresis',
	    'Igrave',
	    'Oacute',
	    'Ocircumflex',
	    'apple',
	    'Ograve',
	    'Uacute',
	    'Ucircumflex',
	    'Ugrave',
	    'dotlessi',
	    'circumflex',
	    'tilde',
	    'macron',
	    'breve',
	    'dotaccent',
	    'ring',
	    'cedilla',
	    'hungarumlaut',
	    'ogonek',
	    'caron'
	   ];
	   var StandardEncoding = [
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'space',
	    'exclam',
	    'quotedbl',
	    'numbersign',
	    'dollar',
	    'percent',
	    'ampersand',
	    'quoteright',
	    'parenleft',
	    'parenright',
	    'asterisk',
	    'plus',
	    'comma',
	    'hyphen',
	    'period',
	    'slash',
	    'zero',
	    'one',
	    'two',
	    'three',
	    'four',
	    'five',
	    'six',
	    'seven',
	    'eight',
	    'nine',
	    'colon',
	    'semicolon',
	    'less',
	    'equal',
	    'greater',
	    'question',
	    'at',
	    'A',
	    'B',
	    'C',
	    'D',
	    'E',
	    'F',
	    'G',
	    'H',
	    'I',
	    'J',
	    'K',
	    'L',
	    'M',
	    'N',
	    'O',
	    'P',
	    'Q',
	    'R',
	    'S',
	    'T',
	    'U',
	    'V',
	    'W',
	    'X',
	    'Y',
	    'Z',
	    'bracketleft',
	    'backslash',
	    'bracketright',
	    'asciicircum',
	    'underscore',
	    'quoteleft',
	    'a',
	    'b',
	    'c',
	    'd',
	    'e',
	    'f',
	    'g',
	    'h',
	    'i',
	    'j',
	    'k',
	    'l',
	    'm',
	    'n',
	    'o',
	    'p',
	    'q',
	    'r',
	    's',
	    't',
	    'u',
	    'v',
	    'w',
	    'x',
	    'y',
	    'z',
	    'braceleft',
	    'bar',
	    'braceright',
	    'asciitilde',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'exclamdown',
	    'cent',
	    'sterling',
	    'fraction',
	    'yen',
	    'florin',
	    'section',
	    'currency',
	    'quotesingle',
	    'quotedblleft',
	    'guillemotleft',
	    'guilsinglleft',
	    'guilsinglright',
	    'fi',
	    'fl',
	    '',
	    'endash',
	    'dagger',
	    'daggerdbl',
	    'periodcentered',
	    '',
	    'paragraph',
	    'bullet',
	    'quotesinglbase',
	    'quotedblbase',
	    'quotedblright',
	    'guillemotright',
	    'ellipsis',
	    'perthousand',
	    '',
	    'questiondown',
	    '',
	    'grave',
	    'acute',
	    'circumflex',
	    'tilde',
	    'macron',
	    'breve',
	    'dotaccent',
	    'dieresis',
	    '',
	    'ring',
	    'cedilla',
	    '',
	    'hungarumlaut',
	    'ogonek',
	    'caron',
	    'emdash',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'AE',
	    '',
	    'ordfeminine',
	    '',
	    '',
	    '',
	    '',
	    'Lslash',
	    'Oslash',
	    'OE',
	    'ordmasculine',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'ae',
	    '',
	    '',
	    '',
	    'dotlessi',
	    '',
	    '',
	    'lslash',
	    'oslash',
	    'oe',
	    'germandbls'
	   ];
	   var WinAnsiEncoding = [
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'space',
	    'exclam',
	    'quotedbl',
	    'numbersign',
	    'dollar',
	    'percent',
	    'ampersand',
	    'quotesingle',
	    'parenleft',
	    'parenright',
	    'asterisk',
	    'plus',
	    'comma',
	    'hyphen',
	    'period',
	    'slash',
	    'zero',
	    'one',
	    'two',
	    'three',
	    'four',
	    'five',
	    'six',
	    'seven',
	    'eight',
	    'nine',
	    'colon',
	    'semicolon',
	    'less',
	    'equal',
	    'greater',
	    'question',
	    'at',
	    'A',
	    'B',
	    'C',
	    'D',
	    'E',
	    'F',
	    'G',
	    'H',
	    'I',
	    'J',
	    'K',
	    'L',
	    'M',
	    'N',
	    'O',
	    'P',
	    'Q',
	    'R',
	    'S',
	    'T',
	    'U',
	    'V',
	    'W',
	    'X',
	    'Y',
	    'Z',
	    'bracketleft',
	    'backslash',
	    'bracketright',
	    'asciicircum',
	    'underscore',
	    'grave',
	    'a',
	    'b',
	    'c',
	    'd',
	    'e',
	    'f',
	    'g',
	    'h',
	    'i',
	    'j',
	    'k',
	    'l',
	    'm',
	    'n',
	    'o',
	    'p',
	    'q',
	    'r',
	    's',
	    't',
	    'u',
	    'v',
	    'w',
	    'x',
	    'y',
	    'z',
	    'braceleft',
	    'bar',
	    'braceright',
	    'asciitilde',
	    'bullet',
	    'Euro',
	    'bullet',
	    'quotesinglbase',
	    'florin',
	    'quotedblbase',
	    'ellipsis',
	    'dagger',
	    'daggerdbl',
	    'circumflex',
	    'perthousand',
	    'Scaron',
	    'guilsinglleft',
	    'OE',
	    'bullet',
	    'Zcaron',
	    'bullet',
	    'bullet',
	    'quoteleft',
	    'quoteright',
	    'quotedblleft',
	    'quotedblright',
	    'bullet',
	    'endash',
	    'emdash',
	    'tilde',
	    'trademark',
	    'scaron',
	    'guilsinglright',
	    'oe',
	    'bullet',
	    'zcaron',
	    'Ydieresis',
	    'space',
	    'exclamdown',
	    'cent',
	    'sterling',
	    'currency',
	    'yen',
	    'brokenbar',
	    'section',
	    'dieresis',
	    'copyright',
	    'ordfeminine',
	    'guillemotleft',
	    'logicalnot',
	    'hyphen',
	    'registered',
	    'macron',
	    'degree',
	    'plusminus',
	    'twosuperior',
	    'threesuperior',
	    'acute',
	    'mu',
	    'paragraph',
	    'periodcentered',
	    'cedilla',
	    'onesuperior',
	    'ordmasculine',
	    'guillemotright',
	    'onequarter',
	    'onehalf',
	    'threequarters',
	    'questiondown',
	    'Agrave',
	    'Aacute',
	    'Acircumflex',
	    'Atilde',
	    'Adieresis',
	    'Aring',
	    'AE',
	    'Ccedilla',
	    'Egrave',
	    'Eacute',
	    'Ecircumflex',
	    'Edieresis',
	    'Igrave',
	    'Iacute',
	    'Icircumflex',
	    'Idieresis',
	    'Eth',
	    'Ntilde',
	    'Ograve',
	    'Oacute',
	    'Ocircumflex',
	    'Otilde',
	    'Odieresis',
	    'multiply',
	    'Oslash',
	    'Ugrave',
	    'Uacute',
	    'Ucircumflex',
	    'Udieresis',
	    'Yacute',
	    'Thorn',
	    'germandbls',
	    'agrave',
	    'aacute',
	    'acircumflex',
	    'atilde',
	    'adieresis',
	    'aring',
	    'ae',
	    'ccedilla',
	    'egrave',
	    'eacute',
	    'ecircumflex',
	    'edieresis',
	    'igrave',
	    'iacute',
	    'icircumflex',
	    'idieresis',
	    'eth',
	    'ntilde',
	    'ograve',
	    'oacute',
	    'ocircumflex',
	    'otilde',
	    'odieresis',
	    'divide',
	    'oslash',
	    'ugrave',
	    'uacute',
	    'ucircumflex',
	    'udieresis',
	    'yacute',
	    'thorn',
	    'ydieresis'
	   ];
	   var SymbolSetEncoding = [
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'space',
	    'exclam',
	    'universal',
	    'numbersign',
	    'existential',
	    'percent',
	    'ampersand',
	    'suchthat',
	    'parenleft',
	    'parenright',
	    'asteriskmath',
	    'plus',
	    'comma',
	    'minus',
	    'period',
	    'slash',
	    'zero',
	    'one',
	    'two',
	    'three',
	    'four',
	    'five',
	    'six',
	    'seven',
	    'eight',
	    'nine',
	    'colon',
	    'semicolon',
	    'less',
	    'equal',
	    'greater',
	    'question',
	    'congruent',
	    'Alpha',
	    'Beta',
	    'Chi',
	    'Delta',
	    'Epsilon',
	    'Phi',
	    'Gamma',
	    'Eta',
	    'Iota',
	    'theta1',
	    'Kappa',
	    'Lambda',
	    'Mu',
	    'Nu',
	    'Omicron',
	    'Pi',
	    'Theta',
	    'Rho',
	    'Sigma',
	    'Tau',
	    'Upsilon',
	    'sigma1',
	    'Omega',
	    'Xi',
	    'Psi',
	    'Zeta',
	    'bracketleft',
	    'therefore',
	    'bracketright',
	    'perpendicular',
	    'underscore',
	    'radicalex',
	    'alpha',
	    'beta',
	    'chi',
	    'delta',
	    'epsilon',
	    'phi',
	    'gamma',
	    'eta',
	    'iota',
	    'phi1',
	    'kappa',
	    'lambda',
	    'mu',
	    'nu',
	    'omicron',
	    'pi',
	    'theta',
	    'rho',
	    'sigma',
	    'tau',
	    'upsilon',
	    'omega1',
	    'omega',
	    'xi',
	    'psi',
	    'zeta',
	    'braceleft',
	    'bar',
	    'braceright',
	    'similar',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'Euro',
	    'Upsilon1',
	    'minute',
	    'lessequal',
	    'fraction',
	    'infinity',
	    'florin',
	    'club',
	    'diamond',
	    'heart',
	    'spade',
	    'arrowboth',
	    'arrowleft',
	    'arrowup',
	    'arrowright',
	    'arrowdown',
	    'degree',
	    'plusminus',
	    'second',
	    'greaterequal',
	    'multiply',
	    'proportional',
	    'partialdiff',
	    'bullet',
	    'divide',
	    'notequal',
	    'equivalence',
	    'approxequal',
	    'ellipsis',
	    'arrowvertex',
	    'arrowhorizex',
	    'carriagereturn',
	    'aleph',
	    'Ifraktur',
	    'Rfraktur',
	    'weierstrass',
	    'circlemultiply',
	    'circleplus',
	    'emptyset',
	    'intersection',
	    'union',
	    'propersuperset',
	    'reflexsuperset',
	    'notsubset',
	    'propersubset',
	    'reflexsubset',
	    'element',
	    'notelement',
	    'angle',
	    'gradient',
	    'registerserif',
	    'copyrightserif',
	    'trademarkserif',
	    'product',
	    'radical',
	    'dotmath',
	    'logicalnot',
	    'logicaland',
	    'logicalor',
	    'arrowdblboth',
	    'arrowdblleft',
	    'arrowdblup',
	    'arrowdblright',
	    'arrowdbldown',
	    'lozenge',
	    'angleleft',
	    'registersans',
	    'copyrightsans',
	    'trademarksans',
	    'summation',
	    'parenlefttp',
	    'parenleftex',
	    'parenleftbt',
	    'bracketlefttp',
	    'bracketleftex',
	    'bracketleftbt',
	    'bracelefttp',
	    'braceleftmid',
	    'braceleftbt',
	    'braceex',
	    '',
	    'angleright',
	    'integral',
	    'integraltp',
	    'integralex',
	    'integralbt',
	    'parenrighttp',
	    'parenrightex',
	    'parenrightbt',
	    'bracketrighttp',
	    'bracketrightex',
	    'bracketrightbt',
	    'bracerighttp',
	    'bracerightmid',
	    'bracerightbt'
	   ];
	   var ZapfDingbatsEncoding = [
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'space',
	    'a1',
	    'a2',
	    'a202',
	    'a3',
	    'a4',
	    'a5',
	    'a119',
	    'a118',
	    'a117',
	    'a11',
	    'a12',
	    'a13',
	    'a14',
	    'a15',
	    'a16',
	    'a105',
	    'a17',
	    'a18',
	    'a19',
	    'a20',
	    'a21',
	    'a22',
	    'a23',
	    'a24',
	    'a25',
	    'a26',
	    'a27',
	    'a28',
	    'a6',
	    'a7',
	    'a8',
	    'a9',
	    'a10',
	    'a29',
	    'a30',
	    'a31',
	    'a32',
	    'a33',
	    'a34',
	    'a35',
	    'a36',
	    'a37',
	    'a38',
	    'a39',
	    'a40',
	    'a41',
	    'a42',
	    'a43',
	    'a44',
	    'a45',
	    'a46',
	    'a47',
	    'a48',
	    'a49',
	    'a50',
	    'a51',
	    'a52',
	    'a53',
	    'a54',
	    'a55',
	    'a56',
	    'a57',
	    'a58',
	    'a59',
	    'a60',
	    'a61',
	    'a62',
	    'a63',
	    'a64',
	    'a65',
	    'a66',
	    'a67',
	    'a68',
	    'a69',
	    'a70',
	    'a71',
	    'a72',
	    'a73',
	    'a74',
	    'a203',
	    'a75',
	    'a204',
	    'a76',
	    'a77',
	    'a78',
	    'a79',
	    'a81',
	    'a82',
	    'a83',
	    'a84',
	    'a97',
	    'a98',
	    'a99',
	    'a100',
	    '',
	    'a89',
	    'a90',
	    'a93',
	    'a94',
	    'a91',
	    'a92',
	    'a205',
	    'a85',
	    'a206',
	    'a86',
	    'a87',
	    'a88',
	    'a95',
	    'a96',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    '',
	    'a101',
	    'a102',
	    'a103',
	    'a104',
	    'a106',
	    'a107',
	    'a108',
	    'a112',
	    'a111',
	    'a110',
	    'a109',
	    'a120',
	    'a121',
	    'a122',
	    'a123',
	    'a124',
	    'a125',
	    'a126',
	    'a127',
	    'a128',
	    'a129',
	    'a130',
	    'a131',
	    'a132',
	    'a133',
	    'a134',
	    'a135',
	    'a136',
	    'a137',
	    'a138',
	    'a139',
	    'a140',
	    'a141',
	    'a142',
	    'a143',
	    'a144',
	    'a145',
	    'a146',
	    'a147',
	    'a148',
	    'a149',
	    'a150',
	    'a151',
	    'a152',
	    'a153',
	    'a154',
	    'a155',
	    'a156',
	    'a157',
	    'a158',
	    'a159',
	    'a160',
	    'a161',
	    'a163',
	    'a164',
	    'a196',
	    'a165',
	    'a192',
	    'a166',
	    'a167',
	    'a168',
	    'a169',
	    'a170',
	    'a171',
	    'a172',
	    'a173',
	    'a162',
	    'a174',
	    'a175',
	    'a176',
	    'a177',
	    'a178',
	    'a179',
	    'a193',
	    'a180',
	    'a199',
	    'a181',
	    'a200',
	    'a182',
	    '',
	    'a201',
	    'a183',
	    'a184',
	    'a197',
	    'a185',
	    'a194',
	    'a198',
	    'a186',
	    'a195',
	    'a187',
	    'a188',
	    'a189',
	    'a190',
	    'a191'
	   ];
	   function getEncoding(encodingName) {
	    switch (encodingName) {
	    case 'WinAnsiEncoding':
	     return WinAnsiEncoding;
	    case 'StandardEncoding':
	     return StandardEncoding;
	    case 'MacRomanEncoding':
	     return MacRomanEncoding;
	    case 'SymbolSetEncoding':
	     return SymbolSetEncoding;
	    case 'ZapfDingbatsEncoding':
	     return ZapfDingbatsEncoding;
	    case 'ExpertEncoding':
	     return ExpertEncoding;
	    case 'MacExpertEncoding':
	     return MacExpertEncoding;
	    default:
	     return null;
	    }
	   }
	   exports.WinAnsiEncoding = WinAnsiEncoding;
	   exports.StandardEncoding = StandardEncoding;
	   exports.MacRomanEncoding = MacRomanEncoding;
	   exports.SymbolSetEncoding = SymbolSetEncoding;
	   exports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;
	   exports.ExpertEncoding = ExpertEncoding;
	   exports.getEncoding = getEncoding;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsSharedUtil = {});
	  }(this, function (exports) {
	   var globalScope = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this;
	   var FONT_IDENTITY_MATRIX = [
	    0.001,
	    0,
	    0,
	    0.001,
	    0,
	    0
	   ];
	   var TextRenderingMode = {
	    FILL: 0,
	    STROKE: 1,
	    FILL_STROKE: 2,
	    INVISIBLE: 3,
	    FILL_ADD_TO_PATH: 4,
	    STROKE_ADD_TO_PATH: 5,
	    FILL_STROKE_ADD_TO_PATH: 6,
	    ADD_TO_PATH: 7,
	    FILL_STROKE_MASK: 3,
	    ADD_TO_PATH_FLAG: 4
	   };
	   var ImageKind = {
	    GRAYSCALE_1BPP: 1,
	    RGB_24BPP: 2,
	    RGBA_32BPP: 3
	   };
	   var AnnotationType = {
	    TEXT: 1,
	    LINK: 2,
	    FREETEXT: 3,
	    LINE: 4,
	    SQUARE: 5,
	    CIRCLE: 6,
	    POLYGON: 7,
	    POLYLINE: 8,
	    HIGHLIGHT: 9,
	    UNDERLINE: 10,
	    SQUIGGLY: 11,
	    STRIKEOUT: 12,
	    STAMP: 13,
	    CARET: 14,
	    INK: 15,
	    POPUP: 16,
	    FILEATTACHMENT: 17,
	    SOUND: 18,
	    MOVIE: 19,
	    WIDGET: 20,
	    SCREEN: 21,
	    PRINTERMARK: 22,
	    TRAPNET: 23,
	    WATERMARK: 24,
	    THREED: 25,
	    REDACT: 26
	   };
	   var AnnotationFlag = {
	    INVISIBLE: 0x01,
	    HIDDEN: 0x02,
	    PRINT: 0x04,
	    NOZOOM: 0x08,
	    NOROTATE: 0x10,
	    NOVIEW: 0x20,
	    READONLY: 0x40,
	    LOCKED: 0x80,
	    TOGGLENOVIEW: 0x100,
	    LOCKEDCONTENTS: 0x200
	   };
	   var AnnotationFieldFlag = {
	    READONLY: 0x0000001,
	    REQUIRED: 0x0000002,
	    NOEXPORT: 0x0000004,
	    MULTILINE: 0x0001000,
	    PASSWORD: 0x0002000,
	    NOTOGGLETOOFF: 0x0004000,
	    RADIO: 0x0008000,
	    PUSHBUTTON: 0x0010000,
	    COMBO: 0x0020000,
	    EDIT: 0x0040000,
	    SORT: 0x0080000,
	    FILESELECT: 0x0100000,
	    MULTISELECT: 0x0200000,
	    DONOTSPELLCHECK: 0x0400000,
	    DONOTSCROLL: 0x0800000,
	    COMB: 0x1000000,
	    RICHTEXT: 0x2000000,
	    RADIOSINUNISON: 0x2000000,
	    COMMITONSELCHANGE: 0x4000000
	   };
	   var AnnotationBorderStyleType = {
	    SOLID: 1,
	    DASHED: 2,
	    BEVELED: 3,
	    INSET: 4,
	    UNDERLINE: 5
	   };
	   var StreamType = {
	    UNKNOWN: 0,
	    FLATE: 1,
	    LZW: 2,
	    DCT: 3,
	    JPX: 4,
	    JBIG: 5,
	    A85: 6,
	    AHX: 7,
	    CCF: 8,
	    RL: 9
	   };
	   var FontType = {
	    UNKNOWN: 0,
	    TYPE1: 1,
	    TYPE1C: 2,
	    CIDFONTTYPE0: 3,
	    CIDFONTTYPE0C: 4,
	    TRUETYPE: 5,
	    CIDFONTTYPE2: 6,
	    TYPE3: 7,
	    OPENTYPE: 8,
	    TYPE0: 9,
	    MMTYPE1: 10
	   };
	   var VERBOSITY_LEVELS = {
	    errors: 0,
	    warnings: 1,
	    infos: 5
	   };
	   var OPS = {
	    dependency: 1,
	    setLineWidth: 2,
	    setLineCap: 3,
	    setLineJoin: 4,
	    setMiterLimit: 5,
	    setDash: 6,
	    setRenderingIntent: 7,
	    setFlatness: 8,
	    setGState: 9,
	    save: 10,
	    restore: 11,
	    transform: 12,
	    moveTo: 13,
	    lineTo: 14,
	    curveTo: 15,
	    curveTo2: 16,
	    curveTo3: 17,
	    closePath: 18,
	    rectangle: 19,
	    stroke: 20,
	    closeStroke: 21,
	    fill: 22,
	    eoFill: 23,
	    fillStroke: 24,
	    eoFillStroke: 25,
	    closeFillStroke: 26,
	    closeEOFillStroke: 27,
	    endPath: 28,
	    clip: 29,
	    eoClip: 30,
	    beginText: 31,
	    endText: 32,
	    setCharSpacing: 33,
	    setWordSpacing: 34,
	    setHScale: 35,
	    setLeading: 36,
	    setFont: 37,
	    setTextRenderingMode: 38,
	    setTextRise: 39,
	    moveText: 40,
	    setLeadingMoveText: 41,
	    setTextMatrix: 42,
	    nextLine: 43,
	    showText: 44,
	    showSpacedText: 45,
	    nextLineShowText: 46,
	    nextLineSetSpacingShowText: 47,
	    setCharWidth: 48,
	    setCharWidthAndBounds: 49,
	    setStrokeColorSpace: 50,
	    setFillColorSpace: 51,
	    setStrokeColor: 52,
	    setStrokeColorN: 53,
	    setFillColor: 54,
	    setFillColorN: 55,
	    setStrokeGray: 56,
	    setFillGray: 57,
	    setStrokeRGBColor: 58,
	    setFillRGBColor: 59,
	    setStrokeCMYKColor: 60,
	    setFillCMYKColor: 61,
	    shadingFill: 62,
	    beginInlineImage: 63,
	    beginImageData: 64,
	    endInlineImage: 65,
	    paintXObject: 66,
	    markPoint: 67,
	    markPointProps: 68,
	    beginMarkedContent: 69,
	    beginMarkedContentProps: 70,
	    endMarkedContent: 71,
	    beginCompat: 72,
	    endCompat: 73,
	    paintFormXObjectBegin: 74,
	    paintFormXObjectEnd: 75,
	    beginGroup: 76,
	    endGroup: 77,
	    beginAnnotations: 78,
	    endAnnotations: 79,
	    beginAnnotation: 80,
	    endAnnotation: 81,
	    paintJpegXObject: 82,
	    paintImageMaskXObject: 83,
	    paintImageMaskXObjectGroup: 84,
	    paintImageXObject: 85,
	    paintInlineImageXObject: 86,
	    paintInlineImageXObjectGroup: 87,
	    paintImageXObjectRepeat: 88,
	    paintImageMaskXObjectRepeat: 89,
	    paintSolidColorImageMask: 90,
	    constructPath: 91
	   };
	   var verbosity = VERBOSITY_LEVELS.warnings;
	   function setVerbosityLevel(level) {
	    verbosity = level;
	   }
	   function getVerbosityLevel() {
	    return verbosity;
	   }
	   function info(msg) {
	    if (verbosity >= VERBOSITY_LEVELS.infos) {
	     console.log('Info: ' + msg);
	    }
	   }
	   function warn(msg) {
	    if (verbosity >= VERBOSITY_LEVELS.warnings) {
	     console.log('Warning: ' + msg);
	    }
	   }
	   function deprecated(details) {
	    console.log('Deprecated API usage: ' + details);
	   }
	   function error(msg) {
	    if (verbosity >= VERBOSITY_LEVELS.errors) {
	     console.log('Error: ' + msg);
	     console.log(backtrace());
	    }
	    throw new Error(msg);
	   }
	   function backtrace() {
	    try {
	     throw new Error();
	    } catch (e) {
	     return e.stack ? e.stack.split('\n').slice(2).join('\n') : '';
	    }
	   }
	   function assert(cond, msg) {
	    if (!cond) {
	     error(msg);
	    }
	   }
	   var UNSUPPORTED_FEATURES = {
	    unknown: 'unknown',
	    forms: 'forms',
	    javaScript: 'javaScript',
	    smask: 'smask',
	    shadingPattern: 'shadingPattern',
	    font: 'font'
	   };
	   function isSameOrigin(baseUrl, otherUrl) {
	    try {
	     var base = new URL(baseUrl);
	     if (!base.origin || base.origin === 'null') {
	      return false;
	     }
	    } catch (e) {
	     return false;
	    }
	    var other = new URL(otherUrl, base);
	    return base.origin === other.origin;
	   }
	   function isValidProtocol(url) {
	    if (!url) {
	     return false;
	    }
	    switch (url.protocol) {
	    case 'http:':
	    case 'https:':
	    case 'ftp:':
	    case 'mailto:':
	    case 'tel:':
	     return true;
	    default:
	     return false;
	    }
	   }
	   function createValidAbsoluteUrl(url, baseUrl) {
	    if (!url) {
	     return null;
	    }
	    try {
	     var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);
	     if (isValidProtocol(absoluteUrl)) {
	      return absoluteUrl;
	     }
	    } catch (ex) {
	    }
	    return null;
	   }
	   function shadow(obj, prop, value) {
	    Object.defineProperty(obj, prop, {
	     value: value,
	     enumerable: true,
	     configurable: true,
	     writable: false
	    });
	    return value;
	   }
	   function getLookupTableFactory(initializer) {
	    var lookup;
	    return function () {
	     if (initializer) {
	      lookup = Object.create(null);
	      initializer(lookup);
	      initializer = null;
	     }
	     return lookup;
	    };
	   }
	   var PasswordResponses = {
	    NEED_PASSWORD: 1,
	    INCORRECT_PASSWORD: 2
	   };
	   var PasswordException = function PasswordExceptionClosure() {
	    function PasswordException(msg, code) {
	     this.name = 'PasswordException';
	     this.message = msg;
	     this.code = code;
	    }
	    PasswordException.prototype = new Error();
	    PasswordException.constructor = PasswordException;
	    return PasswordException;
	   }();
	   var UnknownErrorException = function UnknownErrorExceptionClosure() {
	    function UnknownErrorException(msg, details) {
	     this.name = 'UnknownErrorException';
	     this.message = msg;
	     this.details = details;
	    }
	    UnknownErrorException.prototype = new Error();
	    UnknownErrorException.constructor = UnknownErrorException;
	    return UnknownErrorException;
	   }();
	   var InvalidPDFException = function InvalidPDFExceptionClosure() {
	    function InvalidPDFException(msg) {
	     this.name = 'InvalidPDFException';
	     this.message = msg;
	    }
	    InvalidPDFException.prototype = new Error();
	    InvalidPDFException.constructor = InvalidPDFException;
	    return InvalidPDFException;
	   }();
	   var MissingPDFException = function MissingPDFExceptionClosure() {
	    function MissingPDFException(msg) {
	     this.name = 'MissingPDFException';
	     this.message = msg;
	    }
	    MissingPDFException.prototype = new Error();
	    MissingPDFException.constructor = MissingPDFException;
	    return MissingPDFException;
	   }();
	   var UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {
	    function UnexpectedResponseException(msg, status) {
	     this.name = 'UnexpectedResponseException';
	     this.message = msg;
	     this.status = status;
	    }
	    UnexpectedResponseException.prototype = new Error();
	    UnexpectedResponseException.constructor = UnexpectedResponseException;
	    return UnexpectedResponseException;
	   }();
	   var NotImplementedException = function NotImplementedExceptionClosure() {
	    function NotImplementedException(msg) {
	     this.message = msg;
	    }
	    NotImplementedException.prototype = new Error();
	    NotImplementedException.prototype.name = 'NotImplementedException';
	    NotImplementedException.constructor = NotImplementedException;
	    return NotImplementedException;
	   }();
	   var MissingDataException = function MissingDataExceptionClosure() {
	    function MissingDataException(begin, end) {
	     this.begin = begin;
	     this.end = end;
	     this.message = 'Missing data [' + begin + ', ' + end + ')';
	    }
	    MissingDataException.prototype = new Error();
	    MissingDataException.prototype.name = 'MissingDataException';
	    MissingDataException.constructor = MissingDataException;
	    return MissingDataException;
	   }();
	   var XRefParseException = function XRefParseExceptionClosure() {
	    function XRefParseException(msg) {
	     this.message = msg;
	    }
	    XRefParseException.prototype = new Error();
	    XRefParseException.prototype.name = 'XRefParseException';
	    XRefParseException.constructor = XRefParseException;
	    return XRefParseException;
	   }();
	   var NullCharactersRegExp = /\x00/g;
	   function removeNullCharacters(str) {
	    if (typeof str !== 'string') {
	     warn('The argument for removeNullCharacters must be a string.');
	     return str;
	    }
	    return str.replace(NullCharactersRegExp, '');
	   }
	   function bytesToString(bytes) {
	    assert(bytes !== null && typeof bytes === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');
	    var length = bytes.length;
	    var MAX_ARGUMENT_COUNT = 8192;
	    if (length < MAX_ARGUMENT_COUNT) {
	     return String.fromCharCode.apply(null, bytes);
	    }
	    var strBuf = [];
	    for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {
	     var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);
	     var chunk = bytes.subarray(i, chunkEnd);
	     strBuf.push(String.fromCharCode.apply(null, chunk));
	    }
	    return strBuf.join('');
	   }
	   function stringToBytes(str) {
	    assert(typeof str === 'string', 'Invalid argument for stringToBytes');
	    var length = str.length;
	    var bytes = new Uint8Array(length);
	    for (var i = 0; i < length; ++i) {
	     bytes[i] = str.charCodeAt(i) & 0xFF;
	    }
	    return bytes;
	   }
	   function arrayByteLength(arr) {
	    if (arr.length !== undefined) {
	     return arr.length;
	    }
	    assert(arr.byteLength !== undefined);
	    return arr.byteLength;
	   }
	   function arraysToBytes(arr) {
	    if (arr.length === 1 && arr[0] instanceof Uint8Array) {
	     return arr[0];
	    }
	    var resultLength = 0;
	    var i, ii = arr.length;
	    var item, itemLength;
	    for (i = 0; i < ii; i++) {
	     item = arr[i];
	     itemLength = arrayByteLength(item);
	     resultLength += itemLength;
	    }
	    var pos = 0;
	    var data = new Uint8Array(resultLength);
	    for (i = 0; i < ii; i++) {
	     item = arr[i];
	     if (!(item instanceof Uint8Array)) {
	      if (typeof item === 'string') {
	       item = stringToBytes(item);
	      } else {
	       item = new Uint8Array(item);
	      }
	     }
	     itemLength = item.byteLength;
	     data.set(item, pos);
	     pos += itemLength;
	    }
	    return data;
	   }
	   function string32(value) {
	    return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);
	   }
	   function log2(x) {
	    var n = 1, i = 0;
	    while (x > n) {
	     n <<= 1;
	     i++;
	    }
	    return i;
	   }
	   function readInt8(data, start) {
	    return data[start] << 24 >> 24;
	   }
	   function readUint16(data, offset) {
	    return data[offset] << 8 | data[offset + 1];
	   }
	   function readUint32(data, offset) {
	    return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;
	   }
	   function isLittleEndian() {
	    var buffer8 = new Uint8Array(2);
	    buffer8[0] = 1;
	    var buffer16 = new Uint16Array(buffer8.buffer);
	    return buffer16[0] === 1;
	   }
	   function isEvalSupported() {
	    try {
	     new Function('');
	     return true;
	    } catch (e) {
	     return false;
	    }
	   }
	   var Uint32ArrayView = function Uint32ArrayViewClosure() {
	    function Uint32ArrayView(buffer, length) {
	     this.buffer = buffer;
	     this.byteLength = buffer.length;
	     this.length = length === undefined ? this.byteLength >> 2 : length;
	     ensureUint32ArrayViewProps(this.length);
	    }
	    Uint32ArrayView.prototype = Object.create(null);
	    var uint32ArrayViewSetters = 0;
	    function createUint32ArrayProp(index) {
	     return {
	      get: function () {
	       var buffer = this.buffer, offset = index << 2;
	       return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;
	      },
	      set: function (value) {
	       var buffer = this.buffer, offset = index << 2;
	       buffer[offset] = value & 255;
	       buffer[offset + 1] = value >> 8 & 255;
	       buffer[offset + 2] = value >> 16 & 255;
	       buffer[offset + 3] = value >>> 24 & 255;
	      }
	     };
	    }
	    function ensureUint32ArrayViewProps(length) {
	     while (uint32ArrayViewSetters < length) {
	      Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));
	      uint32ArrayViewSetters++;
	     }
	    }
	    return Uint32ArrayView;
	   }();
	   exports.Uint32ArrayView = Uint32ArrayView;
	   var IDENTITY_MATRIX = [
	    1,
	    0,
	    0,
	    1,
	    0,
	    0
	   ];
	   var Util = function UtilClosure() {
	    function Util() {
	    }
	    var rgbBuf = [
	     'rgb(',
	     0,
	     ',',
	     0,
	     ',',
	     0,
	     ')'
	    ];
	    Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {
	     rgbBuf[1] = r;
	     rgbBuf[3] = g;
	     rgbBuf[5] = b;
	     return rgbBuf.join('');
	    };
	    Util.transform = function Util_transform(m1, m2) {
	     return [
	      m1[0] * m2[0] + m1[2] * m2[1],
	      m1[1] * m2[0] + m1[3] * m2[1],
	      m1[0] * m2[2] + m1[2] * m2[3],
	      m1[1] * m2[2] + m1[3] * m2[3],
	      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],
	      m1[1] * m2[4] + m1[3] * m2[5] + m1[5]
	     ];
	    };
	    Util.applyTransform = function Util_applyTransform(p, m) {
	     var xt = p[0] * m[0] + p[1] * m[2] + m[4];
	     var yt = p[0] * m[1] + p[1] * m[3] + m[5];
	     return [
	      xt,
	      yt
	     ];
	    };
	    Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {
	     var d = m[0] * m[3] - m[1] * m[2];
	     var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;
	     var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;
	     return [
	      xt,
	      yt
	     ];
	    };
	    Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {
	     var p1 = Util.applyTransform(r, m);
	     var p2 = Util.applyTransform(r.slice(2, 4), m);
	     var p3 = Util.applyTransform([
	      r[0],
	      r[3]
	     ], m);
	     var p4 = Util.applyTransform([
	      r[2],
	      r[1]
	     ], m);
	     return [
	      Math.min(p1[0], p2[0], p3[0], p4[0]),
	      Math.min(p1[1], p2[1], p3[1], p4[1]),
	      Math.max(p1[0], p2[0], p3[0], p4[0]),
	      Math.max(p1[1], p2[1], p3[1], p4[1])
	     ];
	    };
	    Util.inverseTransform = function Util_inverseTransform(m) {
	     var d = m[0] * m[3] - m[1] * m[2];
	     return [
	      m[3] / d,
	      -m[1] / d,
	      -m[2] / d,
	      m[0] / d,
	      (m[2] * m[5] - m[4] * m[3]) / d,
	      (m[4] * m[1] - m[5] * m[0]) / d
	     ];
	    };
	    Util.apply3dTransform = function Util_apply3dTransform(m, v) {
	     return [
	      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],
	      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],
	      m[6] * v[0] + m[7] * v[1] + m[8] * v[2]
	     ];
	    };
	    Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {
	     var transpose = [
	      m[0],
	      m[2],
	      m[1],
	      m[3]
	     ];
	     var a = m[0] * transpose[0] + m[1] * transpose[2];
	     var b = m[0] * transpose[1] + m[1] * transpose[3];
	     var c = m[2] * transpose[0] + m[3] * transpose[2];
	     var d = m[2] * transpose[1] + m[3] * transpose[3];
	     var first = (a + d) / 2;
	     var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;
	     var sx = first + second || 1;
	     var sy = first - second || 1;
	     return [
	      Math.sqrt(sx),
	      Math.sqrt(sy)
	     ];
	    };
	    Util.normalizeRect = function Util_normalizeRect(rect) {
	     var r = rect.slice(0);
	     if (rect[0] > rect[2]) {
	      r[0] = rect[2];
	      r[2] = rect[0];
	     }
	     if (rect[1] > rect[3]) {
	      r[1] = rect[3];
	      r[3] = rect[1];
	     }
	     return r;
	    };
	    Util.intersect = function Util_intersect(rect1, rect2) {
	     function compare(a, b) {
	      return a - b;
	     }
	     var orderedX = [
	       rect1[0],
	       rect1[2],
	       rect2[0],
	       rect2[2]
	      ].sort(compare), orderedY = [
	       rect1[1],
	       rect1[3],
	       rect2[1],
	       rect2[3]
	      ].sort(compare), result = [];
	     rect1 = Util.normalizeRect(rect1);
	     rect2 = Util.normalizeRect(rect2);
	     if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {
	      result[0] = orderedX[1];
	      result[2] = orderedX[2];
	     } else {
	      return false;
	     }
	     if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {
	      result[1] = orderedY[1];
	      result[3] = orderedY[2];
	     } else {
	      return false;
	     }
	     return result;
	    };
	    Util.sign = function Util_sign(num) {
	     return num < 0 ? -1 : 1;
	    };
	    var ROMAN_NUMBER_MAP = [
	     '',
	     'C',
	     'CC',
	     'CCC',
	     'CD',
	     'D',
	     'DC',
	     'DCC',
	     'DCCC',
	     'CM',
	     '',
	     'X',
	     'XX',
	     'XXX',
	     'XL',
	     'L',
	     'LX',
	     'LXX',
	     'LXXX',
	     'XC',
	     '',
	     'I',
	     'II',
	     'III',
	     'IV',
	     'V',
	     'VI',
	     'VII',
	     'VIII',
	     'IX'
	    ];
	    Util.toRoman = function Util_toRoman(number, lowerCase) {
	     assert(isInt(number) && number > 0, 'The number should be a positive integer.');
	     var pos, romanBuf = [];
	     while (number >= 1000) {
	      number -= 1000;
	      romanBuf.push('M');
	     }
	     pos = number / 100 | 0;
	     number %= 100;
	     romanBuf.push(ROMAN_NUMBER_MAP[pos]);
	     pos = number / 10 | 0;
	     number %= 10;
	     romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);
	     romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);
	     var romanStr = romanBuf.join('');
	     return lowerCase ? romanStr.toLowerCase() : romanStr;
	    };
	    Util.appendToArray = function Util_appendToArray(arr1, arr2) {
	     Array.prototype.push.apply(arr1, arr2);
	    };
	    Util.prependToArray = function Util_prependToArray(arr1, arr2) {
	     Array.prototype.unshift.apply(arr1, arr2);
	    };
	    Util.extendObj = function extendObj(obj1, obj2) {
	     for (var key in obj2) {
	      obj1[key] = obj2[key];
	     }
	    };
	    Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {
	     while (dict && !dict.has(name)) {
	      dict = dict.get('Parent');
	     }
	     if (!dict) {
	      return null;
	     }
	     return getArray ? dict.getArray(name) : dict.get(name);
	    };
	    Util.inherit = function Util_inherit(sub, base, prototype) {
	     sub.prototype = Object.create(base.prototype);
	     sub.prototype.constructor = sub;
	     for (var prop in prototype) {
	      sub.prototype[prop] = prototype[prop];
	     }
	    };
	    Util.loadScript = function Util_loadScript(src, callback) {
	     var script = document.createElement('script');
	     var loaded = false;
	     script.setAttribute('src', src);
	     if (callback) {
	      script.onload = function () {
	       if (!loaded) {
	        callback();
	       }
	       loaded = true;
	      };
	     }
	     document.getElementsByTagName('head')[0].appendChild(script);
	    };
	    return Util;
	   }();
	   var PageViewport = function PageViewportClosure() {
	    function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {
	     this.viewBox = viewBox;
	     this.scale = scale;
	     this.rotation = rotation;
	     this.offsetX = offsetX;
	     this.offsetY = offsetY;
	     var centerX = (viewBox[2] + viewBox[0]) / 2;
	     var centerY = (viewBox[3] + viewBox[1]) / 2;
	     var rotateA, rotateB, rotateC, rotateD;
	     rotation = rotation % 360;
	     rotation = rotation < 0 ? rotation + 360 : rotation;
	     switch (rotation) {
	     case 180:
	      rotateA = -1;
	      rotateB = 0;
	      rotateC = 0;
	      rotateD = 1;
	      break;
	     case 90:
	      rotateA = 0;
	      rotateB = 1;
	      rotateC = 1;
	      rotateD = 0;
	      break;
	     case 270:
	      rotateA = 0;
	      rotateB = -1;
	      rotateC = -1;
	      rotateD = 0;
	      break;
	     default:
	      rotateA = 1;
	      rotateB = 0;
	      rotateC = 0;
	      rotateD = -1;
	      break;
	     }
	     if (dontFlip) {
	      rotateC = -rotateC;
	      rotateD = -rotateD;
	     }
	     var offsetCanvasX, offsetCanvasY;
	     var width, height;
	     if (rotateA === 0) {
	      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;
	      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;
	      width = Math.abs(viewBox[3] - viewBox[1]) * scale;
	      height = Math.abs(viewBox[2] - viewBox[0]) * scale;
	     } else {
	      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;
	      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;
	      width = Math.abs(viewBox[2] - viewBox[0]) * scale;
	      height = Math.abs(viewBox[3] - viewBox[1]) * scale;
	     }
	     this.transform = [
	      rotateA * scale,
	      rotateB * scale,
	      rotateC * scale,
	      rotateD * scale,
	      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,
	      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY
	     ];
	     this.width = width;
	     this.height = height;
	     this.fontScale = scale;
	    }
	    PageViewport.prototype = {
	     clone: function PageViewPort_clone(args) {
	      args = args || {};
	      var scale = 'scale' in args ? args.scale : this.scale;
	      var rotation = 'rotation' in args ? args.rotation : this.rotation;
	      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);
	     },
	     convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {
	      return Util.applyTransform([
	       x,
	       y
	      ], this.transform);
	     },
	     convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {
	      var tl = Util.applyTransform([
	       rect[0],
	       rect[1]
	      ], this.transform);
	      var br = Util.applyTransform([
	       rect[2],
	       rect[3]
	      ], this.transform);
	      return [
	       tl[0],
	       tl[1],
	       br[0],
	       br[1]
	      ];
	     },
	     convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {
	      return Util.applyInverseTransform([
	       x,
	       y
	      ], this.transform);
	     }
	    };
	    return PageViewport;
	   }();
	   var PDFStringTranslateTable = [
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0x2D8,
	    0x2C7,
	    0x2C6,
	    0x2D9,
	    0x2DD,
	    0x2DB,
	    0x2DA,
	    0x2DC,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0,
	    0x2022,
	    0x2020,
	    0x2021,
	    0x2026,
	    0x2014,
	    0x2013,
	    0x192,
	    0x2044,
	    0x2039,
	    0x203A,
	    0x2212,
	    0x2030,
	    0x201E,
	    0x201C,
	    0x201D,
	    0x2018,
	    0x2019,
	    0x201A,
	    0x2122,
	    0xFB01,
	    0xFB02,
	    0x141,
	    0x152,
	    0x160,
	    0x178,
	    0x17D,
	    0x131,
	    0x142,
	    0x153,
	    0x161,
	    0x17E,
	    0,
	    0x20AC
	   ];
	   function stringToPDFString(str) {
	    var i, n = str.length, strBuf = [];
	    if (str[0] === '\xFE' && str[1] === '\xFF') {
	     for (i = 2; i < n; i += 2) {
	      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));
	     }
	    } else {
	     for (i = 0; i < n; ++i) {
	      var code = PDFStringTranslateTable[str.charCodeAt(i)];
	      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));
	     }
	    }
	    return strBuf.join('');
	   }
	   function stringToUTF8String(str) {
	    return decodeURIComponent(escape(str));
	   }
	   function utf8StringToString(str) {
	    return unescape(encodeURIComponent(str));
	   }
	   function isEmptyObj(obj) {
	    for (var key in obj) {
	     return false;
	    }
	    return true;
	   }
	   function isBool(v) {
	    return typeof v === 'boolean';
	   }
	   function isInt(v) {
	    return typeof v === 'number' && (v | 0) === v;
	   }
	   function isNum(v) {
	    return typeof v === 'number';
	   }
	   function isString(v) {
	    return typeof v === 'string';
	   }
	   function isArray(v) {
	    return v instanceof Array;
	   }
	   function isArrayBuffer(v) {
	    return typeof v === 'object' && v !== null && v.byteLength !== undefined;
	   }
	   function isSpace(ch) {
	    return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;
	   }
	   function createPromiseCapability() {
	    var capability = {};
	    capability.promise = new Promise(function (resolve, reject) {
	     capability.resolve = resolve;
	     capability.reject = reject;
	    });
	    return capability;
	   }
	   (function PromiseClosure() {
	    if (globalScope.Promise) {
	     if (typeof globalScope.Promise.all !== 'function') {
	      globalScope.Promise.all = function (iterable) {
	       var count = 0, results = [], resolve, reject;
	       var promise = new globalScope.Promise(function (resolve_, reject_) {
	        resolve = resolve_;
	        reject = reject_;
	       });
	       iterable.forEach(function (p, i) {
	        count++;
	        p.then(function (result) {
	         results[i] = result;
	         count--;
	         if (count === 0) {
	          resolve(results);
	         }
	        }, reject);
	       });
	       if (count === 0) {
	        resolve(results);
	       }
	       return promise;
	      };
	     }
	     if (typeof globalScope.Promise.resolve !== 'function') {
	      globalScope.Promise.resolve = function (value) {
	       return new globalScope.Promise(function (resolve) {
	        resolve(value);
	       });
	      };
	     }
	     if (typeof globalScope.Promise.reject !== 'function') {
	      globalScope.Promise.reject = function (reason) {
	       return new globalScope.Promise(function (resolve, reject) {
	        reject(reason);
	       });
	      };
	     }
	     if (typeof globalScope.Promise.prototype.catch !== 'function') {
	      globalScope.Promise.prototype.catch = function (onReject) {
	       return globalScope.Promise.prototype.then(undefined, onReject);
	      };
	     }
	     return;
	    }
	    var STATUS_PENDING = 0;
	    var STATUS_RESOLVED = 1;
	    var STATUS_REJECTED = 2;
	    var REJECTION_TIMEOUT = 500;
	    var HandlerManager = {
	     handlers: [],
	     running: false,
	     unhandledRejections: [],
	     pendingRejectionCheck: false,
	     scheduleHandlers: function scheduleHandlers(promise) {
	      if (promise._status === STATUS_PENDING) {
	       return;
	      }
	      this.handlers = this.handlers.concat(promise._handlers);
	      promise._handlers = [];
	      if (this.running) {
	       return;
	      }
	      this.running = true;
	      setTimeout(this.runHandlers.bind(this), 0);
	     },
	     runHandlers: function runHandlers() {
	      var RUN_TIMEOUT = 1;
	      var timeoutAt = Date.now() + RUN_TIMEOUT;
	      while (this.handlers.length > 0) {
	       var handler = this.handlers.shift();
	       var nextStatus = handler.thisPromise._status;
	       var nextValue = handler.thisPromise._value;
	       try {
	        if (nextStatus === STATUS_RESOLVED) {
	         if (typeof handler.onResolve === 'function') {
	          nextValue = handler.onResolve(nextValue);
	         }
	        } else if (typeof handler.onReject === 'function') {
	         nextValue = handler.onReject(nextValue);
	         nextStatus = STATUS_RESOLVED;
	         if (handler.thisPromise._unhandledRejection) {
	          this.removeUnhandeledRejection(handler.thisPromise);
	         }
	        }
	       } catch (ex) {
	        nextStatus = STATUS_REJECTED;
	        nextValue = ex;
	       }
	       handler.nextPromise._updateStatus(nextStatus, nextValue);
	       if (Date.now() >= timeoutAt) {
	        break;
	       }
	      }
	      if (this.handlers.length > 0) {
	       setTimeout(this.runHandlers.bind(this), 0);
	       return;
	      }
	      this.running = false;
	     },
	     addUnhandledRejection: function addUnhandledRejection(promise) {
	      this.unhandledRejections.push({
	       promise: promise,
	       time: Date.now()
	      });
	      this.scheduleRejectionCheck();
	     },
	     removeUnhandeledRejection: function removeUnhandeledRejection(promise) {
	      promise._unhandledRejection = false;
	      for (var i = 0; i < this.unhandledRejections.length; i++) {
	       if (this.unhandledRejections[i].promise === promise) {
	        this.unhandledRejections.splice(i);
	        i--;
	       }
	      }
	     },
	     scheduleRejectionCheck: function scheduleRejectionCheck() {
	      if (this.pendingRejectionCheck) {
	       return;
	      }
	      this.pendingRejectionCheck = true;
	      setTimeout(function rejectionCheck() {
	       this.pendingRejectionCheck = false;
	       var now = Date.now();
	       for (var i = 0; i < this.unhandledRejections.length; i++) {
	        if (now - this.unhandledRejections[i].time > REJECTION_TIMEOUT) {
	         var unhandled = this.unhandledRejections[i].promise._value;
	         var msg = 'Unhandled rejection: ' + unhandled;
	         if (unhandled.stack) {
	          msg += '\n' + unhandled.stack;
	         }
	         warn(msg);
	         this.unhandledRejections.splice(i);
	         i--;
	        }
	       }
	       if (this.unhandledRejections.length) {
	        this.scheduleRejectionCheck();
	       }
	      }.bind(this), REJECTION_TIMEOUT);
	     }
	    };
	    var Promise = function Promise(resolver) {
	     this._status = STATUS_PENDING;
	     this._handlers = [];
	     try {
	      resolver.call(this, this._resolve.bind(this), this._reject.bind(this));
	     } catch (e) {
	      this._reject(e);
	     }
	    };
	    Promise.all = function Promise_all(promises) {
	     var resolveAll, rejectAll;
	     var deferred = new Promise(function (resolve, reject) {
	      resolveAll = resolve;
	      rejectAll = reject;
	     });
	     var unresolved = promises.length;
	     var results = [];
	     if (unresolved === 0) {
	      resolveAll(results);
	      return deferred;
	     }
	     function reject(reason) {
	      if (deferred._status === STATUS_REJECTED) {
	       return;
	      }
	      results = [];
	      rejectAll(reason);
	     }
	     for (var i = 0, ii = promises.length; i < ii; ++i) {
	      var promise = promises[i];
	      var resolve = function (i) {
	       return function (value) {
	        if (deferred._status === STATUS_REJECTED) {
	         return;
	        }
	        results[i] = value;
	        unresolved--;
	        if (unresolved === 0) {
	         resolveAll(results);
	        }
	       };
	      }(i);
	      if (Promise.isPromise(promise)) {
	       promise.then(resolve, reject);
	      } else {
	       resolve(promise);
	      }
	     }
	     return deferred;
	    };
	    Promise.isPromise = function Promise_isPromise(value) {
	     return value && typeof value.then === 'function';
	    };
	    Promise.resolve = function Promise_resolve(value) {
	     return new Promise(function (resolve) {
	      resolve(value);
	     });
	    };
	    Promise.reject = function Promise_reject(reason) {
	     return new Promise(function (resolve, reject) {
	      reject(reason);
	     });
	    };
	    Promise.prototype = {
	     _status: null,
	     _value: null,
	     _handlers: null,
	     _unhandledRejection: null,
	     _updateStatus: function Promise__updateStatus(status, value) {
	      if (this._status === STATUS_RESOLVED || this._status === STATUS_REJECTED) {
	       return;
	      }
	      if (status === STATUS_RESOLVED && Promise.isPromise(value)) {
	       value.then(this._updateStatus.bind(this, STATUS_RESOLVED), this._updateStatus.bind(this, STATUS_REJECTED));
	       return;
	      }
	      this._status = status;
	      this._value = value;
	      if (status === STATUS_REJECTED && this._handlers.length === 0) {
	       this._unhandledRejection = true;
	       HandlerManager.addUnhandledRejection(this);
	      }
	      HandlerManager.scheduleHandlers(this);
	     },
	     _resolve: function Promise_resolve(value) {
	      this._updateStatus(STATUS_RESOLVED, value);
	     },
	     _reject: function Promise_reject(reason) {
	      this._updateStatus(STATUS_REJECTED, reason);
	     },
	     then: function Promise_then(onResolve, onReject) {
	      var nextPromise = new Promise(function (resolve, reject) {
	       this.resolve = resolve;
	       this.reject = reject;
	      });
	      this._handlers.push({
	       thisPromise: this,
	       onResolve: onResolve,
	       onReject: onReject,
	       nextPromise: nextPromise
	      });
	      HandlerManager.scheduleHandlers(this);
	      return nextPromise;
	     },
	     catch: function Promise_catch(onReject) {
	      return this.then(undefined, onReject);
	     }
	    };
	    globalScope.Promise = Promise;
	   }());
	   (function WeakMapClosure() {
	    if (globalScope.WeakMap) {
	     return;
	    }
	    var id = 0;
	    function WeakMap() {
	     this.id = '$weakmap' + id++;
	    }
	    WeakMap.prototype = {
	     has: function (obj) {
	      return !!Object.getOwnPropertyDescriptor(obj, this.id);
	     },
	     get: function (obj, defaultValue) {
	      return this.has(obj) ? obj[this.id] : defaultValue;
	     },
	     set: function (obj, value) {
	      Object.defineProperty(obj, this.id, {
	       value: value,
	       enumerable: false,
	       configurable: true
	      });
	     },
	     delete: function (obj) {
	      delete obj[this.id];
	     }
	    };
	    globalScope.WeakMap = WeakMap;
	   }());
	   var StatTimer = function StatTimerClosure() {
	    function rpad(str, pad, length) {
	     while (str.length < length) {
	      str += pad;
	     }
	     return str;
	    }
	    function StatTimer() {
	     this.started = Object.create(null);
	     this.times = [];
	     this.enabled = true;
	    }
	    StatTimer.prototype = {
	     time: function StatTimer_time(name) {
	      if (!this.enabled) {
	       return;
	      }
	      if (name in this.started) {
	       warn('Timer is already running for ' + name);
	      }
	      this.started[name] = Date.now();
	     },
	     timeEnd: function StatTimer_timeEnd(name) {
	      if (!this.enabled) {
	       return;
	      }
	      if (!(name in this.started)) {
	       warn('Timer has not been started for ' + name);
	      }
	      this.times.push({
	       'name': name,
	       'start': this.started[name],
	       'end': Date.now()
	      });
	      delete this.started[name];
	     },
	     toString: function StatTimer_toString() {
	      var i, ii;
	      var times = this.times;
	      var out = '';
	      var longest = 0;
	      for (i = 0, ii = times.length; i < ii; ++i) {
	       var name = times[i]['name'];
	       if (name.length > longest) {
	        longest = name.length;
	       }
	      }
	      for (i = 0, ii = times.length; i < ii; ++i) {
	       var span = times[i];
	       var duration = span.end - span.start;
	       out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\n';
	      }
	      return out;
	     }
	    };
	    return StatTimer;
	   }();
	   var createBlob = function createBlob(data, contentType) {
	    if (typeof Blob !== 'undefined') {
	     return new Blob([data], { type: contentType });
	    }
	    warn('The "Blob" constructor is not supported.');
	   };
	   var createObjectURL = function createObjectURLClosure() {
	    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
	    return function createObjectURL(data, contentType, forceDataSchema) {
	     if (!forceDataSchema && typeof URL !== 'undefined' && URL.createObjectURL) {
	      var blob = createBlob(data, contentType);
	      return URL.createObjectURL(blob);
	     }
	     var buffer = 'data:' + contentType + ';base64,';
	     for (var i = 0, ii = data.length; i < ii; i += 3) {
	      var b1 = data[i] & 0xFF;
	      var b2 = data[i + 1] & 0xFF;
	      var b3 = data[i + 2] & 0xFF;
	      var d1 = b1 >> 2, d2 = (b1 & 3) << 4 | b2 >> 4;
	      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;
	      var d4 = i + 2 < ii ? b3 & 0x3F : 64;
	      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];
	     }
	     return buffer;
	    };
	   }();
	   function MessageHandler(sourceName, targetName, comObj) {
	    this.sourceName = sourceName;
	    this.targetName = targetName;
	    this.comObj = comObj;
	    this.callbackIndex = 1;
	    this.postMessageTransfers = true;
	    var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);
	    var ah = this.actionHandler = Object.create(null);
	    this._onComObjOnMessage = function messageHandlerComObjOnMessage(event) {
	     var data = event.data;
	     if (data.targetName !== this.sourceName) {
	      return;
	     }
	     if (data.isReply) {
	      var callbackId = data.callbackId;
	      if (data.callbackId in callbacksCapabilities) {
	       var callback = callbacksCapabilities[callbackId];
	       delete callbacksCapabilities[callbackId];
	       if ('error' in data) {
	        callback.reject(data.error);
	       } else {
	        callback.resolve(data.data);
	       }
	      } else {
	       error('Cannot resolve callback ' + callbackId);
	      }
	     } else if (data.action in ah) {
	      var action = ah[data.action];
	      if (data.callbackId) {
	       var sourceName = this.sourceName;
	       var targetName = data.sourceName;
	       Promise.resolve().then(function () {
	        return action[0].call(action[1], data.data);
	       }).then(function (result) {
	        comObj.postMessage({
	         sourceName: sourceName,
	         targetName: targetName,
	         isReply: true,
	         callbackId: data.callbackId,
	         data: result
	        });
	       }, function (reason) {
	        if (reason instanceof Error) {
	         reason = reason + '';
	        }
	        comObj.postMessage({
	         sourceName: sourceName,
	         targetName: targetName,
	         isReply: true,
	         callbackId: data.callbackId,
	         error: reason
	        });
	       });
	      } else {
	       action[0].call(action[1], data.data);
	      }
	     } else {
	      error('Unknown action from worker: ' + data.action);
	     }
	    }.bind(this);
	    comObj.addEventListener('message', this._onComObjOnMessage);
	   }
	   MessageHandler.prototype = {
	    on: function messageHandlerOn(actionName, handler, scope) {
	     var ah = this.actionHandler;
	     if (ah[actionName]) {
	      error('There is already an actionName called "' + actionName + '"');
	     }
	     ah[actionName] = [
	      handler,
	      scope
	     ];
	    },
	    send: function messageHandlerSend(actionName, data, transfers) {
	     var message = {
	      sourceName: this.sourceName,
	      targetName: this.targetName,
	      action: actionName,
	      data: data
	     };
	     this.postMessage(message, transfers);
	    },
	    sendWithPromise: function messageHandlerSendWithPromise(actionName, data, transfers) {
	     var callbackId = this.callbackIndex++;
	     var message = {
	      sourceName: this.sourceName,
	      targetName: this.targetName,
	      action: actionName,
	      data: data,
	      callbackId: callbackId
	     };
	     var capability = createPromiseCapability();
	     this.callbacksCapabilities[callbackId] = capability;
	     try {
	      this.postMessage(message, transfers);
	     } catch (e) {
	      capability.reject(e);
	     }
	     return capability.promise;
	    },
	    postMessage: function (message, transfers) {
	     if (transfers && this.postMessageTransfers) {
	      this.comObj.postMessage(message, transfers);
	     } else {
	      this.comObj.postMessage(message);
	     }
	    },
	    destroy: function () {
	     this.comObj.removeEventListener('message', this._onComObjOnMessage);
	    }
	   };
	   function loadJpegStream(id, imageUrl, objs) {
	    var img = new Image();
	    img.onload = function loadJpegStream_onloadClosure() {
	     objs.resolve(id, img);
	    };
	    img.onerror = function loadJpegStream_onerrorClosure() {
	     objs.resolve(id, null);
	     warn('Error during JPEG image loading');
	    };
	    img.src = imageUrl;
	   }
	   /* Any copyright is dedicated to the Public Domain.
	    * http://creativecommons.org/publicdomain/zero/1.0/ */
	   (function checkURLConstructor(scope) {
	    var hasWorkingUrl = false;
	    try {
	     if (typeof URL === 'function' && typeof URL.prototype === 'object' && 'origin' in URL.prototype) {
	      var u = new URL('b', 'http://a');
	      u.pathname = 'c%20d';
	      hasWorkingUrl = u.href === 'http://a/c%20d';
	     }
	    } catch (e) {
	    }
	    if (hasWorkingUrl) {
	     return;
	    }
	    var relative = Object.create(null);
	    relative['ftp'] = 21;
	    relative['file'] = 0;
	    relative['gopher'] = 70;
	    relative['http'] = 80;
	    relative['https'] = 443;
	    relative['ws'] = 80;
	    relative['wss'] = 443;
	    var relativePathDotMapping = Object.create(null);
	    relativePathDotMapping['%2e'] = '.';
	    relativePathDotMapping['.%2e'] = '..';
	    relativePathDotMapping['%2e.'] = '..';
	    relativePathDotMapping['%2e%2e'] = '..';
	    function isRelativeScheme(scheme) {
	     return relative[scheme] !== undefined;
	    }
	    function invalid() {
	     clear.call(this);
	     this._isInvalid = true;
	    }
	    function IDNAToASCII(h) {
	     if (h === '') {
	      invalid.call(this);
	     }
	     return h.toLowerCase();
	    }
	    function percentEscape(c) {
	     var unicode = c.charCodeAt(0);
	     if (unicode > 0x20 && unicode < 0x7F && [
	       0x22,
	       0x23,
	       0x3C,
	       0x3E,
	       0x3F,
	       0x60
	      ].indexOf(unicode) === -1) {
	      return c;
	     }
	     return encodeURIComponent(c);
	    }
	    function percentEscapeQuery(c) {
	     var unicode = c.charCodeAt(0);
	     if (unicode > 0x20 && unicode < 0x7F && [
	       0x22,
	       0x23,
	       0x3C,
	       0x3E,
	       0x60
	      ].indexOf(unicode) === -1) {
	      return c;
	     }
	     return encodeURIComponent(c);
	    }
	    var EOF, ALPHA = /[a-zA-Z]/, ALPHANUMERIC = /[a-zA-Z0-9\+\-\.]/;
	    function parse(input, stateOverride, base) {
	     function err(message) {
	      errors.push(message);
	     }
	     var state = stateOverride || 'scheme start', cursor = 0, buffer = '', seenAt = false, seenBracket = false, errors = [];
	     loop:
	      while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {
	       var c = input[cursor];
	       switch (state) {
	       case 'scheme start':
	        if (c && ALPHA.test(c)) {
	         buffer += c.toLowerCase();
	         state = 'scheme';
	        } else if (!stateOverride) {
	         buffer = '';
	         state = 'no scheme';
	         continue;
	        } else {
	         err('Invalid scheme.');
	         break loop;
	        }
	        break;
	       case 'scheme':
	        if (c && ALPHANUMERIC.test(c)) {
	         buffer += c.toLowerCase();
	        } else if (c === ':') {
	         this._scheme = buffer;
	         buffer = '';
	         if (stateOverride) {
	          break loop;
	         }
	         if (isRelativeScheme(this._scheme)) {
	          this._isRelative = true;
	         }
	         if (this._scheme === 'file') {
	          state = 'relative';
	         } else if (this._isRelative && base && base._scheme === this._scheme) {
	          state = 'relative or authority';
	         } else if (this._isRelative) {
	          state = 'authority first slash';
	         } else {
	          state = 'scheme data';
	         }
	        } else if (!stateOverride) {
	         buffer = '';
	         cursor = 0;
	         state = 'no scheme';
	         continue;
	        } else if (EOF === c) {
	         break loop;
	        } else {
	         err('Code point not allowed in scheme: ' + c);
	         break loop;
	        }
	        break;
	       case 'scheme data':
	        if (c === '?') {
	         this._query = '?';
	         state = 'query';
	        } else if (c === '#') {
	         this._fragment = '#';
	         state = 'fragment';
	        } else {
	         if (EOF !== c && '\t' !== c && '\n' !== c && '\r' !== c) {
	          this._schemeData += percentEscape(c);
	         }
	        }
	        break;
	       case 'no scheme':
	        if (!base || !isRelativeScheme(base._scheme)) {
	         err('Missing scheme.');
	         invalid.call(this);
	        } else {
	         state = 'relative';
	         continue;
	        }
	        break;
	       case 'relative or authority':
	        if (c === '/' && input[cursor + 1] === '/') {
	         state = 'authority ignore slashes';
	        } else {
	         err('Expected /, got: ' + c);
	         state = 'relative';
	         continue;
	        }
	        break;
	       case 'relative':
	        this._isRelative = true;
	        if ('file' !== this._scheme) {
	         this._scheme = base._scheme;
	        }
	        if (EOF === c) {
	         this._host = base._host;
	         this._port = base._port;
	         this._path = base._path.slice();
	         this._query = base._query;
	         this._username = base._username;
	         this._password = base._password;
	         break loop;
	        } else if (c === '/' || c === '\\') {
	         if (c === '\\') {
	          err('\\ is an invalid code point.');
	         }
	         state = 'relative slash';
	        } else if (c === '?') {
	         this._host = base._host;
	         this._port = base._port;
	         this._path = base._path.slice();
	         this._query = '?';
	         this._username = base._username;
	         this._password = base._password;
	         state = 'query';
	        } else if (c === '#') {
	         this._host = base._host;
	         this._port = base._port;
	         this._path = base._path.slice();
	         this._query = base._query;
	         this._fragment = '#';
	         this._username = base._username;
	         this._password = base._password;
	         state = 'fragment';
	        } else {
	         var nextC = input[cursor + 1];
	         var nextNextC = input[cursor + 2];
	         if ('file' !== this._scheme || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || EOF !== nextNextC && '/' !== nextNextC && '\\' !== nextNextC && '?' !== nextNextC && '#' !== nextNextC) {
	          this._host = base._host;
	          this._port = base._port;
	          this._username = base._username;
	          this._password = base._password;
	          this._path = base._path.slice();
	          this._path.pop();
	         }
	         state = 'relative path';
	         continue;
	        }
	        break;
	       case 'relative slash':
	        if (c === '/' || c === '\\') {
	         if (c === '\\') {
	          err('\\ is an invalid code point.');
	         }
	         if (this._scheme === 'file') {
	          state = 'file host';
	         } else {
	          state = 'authority ignore slashes';
	         }
	        } else {
	         if ('file' !== this._scheme) {
	          this._host = base._host;
	          this._port = base._port;
	          this._username = base._username;
	          this._password = base._password;
	         }
	         state = 'relative path';
	         continue;
	        }
	        break;
	       case 'authority first slash':
	        if (c === '/') {
	         state = 'authority second slash';
	        } else {
	         err('Expected \'/\', got: ' + c);
	         state = 'authority ignore slashes';
	         continue;
	        }
	        break;
	       case 'authority second slash':
	        state = 'authority ignore slashes';
	        if ('/' !== c) {
	         err('Expected \'/\', got: ' + c);
	         continue;
	        }
	        break;
	       case 'authority ignore slashes':
	        if ('/' !== c && '\\' !== c) {
	         state = 'authority';
	         continue;
	        } else {
	         err('Expected authority, got: ' + c);
	        }
	        break;
	       case 'authority':
	        if (c === '@') {
	         if (seenAt) {
	          err('@ already seen.');
	          buffer += '%40';
	         }
	         seenAt = true;
	         for (var i = 0; i < buffer.length; i++) {
	          var cp = buffer[i];
	          if (cp === '\t' || cp === '\n' || cp === '\r') {
	           err('Invalid whitespace in authority.');
	           continue;
	          }
	          if (cp === ':' && this._password === null) {
	           this._password = '';
	           continue;
	          }
	          var tempC = percentEscape(cp);
	          if (null !== this._password) {
	           this._password += tempC;
	          } else {
	           this._username += tempC;
	          }
	         }
	         buffer = '';
	        } else if (c === EOF || c === '/' || c === '\\' || c === '?' || c === '#') {
	         cursor -= buffer.length;
	         buffer = '';
	         state = 'host';
	         continue;
	        } else {
	         buffer += c;
	        }
	        break;
	       case 'file host':
	        if (c === EOF || c === '/' || c === '\\' || c === '?' || c === '#') {
	         if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {
	          state = 'relative path';
	         } else if (buffer.length === 0) {
	          state = 'relative path start';
	         } else {
	          this._host = IDNAToASCII.call(this, buffer);
	          buffer = '';
	          state = 'relative path start';
	         }
	         continue;
	        } else if (c === '\t' || c === '\n' || c === '\r') {
	         err('Invalid whitespace in file host.');
	        } else {
	         buffer += c;
	        }
	        break;
	       case 'host':
	       case 'hostname':
	        if (c === ':' && !seenBracket) {
	         this._host = IDNAToASCII.call(this, buffer);
	         buffer = '';
	         state = 'port';
	         if (stateOverride === 'hostname') {
	          break loop;
	         }
	        } else if (c === EOF || c === '/' || c === '\\' || c === '?' || c === '#') {
	         this._host = IDNAToASCII.call(this, buffer);
	         buffer = '';
	         state = 'relative path start';
	         if (stateOverride) {
	          break loop;
	         }
	         continue;
	        } else if ('\t' !== c && '\n' !== c && '\r' !== c) {
	         if (c === '[') {
	          seenBracket = true;
	         } else if (c === ']') {
	          seenBracket = false;
	         }
	         buffer += c;
	        } else {
	         err('Invalid code point in host/hostname: ' + c);
	        }
	        break;
	       case 'port':
	        if (/[0-9]/.test(c)) {
	         buffer += c;
	        } else if (c === EOF || c === '/' || c === '\\' || c === '?' || c === '#' || stateOverride) {
	         if ('' !== buffer) {
	          var temp = parseInt(buffer, 10);
	          if (temp !== relative[this._scheme]) {
	           this._port = temp + '';
	          }
	          buffer = '';
	         }
	         if (stateOverride) {
	          break loop;
	         }
	         state = 'relative path start';
	         continue;
	        } else if (c === '\t' || c === '\n' || c === '\r') {
	         err('Invalid code point in port: ' + c);
	        } else {
	         invalid.call(this);
	        }
	        break;
	       case 'relative path start':
	        if (c === '\\') {
	         err('\'\\\' not allowed in path.');
	        }
	        state = 'relative path';
	        if ('/' !== c && '\\' !== c) {
	         continue;
	        }
	        break;
	       case 'relative path':
	        if (c === EOF || c === '/' || c === '\\' || !stateOverride && (c === '?' || c === '#')) {
	         if (c === '\\') {
	          err('\\ not allowed in relative path.');
	         }
	         var tmp;
	         if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {
	          buffer = tmp;
	         }
	         if (buffer === '..') {
	          this._path.pop();
	          if ('/' !== c && '\\' !== c) {
	           this._path.push('');
	          }
	         } else if (buffer === '.' && '/' !== c && '\\' !== c) {
	          this._path.push('');
	         } else if ('.' !== buffer) {
	          if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {
	           buffer = buffer[0] + ':';
	          }
	          this._path.push(buffer);
	         }
	         buffer = '';
	         if (c === '?') {
	          this._query = '?';
	          state = 'query';
	         } else if (c === '#') {
	          this._fragment = '#';
	          state = 'fragment';
	         }
	        } else if ('\t' !== c && '\n' !== c && '\r' !== c) {
	         buffer += percentEscape(c);
	        }
	        break;
	       case 'query':
	        if (!stateOverride && c === '#') {
	         this._fragment = '#';
	         state = 'fragment';
	        } else if (EOF !== c && '\t' !== c && '\n' !== c && '\r' !== c) {
	         this._query += percentEscapeQuery(c);
	        }
	        break;
	       case 'fragment':
	        if (EOF !== c && '\t' !== c && '\n' !== c && '\r' !== c) {
	         this._fragment += c;
	        }
	        break;
	       }
	       cursor++;
	      }
	    }
	    function clear() {
	     this._scheme = '';
	     this._schemeData = '';
	     this._username = '';
	     this._password = null;
	     this._host = '';
	     this._port = '';
	     this._path = [];
	     this._query = '';
	     this._fragment = '';
	     this._isInvalid = false;
	     this._isRelative = false;
	    }
	    function JURL(url, base)
	     {
	      if (base !== undefined && !(base instanceof JURL)) {
	       base = new JURL(String(base));
	      }
	      this._url = url;
	      clear.call(this);
	      var input = url.replace(/^[ \t\r\n\f]+|[ \t\r\n\f]+$/g, '');
	      parse.call(this, input, null, base);
	     }
	    JURL.prototype = {
	     toString: function () {
	      return this.href;
	     },
	     get href() {
	      if (this._isInvalid) {
	       return this._url;
	      }
	      var authority = '';
	      if ('' !== this._username || null !== this._password) {
	       authority = this._username + (null !== this._password ? ':' + this._password : '') + '@';
	      }
	      return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;
	     },
	     set href(href) {
	      clear.call(this);
	      parse.call(this, href);
	     },
	     get protocol() {
	      return this._scheme + ':';
	     },
	     set protocol(protocol) {
	      if (this._isInvalid) {
	       return;
	      }
	      parse.call(this, protocol + ':', 'scheme start');
	     },
	     get host() {
	      return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;
	     },
	     set host(host) {
	      if (this._isInvalid || !this._isRelative) {
	       return;
	      }
	      parse.call(this, host, 'host');
	     },
	     get hostname() {
	      return this._host;
	     },
	     set hostname(hostname) {
	      if (this._isInvalid || !this._isRelative) {
	       return;
	      }
	      parse.call(this, hostname, 'hostname');
	     },
	     get port() {
	      return this._port;
	     },
	     set port(port) {
	      if (this._isInvalid || !this._isRelative) {
	       return;
	      }
	      parse.call(this, port, 'port');
	     },
	     get pathname() {
	      return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;
	     },
	     set pathname(pathname) {
	      if (this._isInvalid || !this._isRelative) {
	       return;
	      }
	      this._path = [];
	      parse.call(this, pathname, 'relative path start');
	     },
	     get search() {
	      return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;
	     },
	     set search(search) {
	      if (this._isInvalid || !this._isRelative) {
	       return;
	      }
	      this._query = '?';
	      if (search[0] === '?') {
	       search = search.slice(1);
	      }
	      parse.call(this, search, 'query');
	     },
	     get hash() {
	      return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;
	     },
	     set hash(hash) {
	      if (this._isInvalid) {
	       return;
	      }
	      this._fragment = '#';
	      if (hash[0] === '#') {
	       hash = hash.slice(1);
	      }
	      parse.call(this, hash, 'fragment');
	     },
	     get origin() {
	      var host;
	      if (this._isInvalid || !this._scheme) {
	       return '';
	      }
	      switch (this._scheme) {
	      case 'data':
	      case 'file':
	      case 'javascript':
	      case 'mailto':
	       return 'null';
	      }
	      host = this.host;
	      if (!host) {
	       return '';
	      }
	      return this._scheme + '://' + host;
	     }
	    };
	    var OriginalURL = scope.URL;
	    if (OriginalURL) {
	     JURL.createObjectURL = function (blob) {
	      return OriginalURL.createObjectURL.apply(OriginalURL, arguments);
	     };
	     JURL.revokeObjectURL = function (url) {
	      OriginalURL.revokeObjectURL(url);
	     };
	    }
	    scope.URL = JURL;
	   }(globalScope));
	   exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;
	   exports.IDENTITY_MATRIX = IDENTITY_MATRIX;
	   exports.OPS = OPS;
	   exports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;
	   exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;
	   exports.AnnotationBorderStyleType = AnnotationBorderStyleType;
	   exports.AnnotationFieldFlag = AnnotationFieldFlag;
	   exports.AnnotationFlag = AnnotationFlag;
	   exports.AnnotationType = AnnotationType;
	   exports.FontType = FontType;
	   exports.ImageKind = ImageKind;
	   exports.InvalidPDFException = InvalidPDFException;
	   exports.MessageHandler = MessageHandler;
	   exports.MissingDataException = MissingDataException;
	   exports.MissingPDFException = MissingPDFException;
	   exports.NotImplementedException = NotImplementedException;
	   exports.PageViewport = PageViewport;
	   exports.PasswordException = PasswordException;
	   exports.PasswordResponses = PasswordResponses;
	   exports.StatTimer = StatTimer;
	   exports.StreamType = StreamType;
	   exports.TextRenderingMode = TextRenderingMode;
	   exports.UnexpectedResponseException = UnexpectedResponseException;
	   exports.UnknownErrorException = UnknownErrorException;
	   exports.Util = Util;
	   exports.XRefParseException = XRefParseException;
	   exports.arrayByteLength = arrayByteLength;
	   exports.arraysToBytes = arraysToBytes;
	   exports.assert = assert;
	   exports.bytesToString = bytesToString;
	   exports.createBlob = createBlob;
	   exports.createPromiseCapability = createPromiseCapability;
	   exports.createObjectURL = createObjectURL;
	   exports.deprecated = deprecated;
	   exports.error = error;
	   exports.getLookupTableFactory = getLookupTableFactory;
	   exports.getVerbosityLevel = getVerbosityLevel;
	   exports.globalScope = globalScope;
	   exports.info = info;
	   exports.isArray = isArray;
	   exports.isArrayBuffer = isArrayBuffer;
	   exports.isBool = isBool;
	   exports.isEmptyObj = isEmptyObj;
	   exports.isInt = isInt;
	   exports.isNum = isNum;
	   exports.isString = isString;
	   exports.isSpace = isSpace;
	   exports.isSameOrigin = isSameOrigin;
	   exports.createValidAbsoluteUrl = createValidAbsoluteUrl;
	   exports.isLittleEndian = isLittleEndian;
	   exports.isEvalSupported = isEvalSupported;
	   exports.loadJpegStream = loadJpegStream;
	   exports.log2 = log2;
	   exports.readInt8 = readInt8;
	   exports.readUint16 = readUint16;
	   exports.readUint32 = readUint32;
	   exports.removeNullCharacters = removeNullCharacters;
	   exports.setVerbosityLevel = setVerbosityLevel;
	   exports.shadow = shadow;
	   exports.string32 = string32;
	   exports.stringToBytes = stringToBytes;
	   exports.stringToPDFString = stringToPDFString;
	   exports.stringToUTF8String = stringToUTF8String;
	   exports.utf8StringToString = utf8StringToString;
	   exports.warn = warn;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreBidi = {}, root.pdfjsSharedUtil);
	  }(this, function (exports, sharedUtil) {
	   var warn = sharedUtil.warn;
	   var baseTypes = [
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'S',
	    'B',
	    'S',
	    'WS',
	    'B',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'B',
	    'B',
	    'B',
	    'S',
	    'WS',
	    'ON',
	    'ON',
	    'ET',
	    'ET',
	    'ET',
	    'ON',
	    'ON',
	    'ON',
	    'ON',
	    'ON',
	    'ES',
	    'CS',
	    'ES',
	    'CS',
	    'CS',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'CS',
	    'ON',
	    'ON',
	    'ON',
	    'ON',
	    'ON',
	    'ON',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'ON',
	    'ON',
	    'ON',
	    'ON',
	    'ON',
	    'ON',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'ON',
	    'ON',
	    'ON',
	    'ON',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'B',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'BN',
	    'CS',
	    'ON',
	    'ET',
	    'ET',
	    'ET',
	    'ET',
	    'ON',
	    'ON',
	    'ON',
	    'ON',
	    'L',
	    'ON',
	    'ON',
	    'BN',
	    'ON',
	    'ON',
	    'ET',
	    'ET',
	    'EN',
	    'EN',
	    'ON',
	    'L',
	    'ON',
	    'ON',
	    'ON',
	    'EN',
	    'L',
	    'ON',
	    'ON',
	    'ON',
	    'ON',
	    'ON',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'ON',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'ON',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L',
	    'L'
	   ];
	   var arabicTypes = [
	    'AN',
	    'AN',
	    'AN',
	    'AN',
	    'AN',
	    'AN',
	    'ON',
	    'ON',
	    'AL',
	    'ET',
	    'ET',
	    'AL',
	    'CS',
	    'AL',
	    'ON',
	    'ON',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'AL',
	    'AL',
	    '',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'AN',
	    'AN',
	    'AN',
	    'AN',
	    'AN',
	    'AN',
	    'AN',
	    'AN',
	    'AN',
	    'AN',
	    'ET',
	    'AN',
	    'AN',
	    'AL',
	    'AL',
	    'AL',
	    'NSM',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'AN',
	    'ON',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'AL',
	    'AL',
	    'NSM',
	    'NSM',
	    'ON',
	    'NSM',
	    'NSM',
	    'NSM',
	    'NSM',
	    'AL',
	    'AL',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'EN',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL',
	    'AL'
	   ];
	   function isOdd(i) {
	    return (i & 1) !== 0;
	   }
	   function isEven(i) {
	    return (i & 1) === 0;
	   }
	   function findUnequal(arr, start, value) {
	    for (var j = start, jj = arr.length; j < jj; ++j) {
	     if (arr[j] !== value) {
	      return j;
	     }
	    }
	    return j;
	   }
	   function setValues(arr, start, end, value) {
	    for (var j = start; j < end; ++j) {
	     arr[j] = value;
	    }
	   }
	   function reverseValues(arr, start, end) {
	    for (var i = start, j = end - 1; i < j; ++i, --j) {
	     var temp = arr[i];
	     arr[i] = arr[j];
	     arr[j] = temp;
	    }
	   }
	   function createBidiText(str, isLTR, vertical) {
	    return {
	     str: str,
	     dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'
	    };
	   }
	   var chars = [];
	   var types = [];
	   function bidi(str, startLevel, vertical) {
	    var isLTR = true;
	    var strLength = str.length;
	    if (strLength === 0 || vertical) {
	     return createBidiText(str, isLTR, vertical);
	    }
	    chars.length = strLength;
	    types.length = strLength;
	    var numBidi = 0;
	    var i, ii;
	    for (i = 0; i < strLength; ++i) {
	     chars[i] = str.charAt(i);
	     var charCode = str.charCodeAt(i);
	     var charType = 'L';
	     if (charCode <= 0x00ff) {
	      charType = baseTypes[charCode];
	     } else if (0x0590 <= charCode && charCode <= 0x05f4) {
	      charType = 'R';
	     } else if (0x0600 <= charCode && charCode <= 0x06ff) {
	      charType = arabicTypes[charCode & 0xff];
	      if (!charType) {
	       warn('Bidi: invalid Unicode character ' + charCode.toString(16));
	      }
	     } else if (0x0700 <= charCode && charCode <= 0x08AC) {
	      charType = 'AL';
	     }
	     if (charType === 'R' || charType === 'AL' || charType === 'AN') {
	      numBidi++;
	     }
	     types[i] = charType;
	    }
	    if (numBidi === 0) {
	     isLTR = true;
	     return createBidiText(str, isLTR);
	    }
	    if (startLevel === -1) {
	     if (numBidi / strLength < 0.3) {
	      isLTR = true;
	      startLevel = 0;
	     } else {
	      isLTR = false;
	      startLevel = 1;
	     }
	    }
	    var levels = [];
	    for (i = 0; i < strLength; ++i) {
	     levels[i] = startLevel;
	    }
	    var e = isOdd(startLevel) ? 'R' : 'L';
	    var sor = e;
	    var eor = sor;
	    var lastType = sor;
	    for (i = 0; i < strLength; ++i) {
	     if (types[i] === 'NSM') {
	      types[i] = lastType;
	     } else {
	      lastType = types[i];
	     }
	    }
	    lastType = sor;
	    var t;
	    for (i = 0; i < strLength; ++i) {
	     t = types[i];
	     if (t === 'EN') {
	      types[i] = lastType === 'AL' ? 'AN' : 'EN';
	     } else if (t === 'R' || t === 'L' || t === 'AL') {
	      lastType = t;
	     }
	    }
	    for (i = 0; i < strLength; ++i) {
	     t = types[i];
	     if (t === 'AL') {
	      types[i] = 'R';
	     }
	    }
	    for (i = 1; i < strLength - 1; ++i) {
	     if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {
	      types[i] = 'EN';
	     }
	     if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {
	      types[i] = types[i - 1];
	     }
	    }
	    for (i = 0; i < strLength; ++i) {
	     if (types[i] === 'EN') {
	      var j;
	      for (j = i - 1; j >= 0; --j) {
	       if (types[j] !== 'ET') {
	        break;
	       }
	       types[j] = 'EN';
	      }
	      for (j = i + 1; j < strLength; ++j) {
	       if (types[j] !== 'ET') {
	        break;
	       }
	       types[j] = 'EN';
	      }
	     }
	    }
	    for (i = 0; i < strLength; ++i) {
	     t = types[i];
	     if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {
	      types[i] = 'ON';
	     }
	    }
	    lastType = sor;
	    for (i = 0; i < strLength; ++i) {
	     t = types[i];
	     if (t === 'EN') {
	      types[i] = lastType === 'L' ? 'L' : 'EN';
	     } else if (t === 'R' || t === 'L') {
	      lastType = t;
	     }
	    }
	    for (i = 0; i < strLength; ++i) {
	     if (types[i] === 'ON') {
	      var end = findUnequal(types, i + 1, 'ON');
	      var before = sor;
	      if (i > 0) {
	       before = types[i - 1];
	      }
	      var after = eor;
	      if (end + 1 < strLength) {
	       after = types[end + 1];
	      }
	      if (before !== 'L') {
	       before = 'R';
	      }
	      if (after !== 'L') {
	       after = 'R';
	      }
	      if (before === after) {
	       setValues(types, i, end, before);
	      }
	      i = end - 1;
	     }
	    }
	    for (i = 0; i < strLength; ++i) {
	     if (types[i] === 'ON') {
	      types[i] = e;
	     }
	    }
	    for (i = 0; i < strLength; ++i) {
	     t = types[i];
	     if (isEven(levels[i])) {
	      if (t === 'R') {
	       levels[i] += 1;
	      } else if (t === 'AN' || t === 'EN') {
	       levels[i] += 2;
	      }
	     } else {
	      if (t === 'L' || t === 'AN' || t === 'EN') {
	       levels[i] += 1;
	      }
	     }
	    }
	    var highestLevel = -1;
	    var lowestOddLevel = 99;
	    var level;
	    for (i = 0, ii = levels.length; i < ii; ++i) {
	     level = levels[i];
	     if (highestLevel < level) {
	      highestLevel = level;
	     }
	     if (lowestOddLevel > level && isOdd(level)) {
	      lowestOddLevel = level;
	     }
	    }
	    for (level = highestLevel; level >= lowestOddLevel; --level) {
	     var start = -1;
	     for (i = 0, ii = levels.length; i < ii; ++i) {
	      if (levels[i] < level) {
	       if (start >= 0) {
	        reverseValues(chars, start, i);
	        start = -1;
	       }
	      } else if (start < 0) {
	       start = i;
	      }
	     }
	     if (start >= 0) {
	      reverseValues(chars, start, levels.length);
	     }
	    }
	    for (i = 0, ii = chars.length; i < ii; ++i) {
	     var ch = chars[i];
	     if (ch === '<' || ch === '>') {
	      chars[i] = '';
	     }
	    }
	    return createBidiText(chars.join(''), isLTR);
	   }
	   exports.bidi = bidi;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreCFFParser = {}, root.pdfjsSharedUtil, root.pdfjsCoreCharsets, root.pdfjsCoreEncodings);
	  }(this, function (exports, sharedUtil, coreCharsets, coreEncodings) {
	   var error = sharedUtil.error;
	   var info = sharedUtil.info;
	   var bytesToString = sharedUtil.bytesToString;
	   var warn = sharedUtil.warn;
	   var isArray = sharedUtil.isArray;
	   var Util = sharedUtil.Util;
	   var stringToBytes = sharedUtil.stringToBytes;
	   var assert = sharedUtil.assert;
	   var ISOAdobeCharset = coreCharsets.ISOAdobeCharset;
	   var ExpertCharset = coreCharsets.ExpertCharset;
	   var ExpertSubsetCharset = coreCharsets.ExpertSubsetCharset;
	   var StandardEncoding = coreEncodings.StandardEncoding;
	   var ExpertEncoding = coreEncodings.ExpertEncoding;
	   var MAX_SUBR_NESTING = 10;
	   var CFFStandardStrings = [
	    '.notdef',
	    'space',
	    'exclam',
	    'quotedbl',
	    'numbersign',
	    'dollar',
	    'percent',
	    'ampersand',
	    'quoteright',
	    'parenleft',
	    'parenright',
	    'asterisk',
	    'plus',
	    'comma',
	    'hyphen',
	    'period',
	    'slash',
	    'zero',
	    'one',
	    'two',
	    'three',
	    'four',
	    'five',
	    'six',
	    'seven',
	    'eight',
	    'nine',
	    'colon',
	    'semicolon',
	    'less',
	    'equal',
	    'greater',
	    'question',
	    'at',
	    'A',
	    'B',
	    'C',
	    'D',
	    'E',
	    'F',
	    'G',
	    'H',
	    'I',
	    'J',
	    'K',
	    'L',
	    'M',
	    'N',
	    'O',
	    'P',
	    'Q',
	    'R',
	    'S',
	    'T',
	    'U',
	    'V',
	    'W',
	    'X',
	    'Y',
	    'Z',
	    'bracketleft',
	    'backslash',
	    'bracketright',
	    'asciicircum',
	    'underscore',
	    'quoteleft',
	    'a',
	    'b',
	    'c',
	    'd',
	    'e',
	    'f',
	    'g',
	    'h',
	    'i',
	    'j',
	    'k',
	    'l',
	    'm',
	    'n',
	    'o',
	    'p',
	    'q',
	    'r',
	    's',
	    't',
	    'u',
	    'v',
	    'w',
	    'x',
	    'y',
	    'z',
	    'braceleft',
	    'bar',
	    'braceright',
	    'asciitilde',
	    'exclamdown',
	    'cent',
	    'sterling',
	    'fraction',
	    'yen',
	    'florin',
	    'section',
	    'currency',
	    'quotesingle',
	    'quotedblleft',
	    'guillemotleft',
	    'guilsinglleft',
	    'guilsinglright',
	    'fi',
	    'fl',
	    'endash',
	    'dagger',
	    'daggerdbl',
	    'periodcentered',
	    'paragraph',
	    'bullet',
	    'quotesinglbase',
	    'quotedblbase',
	    'quotedblright',
	    'guillemotright',
	    'ellipsis',
	    'perthousand',
	    'questiondown',
	    'grave',
	    'acute',
	    'circumflex',
	    'tilde',
	    'macron',
	    'breve',
	    'dotaccent',
	    'dieresis',
	    'ring',
	    'cedilla',
	    'hungarumlaut',
	    'ogonek',
	    'caron',
	    'emdash',
	    'AE',
	    'ordfeminine',
	    'Lslash',
	    'Oslash',
	    'OE',
	    'ordmasculine',
	    'ae',
	    'dotlessi',
	    'lslash',
	    'oslash',
	    'oe',
	    'germandbls',
	    'onesuperior',
	    'logicalnot',
	    'mu',
	    'trademark',
	    'Eth',
	    'onehalf',
	    'plusminus',
	    'Thorn',
	    'onequarter',
	    'divide',
	    'brokenbar',
	    'degree',
	    'thorn',
	    'threequarters',
	    'twosuperior',
	    'registered',
	    'minus',
	    'eth',
	    'multiply',
	    'threesuperior',
	    'copyright',
	    'Aacute',
	    'Acircumflex',
	    'Adieresis',
	    'Agrave',
	    'Aring',
	    'Atilde',
	    'Ccedilla',
	    'Eacute',
	    'Ecircumflex',
	    'Edieresis',
	    'Egrave',
	    'Iacute',
	    'Icircumflex',
	    'Idieresis',
	    'Igrave',
	    'Ntilde',
	    'Oacute',
	    'Ocircumflex',
	    'Odieresis',
	    'Ograve',
	    'Otilde',
	    'Scaron',
	    'Uacute',
	    'Ucircumflex',
	    'Udieresis',
	    'Ugrave',
	    'Yacute',
	    'Ydieresis',
	    'Zcaron',
	    'aacute',
	    'acircumflex',
	    'adieresis',
	    'agrave',
	    'aring',
	    'atilde',
	    'ccedilla',
	    'eacute',
	    'ecircumflex',
	    'edieresis',
	    'egrave',
	    'iacute',
	    'icircumflex',
	    'idieresis',
	    'igrave',
	    'ntilde',
	    'oacute',
	    'ocircumflex',
	    'odieresis',
	    'ograve',
	    'otilde',
	    'scaron',
	    'uacute',
	    'ucircumflex',
	    'udieresis',
	    'ugrave',
	    'yacute',
	    'ydieresis',
	    'zcaron',
	    'exclamsmall',
	    'Hungarumlautsmall',
	    'dollaroldstyle',
	    'dollarsuperior',
	    'ampersandsmall',
	    'Acutesmall',
	    'parenleftsuperior',
	    'parenrightsuperior',
	    'twodotenleader',
	    'onedotenleader',
	    'zerooldstyle',
	    'oneoldstyle',
	    'twooldstyle',
	    'threeoldstyle',
	    'fouroldstyle',
	    'fiveoldstyle',
	    'sixoldstyle',
	    'sevenoldstyle',
	    'eightoldstyle',
	    'nineoldstyle',
	    'commasuperior',
	    'threequartersemdash',
	    'periodsuperior',
	    'questionsmall',
	    'asuperior',
	    'bsuperior',
	    'centsuperior',
	    'dsuperior',
	    'esuperior',
	    'isuperior',
	    'lsuperior',
	    'msuperior',
	    'nsuperior',
	    'osuperior',
	    'rsuperior',
	    'ssuperior',
	    'tsuperior',
	    'ff',
	    'ffi',
	    'ffl',
	    'parenleftinferior',
	    'parenrightinferior',
	    'Circumflexsmall',
	    'hyphensuperior',
	    'Gravesmall',
	    'Asmall',
	    'Bsmall',
	    'Csmall',
	    'Dsmall',
	    'Esmall',
	    'Fsmall',
	    'Gsmall',
	    'Hsmall',
	    'Ismall',
	    'Jsmall',
	    'Ksmall',
	    'Lsmall',
	    'Msmall',
	    'Nsmall',
	    'Osmall',
	    'Psmall',
	    'Qsmall',
	    'Rsmall',
	    'Ssmall',
	    'Tsmall',
	    'Usmall',
	    'Vsmall',
	    'Wsmall',
	    'Xsmall',
	    'Ysmall',
	    'Zsmall',
	    'colonmonetary',
	    'onefitted',
	    'rupiah',
	    'Tildesmall',
	    'exclamdownsmall',
	    'centoldstyle',
	    'Lslashsmall',
	    'Scaronsmall',
	    'Zcaronsmall',
	    'Dieresissmall',
	    'Brevesmall',
	    'Caronsmall',
	    'Dotaccentsmall',
	    'Macronsmall',
	    'figuredash',
	    'hypheninferior',
	    'Ogoneksmall',
	    'Ringsmall',
	    'Cedillasmall',
	    'questiondownsmall',
	    'oneeighth',
	    'threeeighths',
	    'fiveeighths',
	    'seveneighths',
	    'onethird',
	    'twothirds',
	    'zerosuperior',
	    'foursuperior',
	    'fivesuperior',
	    'sixsuperior',
	    'sevensuperior',
	    'eightsuperior',
	    'ninesuperior',
	    'zeroinferior',
	    'oneinferior',
	    'twoinferior',
	    'threeinferior',
	    'fourinferior',
	    'fiveinferior',
	    'sixinferior',
	    'seveninferior',
	    'eightinferior',
	    'nineinferior',
	    'centinferior',
	    'dollarinferior',
	    'periodinferior',
	    'commainferior',
	    'Agravesmall',
	    'Aacutesmall',
	    'Acircumflexsmall',
	    'Atildesmall',
	    'Adieresissmall',
	    'Aringsmall',
	    'AEsmall',
	    'Ccedillasmall',
	    'Egravesmall',
	    'Eacutesmall',
	    'Ecircumflexsmall',
	    'Edieresissmall',
	    'Igravesmall',
	    'Iacutesmall',
	    'Icircumflexsmall',
	    'Idieresissmall',
	    'Ethsmall',
	    'Ntildesmall',
	    'Ogravesmall',
	    'Oacutesmall',
	    'Ocircumflexsmall',
	    'Otildesmall',
	    'Odieresissmall',
	    'OEsmall',
	    'Oslashsmall',
	    'Ugravesmall',
	    'Uacutesmall',
	    'Ucircumflexsmall',
	    'Udieresissmall',
	    'Yacutesmall',
	    'Thornsmall',
	    'Ydieresissmall',
	    '001.000',
	    '001.001',
	    '001.002',
	    '001.003',
	    'Black',
	    'Bold',
	    'Book',
	    'Light',
	    'Medium',
	    'Regular',
	    'Roman',
	    'Semibold'
	   ];
	   var CFFParser = function CFFParserClosure() {
	    var CharstringValidationData = [
	     null,
	     {
	      id: 'hstem',
	      min: 2,
	      stackClearing: true,
	      stem: true
	     },
	     null,
	     {
	      id: 'vstem',
	      min: 2,
	      stackClearing: true,
	      stem: true
	     },
	     {
	      id: 'vmoveto',
	      min: 1,
	      stackClearing: true
	     },
	     {
	      id: 'rlineto',
	      min: 2,
	      resetStack: true
	     },
	     {
	      id: 'hlineto',
	      min: 1,
	      resetStack: true
	     },
	     {
	      id: 'vlineto',
	      min: 1,
	      resetStack: true
	     },
	     {
	      id: 'rrcurveto',
	      min: 6,
	      resetStack: true
	     },
	     null,
	     {
	      id: 'callsubr',
	      min: 1,
	      undefStack: true
	     },
	     {
	      id: 'return',
	      min: 0,
	      undefStack: true
	     },
	     null,
	     null,
	     {
	      id: 'endchar',
	      min: 0,
	      stackClearing: true
	     },
	     null,
	     null,
	     null,
	     {
	      id: 'hstemhm',
	      min: 2,
	      stackClearing: true,
	      stem: true
	     },
	     {
	      id: 'hintmask',
	      min: 0,
	      stackClearing: true
	     },
	     {
	      id: 'cntrmask',
	      min: 0,
	      stackClearing: true
	     },
	     {
	      id: 'rmoveto',
	      min: 2,
	      stackClearing: true
	     },
	     {
	      id: 'hmoveto',
	      min: 1,
	      stackClearing: true
	     },
	     {
	      id: 'vstemhm',
	      min: 2,
	      stackClearing: true,
	      stem: true
	     },
	     {
	      id: 'rcurveline',
	      min: 8,
	      resetStack: true
	     },
	     {
	      id: 'rlinecurve',
	      min: 8,
	      resetStack: true
	     },
	     {
	      id: 'vvcurveto',
	      min: 4,
	      resetStack: true
	     },
	     {
	      id: 'hhcurveto',
	      min: 4,
	      resetStack: true
	     },
	     null,
	     {
	      id: 'callgsubr',
	      min: 1,
	      undefStack: true
	     },
	     {
	      id: 'vhcurveto',
	      min: 4,
	      resetStack: true
	     },
	     {
	      id: 'hvcurveto',
	      min: 4,
	      resetStack: true
	     }
	    ];
	    var CharstringValidationData12 = [
	     null,
	     null,
	     null,
	     {
	      id: 'and',
	      min: 2,
	      stackDelta: -1
	     },
	     {
	      id: 'or',
	      min: 2,
	      stackDelta: -1
	     },
	     {
	      id: 'not',
	      min: 1,
	      stackDelta: 0
	     },
	     null,
	     null,
	     null,
	     {
	      id: 'abs',
	      min: 1,
	      stackDelta: 0
	     },
	     {
	      id: 'add',
	      min: 2,
	      stackDelta: -1,
	      stackFn: function stack_div(stack, index) {
	       stack[index - 2] = stack[index - 2] + stack[index - 1];
	      }
	     },
	     {
	      id: 'sub',
	      min: 2,
	      stackDelta: -1,
	      stackFn: function stack_div(stack, index) {
	       stack[index - 2] = stack[index - 2] - stack[index - 1];
	      }
	     },
	     {
	      id: 'div',
	      min: 2,
	      stackDelta: -1,
	      stackFn: function stack_div(stack, index) {
	       stack[index - 2] = stack[index - 2] / stack[index - 1];
	      }
	     },
	     null,
	     {
	      id: 'neg',
	      min: 1,
	      stackDelta: 0,
	      stackFn: function stack_div(stack, index) {
	       stack[index - 1] = -stack[index - 1];
	      }
	     },
	     {
	      id: 'eq',
	      min: 2,
	      stackDelta: -1
	     },
	     null,
	     null,
	     {
	      id: 'drop',
	      min: 1,
	      stackDelta: -1
	     },
	     null,
	     {
	      id: 'put',
	      min: 2,
	      stackDelta: -2
	     },
	     {
	      id: 'get',
	      min: 1,
	      stackDelta: 0
	     },
	     {
	      id: 'ifelse',
	      min: 4,
	      stackDelta: -3
	     },
	     {
	      id: 'random',
	      min: 0,
	      stackDelta: 1
	     },
	     {
	      id: 'mul',
	      min: 2,
	      stackDelta: -1,
	      stackFn: function stack_div(stack, index) {
	       stack[index - 2] = stack[index - 2] * stack[index - 1];
	      }
	     },
	     null,
	     {
	      id: 'sqrt',
	      min: 1,
	      stackDelta: 0
	     },
	     {
	      id: 'dup',
	      min: 1,
	      stackDelta: 1
	     },
	     {
	      id: 'exch',
	      min: 2,
	      stackDelta: 0
	     },
	     {
	      id: 'index',
	      min: 2,
	      stackDelta: 0
	     },
	     {
	      id: 'roll',
	      min: 3,
	      stackDelta: -2
	     },
	     null,
	     null,
	     null,
	     {
	      id: 'hflex',
	      min: 7,
	      resetStack: true
	     },
	     {
	      id: 'flex',
	      min: 13,
	      resetStack: true
	     },
	     {
	      id: 'hflex1',
	      min: 9,
	      resetStack: true
	     },
	     {
	      id: 'flex1',
	      min: 11,
	      resetStack: true
	     }
	    ];
	    function CFFParser(file, properties, seacAnalysisEnabled) {
	     this.bytes = file.getBytes();
	     this.properties = properties;
	     this.seacAnalysisEnabled = !!seacAnalysisEnabled;
	    }
	    CFFParser.prototype = {
	     parse: function CFFParser_parse() {
	      var properties = this.properties;
	      var cff = new CFF();
	      this.cff = cff;
	      var header = this.parseHeader();
	      var nameIndex = this.parseIndex(header.endPos);
	      var topDictIndex = this.parseIndex(nameIndex.endPos);
	      var stringIndex = this.parseIndex(topDictIndex.endPos);
	      var globalSubrIndex = this.parseIndex(stringIndex.endPos);
	      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));
	      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);
	      cff.header = header.obj;
	      cff.names = this.parseNameIndex(nameIndex.obj);
	      cff.strings = this.parseStringIndex(stringIndex.obj);
	      cff.topDict = topDict;
	      cff.globalSubrIndex = globalSubrIndex.obj;
	      this.parsePrivateDict(cff.topDict);
	      cff.isCIDFont = topDict.hasName('ROS');
	      var charStringOffset = topDict.getByName('CharStrings');
	      var charStringIndex = this.parseIndex(charStringOffset).obj;
	      var fontMatrix = topDict.getByName('FontMatrix');
	      if (fontMatrix) {
	       properties.fontMatrix = fontMatrix;
	      }
	      var fontBBox = topDict.getByName('FontBBox');
	      if (fontBBox) {
	       properties.ascent = fontBBox[3];
	       properties.descent = fontBBox[1];
	       properties.ascentScaled = true;
	      }
	      var charset, encoding;
	      if (cff.isCIDFont) {
	       var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;
	       for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {
	        var dictRaw = fdArrayIndex.get(i);
	        var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);
	        this.parsePrivateDict(fontDict);
	        cff.fdArray.push(fontDict);
	       }
	       encoding = null;
	       charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);
	       cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);
	      } else {
	       charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);
	       encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);
	      }
	      cff.charset = charset;
	      cff.encoding = encoding;
	      var charStringsAndSeacs = this.parseCharStrings(charStringIndex, topDict.privateDict.subrsIndex, globalSubrIndex.obj, cff.fdSelect, cff.fdArray);
	      cff.charStrings = charStringsAndSeacs.charStrings;
	      cff.seacs = charStringsAndSeacs.seacs;
	      cff.widths = charStringsAndSeacs.widths;
	      return cff;
	     },
	     parseHeader: function CFFParser_parseHeader() {
	      var bytes = this.bytes;
	      var bytesLength = bytes.length;
	      var offset = 0;
	      while (offset < bytesLength && bytes[offset] !== 1) {
	       ++offset;
	      }
	      if (offset >= bytesLength) {
	       error('Invalid CFF header');
	      } else if (offset !== 0) {
	       info('cff data is shifted');
	       bytes = bytes.subarray(offset);
	       this.bytes = bytes;
	      }
	      var major = bytes[0];
	      var minor = bytes[1];
	      var hdrSize = bytes[2];
	      var offSize = bytes[3];
	      var header = new CFFHeader(major, minor, hdrSize, offSize);
	      return {
	       obj: header,
	       endPos: hdrSize
	      };
	     },
	     parseDict: function CFFParser_parseDict(dict) {
	      var pos = 0;
	      function parseOperand() {
	       var value = dict[pos++];
	       if (value === 30) {
	        return parseFloatOperand();
	       } else if (value === 28) {
	        value = dict[pos++];
	        value = (value << 24 | dict[pos++] << 16) >> 16;
	        return value;
	       } else if (value === 29) {
	        value = dict[pos++];
	        value = value << 8 | dict[pos++];
	        value = value << 8 | dict[pos++];
	        value = value << 8 | dict[pos++];
	        return value;
	       } else if (value >= 32 && value <= 246) {
	        return value - 139;
	       } else if (value >= 247 && value <= 250) {
	        return (value - 247) * 256 + dict[pos++] + 108;
	       } else if (value >= 251 && value <= 254) {
	        return -((value - 251) * 256) - dict[pos++] - 108;
	       }
	       warn('CFFParser_parseDict: "' + value + '" is a reserved command.');
	       return NaN;
	      }
	      function parseFloatOperand() {
	       var str = '';
	       var eof = 15;
	       var lookup = [
	        '0',
	        '1',
	        '2',
	        '3',
	        '4',
	        '5',
	        '6',
	        '7',
	        '8',
	        '9',
	        '.',
	        'E',
	        'E-',
	        null,
	        '-'
	       ];
	       var length = dict.length;
	       while (pos < length) {
	        var b = dict[pos++];
	        var b1 = b >> 4;
	        var b2 = b & 15;
	        if (b1 === eof) {
	         break;
	        }
	        str += lookup[b1];
	        if (b2 === eof) {
	         break;
	        }
	        str += lookup[b2];
	       }
	       return parseFloat(str);
	      }
	      var operands = [];
	      var entries = [];
	      pos = 0;
	      var end = dict.length;
	      while (pos < end) {
	       var b = dict[pos];
	       if (b <= 21) {
	        if (b === 12) {
	         b = b << 8 | dict[++pos];
	        }
	        entries.push([
	         b,
	         operands
	        ]);
	        operands = [];
	        ++pos;
	       } else {
	        operands.push(parseOperand());
	       }
	      }
	      return entries;
	     },
	     parseIndex: function CFFParser_parseIndex(pos) {
	      var cffIndex = new CFFIndex();
	      var bytes = this.bytes;
	      var count = bytes[pos++] << 8 | bytes[pos++];
	      var offsets = [];
	      var end = pos;
	      var i, ii;
	      if (count !== 0) {
	       var offsetSize = bytes[pos++];
	       var startPos = pos + (count + 1) * offsetSize - 1;
	       for (i = 0, ii = count + 1; i < ii; ++i) {
	        var offset = 0;
	        for (var j = 0; j < offsetSize; ++j) {
	         offset <<= 8;
	         offset += bytes[pos++];
	        }
	        offsets.push(startPos + offset);
	       }
	       end = offsets[count];
	      }
	      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {
	       var offsetStart = offsets[i];
	       var offsetEnd = offsets[i + 1];
	       cffIndex.add(bytes.subarray(offsetStart, offsetEnd));
	      }
	      return {
	       obj: cffIndex,
	       endPos: end
	      };
	     },
	     parseNameIndex: function CFFParser_parseNameIndex(index) {
	      var names = [];
	      for (var i = 0, ii = index.count; i < ii; ++i) {
	       var name = index.get(i);
	       var length = Math.min(name.length, 127);
	       var data = [];
	       for (var j = 0; j < length; ++j) {
	        var c = name[j];
	        if (j === 0 && c === 0) {
	         data[j] = c;
	         continue;
	        }
	        if (c < 33 || c > 126 || c === 91 || c === 93 || c === 40 || c === 41 || c === 123 || c === 125 || c === 60 || c === 62 || c === 47 || c === 37 || c === 35)
	         {
	          data[j] = 95;
	          continue;
	         }
	        data[j] = c;
	       }
	       names.push(bytesToString(data));
	      }
	      return names;
	     },
	     parseStringIndex: function CFFParser_parseStringIndex(index) {
	      var strings = new CFFStrings();
	      for (var i = 0, ii = index.count; i < ii; ++i) {
	       var data = index.get(i);
	       strings.add(bytesToString(data));
	      }
	      return strings;
	     },
	     createDict: function CFFParser_createDict(Type, dict, strings) {
	      var cffDict = new Type(strings);
	      for (var i = 0, ii = dict.length; i < ii; ++i) {
	       var pair = dict[i];
	       var key = pair[0];
	       var value = pair[1];
	       cffDict.setByKey(key, value);
	      }
	      return cffDict;
	     },
	     parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {
	      if (state.callDepth > MAX_SUBR_NESTING) {
	       return false;
	      }
	      var stackSize = state.stackSize;
	      var stack = state.stack;
	      var length = data.length;
	      for (var j = 0; j < length;) {
	       var value = data[j++];
	       var validationCommand = null;
	       if (value === 12) {
	        var q = data[j++];
	        if (q === 0) {
	         data[j - 2] = 139;
	         data[j - 1] = 22;
	         stackSize = 0;
	        } else {
	         validationCommand = CharstringValidationData12[q];
	        }
	       } else if (value === 28) {
	        stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;
	        j += 2;
	        stackSize++;
	       } else if (value === 14) {
	        if (stackSize >= 4) {
	         stackSize -= 4;
	         if (this.seacAnalysisEnabled) {
	          state.seac = stack.slice(stackSize, stackSize + 4);
	          return false;
	         }
	        }
	        validationCommand = CharstringValidationData[value];
	       } else if (value >= 32 && value <= 246) {
	        stack[stackSize] = value - 139;
	        stackSize++;
	       } else if (value >= 247 && value <= 254) {
	        stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;
	        j++;
	        stackSize++;
	       } else if (value === 255) {
	        stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;
	        j += 4;
	        stackSize++;
	       } else if (value === 19 || value === 20) {
	        state.hints += stackSize >> 1;
	        j += state.hints + 7 >> 3;
	        stackSize %= 2;
	        validationCommand = CharstringValidationData[value];
	       } else if (value === 10 || value === 29) {
	        var subrsIndex;
	        if (value === 10) {
	         subrsIndex = localSubrIndex;
	        } else {
	         subrsIndex = globalSubrIndex;
	        }
	        if (!subrsIndex) {
	         validationCommand = CharstringValidationData[value];
	         warn('Missing subrsIndex for ' + validationCommand.id);
	         return false;
	        }
	        var bias = 32768;
	        if (subrsIndex.count < 1240) {
	         bias = 107;
	        } else if (subrsIndex.count < 33900) {
	         bias = 1131;
	        }
	        var subrNumber = stack[--stackSize] + bias;
	        if (subrNumber < 0 || subrNumber >= subrsIndex.count) {
	         validationCommand = CharstringValidationData[value];
	         warn('Out of bounds subrIndex for ' + validationCommand.id);
	         return false;
	        }
	        state.stackSize = stackSize;
	        state.callDepth++;
	        var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);
	        if (!valid) {
	         return false;
	        }
	        state.callDepth--;
	        stackSize = state.stackSize;
	        continue;
	       } else if (value === 11) {
	        state.stackSize = stackSize;
	        return true;
	       } else {
	        validationCommand = CharstringValidationData[value];
	       }
	       if (validationCommand) {
	        if (validationCommand.stem) {
	         state.hints += stackSize >> 1;
	        }
	        if ('min' in validationCommand) {
	         if (!state.undefStack && stackSize < validationCommand.min) {
	          warn('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);
	          return false;
	         }
	        }
	        if (state.firstStackClearing && validationCommand.stackClearing) {
	         state.firstStackClearing = false;
	         stackSize -= validationCommand.min;
	         if (stackSize >= 2 && validationCommand.stem) {
	          stackSize %= 2;
	         } else if (stackSize > 1) {
	          warn('Found too many parameters for stack-clearing command');
	         }
	         if (stackSize > 0 && stack[stackSize - 1] >= 0) {
	          state.width = stack[stackSize - 1];
	         }
	        }
	        if ('stackDelta' in validationCommand) {
	         if ('stackFn' in validationCommand) {
	          validationCommand.stackFn(stack, stackSize);
	         }
	         stackSize += validationCommand.stackDelta;
	        } else if (validationCommand.stackClearing) {
	         stackSize = 0;
	        } else if (validationCommand.resetStack) {
	         stackSize = 0;
	         state.undefStack = false;
	        } else if (validationCommand.undefStack) {
	         stackSize = 0;
	         state.undefStack = true;
	         state.firstStackClearing = false;
	        }
	       }
	      }
	      state.stackSize = stackSize;
	      return true;
	     },
	     parseCharStrings: function CFFParser_parseCharStrings(charStrings, localSubrIndex, globalSubrIndex, fdSelect, fdArray) {
	      var seacs = [];
	      var widths = [];
	      var count = charStrings.count;
	      for (var i = 0; i < count; i++) {
	       var charstring = charStrings.get(i);
	       var state = {
	        callDepth: 0,
	        stackSize: 0,
	        stack: [],
	        undefStack: true,
	        hints: 0,
	        firstStackClearing: true,
	        seac: null,
	        width: null
	       };
	       var valid = true;
	       var localSubrToUse = null;
	       if (fdSelect && fdArray.length) {
	        var fdIndex = fdSelect.getFDIndex(i);
	        if (fdIndex === -1) {
	         warn('Glyph index is not in fd select.');
	         valid = false;
	        }
	        if (fdIndex >= fdArray.length) {
	         warn('Invalid fd index for glyph index.');
	         valid = false;
	        }
	        if (valid) {
	         localSubrToUse = fdArray[fdIndex].privateDict.subrsIndex;
	        }
	       } else if (localSubrIndex) {
	        localSubrToUse = localSubrIndex;
	       }
	       if (valid) {
	        valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);
	       }
	       if (state.width !== null) {
	        widths[i] = state.width;
	       }
	       if (state.seac !== null) {
	        seacs[i] = state.seac;
	       }
	       if (!valid) {
	        charStrings.set(i, new Uint8Array([14]));
	       }
	      }
	      return {
	       charStrings: charStrings,
	       seacs: seacs,
	       widths: widths
	      };
	     },
	     emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {
	      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);
	      parentDict.setByKey(18, [
	       0,
	       0
	      ]);
	      parentDict.privateDict = privateDict;
	     },
	     parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {
	      if (!parentDict.hasName('Private')) {
	       this.emptyPrivateDictionary(parentDict);
	       return;
	      }
	      var privateOffset = parentDict.getByName('Private');
	      if (!isArray(privateOffset) || privateOffset.length !== 2) {
	       parentDict.removeByName('Private');
	       return;
	      }
	      var size = privateOffset[0];
	      var offset = privateOffset[1];
	      if (size === 0 || offset >= this.bytes.length) {
	       this.emptyPrivateDictionary(parentDict);
	       return;
	      }
	      var privateDictEnd = offset + size;
	      var dictData = this.bytes.subarray(offset, privateDictEnd);
	      var dict = this.parseDict(dictData);
	      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);
	      parentDict.privateDict = privateDict;
	      if (!privateDict.getByName('Subrs')) {
	       return;
	      }
	      var subrsOffset = privateDict.getByName('Subrs');
	      var relativeOffset = offset + subrsOffset;
	      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {
	       this.emptyPrivateDictionary(parentDict);
	       return;
	      }
	      var subrsIndex = this.parseIndex(relativeOffset);
	      privateDict.subrsIndex = subrsIndex.obj;
	     },
	     parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {
	      if (pos === 0) {
	       return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, ISOAdobeCharset);
	      } else if (pos === 1) {
	       return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, ExpertCharset);
	      } else if (pos === 2) {
	       return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, ExpertSubsetCharset);
	      }
	      var bytes = this.bytes;
	      var start = pos;
	      var format = bytes[pos++];
	      var charset = ['.notdef'];
	      var id, count, i;
	      length -= 1;
	      switch (format) {
	      case 0:
	       for (i = 0; i < length; i++) {
	        id = bytes[pos++] << 8 | bytes[pos++];
	        charset.push(cid ? id : strings.get(id));
	       }
	       break;
	      case 1:
	       while (charset.length <= length) {
	        id = bytes[pos++] << 8 | bytes[pos++];
	        count = bytes[pos++];
	        for (i = 0; i <= count; i++) {
	         charset.push(cid ? id++ : strings.get(id++));
	        }
	       }
	       break;
	      case 2:
	       while (charset.length <= length) {
	        id = bytes[pos++] << 8 | bytes[pos++];
	        count = bytes[pos++] << 8 | bytes[pos++];
	        for (i = 0; i <= count; i++) {
	         charset.push(cid ? id++ : strings.get(id++));
	        }
	       }
	       break;
	      default:
	       error('Unknown charset format');
	      }
	      var end = pos;
	      var raw = bytes.subarray(start, end);
	      return new CFFCharset(false, format, charset, raw);
	     },
	     parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {
	      var encoding = Object.create(null);
	      var bytes = this.bytes;
	      var predefined = false;
	      var hasSupplement = false;
	      var format, i, ii;
	      var raw = null;
	      function readSupplement() {
	       var supplementsCount = bytes[pos++];
	       for (i = 0; i < supplementsCount; i++) {
	        var code = bytes[pos++];
	        var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);
	        encoding[code] = charset.indexOf(strings.get(sid));
	       }
	      }
	      if (pos === 0 || pos === 1) {
	       predefined = true;
	       format = pos;
	       var baseEncoding = pos ? ExpertEncoding : StandardEncoding;
	       for (i = 0, ii = charset.length; i < ii; i++) {
	        var index = baseEncoding.indexOf(charset[i]);
	        if (index !== -1) {
	         encoding[index] = i;
	        }
	       }
	      } else {
	       var dataStart = pos;
	       format = bytes[pos++];
	       switch (format & 0x7f) {
	       case 0:
	        var glyphsCount = bytes[pos++];
	        for (i = 1; i <= glyphsCount; i++) {
	         encoding[bytes[pos++]] = i;
	        }
	        break;
	       case 1:
	        var rangesCount = bytes[pos++];
	        var gid = 1;
	        for (i = 0; i < rangesCount; i++) {
	         var start = bytes[pos++];
	         var left = bytes[pos++];
	         for (var j = start; j <= start + left; j++) {
	          encoding[j] = gid++;
	         }
	        }
	        break;
	       default:
	        error('Unknown encoding format: ' + format + ' in CFF');
	        break;
	       }
	       var dataEnd = pos;
	       if (format & 0x80) {
	        bytes[dataStart] &= 0x7f;
	        readSupplement();
	        hasSupplement = true;
	       }
	       raw = bytes.subarray(dataStart, dataEnd);
	      }
	      format = format & 0x7f;
	      return new CFFEncoding(predefined, format, encoding, raw);
	     },
	     parseFDSelect: function CFFParser_parseFDSelect(pos, length) {
	      var start = pos;
	      var bytes = this.bytes;
	      var format = bytes[pos++];
	      var fdSelect = [], rawBytes;
	      var i, invalidFirstGID = false;
	      switch (format) {
	      case 0:
	       for (i = 0; i < length; ++i) {
	        var id = bytes[pos++];
	        fdSelect.push(id);
	       }
	       rawBytes = bytes.subarray(start, pos);
	       break;
	      case 3:
	       var rangesCount = bytes[pos++] << 8 | bytes[pos++];
	       for (i = 0; i < rangesCount; ++i) {
	        var first = bytes[pos++] << 8 | bytes[pos++];
	        if (i === 0 && first !== 0) {
	         warn('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');
	         invalidFirstGID = true;
	         first = 0;
	        }
	        var fdIndex = bytes[pos++];
	        var next = bytes[pos] << 8 | bytes[pos + 1];
	        for (var j = first; j < next; ++j) {
	         fdSelect.push(fdIndex);
	        }
	       }
	       pos += 2;
	       rawBytes = bytes.subarray(start, pos);
	       if (invalidFirstGID) {
	        rawBytes[3] = rawBytes[4] = 0;
	       }
	       break;
	      default:
	       error('parseFDSelect: Unknown format "' + format + '".');
	       break;
	      }
	      assert(fdSelect.length === length, 'parseFDSelect: Invalid font data.');
	      return new CFFFDSelect(fdSelect, rawBytes);
	     }
	    };
	    return CFFParser;
	   }();
	   var CFF = function CFFClosure() {
	    function CFF() {
	     this.header = null;
	     this.names = [];
	     this.topDict = null;
	     this.strings = new CFFStrings();
	     this.globalSubrIndex = null;
	     this.encoding = null;
	     this.charset = null;
	     this.charStrings = null;
	     this.fdArray = [];
	     this.fdSelect = null;
	     this.isCIDFont = false;
	    }
	    return CFF;
	   }();
	   var CFFHeader = function CFFHeaderClosure() {
	    function CFFHeader(major, minor, hdrSize, offSize) {
	     this.major = major;
	     this.minor = minor;
	     this.hdrSize = hdrSize;
	     this.offSize = offSize;
	    }
	    return CFFHeader;
	   }();
	   var CFFStrings = function CFFStringsClosure() {
	    function CFFStrings() {
	     this.strings = [];
	    }
	    CFFStrings.prototype = {
	     get: function CFFStrings_get(index) {
	      if (index >= 0 && index <= 390) {
	       return CFFStandardStrings[index];
	      }
	      if (index - 391 <= this.strings.length) {
	       return this.strings[index - 391];
	      }
	      return CFFStandardStrings[0];
	     },
	     add: function CFFStrings_add(value) {
	      this.strings.push(value);
	     },
	     get count() {
	      return this.strings.length;
	     }
	    };
	    return CFFStrings;
	   }();
	   var CFFIndex = function CFFIndexClosure() {
	    function CFFIndex() {
	     this.objects = [];
	     this.length = 0;
	    }
	    CFFIndex.prototype = {
	     add: function CFFIndex_add(data) {
	      this.length += data.length;
	      this.objects.push(data);
	     },
	     set: function CFFIndex_set(index, data) {
	      this.length += data.length - this.objects[index].length;
	      this.objects[index] = data;
	     },
	     get: function CFFIndex_get(index) {
	      return this.objects[index];
	     },
	     get count() {
	      return this.objects.length;
	     }
	    };
	    return CFFIndex;
	   }();
	   var CFFDict = function CFFDictClosure() {
	    function CFFDict(tables, strings) {
	     this.keyToNameMap = tables.keyToNameMap;
	     this.nameToKeyMap = tables.nameToKeyMap;
	     this.defaults = tables.defaults;
	     this.types = tables.types;
	     this.opcodes = tables.opcodes;
	     this.order = tables.order;
	     this.strings = strings;
	     this.values = Object.create(null);
	    }
	    CFFDict.prototype = {
	     setByKey: function CFFDict_setByKey(key, value) {
	      if (!(key in this.keyToNameMap)) {
	       return false;
	      }
	      var valueLength = value.length;
	      if (valueLength === 0) {
	       return true;
	      }
	      for (var i = 0; i < valueLength; i++) {
	       if (isNaN(value[i])) {
	        warn('Invalid CFFDict value: "' + value + '" for key "' + key + '".');
	        return true;
	       }
	      }
	      var type = this.types[key];
	      if (type === 'num' || type === 'sid' || type === 'offset') {
	       value = value[0];
	      }
	      this.values[key] = value;
	      return true;
	     },
	     setByName: function CFFDict_setByName(name, value) {
	      if (!(name in this.nameToKeyMap)) {
	       error('Invalid dictionary name "' + name + '"');
	      }
	      this.values[this.nameToKeyMap[name]] = value;
	     },
	     hasName: function CFFDict_hasName(name) {
	      return this.nameToKeyMap[name] in this.values;
	     },
	     getByName: function CFFDict_getByName(name) {
	      if (!(name in this.nameToKeyMap)) {
	       error('Invalid dictionary name "' + name + '"');
	      }
	      var key = this.nameToKeyMap[name];
	      if (!(key in this.values)) {
	       return this.defaults[key];
	      }
	      return this.values[key];
	     },
	     removeByName: function CFFDict_removeByName(name) {
	      delete this.values[this.nameToKeyMap[name]];
	     }
	    };
	    CFFDict.createTables = function CFFDict_createTables(layout) {
	     var tables = {
	      keyToNameMap: {},
	      nameToKeyMap: {},
	      defaults: {},
	      types: {},
	      opcodes: {},
	      order: []
	     };
	     for (var i = 0, ii = layout.length; i < ii; ++i) {
	      var entry = layout[i];
	      var key = isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];
	      tables.keyToNameMap[key] = entry[1];
	      tables.nameToKeyMap[entry[1]] = key;
	      tables.types[key] = entry[2];
	      tables.defaults[key] = entry[3];
	      tables.opcodes[key] = isArray(entry[0]) ? entry[0] : [entry[0]];
	      tables.order.push(key);
	     }
	     return tables;
	    };
	    return CFFDict;
	   }();
	   var CFFTopDict = function CFFTopDictClosure() {
	    var layout = [
	     [
	      [
	       12,
	       30
	      ],
	      'ROS',
	      [
	       'sid',
	       'sid',
	       'num'
	      ],
	      null
	     ],
	     [
	      [
	       12,
	       20
	      ],
	      'SyntheticBase',
	      'num',
	      null
	     ],
	     [
	      0,
	      'version',
	      'sid',
	      null
	     ],
	     [
	      1,
	      'Notice',
	      'sid',
	      null
	     ],
	     [
	      [
	       12,
	       0
	      ],
	      'Copyright',
	      'sid',
	      null
	     ],
	     [
	      2,
	      'FullName',
	      'sid',
	      null
	     ],
	     [
	      3,
	      'FamilyName',
	      'sid',
	      null
	     ],
	     [
	      4,
	      'Weight',
	      'sid',
	      null
	     ],
	     [
	      [
	       12,
	       1
	      ],
	      'isFixedPitch',
	      'num',
	      0
	     ],
	     [
	      [
	       12,
	       2
	      ],
	      'ItalicAngle',
	      'num',
	      0
	     ],
	     [
	      [
	       12,
	       3
	      ],
	      'UnderlinePosition',
	      'num',
	      -100
	     ],
	     [
	      [
	       12,
	       4
	      ],
	      'UnderlineThickness',
	      'num',
	      50
	     ],
	     [
	      [
	       12,
	       5
	      ],
	      'PaintType',
	      'num',
	      0
	     ],
	     [
	      [
	       12,
	       6
	      ],
	      'CharstringType',
	      'num',
	      2
	     ],
	     [
	      [
	       12,
	       7
	      ],
	      'FontMatrix',
	      [
	       'num',
	       'num',
	       'num',
	       'num',
	       'num',
	       'num'
	      ],
	      [
	       0.001,
	       0,
	       0,
	       0.001,
	       0,
	       0
	      ]
	     ],
	     [
	      13,
	      'UniqueID',
	      'num',
	      null
	     ],
	     [
	      5,
	      'FontBBox',
	      [
	       'num',
	       'num',
	       'num',
	       'num'
	      ],
	      [
	       0,
	       0,
	       0,
	       0
	      ]
	     ],
	     [
	      [
	       12,
	       8
	      ],
	      'StrokeWidth',
	      'num',
	      0
	     ],
	     [
	      14,
	      'XUID',
	      'array',
	      null
	     ],
	     [
	      15,
	      'charset',
	      'offset',
	      0
	     ],
	     [
	      16,
	      'Encoding',
	      'offset',
	      0
	     ],
	     [
	      17,
	      'CharStrings',
	      'offset',
	      0
	     ],
	     [
	      18,
	      'Private',
	      [
	       'offset',
	       'offset'
	      ],
	      null
	     ],
	     [
	      [
	       12,
	       21
	      ],
	      'PostScript',
	      'sid',
	      null
	     ],
	     [
	      [
	       12,
	       22
	      ],
	      'BaseFontName',
	      'sid',
	      null
	     ],
	     [
	      [
	       12,
	       23
	      ],
	      'BaseFontBlend',
	      'delta',
	      null
	     ],
	     [
	      [
	       12,
	       31
	      ],
	      'CIDFontVersion',
	      'num',
	      0
	     ],
	     [
	      [
	       12,
	       32
	      ],
	      'CIDFontRevision',
	      'num',
	      0
	     ],
	     [
	      [
	       12,
	       33
	      ],
	      'CIDFontType',
	      'num',
	      0
	     ],
	     [
	      [
	       12,
	       34
	      ],
	      'CIDCount',
	      'num',
	      8720
	     ],
	     [
	      [
	       12,
	       35
	      ],
	      'UIDBase',
	      'num',
	      null
	     ],
	     [
	      [
	       12,
	       37
	      ],
	      'FDSelect',
	      'offset',
	      null
	     ],
	     [
	      [
	       12,
	       36
	      ],
	      'FDArray',
	      'offset',
	      null
	     ],
	     [
	      [
	       12,
	       38
	      ],
	      'FontName',
	      'sid',
	      null
	     ]
	    ];
	    var tables = null;
	    function CFFTopDict(strings) {
	     if (tables === null) {
	      tables = CFFDict.createTables(layout);
	     }
	     CFFDict.call(this, tables, strings);
	     this.privateDict = null;
	    }
	    CFFTopDict.prototype = Object.create(CFFDict.prototype);
	    return CFFTopDict;
	   }();
	   var CFFPrivateDict = function CFFPrivateDictClosure() {
	    var layout = [
	     [
	      6,
	      'BlueValues',
	      'delta',
	      null
	     ],
	     [
	      7,
	      'OtherBlues',
	      'delta',
	      null
	     ],
	     [
	      8,
	      'FamilyBlues',
	      'delta',
	      null
	     ],
	     [
	      9,
	      'FamilyOtherBlues',
	      'delta',
	      null
	     ],
	     [
	      [
	       12,
	       9
	      ],
	      'BlueScale',
	      'num',
	      0.039625
	     ],
	     [
	      [
	       12,
	       10
	      ],
	      'BlueShift',
	      'num',
	      7
	     ],
	     [
	      [
	       12,
	       11
	      ],
	      'BlueFuzz',
	      'num',
	      1
	     ],
	     [
	      10,
	      'StdHW',
	      'num',
	      null
	     ],
	     [
	      11,
	      'StdVW',
	      'num',
	      null
	     ],
	     [
	      [
	       12,
	       12
	      ],
	      'StemSnapH',
	      'delta',
	      null
	     ],
	     [
	      [
	       12,
	       13
	      ],
	      'StemSnapV',
	      'delta',
	      null
	     ],
	     [
	      [
	       12,
	       14
	      ],
	      'ForceBold',
	      'num',
	      0
	     ],
	     [
	      [
	       12,
	       17
	      ],
	      'LanguageGroup',
	      'num',
	      0
	     ],
	     [
	      [
	       12,
	       18
	      ],
	      'ExpansionFactor',
	      'num',
	      0.06
	     ],
	     [
	      [
	       12,
	       19
	      ],
	      'initialRandomSeed',
	      'num',
	      0
	     ],
	     [
	      20,
	      'defaultWidthX',
	      'num',
	      0
	     ],
	     [
	      21,
	      'nominalWidthX',
	      'num',
	      0
	     ],
	     [
	      19,
	      'Subrs',
	      'offset',
	      null
	     ]
	    ];
	    var tables = null;
	    function CFFPrivateDict(strings) {
	     if (tables === null) {
	      tables = CFFDict.createTables(layout);
	     }
	     CFFDict.call(this, tables, strings);
	     this.subrsIndex = null;
	    }
	    CFFPrivateDict.prototype = Object.create(CFFDict.prototype);
	    return CFFPrivateDict;
	   }();
	   var CFFCharsetPredefinedTypes = {
	    ISO_ADOBE: 0,
	    EXPERT: 1,
	    EXPERT_SUBSET: 2
	   };
	   var CFFCharset = function CFFCharsetClosure() {
	    function CFFCharset(predefined, format, charset, raw) {
	     this.predefined = predefined;
	     this.format = format;
	     this.charset = charset;
	     this.raw = raw;
	    }
	    return CFFCharset;
	   }();
	   var CFFEncoding = function CFFEncodingClosure() {
	    function CFFEncoding(predefined, format, encoding, raw) {
	     this.predefined = predefined;
	     this.format = format;
	     this.encoding = encoding;
	     this.raw = raw;
	    }
	    return CFFEncoding;
	   }();
	   var CFFFDSelect = function CFFFDSelectClosure() {
	    function CFFFDSelect(fdSelect, raw) {
	     this.fdSelect = fdSelect;
	     this.raw = raw;
	    }
	    CFFFDSelect.prototype = {
	     getFDIndex: function CFFFDSelect_get(glyphIndex) {
	      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {
	       return -1;
	      }
	      return this.fdSelect[glyphIndex];
	     }
	    };
	    return CFFFDSelect;
	   }();
	   var CFFOffsetTracker = function CFFOffsetTrackerClosure() {
	    function CFFOffsetTracker() {
	     this.offsets = Object.create(null);
	    }
	    CFFOffsetTracker.prototype = {
	     isTracking: function CFFOffsetTracker_isTracking(key) {
	      return key in this.offsets;
	     },
	     track: function CFFOffsetTracker_track(key, location) {
	      if (key in this.offsets) {
	       error('Already tracking location of ' + key);
	      }
	      this.offsets[key] = location;
	     },
	     offset: function CFFOffsetTracker_offset(value) {
	      for (var key in this.offsets) {
	       this.offsets[key] += value;
	      }
	     },
	     setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {
	      if (!(key in this.offsets)) {
	       error('Not tracking location of ' + key);
	      }
	      var data = output.data;
	      var dataOffset = this.offsets[key];
	      var size = 5;
	      for (var i = 0, ii = values.length; i < ii; ++i) {
	       var offset0 = i * size + dataOffset;
	       var offset1 = offset0 + 1;
	       var offset2 = offset0 + 2;
	       var offset3 = offset0 + 3;
	       var offset4 = offset0 + 4;
	       if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {
	        error('writing to an offset that is not empty');
	       }
	       var value = values[i];
	       data[offset0] = 0x1d;
	       data[offset1] = value >> 24 & 0xFF;
	       data[offset2] = value >> 16 & 0xFF;
	       data[offset3] = value >> 8 & 0xFF;
	       data[offset4] = value & 0xFF;
	      }
	     }
	    };
	    return CFFOffsetTracker;
	   }();
	   var CFFCompiler = function CFFCompilerClosure() {
	    function CFFCompiler(cff) {
	     this.cff = cff;
	    }
	    CFFCompiler.prototype = {
	     compile: function CFFCompiler_compile() {
	      var cff = this.cff;
	      var output = {
	       data: [],
	       length: 0,
	       add: function CFFCompiler_add(data) {
	        this.data = this.data.concat(data);
	        this.length = this.data.length;
	       }
	      };
	      var header = this.compileHeader(cff.header);
	      output.add(header);
	      var nameIndex = this.compileNameIndex(cff.names);
	      output.add(nameIndex);
	      if (cff.isCIDFont) {
	       if (cff.topDict.hasName('FontMatrix')) {
	        var base = cff.topDict.getByName('FontMatrix');
	        cff.topDict.removeByName('FontMatrix');
	        for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {
	         var subDict = cff.fdArray[i];
	         var matrix = base.slice(0);
	         if (subDict.hasName('FontMatrix')) {
	          matrix = Util.transform(matrix, subDict.getByName('FontMatrix'));
	         }
	         subDict.setByName('FontMatrix', matrix);
	        }
	       }
	      }
	      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);
	      output.add(compiled.output);
	      var topDictTracker = compiled.trackers[0];
	      var stringIndex = this.compileStringIndex(cff.strings.strings);
	      output.add(stringIndex);
	      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);
	      output.add(globalSubrIndex);
	      if (cff.encoding && cff.topDict.hasName('Encoding')) {
	       if (cff.encoding.predefined) {
	        topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);
	       } else {
	        var encoding = this.compileEncoding(cff.encoding);
	        topDictTracker.setEntryLocation('Encoding', [output.length], output);
	        output.add(encoding);
	       }
	      }
	      if (cff.charset && cff.topDict.hasName('charset')) {
	       if (cff.charset.predefined) {
	        topDictTracker.setEntryLocation('charset', [cff.charset.format], output);
	       } else {
	        var charset = this.compileCharset(cff.charset);
	        topDictTracker.setEntryLocation('charset', [output.length], output);
	        output.add(charset);
	       }
	      }
	      var charStrings = this.compileCharStrings(cff.charStrings);
	      topDictTracker.setEntryLocation('CharStrings', [output.length], output);
	      output.add(charStrings);
	      if (cff.isCIDFont) {
	       topDictTracker.setEntryLocation('FDSelect', [output.length], output);
	       var fdSelect = this.compileFDSelect(cff.fdSelect.raw);
	       output.add(fdSelect);
	       compiled = this.compileTopDicts(cff.fdArray, output.length, true);
	       topDictTracker.setEntryLocation('FDArray', [output.length], output);
	       output.add(compiled.output);
	       var fontDictTrackers = compiled.trackers;
	       this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);
	      }
	      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);
	      output.add([0]);
	      return output.data;
	     },
	     encodeNumber: function CFFCompiler_encodeNumber(value) {
	      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {
	       return this.encodeInteger(value);
	      }
	      return this.encodeFloat(value);
	     },
	     encodeFloat: function CFFCompiler_encodeFloat(num) {
	      var value = num.toString();
	      var m = /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(value);
	      if (m) {
	       var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));
	       value = (Math.round(num * epsilon) / epsilon).toString();
	      }
	      var nibbles = '';
	      var i, ii;
	      for (i = 0, ii = value.length; i < ii; ++i) {
	       var a = value[i];
	       if (a === 'e') {
	        nibbles += value[++i] === '-' ? 'c' : 'b';
	       } else if (a === '.') {
	        nibbles += 'a';
	       } else if (a === '-') {
	        nibbles += 'e';
	       } else {
	        nibbles += a;
	       }
	      }
	      nibbles += nibbles.length & 1 ? 'f' : 'ff';
	      var out = [30];
	      for (i = 0, ii = nibbles.length; i < ii; i += 2) {
	       out.push(parseInt(nibbles.substr(i, 2), 16));
	      }
	      return out;
	     },
	     encodeInteger: function CFFCompiler_encodeInteger(value) {
	      var code;
	      if (value >= -107 && value <= 107) {
	       code = [value + 139];
	      } else if (value >= 108 && value <= 1131) {
	       value = value - 108;
	       code = [
	        (value >> 8) + 247,
	        value & 0xFF
	       ];
	      } else if (value >= -1131 && value <= -108) {
	       value = -value - 108;
	       code = [
	        (value >> 8) + 251,
	        value & 0xFF
	       ];
	      } else if (value >= -32768 && value <= 32767) {
	       code = [
	        0x1c,
	        value >> 8 & 0xFF,
	        value & 0xFF
	       ];
	      } else {
	       code = [
	        0x1d,
	        value >> 24 & 0xFF,
	        value >> 16 & 0xFF,
	        value >> 8 & 0xFF,
	        value & 0xFF
	       ];
	      }
	      return code;
	     },
	     compileHeader: function CFFCompiler_compileHeader(header) {
	      return [
	       header.major,
	       header.minor,
	       header.hdrSize,
	       header.offSize
	      ];
	     },
	     compileNameIndex: function CFFCompiler_compileNameIndex(names) {
	      var nameIndex = new CFFIndex();
	      for (var i = 0, ii = names.length; i < ii; ++i) {
	       nameIndex.add(stringToBytes(names[i]));
	      }
	      return this.compileIndex(nameIndex);
	     },
	     compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {
	      var fontDictTrackers = [];
	      var fdArrayIndex = new CFFIndex();
	      for (var i = 0, ii = dicts.length; i < ii; ++i) {
	       var fontDict = dicts[i];
	       if (removeCidKeys) {
	        fontDict.removeByName('CIDFontVersion');
	        fontDict.removeByName('CIDFontRevision');
	        fontDict.removeByName('CIDFontType');
	        fontDict.removeByName('CIDCount');
	        fontDict.removeByName('UIDBase');
	       }
	       var fontDictTracker = new CFFOffsetTracker();
	       var fontDictData = this.compileDict(fontDict, fontDictTracker);
	       fontDictTrackers.push(fontDictTracker);
	       fdArrayIndex.add(fontDictData);
	       fontDictTracker.offset(length);
	      }
	      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);
	      return {
	       trackers: fontDictTrackers,
	       output: fdArrayIndex
	      };
	     },
	     compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {
	      for (var i = 0, ii = dicts.length; i < ii; ++i) {
	       var fontDict = dicts[i];
	       assert(fontDict.privateDict && fontDict.hasName('Private'), 'There must be an private dictionary.');
	       var privateDict = fontDict.privateDict;
	       var privateDictTracker = new CFFOffsetTracker();
	       var privateDictData = this.compileDict(privateDict, privateDictTracker);
	       var outputLength = output.length;
	       privateDictTracker.offset(outputLength);
	       if (!privateDictData.length) {
	        outputLength = 0;
	       }
	       trackers[i].setEntryLocation('Private', [
	        privateDictData.length,
	        outputLength
	       ], output);
	       output.add(privateDictData);
	       if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {
	        var subrs = this.compileIndex(privateDict.subrsIndex);
	        privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);
	        output.add(subrs);
	       }
	      }
	     },
	     compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {
	      var out = [];
	      var order = dict.order;
	      for (var i = 0; i < order.length; ++i) {
	       var key = order[i];
	       if (!(key in dict.values)) {
	        continue;
	       }
	       var values = dict.values[key];
	       var types = dict.types[key];
	       if (!isArray(types)) {
	        types = [types];
	       }
	       if (!isArray(values)) {
	        values = [values];
	       }
	       if (values.length === 0) {
	        continue;
	       }
	       for (var j = 0, jj = types.length; j < jj; ++j) {
	        var type = types[j];
	        var value = values[j];
	        switch (type) {
	        case 'num':
	        case 'sid':
	         out = out.concat(this.encodeNumber(value));
	         break;
	        case 'offset':
	         var name = dict.keyToNameMap[key];
	         if (!offsetTracker.isTracking(name)) {
	          offsetTracker.track(name, out.length);
	         }
	         out = out.concat([
	          0x1d,
	          0,
	          0,
	          0,
	          0
	         ]);
	         break;
	        case 'array':
	        case 'delta':
	         out = out.concat(this.encodeNumber(value));
	         for (var k = 1, kk = values.length; k < kk; ++k) {
	          out = out.concat(this.encodeNumber(values[k]));
	         }
	         break;
	        default:
	         error('Unknown data type of ' + type);
	         break;
	        }
	       }
	       out = out.concat(dict.opcodes[key]);
	      }
	      return out;
	     },
	     compileStringIndex: function CFFCompiler_compileStringIndex(strings) {
	      var stringIndex = new CFFIndex();
	      for (var i = 0, ii = strings.length; i < ii; ++i) {
	       stringIndex.add(stringToBytes(strings[i]));
	      }
	      return this.compileIndex(stringIndex);
	     },
	     compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {
	      var globalSubrIndex = this.cff.globalSubrIndex;
	      this.out.writeByteArray(this.compileIndex(globalSubrIndex));
	     },
	     compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {
	      return this.compileIndex(charStrings);
	     },
	     compileCharset: function CFFCompiler_compileCharset(charset) {
	      return this.compileTypedArray(charset.raw);
	     },
	     compileEncoding: function CFFCompiler_compileEncoding(encoding) {
	      return this.compileTypedArray(encoding.raw);
	     },
	     compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {
	      return this.compileTypedArray(fdSelect);
	     },
	     compileTypedArray: function CFFCompiler_compileTypedArray(data) {
	      var out = [];
	      for (var i = 0, ii = data.length; i < ii; ++i) {
	       out[i] = data[i];
	      }
	      return out;
	     },
	     compileIndex: function CFFCompiler_compileIndex(index, trackers) {
	      trackers = trackers || [];
	      var objects = index.objects;
	      var count = objects.length;
	      if (count === 0) {
	       return [
	        0,
	        0,
	        0
	       ];
	      }
	      var data = [
	       count >> 8 & 0xFF,
	       count & 0xff
	      ];
	      var lastOffset = 1, i;
	      for (i = 0; i < count; ++i) {
	       lastOffset += objects[i].length;
	      }
	      var offsetSize;
	      if (lastOffset < 0x100) {
	       offsetSize = 1;
	      } else if (lastOffset < 0x10000) {
	       offsetSize = 2;
	      } else if (lastOffset < 0x1000000) {
	       offsetSize = 3;
	      } else {
	       offsetSize = 4;
	      }
	      data.push(offsetSize);
	      var relativeOffset = 1;
	      for (i = 0; i < count + 1; i++) {
	       if (offsetSize === 1) {
	        data.push(relativeOffset & 0xFF);
	       } else if (offsetSize === 2) {
	        data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);
	       } else if (offsetSize === 3) {
	        data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);
	       } else {
	        data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);
	       }
	       if (objects[i]) {
	        relativeOffset += objects[i].length;
	       }
	      }
	      for (i = 0; i < count; i++) {
	       if (trackers[i]) {
	        trackers[i].offset(data.length);
	       }
	       for (var j = 0, jj = objects[i].length; j < jj; j++) {
	        data.push(objects[i][j]);
	       }
	      }
	      return data;
	     }
	    };
	    return CFFCompiler;
	   }();
	   exports.CFFStandardStrings = CFFStandardStrings;
	   exports.CFFParser = CFFParser;
	   exports.CFF = CFF;
	   exports.CFFHeader = CFFHeader;
	   exports.CFFStrings = CFFStrings;
	   exports.CFFIndex = CFFIndex;
	   exports.CFFCharset = CFFCharset;
	   exports.CFFTopDict = CFFTopDict;
	   exports.CFFPrivateDict = CFFPrivateDict;
	   exports.CFFCompiler = CFFCompiler;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreChunkedStream = {}, root.pdfjsSharedUtil);
	  }(this, function (exports, sharedUtil) {
	   var MissingDataException = sharedUtil.MissingDataException;
	   var arrayByteLength = sharedUtil.arrayByteLength;
	   var arraysToBytes = sharedUtil.arraysToBytes;
	   var assert = sharedUtil.assert;
	   var createPromiseCapability = sharedUtil.createPromiseCapability;
	   var isInt = sharedUtil.isInt;
	   var isEmptyObj = sharedUtil.isEmptyObj;
	   var ChunkedStream = function ChunkedStreamClosure() {
	    function ChunkedStream(length, chunkSize, manager) {
	     this.bytes = new Uint8Array(length);
	     this.start = 0;
	     this.pos = 0;
	     this.end = length;
	     this.chunkSize = chunkSize;
	     this.loadedChunks = [];
	     this.numChunksLoaded = 0;
	     this.numChunks = Math.ceil(length / chunkSize);
	     this.manager = manager;
	     this.progressiveDataLength = 0;
	     this.lastSuccessfulEnsureByteChunk = -1;
	    }
	    ChunkedStream.prototype = {
	     getMissingChunks: function ChunkedStream_getMissingChunks() {
	      var chunks = [];
	      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {
	       if (!this.loadedChunks[chunk]) {
	        chunks.push(chunk);
	       }
	      }
	      return chunks;
	     },
	     getBaseStreams: function ChunkedStream_getBaseStreams() {
	      return [this];
	     },
	     allChunksLoaded: function ChunkedStream_allChunksLoaded() {
	      return this.numChunksLoaded === this.numChunks;
	     },
	     onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {
	      var end = begin + chunk.byteLength;
	      assert(begin % this.chunkSize === 0, 'Bad begin offset: ' + begin);
	      var length = this.bytes.length;
	      assert(end % this.chunkSize === 0 || end === length, 'Bad end offset: ' + end);
	      this.bytes.set(new Uint8Array(chunk), begin);
	      var chunkSize = this.chunkSize;
	      var beginChunk = Math.floor(begin / chunkSize);
	      var endChunk = Math.floor((end - 1) / chunkSize) + 1;
	      var curChunk;
	      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {
	       if (!this.loadedChunks[curChunk]) {
	        this.loadedChunks[curChunk] = true;
	        ++this.numChunksLoaded;
	       }
	      }
	     },
	     onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {
	      var position = this.progressiveDataLength;
	      var beginChunk = Math.floor(position / this.chunkSize);
	      this.bytes.set(new Uint8Array(data), position);
	      position += data.byteLength;
	      this.progressiveDataLength = position;
	      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);
	      var curChunk;
	      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {
	       if (!this.loadedChunks[curChunk]) {
	        this.loadedChunks[curChunk] = true;
	        ++this.numChunksLoaded;
	       }
	      }
	     },
	     ensureByte: function ChunkedStream_ensureByte(pos) {
	      var chunk = Math.floor(pos / this.chunkSize);
	      if (chunk === this.lastSuccessfulEnsureByteChunk) {
	       return;
	      }
	      if (!this.loadedChunks[chunk]) {
	       throw new MissingDataException(pos, pos + 1);
	      }
	      this.lastSuccessfulEnsureByteChunk = chunk;
	     },
	     ensureRange: function ChunkedStream_ensureRange(begin, end) {
	      if (begin >= end) {
	       return;
	      }
	      if (end <= this.progressiveDataLength) {
	       return;
	      }
	      var chunkSize = this.chunkSize;
	      var beginChunk = Math.floor(begin / chunkSize);
	      var endChunk = Math.floor((end - 1) / chunkSize) + 1;
	      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {
	       if (!this.loadedChunks[chunk]) {
	        throw new MissingDataException(begin, end);
	       }
	      }
	     },
	     nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {
	      var chunk, numChunks = this.numChunks;
	      for (var i = 0; i < numChunks; ++i) {
	       chunk = (beginChunk + i) % numChunks;
	       if (!this.loadedChunks[chunk]) {
	        return chunk;
	       }
	      }
	      return null;
	     },
	     hasChunk: function ChunkedStream_hasChunk(chunk) {
	      return !!this.loadedChunks[chunk];
	     },
	     get length() {
	      return this.end - this.start;
	     },
	     get isEmpty() {
	      return this.length === 0;
	     },
	     getByte: function ChunkedStream_getByte() {
	      var pos = this.pos;
	      if (pos >= this.end) {
	       return -1;
	      }
	      this.ensureByte(pos);
	      return this.bytes[this.pos++];
	     },
	     getUint16: function ChunkedStream_getUint16() {
	      var b0 = this.getByte();
	      var b1 = this.getByte();
	      if (b0 === -1 || b1 === -1) {
	       return -1;
	      }
	      return (b0 << 8) + b1;
	     },
	     getInt32: function ChunkedStream_getInt32() {
	      var b0 = this.getByte();
	      var b1 = this.getByte();
	      var b2 = this.getByte();
	      var b3 = this.getByte();
	      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;
	     },
	     getBytes: function ChunkedStream_getBytes(length) {
	      var bytes = this.bytes;
	      var pos = this.pos;
	      var strEnd = this.end;
	      if (!length) {
	       this.ensureRange(pos, strEnd);
	       return bytes.subarray(pos, strEnd);
	      }
	      var end = pos + length;
	      if (end > strEnd) {
	       end = strEnd;
	      }
	      this.ensureRange(pos, end);
	      this.pos = end;
	      return bytes.subarray(pos, end);
	     },
	     peekByte: function ChunkedStream_peekByte() {
	      var peekedByte = this.getByte();
	      this.pos--;
	      return peekedByte;
	     },
	     peekBytes: function ChunkedStream_peekBytes(length) {
	      var bytes = this.getBytes(length);
	      this.pos -= bytes.length;
	      return bytes;
	     },
	     getByteRange: function ChunkedStream_getBytes(begin, end) {
	      this.ensureRange(begin, end);
	      return this.bytes.subarray(begin, end);
	     },
	     skip: function ChunkedStream_skip(n) {
	      if (!n) {
	       n = 1;
	      }
	      this.pos += n;
	     },
	     reset: function ChunkedStream_reset() {
	      this.pos = this.start;
	     },
	     moveStart: function ChunkedStream_moveStart() {
	      this.start = this.pos;
	     },
	     makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {
	      this.ensureRange(start, start + length);
	      function ChunkedStreamSubstream() {
	      }
	      ChunkedStreamSubstream.prototype = Object.create(this);
	      ChunkedStreamSubstream.prototype.getMissingChunks = function () {
	       var chunkSize = this.chunkSize;
	       var beginChunk = Math.floor(this.start / chunkSize);
	       var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;
	       var missingChunks = [];
	       for (var chunk = beginChunk; chunk < endChunk; ++chunk) {
	        if (!this.loadedChunks[chunk]) {
	         missingChunks.push(chunk);
	        }
	       }
	       return missingChunks;
	      };
	      var subStream = new ChunkedStreamSubstream();
	      subStream.pos = subStream.start = start;
	      subStream.end = start + length || this.end;
	      subStream.dict = dict;
	      return subStream;
	     },
	     isStream: true
	    };
	    return ChunkedStream;
	   }();
	   var ChunkedStreamManager = function ChunkedStreamManagerClosure() {
	    function ChunkedStreamManager(pdfNetworkStream, args) {
	     var chunkSize = args.rangeChunkSize;
	     var length = args.length;
	     this.stream = new ChunkedStream(length, chunkSize, this);
	     this.length = length;
	     this.chunkSize = chunkSize;
	     this.pdfNetworkStream = pdfNetworkStream;
	     this.url = args.url;
	     this.disableAutoFetch = args.disableAutoFetch;
	     this.msgHandler = args.msgHandler;
	     this.currRequestId = 0;
	     this.chunksNeededByRequest = Object.create(null);
	     this.requestsByChunk = Object.create(null);
	     this.promisesByRequest = Object.create(null);
	     this.progressiveDataLength = 0;
	     this.aborted = false;
	     this._loadedStreamCapability = createPromiseCapability();
	    }
	    ChunkedStreamManager.prototype = {
	     onLoadedStream: function ChunkedStreamManager_getLoadedStream() {
	      return this._loadedStreamCapability.promise;
	     },
	     sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {
	      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);
	      if (!rangeReader.isStreamingSupported) {
	       rangeReader.onProgress = this.onProgress.bind(this);
	      }
	      var chunks = [], loaded = 0;
	      var manager = this;
	      var promise = new Promise(function (resolve, reject) {
	       var readChunk = function (chunk) {
	        try {
	         if (!chunk.done) {
	          var data = chunk.value;
	          chunks.push(data);
	          loaded += arrayByteLength(data);
	          if (rangeReader.isStreamingSupported) {
	           manager.onProgress({ loaded: loaded });
	          }
	          rangeReader.read().then(readChunk, reject);
	          return;
	         }
	         var chunkData = arraysToBytes(chunks);
	         chunks = null;
	         resolve(chunkData);
	        } catch (e) {
	         reject(e);
	        }
	       };
	       rangeReader.read().then(readChunk, reject);
	      });
	      promise.then(function (data) {
	       if (this.aborted) {
	        return;
	       }
	       this.onReceiveData({
	        chunk: data,
	        begin: begin
	       });
	      }.bind(this));
	     },
	     requestAllChunks: function ChunkedStreamManager_requestAllChunks() {
	      var missingChunks = this.stream.getMissingChunks();
	      this._requestChunks(missingChunks);
	      return this._loadedStreamCapability.promise;
	     },
	     _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {
	      var requestId = this.currRequestId++;
	      var i, ii;
	      var chunksNeeded = Object.create(null);
	      this.chunksNeededByRequest[requestId] = chunksNeeded;
	      for (i = 0, ii = chunks.length; i < ii; i++) {
	       if (!this.stream.hasChunk(chunks[i])) {
	        chunksNeeded[chunks[i]] = true;
	       }
	      }
	      if (isEmptyObj(chunksNeeded)) {
	       return Promise.resolve();
	      }
	      var capability = createPromiseCapability();
	      this.promisesByRequest[requestId] = capability;
	      var chunksToRequest = [];
	      for (var chunk in chunksNeeded) {
	       chunk = chunk | 0;
	       if (!(chunk in this.requestsByChunk)) {
	        this.requestsByChunk[chunk] = [];
	        chunksToRequest.push(chunk);
	       }
	       this.requestsByChunk[chunk].push(requestId);
	      }
	      if (!chunksToRequest.length) {
	       return capability.promise;
	      }
	      var groupedChunksToRequest = this.groupChunks(chunksToRequest);
	      for (i = 0; i < groupedChunksToRequest.length; ++i) {
	       var groupedChunk = groupedChunksToRequest[i];
	       var begin = groupedChunk.beginChunk * this.chunkSize;
	       var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);
	       this.sendRequest(begin, end);
	      }
	      return capability.promise;
	     },
	     getStream: function ChunkedStreamManager_getStream() {
	      return this.stream;
	     },
	     requestRange: function ChunkedStreamManager_requestRange(begin, end) {
	      end = Math.min(end, this.length);
	      var beginChunk = this.getBeginChunk(begin);
	      var endChunk = this.getEndChunk(end);
	      var chunks = [];
	      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {
	       chunks.push(chunk);
	      }
	      return this._requestChunks(chunks);
	     },
	     requestRanges: function ChunkedStreamManager_requestRanges(ranges) {
	      ranges = ranges || [];
	      var chunksToRequest = [];
	      for (var i = 0; i < ranges.length; i++) {
	       var beginChunk = this.getBeginChunk(ranges[i].begin);
	       var endChunk = this.getEndChunk(ranges[i].end);
	       for (var chunk = beginChunk; chunk < endChunk; ++chunk) {
	        if (chunksToRequest.indexOf(chunk) < 0) {
	         chunksToRequest.push(chunk);
	        }
	       }
	      }
	      chunksToRequest.sort(function (a, b) {
	       return a - b;
	      });
	      return this._requestChunks(chunksToRequest);
	     },
	     groupChunks: function ChunkedStreamManager_groupChunks(chunks) {
	      var groupedChunks = [];
	      var beginChunk = -1;
	      var prevChunk = -1;
	      for (var i = 0; i < chunks.length; ++i) {
	       var chunk = chunks[i];
	       if (beginChunk < 0) {
	        beginChunk = chunk;
	       }
	       if (prevChunk >= 0 && prevChunk + 1 !== chunk) {
	        groupedChunks.push({
	         beginChunk: beginChunk,
	         endChunk: prevChunk + 1
	        });
	        beginChunk = chunk;
	       }
	       if (i + 1 === chunks.length) {
	        groupedChunks.push({
	         beginChunk: beginChunk,
	         endChunk: chunk + 1
	        });
	       }
	       prevChunk = chunk;
	      }
	      return groupedChunks;
	     },
	     onProgress: function ChunkedStreamManager_onProgress(args) {
	      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;
	      this.msgHandler.send('DocProgress', {
	       loaded: bytesLoaded,
	       total: this.length
	      });
	     },
	     onReceiveData: function ChunkedStreamManager_onReceiveData(args) {
	      var chunk = args.chunk;
	      var isProgressive = args.begin === undefined;
	      var begin = isProgressive ? this.progressiveDataLength : args.begin;
	      var end = begin + chunk.byteLength;
	      var beginChunk = Math.floor(begin / this.chunkSize);
	      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);
	      if (isProgressive) {
	       this.stream.onReceiveProgressiveData(chunk);
	       this.progressiveDataLength = end;
	      } else {
	       this.stream.onReceiveData(begin, chunk);
	      }
	      if (this.stream.allChunksLoaded()) {
	       this._loadedStreamCapability.resolve(this.stream);
	      }
	      var loadedRequests = [];
	      var i, requestId;
	      for (chunk = beginChunk; chunk < endChunk; ++chunk) {
	       var requestIds = this.requestsByChunk[chunk] || [];
	       delete this.requestsByChunk[chunk];
	       for (i = 0; i < requestIds.length; ++i) {
	        requestId = requestIds[i];
	        var chunksNeeded = this.chunksNeededByRequest[requestId];
	        if (chunk in chunksNeeded) {
	         delete chunksNeeded[chunk];
	        }
	        if (!isEmptyObj(chunksNeeded)) {
	         continue;
	        }
	        loadedRequests.push(requestId);
	       }
	      }
	      if (!this.disableAutoFetch && isEmptyObj(this.requestsByChunk)) {
	       var nextEmptyChunk;
	       if (this.stream.numChunksLoaded === 1) {
	        var lastChunk = this.stream.numChunks - 1;
	        if (!this.stream.hasChunk(lastChunk)) {
	         nextEmptyChunk = lastChunk;
	        }
	       } else {
	        nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);
	       }
	       if (isInt(nextEmptyChunk)) {
	        this._requestChunks([nextEmptyChunk]);
	       }
	      }
	      for (i = 0; i < loadedRequests.length; ++i) {
	       requestId = loadedRequests[i];
	       var capability = this.promisesByRequest[requestId];
	       delete this.promisesByRequest[requestId];
	       capability.resolve();
	      }
	      this.msgHandler.send('DocProgress', {
	       loaded: this.stream.numChunksLoaded * this.chunkSize,
	       total: this.length
	      });
	     },
	     onError: function ChunkedStreamManager_onError(err) {
	      this._loadedStreamCapability.reject(err);
	     },
	     getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {
	      var chunk = Math.floor(begin / this.chunkSize);
	      return chunk;
	     },
	     getEndChunk: function ChunkedStreamManager_getEndChunk(end) {
	      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;
	      return chunk;
	     },
	     abort: function ChunkedStreamManager_abort() {
	      this.aborted = true;
	      if (this.pdfNetworkStream) {
	       this.pdfNetworkStream.cancelAllRequests('abort');
	      }
	      for (var requestId in this.promisesByRequest) {
	       var capability = this.promisesByRequest[requestId];
	       capability.reject(new Error('Request was aborted'));
	      }
	     }
	    };
	    return ChunkedStreamManager;
	   }();
	   exports.ChunkedStream = ChunkedStream;
	   exports.ChunkedStreamManager = ChunkedStreamManager;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreGlyphList = {}, root.pdfjsSharedUtil);
	  }(this, function (exports, sharedUtil) {
	   var getLookupTableFactory = sharedUtil.getLookupTableFactory;
	   var getGlyphsUnicode = getLookupTableFactory(function (t) {
	    t['A'] = 0x0041;
	    t['AE'] = 0x00C6;
	    t['AEacute'] = 0x01FC;
	    t['AEmacron'] = 0x01E2;
	    t['AEsmall'] = 0xF7E6;
	    t['Aacute'] = 0x00C1;
	    t['Aacutesmall'] = 0xF7E1;
	    t['Abreve'] = 0x0102;
	    t['Abreveacute'] = 0x1EAE;
	    t['Abrevecyrillic'] = 0x04D0;
	    t['Abrevedotbelow'] = 0x1EB6;
	    t['Abrevegrave'] = 0x1EB0;
	    t['Abrevehookabove'] = 0x1EB2;
	    t['Abrevetilde'] = 0x1EB4;
	    t['Acaron'] = 0x01CD;
	    t['Acircle'] = 0x24B6;
	    t['Acircumflex'] = 0x00C2;
	    t['Acircumflexacute'] = 0x1EA4;
	    t['Acircumflexdotbelow'] = 0x1EAC;
	    t['Acircumflexgrave'] = 0x1EA6;
	    t['Acircumflexhookabove'] = 0x1EA8;
	    t['Acircumflexsmall'] = 0xF7E2;
	    t['Acircumflextilde'] = 0x1EAA;
	    t['Acute'] = 0xF6C9;
	    t['Acutesmall'] = 0xF7B4;
	    t['Acyrillic'] = 0x0410;
	    t['Adblgrave'] = 0x0200;
	    t['Adieresis'] = 0x00C4;
	    t['Adieresiscyrillic'] = 0x04D2;
	    t['Adieresismacron'] = 0x01DE;
	    t['Adieresissmall'] = 0xF7E4;
	    t['Adotbelow'] = 0x1EA0;
	    t['Adotmacron'] = 0x01E0;
	    t['Agrave'] = 0x00C0;
	    t['Agravesmall'] = 0xF7E0;
	    t['Ahookabove'] = 0x1EA2;
	    t['Aiecyrillic'] = 0x04D4;
	    t['Ainvertedbreve'] = 0x0202;
	    t['Alpha'] = 0x0391;
	    t['Alphatonos'] = 0x0386;
	    t['Amacron'] = 0x0100;
	    t['Amonospace'] = 0xFF21;
	    t['Aogonek'] = 0x0104;
	    t['Aring'] = 0x00C5;
	    t['Aringacute'] = 0x01FA;
	    t['Aringbelow'] = 0x1E00;
	    t['Aringsmall'] = 0xF7E5;
	    t['Asmall'] = 0xF761;
	    t['Atilde'] = 0x00C3;
	    t['Atildesmall'] = 0xF7E3;
	    t['Aybarmenian'] = 0x0531;
	    t['B'] = 0x0042;
	    t['Bcircle'] = 0x24B7;
	    t['Bdotaccent'] = 0x1E02;
	    t['Bdotbelow'] = 0x1E04;
	    t['Becyrillic'] = 0x0411;
	    t['Benarmenian'] = 0x0532;
	    t['Beta'] = 0x0392;
	    t['Bhook'] = 0x0181;
	    t['Blinebelow'] = 0x1E06;
	    t['Bmonospace'] = 0xFF22;
	    t['Brevesmall'] = 0xF6F4;
	    t['Bsmall'] = 0xF762;
	    t['Btopbar'] = 0x0182;
	    t['C'] = 0x0043;
	    t['Caarmenian'] = 0x053E;
	    t['Cacute'] = 0x0106;
	    t['Caron'] = 0xF6CA;
	    t['Caronsmall'] = 0xF6F5;
	    t['Ccaron'] = 0x010C;
	    t['Ccedilla'] = 0x00C7;
	    t['Ccedillaacute'] = 0x1E08;
	    t['Ccedillasmall'] = 0xF7E7;
	    t['Ccircle'] = 0x24B8;
	    t['Ccircumflex'] = 0x0108;
	    t['Cdot'] = 0x010A;
	    t['Cdotaccent'] = 0x010A;
	    t['Cedillasmall'] = 0xF7B8;
	    t['Chaarmenian'] = 0x0549;
	    t['Cheabkhasiancyrillic'] = 0x04BC;
	    t['Checyrillic'] = 0x0427;
	    t['Chedescenderabkhasiancyrillic'] = 0x04BE;
	    t['Chedescendercyrillic'] = 0x04B6;
	    t['Chedieresiscyrillic'] = 0x04F4;
	    t['Cheharmenian'] = 0x0543;
	    t['Chekhakassiancyrillic'] = 0x04CB;
	    t['Cheverticalstrokecyrillic'] = 0x04B8;
	    t['Chi'] = 0x03A7;
	    t['Chook'] = 0x0187;
	    t['Circumflexsmall'] = 0xF6F6;
	    t['Cmonospace'] = 0xFF23;
	    t['Coarmenian'] = 0x0551;
	    t['Csmall'] = 0xF763;
	    t['D'] = 0x0044;
	    t['DZ'] = 0x01F1;
	    t['DZcaron'] = 0x01C4;
	    t['Daarmenian'] = 0x0534;
	    t['Dafrican'] = 0x0189;
	    t['Dcaron'] = 0x010E;
	    t['Dcedilla'] = 0x1E10;
	    t['Dcircle'] = 0x24B9;
	    t['Dcircumflexbelow'] = 0x1E12;
	    t['Dcroat'] = 0x0110;
	    t['Ddotaccent'] = 0x1E0A;
	    t['Ddotbelow'] = 0x1E0C;
	    t['Decyrillic'] = 0x0414;
	    t['Deicoptic'] = 0x03EE;
	    t['Delta'] = 0x2206;
	    t['Deltagreek'] = 0x0394;
	    t['Dhook'] = 0x018A;
	    t['Dieresis'] = 0xF6CB;
	    t['DieresisAcute'] = 0xF6CC;
	    t['DieresisGrave'] = 0xF6CD;
	    t['Dieresissmall'] = 0xF7A8;
	    t['Digammagreek'] = 0x03DC;
	    t['Djecyrillic'] = 0x0402;
	    t['Dlinebelow'] = 0x1E0E;
	    t['Dmonospace'] = 0xFF24;
	    t['Dotaccentsmall'] = 0xF6F7;
	    t['Dslash'] = 0x0110;
	    t['Dsmall'] = 0xF764;
	    t['Dtopbar'] = 0x018B;
	    t['Dz'] = 0x01F2;
	    t['Dzcaron'] = 0x01C5;
	    t['Dzeabkhasiancyrillic'] = 0x04E0;
	    t['Dzecyrillic'] = 0x0405;
	    t['Dzhecyrillic'] = 0x040F;
	    t['E'] = 0x0045;
	    t['Eacute'] = 0x00C9;
	    t['Eacutesmall'] = 0xF7E9;
	    t['Ebreve'] = 0x0114;
	    t['Ecaron'] = 0x011A;
	    t['Ecedillabreve'] = 0x1E1C;
	    t['Echarmenian'] = 0x0535;
	    t['Ecircle'] = 0x24BA;
	    t['Ecircumflex'] = 0x00CA;
	    t['Ecircumflexacute'] = 0x1EBE;
	    t['Ecircumflexbelow'] = 0x1E18;
	    t['Ecircumflexdotbelow'] = 0x1EC6;
	    t['Ecircumflexgrave'] = 0x1EC0;
	    t['Ecircumflexhookabove'] = 0x1EC2;
	    t['Ecircumflexsmall'] = 0xF7EA;
	    t['Ecircumflextilde'] = 0x1EC4;
	    t['Ecyrillic'] = 0x0404;
	    t['Edblgrave'] = 0x0204;
	    t['Edieresis'] = 0x00CB;
	    t['Edieresissmall'] = 0xF7EB;
	    t['Edot'] = 0x0116;
	    t['Edotaccent'] = 0x0116;
	    t['Edotbelow'] = 0x1EB8;
	    t['Efcyrillic'] = 0x0424;
	    t['Egrave'] = 0x00C8;
	    t['Egravesmall'] = 0xF7E8;
	    t['Eharmenian'] = 0x0537;
	    t['Ehookabove'] = 0x1EBA;
	    t['Eightroman'] = 0x2167;
	    t['Einvertedbreve'] = 0x0206;
	    t['Eiotifiedcyrillic'] = 0x0464;
	    t['Elcyrillic'] = 0x041B;
	    t['Elevenroman'] = 0x216A;
	    t['Emacron'] = 0x0112;
	    t['Emacronacute'] = 0x1E16;
	    t['Emacrongrave'] = 0x1E14;
	    t['Emcyrillic'] = 0x041C;
	    t['Emonospace'] = 0xFF25;
	    t['Encyrillic'] = 0x041D;
	    t['Endescendercyrillic'] = 0x04A2;
	    t['Eng'] = 0x014A;
	    t['Enghecyrillic'] = 0x04A4;
	    t['Enhookcyrillic'] = 0x04C7;
	    t['Eogonek'] = 0x0118;
	    t['Eopen'] = 0x0190;
	    t['Epsilon'] = 0x0395;
	    t['Epsilontonos'] = 0x0388;
	    t['Ercyrillic'] = 0x0420;
	    t['Ereversed'] = 0x018E;
	    t['Ereversedcyrillic'] = 0x042D;
	    t['Escyrillic'] = 0x0421;
	    t['Esdescendercyrillic'] = 0x04AA;
	    t['Esh'] = 0x01A9;
	    t['Esmall'] = 0xF765;
	    t['Eta'] = 0x0397;
	    t['Etarmenian'] = 0x0538;
	    t['Etatonos'] = 0x0389;
	    t['Eth'] = 0x00D0;
	    t['Ethsmall'] = 0xF7F0;
	    t['Etilde'] = 0x1EBC;
	    t['Etildebelow'] = 0x1E1A;
	    t['Euro'] = 0x20AC;
	    t['Ezh'] = 0x01B7;
	    t['Ezhcaron'] = 0x01EE;
	    t['Ezhreversed'] = 0x01B8;
	    t['F'] = 0x0046;
	    t['Fcircle'] = 0x24BB;
	    t['Fdotaccent'] = 0x1E1E;
	    t['Feharmenian'] = 0x0556;
	    t['Feicoptic'] = 0x03E4;
	    t['Fhook'] = 0x0191;
	    t['Fitacyrillic'] = 0x0472;
	    t['Fiveroman'] = 0x2164;
	    t['Fmonospace'] = 0xFF26;
	    t['Fourroman'] = 0x2163;
	    t['Fsmall'] = 0xF766;
	    t['G'] = 0x0047;
	    t['GBsquare'] = 0x3387;
	    t['Gacute'] = 0x01F4;
	    t['Gamma'] = 0x0393;
	    t['Gammaafrican'] = 0x0194;
	    t['Gangiacoptic'] = 0x03EA;
	    t['Gbreve'] = 0x011E;
	    t['Gcaron'] = 0x01E6;
	    t['Gcedilla'] = 0x0122;
	    t['Gcircle'] = 0x24BC;
	    t['Gcircumflex'] = 0x011C;
	    t['Gcommaaccent'] = 0x0122;
	    t['Gdot'] = 0x0120;
	    t['Gdotaccent'] = 0x0120;
	    t['Gecyrillic'] = 0x0413;
	    t['Ghadarmenian'] = 0x0542;
	    t['Ghemiddlehookcyrillic'] = 0x0494;
	    t['Ghestrokecyrillic'] = 0x0492;
	    t['Gheupturncyrillic'] = 0x0490;
	    t['Ghook'] = 0x0193;
	    t['Gimarmenian'] = 0x0533;
	    t['Gjecyrillic'] = 0x0403;
	    t['Gmacron'] = 0x1E20;
	    t['Gmonospace'] = 0xFF27;
	    t['Grave'] = 0xF6CE;
	    t['Gravesmall'] = 0xF760;
	    t['Gsmall'] = 0xF767;
	    t['Gsmallhook'] = 0x029B;
	    t['Gstroke'] = 0x01E4;
	    t['H'] = 0x0048;
	    t['H18533'] = 0x25CF;
	    t['H18543'] = 0x25AA;
	    t['H18551'] = 0x25AB;
	    t['H22073'] = 0x25A1;
	    t['HPsquare'] = 0x33CB;
	    t['Haabkhasiancyrillic'] = 0x04A8;
	    t['Hadescendercyrillic'] = 0x04B2;
	    t['Hardsigncyrillic'] = 0x042A;
	    t['Hbar'] = 0x0126;
	    t['Hbrevebelow'] = 0x1E2A;
	    t['Hcedilla'] = 0x1E28;
	    t['Hcircle'] = 0x24BD;
	    t['Hcircumflex'] = 0x0124;
	    t['Hdieresis'] = 0x1E26;
	    t['Hdotaccent'] = 0x1E22;
	    t['Hdotbelow'] = 0x1E24;
	    t['Hmonospace'] = 0xFF28;
	    t['Hoarmenian'] = 0x0540;
	    t['Horicoptic'] = 0x03E8;
	    t['Hsmall'] = 0xF768;
	    t['Hungarumlaut'] = 0xF6CF;
	    t['Hungarumlautsmall'] = 0xF6F8;
	    t['Hzsquare'] = 0x3390;
	    t['I'] = 0x0049;
	    t['IAcyrillic'] = 0x042F;
	    t['IJ'] = 0x0132;
	    t['IUcyrillic'] = 0x042E;
	    t['Iacute'] = 0x00CD;
	    t['Iacutesmall'] = 0xF7ED;
	    t['Ibreve'] = 0x012C;
	    t['Icaron'] = 0x01CF;
	    t['Icircle'] = 0x24BE;
	    t['Icircumflex'] = 0x00CE;
	    t['Icircumflexsmall'] = 0xF7EE;
	    t['Icyrillic'] = 0x0406;
	    t['Idblgrave'] = 0x0208;
	    t['Idieresis'] = 0x00CF;
	    t['Idieresisacute'] = 0x1E2E;
	    t['Idieresiscyrillic'] = 0x04E4;
	    t['Idieresissmall'] = 0xF7EF;
	    t['Idot'] = 0x0130;
	    t['Idotaccent'] = 0x0130;
	    t['Idotbelow'] = 0x1ECA;
	    t['Iebrevecyrillic'] = 0x04D6;
	    t['Iecyrillic'] = 0x0415;
	    t['Ifraktur'] = 0x2111;
	    t['Igrave'] = 0x00CC;
	    t['Igravesmall'] = 0xF7EC;
	    t['Ihookabove'] = 0x1EC8;
	    t['Iicyrillic'] = 0x0418;
	    t['Iinvertedbreve'] = 0x020A;
	    t['Iishortcyrillic'] = 0x0419;
	    t['Imacron'] = 0x012A;
	    t['Imacroncyrillic'] = 0x04E2;
	    t['Imonospace'] = 0xFF29;
	    t['Iniarmenian'] = 0x053B;
	    t['Iocyrillic'] = 0x0401;
	    t['Iogonek'] = 0x012E;
	    t['Iota'] = 0x0399;
	    t['Iotaafrican'] = 0x0196;
	    t['Iotadieresis'] = 0x03AA;
	    t['Iotatonos'] = 0x038A;
	    t['Ismall'] = 0xF769;
	    t['Istroke'] = 0x0197;
	    t['Itilde'] = 0x0128;
	    t['Itildebelow'] = 0x1E2C;
	    t['Izhitsacyrillic'] = 0x0474;
	    t['Izhitsadblgravecyrillic'] = 0x0476;
	    t['J'] = 0x004A;
	    t['Jaarmenian'] = 0x0541;
	    t['Jcircle'] = 0x24BF;
	    t['Jcircumflex'] = 0x0134;
	    t['Jecyrillic'] = 0x0408;
	    t['Jheharmenian'] = 0x054B;
	    t['Jmonospace'] = 0xFF2A;
	    t['Jsmall'] = 0xF76A;
	    t['K'] = 0x004B;
	    t['KBsquare'] = 0x3385;
	    t['KKsquare'] = 0x33CD;
	    t['Kabashkircyrillic'] = 0x04A0;
	    t['Kacute'] = 0x1E30;
	    t['Kacyrillic'] = 0x041A;
	    t['Kadescendercyrillic'] = 0x049A;
	    t['Kahookcyrillic'] = 0x04C3;
	    t['Kappa'] = 0x039A;
	    t['Kastrokecyrillic'] = 0x049E;
	    t['Kaverticalstrokecyrillic'] = 0x049C;
	    t['Kcaron'] = 0x01E8;
	    t['Kcedilla'] = 0x0136;
	    t['Kcircle'] = 0x24C0;
	    t['Kcommaaccent'] = 0x0136;
	    t['Kdotbelow'] = 0x1E32;
	    t['Keharmenian'] = 0x0554;
	    t['Kenarmenian'] = 0x053F;
	    t['Khacyrillic'] = 0x0425;
	    t['Kheicoptic'] = 0x03E6;
	    t['Khook'] = 0x0198;
	    t['Kjecyrillic'] = 0x040C;
	    t['Klinebelow'] = 0x1E34;
	    t['Kmonospace'] = 0xFF2B;
	    t['Koppacyrillic'] = 0x0480;
	    t['Koppagreek'] = 0x03DE;
	    t['Ksicyrillic'] = 0x046E;
	    t['Ksmall'] = 0xF76B;
	    t['L'] = 0x004C;
	    t['LJ'] = 0x01C7;
	    t['LL'] = 0xF6BF;
	    t['Lacute'] = 0x0139;
	    t['Lambda'] = 0x039B;
	    t['Lcaron'] = 0x013D;
	    t['Lcedilla'] = 0x013B;
	    t['Lcircle'] = 0x24C1;
	    t['Lcircumflexbelow'] = 0x1E3C;
	    t['Lcommaaccent'] = 0x013B;
	    t['Ldot'] = 0x013F;
	    t['Ldotaccent'] = 0x013F;
	    t['Ldotbelow'] = 0x1E36;
	    t['Ldotbelowmacron'] = 0x1E38;
	    t['Liwnarmenian'] = 0x053C;
	    t['Lj'] = 0x01C8;
	    t['Ljecyrillic'] = 0x0409;
	    t['Llinebelow'] = 0x1E3A;
	    t['Lmonospace'] = 0xFF2C;
	    t['Lslash'] = 0x0141;
	    t['Lslashsmall'] = 0xF6F9;
	    t['Lsmall'] = 0xF76C;
	    t['M'] = 0x004D;
	    t['MBsquare'] = 0x3386;
	    t['Macron'] = 0xF6D0;
	    t['Macronsmall'] = 0xF7AF;
	    t['Macute'] = 0x1E3E;
	    t['Mcircle'] = 0x24C2;
	    t['Mdotaccent'] = 0x1E40;
	    t['Mdotbelow'] = 0x1E42;
	    t['Menarmenian'] = 0x0544;
	    t['Mmonospace'] = 0xFF2D;
	    t['Msmall'] = 0xF76D;
	    t['Mturned'] = 0x019C;
	    t['Mu'] = 0x039C;
	    t['N'] = 0x004E;
	    t['NJ'] = 0x01CA;
	    t['Nacute'] = 0x0143;
	    t['Ncaron'] = 0x0147;
	    t['Ncedilla'] = 0x0145;
	    t['Ncircle'] = 0x24C3;
	    t['Ncircumflexbelow'] = 0x1E4A;
	    t['Ncommaaccent'] = 0x0145;
	    t['Ndotaccent'] = 0x1E44;
	    t['Ndotbelow'] = 0x1E46;
	    t['Nhookleft'] = 0x019D;
	    t['Nineroman'] = 0x2168;
	    t['Nj'] = 0x01CB;
	    t['Njecyrillic'] = 0x040A;
	    t['Nlinebelow'] = 0x1E48;
	    t['Nmonospace'] = 0xFF2E;
	    t['Nowarmenian'] = 0x0546;
	    t['Nsmall'] = 0xF76E;
	    t['Ntilde'] = 0x00D1;
	    t['Ntildesmall'] = 0xF7F1;
	    t['Nu'] = 0x039D;
	    t['O'] = 0x004F;
	    t['OE'] = 0x0152;
	    t['OEsmall'] = 0xF6FA;
	    t['Oacute'] = 0x00D3;
	    t['Oacutesmall'] = 0xF7F3;
	    t['Obarredcyrillic'] = 0x04E8;
	    t['Obarreddieresiscyrillic'] = 0x04EA;
	    t['Obreve'] = 0x014E;
	    t['Ocaron'] = 0x01D1;
	    t['Ocenteredtilde'] = 0x019F;
	    t['Ocircle'] = 0x24C4;
	    t['Ocircumflex'] = 0x00D4;
	    t['Ocircumflexacute'] = 0x1ED0;
	    t['Ocircumflexdotbelow'] = 0x1ED8;
	    t['Ocircumflexgrave'] = 0x1ED2;
	    t['Ocircumflexhookabove'] = 0x1ED4;
	    t['Ocircumflexsmall'] = 0xF7F4;
	    t['Ocircumflextilde'] = 0x1ED6;
	    t['Ocyrillic'] = 0x041E;
	    t['Odblacute'] = 0x0150;
	    t['Odblgrave'] = 0x020C;
	    t['Odieresis'] = 0x00D6;
	    t['Odieresiscyrillic'] = 0x04E6;
	    t['Odieresissmall'] = 0xF7F6;
	    t['Odotbelow'] = 0x1ECC;
	    t['Ogoneksmall'] = 0xF6FB;
	    t['Ograve'] = 0x00D2;
	    t['Ogravesmall'] = 0xF7F2;
	    t['Oharmenian'] = 0x0555;
	    t['Ohm'] = 0x2126;
	    t['Ohookabove'] = 0x1ECE;
	    t['Ohorn'] = 0x01A0;
	    t['Ohornacute'] = 0x1EDA;
	    t['Ohorndotbelow'] = 0x1EE2;
	    t['Ohorngrave'] = 0x1EDC;
	    t['Ohornhookabove'] = 0x1EDE;
	    t['Ohorntilde'] = 0x1EE0;
	    t['Ohungarumlaut'] = 0x0150;
	    t['Oi'] = 0x01A2;
	    t['Oinvertedbreve'] = 0x020E;
	    t['Omacron'] = 0x014C;
	    t['Omacronacute'] = 0x1E52;
	    t['Omacrongrave'] = 0x1E50;
	    t['Omega'] = 0x2126;
	    t['Omegacyrillic'] = 0x0460;
	    t['Omegagreek'] = 0x03A9;
	    t['Omegaroundcyrillic'] = 0x047A;
	    t['Omegatitlocyrillic'] = 0x047C;
	    t['Omegatonos'] = 0x038F;
	    t['Omicron'] = 0x039F;
	    t['Omicrontonos'] = 0x038C;
	    t['Omonospace'] = 0xFF2F;
	    t['Oneroman'] = 0x2160;
	    t['Oogonek'] = 0x01EA;
	    t['Oogonekmacron'] = 0x01EC;
	    t['Oopen'] = 0x0186;
	    t['Oslash'] = 0x00D8;
	    t['Oslashacute'] = 0x01FE;
	    t['Oslashsmall'] = 0xF7F8;
	    t['Osmall'] = 0xF76F;
	    t['Ostrokeacute'] = 0x01FE;
	    t['Otcyrillic'] = 0x047E;
	    t['Otilde'] = 0x00D5;
	    t['Otildeacute'] = 0x1E4C;
	    t['Otildedieresis'] = 0x1E4E;
	    t['Otildesmall'] = 0xF7F5;
	    t['P'] = 0x0050;
	    t['Pacute'] = 0x1E54;
	    t['Pcircle'] = 0x24C5;
	    t['Pdotaccent'] = 0x1E56;
	    t['Pecyrillic'] = 0x041F;
	    t['Peharmenian'] = 0x054A;
	    t['Pemiddlehookcyrillic'] = 0x04A6;
	    t['Phi'] = 0x03A6;
	    t['Phook'] = 0x01A4;
	    t['Pi'] = 0x03A0;
	    t['Piwrarmenian'] = 0x0553;
	    t['Pmonospace'] = 0xFF30;
	    t['Psi'] = 0x03A8;
	    t['Psicyrillic'] = 0x0470;
	    t['Psmall'] = 0xF770;
	    t['Q'] = 0x0051;
	    t['Qcircle'] = 0x24C6;
	    t['Qmonospace'] = 0xFF31;
	    t['Qsmall'] = 0xF771;
	    t['R'] = 0x0052;
	    t['Raarmenian'] = 0x054C;
	    t['Racute'] = 0x0154;
	    t['Rcaron'] = 0x0158;
	    t['Rcedilla'] = 0x0156;
	    t['Rcircle'] = 0x24C7;
	    t['Rcommaaccent'] = 0x0156;
	    t['Rdblgrave'] = 0x0210;
	    t['Rdotaccent'] = 0x1E58;
	    t['Rdotbelow'] = 0x1E5A;
	    t['Rdotbelowmacron'] = 0x1E5C;
	    t['Reharmenian'] = 0x0550;
	    t['Rfraktur'] = 0x211C;
	    t['Rho'] = 0x03A1;
	    t['Ringsmall'] = 0xF6FC;
	    t['Rinvertedbreve'] = 0x0212;
	    t['Rlinebelow'] = 0x1E5E;
	    t['Rmonospace'] = 0xFF32;
	    t['Rsmall'] = 0xF772;
	    t['Rsmallinverted'] = 0x0281;
	    t['Rsmallinvertedsuperior'] = 0x02B6;
	    t['S'] = 0x0053;
	    t['SF010000'] = 0x250C;
	    t['SF020000'] = 0x2514;
	    t['SF030000'] = 0x2510;
	    t['SF040000'] = 0x2518;
	    t['SF050000'] = 0x253C;
	    t['SF060000'] = 0x252C;
	    t['SF070000'] = 0x2534;
	    t['SF080000'] = 0x251C;
	    t['SF090000'] = 0x2524;
	    t['SF100000'] = 0x2500;
	    t['SF110000'] = 0x2502;
	    t['SF190000'] = 0x2561;
	    t['SF200000'] = 0x2562;
	    t['SF210000'] = 0x2556;
	    t['SF220000'] = 0x2555;
	    t['SF230000'] = 0x2563;
	    t['SF240000'] = 0x2551;
	    t['SF250000'] = 0x2557;
	    t['SF260000'] = 0x255D;
	    t['SF270000'] = 0x255C;
	    t['SF280000'] = 0x255B;
	    t['SF360000'] = 0x255E;
	    t['SF370000'] = 0x255F;
	    t['SF380000'] = 0x255A;
	    t['SF390000'] = 0x2554;
	    t['SF400000'] = 0x2569;
	    t['SF410000'] = 0x2566;
	    t['SF420000'] = 0x2560;
	    t['SF430000'] = 0x2550;
	    t['SF440000'] = 0x256C;
	    t['SF450000'] = 0x2567;
	    t['SF460000'] = 0x2568;
	    t['SF470000'] = 0x2564;
	    t['SF480000'] = 0x2565;
	    t['SF490000'] = 0x2559;
	    t['SF500000'] = 0x2558;
	    t['SF510000'] = 0x2552;
	    t['SF520000'] = 0x2553;
	    t['SF530000'] = 0x256B;
	    t['SF540000'] = 0x256A;
	    t['Sacute'] = 0x015A;
	    t['Sacutedotaccent'] = 0x1E64;
	    t['Sampigreek'] = 0x03E0;
	    t['Scaron'] = 0x0160;
	    t['Scarondotaccent'] = 0x1E66;
	    t['Scaronsmall'] = 0xF6FD;
	    t['Scedilla'] = 0x015E;
	    t['Schwa'] = 0x018F;
	    t['Schwacyrillic'] = 0x04D8;
	    t['Schwadieresiscyrillic'] = 0x04DA;
	    t['Scircle'] = 0x24C8;
	    t['Scircumflex'] = 0x015C;
	    t['Scommaaccent'] = 0x0218;
	    t['Sdotaccent'] = 0x1E60;
	    t['Sdotbelow'] = 0x1E62;
	    t['Sdotbelowdotaccent'] = 0x1E68;
	    t['Seharmenian'] = 0x054D;
	    t['Sevenroman'] = 0x2166;
	    t['Shaarmenian'] = 0x0547;
	    t['Shacyrillic'] = 0x0428;
	    t['Shchacyrillic'] = 0x0429;
	    t['Sheicoptic'] = 0x03E2;
	    t['Shhacyrillic'] = 0x04BA;
	    t['Shimacoptic'] = 0x03EC;
	    t['Sigma'] = 0x03A3;
	    t['Sixroman'] = 0x2165;
	    t['Smonospace'] = 0xFF33;
	    t['Softsigncyrillic'] = 0x042C;
	    t['Ssmall'] = 0xF773;
	    t['Stigmagreek'] = 0x03DA;
	    t['T'] = 0x0054;
	    t['Tau'] = 0x03A4;
	    t['Tbar'] = 0x0166;
	    t['Tcaron'] = 0x0164;
	    t['Tcedilla'] = 0x0162;
	    t['Tcircle'] = 0x24C9;
	    t['Tcircumflexbelow'] = 0x1E70;
	    t['Tcommaaccent'] = 0x0162;
	    t['Tdotaccent'] = 0x1E6A;
	    t['Tdotbelow'] = 0x1E6C;
	    t['Tecyrillic'] = 0x0422;
	    t['Tedescendercyrillic'] = 0x04AC;
	    t['Tenroman'] = 0x2169;
	    t['Tetsecyrillic'] = 0x04B4;
	    t['Theta'] = 0x0398;
	    t['Thook'] = 0x01AC;
	    t['Thorn'] = 0x00DE;
	    t['Thornsmall'] = 0xF7FE;
	    t['Threeroman'] = 0x2162;
	    t['Tildesmall'] = 0xF6FE;
	    t['Tiwnarmenian'] = 0x054F;
	    t['Tlinebelow'] = 0x1E6E;
	    t['Tmonospace'] = 0xFF34;
	    t['Toarmenian'] = 0x0539;
	    t['Tonefive'] = 0x01BC;
	    t['Tonesix'] = 0x0184;
	    t['Tonetwo'] = 0x01A7;
	    t['Tretroflexhook'] = 0x01AE;
	    t['Tsecyrillic'] = 0x0426;
	    t['Tshecyrillic'] = 0x040B;
	    t['Tsmall'] = 0xF774;
	    t['Twelveroman'] = 0x216B;
	    t['Tworoman'] = 0x2161;
	    t['U'] = 0x0055;
	    t['Uacute'] = 0x00DA;
	    t['Uacutesmall'] = 0xF7FA;
	    t['Ubreve'] = 0x016C;
	    t['Ucaron'] = 0x01D3;
	    t['Ucircle'] = 0x24CA;
	    t['Ucircumflex'] = 0x00DB;
	    t['Ucircumflexbelow'] = 0x1E76;
	    t['Ucircumflexsmall'] = 0xF7FB;
	    t['Ucyrillic'] = 0x0423;
	    t['Udblacute'] = 0x0170;
	    t['Udblgrave'] = 0x0214;
	    t['Udieresis'] = 0x00DC;
	    t['Udieresisacute'] = 0x01D7;
	    t['Udieresisbelow'] = 0x1E72;
	    t['Udieresiscaron'] = 0x01D9;
	    t['Udieresiscyrillic'] = 0x04F0;
	    t['Udieresisgrave'] = 0x01DB;
	    t['Udieresismacron'] = 0x01D5;
	    t['Udieresissmall'] = 0xF7FC;
	    t['Udotbelow'] = 0x1EE4;
	    t['Ugrave'] = 0x00D9;
	    t['Ugravesmall'] = 0xF7F9;
	    t['Uhookabove'] = 0x1EE6;
	    t['Uhorn'] = 0x01AF;
	    t['Uhornacute'] = 0x1EE8;
	    t['Uhorndotbelow'] = 0x1EF0;
	    t['Uhorngrave'] = 0x1EEA;
	    t['Uhornhookabove'] = 0x1EEC;
	    t['Uhorntilde'] = 0x1EEE;
	    t['Uhungarumlaut'] = 0x0170;
	    t['Uhungarumlautcyrillic'] = 0x04F2;
	    t['Uinvertedbreve'] = 0x0216;
	    t['Ukcyrillic'] = 0x0478;
	    t['Umacron'] = 0x016A;
	    t['Umacroncyrillic'] = 0x04EE;
	    t['Umacrondieresis'] = 0x1E7A;
	    t['Umonospace'] = 0xFF35;
	    t['Uogonek'] = 0x0172;
	    t['Upsilon'] = 0x03A5;
	    t['Upsilon1'] = 0x03D2;
	    t['Upsilonacutehooksymbolgreek'] = 0x03D3;
	    t['Upsilonafrican'] = 0x01B1;
	    t['Upsilondieresis'] = 0x03AB;
	    t['Upsilondieresishooksymbolgreek'] = 0x03D4;
	    t['Upsilonhooksymbol'] = 0x03D2;
	    t['Upsilontonos'] = 0x038E;
	    t['Uring'] = 0x016E;
	    t['Ushortcyrillic'] = 0x040E;
	    t['Usmall'] = 0xF775;
	    t['Ustraightcyrillic'] = 0x04AE;
	    t['Ustraightstrokecyrillic'] = 0x04B0;
	    t['Utilde'] = 0x0168;
	    t['Utildeacute'] = 0x1E78;
	    t['Utildebelow'] = 0x1E74;
	    t['V'] = 0x0056;
	    t['Vcircle'] = 0x24CB;
	    t['Vdotbelow'] = 0x1E7E;
	    t['Vecyrillic'] = 0x0412;
	    t['Vewarmenian'] = 0x054E;
	    t['Vhook'] = 0x01B2;
	    t['Vmonospace'] = 0xFF36;
	    t['Voarmenian'] = 0x0548;
	    t['Vsmall'] = 0xF776;
	    t['Vtilde'] = 0x1E7C;
	    t['W'] = 0x0057;
	    t['Wacute'] = 0x1E82;
	    t['Wcircle'] = 0x24CC;
	    t['Wcircumflex'] = 0x0174;
	    t['Wdieresis'] = 0x1E84;
	    t['Wdotaccent'] = 0x1E86;
	    t['Wdotbelow'] = 0x1E88;
	    t['Wgrave'] = 0x1E80;
	    t['Wmonospace'] = 0xFF37;
	    t['Wsmall'] = 0xF777;
	    t['X'] = 0x0058;
	    t['Xcircle'] = 0x24CD;
	    t['Xdieresis'] = 0x1E8C;
	    t['Xdotaccent'] = 0x1E8A;
	    t['Xeharmenian'] = 0x053D;
	    t['Xi'] = 0x039E;
	    t['Xmonospace'] = 0xFF38;
	    t['Xsmall'] = 0xF778;
	    t['Y'] = 0x0059;
	    t['Yacute'] = 0x00DD;
	    t['Yacutesmall'] = 0xF7FD;
	    t['Yatcyrillic'] = 0x0462;
	    t['Ycircle'] = 0x24CE;
	    t['Ycircumflex'] = 0x0176;
	    t['Ydieresis'] = 0x0178;
	    t['Ydieresissmall'] = 0xF7FF;
	    t['Ydotaccent'] = 0x1E8E;
	    t['Ydotbelow'] = 0x1EF4;
	    t['Yericyrillic'] = 0x042B;
	    t['Yerudieresiscyrillic'] = 0x04F8;
	    t['Ygrave'] = 0x1EF2;
	    t['Yhook'] = 0x01B3;
	    t['Yhookabove'] = 0x1EF6;
	    t['Yiarmenian'] = 0x0545;
	    t['Yicyrillic'] = 0x0407;
	    t['Yiwnarmenian'] = 0x0552;
	    t['Ymonospace'] = 0xFF39;
	    t['Ysmall'] = 0xF779;
	    t['Ytilde'] = 0x1EF8;
	    t['Yusbigcyrillic'] = 0x046A;
	    t['Yusbigiotifiedcyrillic'] = 0x046C;
	    t['Yuslittlecyrillic'] = 0x0466;
	    t['Yuslittleiotifiedcyrillic'] = 0x0468;
	    t['Z'] = 0x005A;
	    t['Zaarmenian'] = 0x0536;
	    t['Zacute'] = 0x0179;
	    t['Zcaron'] = 0x017D;
	    t['Zcaronsmall'] = 0xF6FF;
	    t['Zcircle'] = 0x24CF;
	    t['Zcircumflex'] = 0x1E90;
	    t['Zdot'] = 0x017B;
	    t['Zdotaccent'] = 0x017B;
	    t['Zdotbelow'] = 0x1E92;
	    t['Zecyrillic'] = 0x0417;
	    t['Zedescendercyrillic'] = 0x0498;
	    t['Zedieresiscyrillic'] = 0x04DE;
	    t['Zeta'] = 0x0396;
	    t['Zhearmenian'] = 0x053A;
	    t['Zhebrevecyrillic'] = 0x04C1;
	    t['Zhecyrillic'] = 0x0416;
	    t['Zhedescendercyrillic'] = 0x0496;
	    t['Zhedieresiscyrillic'] = 0x04DC;
	    t['Zlinebelow'] = 0x1E94;
	    t['Zmonospace'] = 0xFF3A;
	    t['Zsmall'] = 0xF77A;
	    t['Zstroke'] = 0x01B5;
	    t['a'] = 0x0061;
	    t['aabengali'] = 0x0986;
	    t['aacute'] = 0x00E1;
	    t['aadeva'] = 0x0906;
	    t['aagujarati'] = 0x0A86;
	    t['aagurmukhi'] = 0x0A06;
	    t['aamatragurmukhi'] = 0x0A3E;
	    t['aarusquare'] = 0x3303;
	    t['aavowelsignbengali'] = 0x09BE;
	    t['aavowelsigndeva'] = 0x093E;
	    t['aavowelsigngujarati'] = 0x0ABE;
	    t['abbreviationmarkarmenian'] = 0x055F;
	    t['abbreviationsigndeva'] = 0x0970;
	    t['abengali'] = 0x0985;
	    t['abopomofo'] = 0x311A;
	    t['abreve'] = 0x0103;
	    t['abreveacute'] = 0x1EAF;
	    t['abrevecyrillic'] = 0x04D1;
	    t['abrevedotbelow'] = 0x1EB7;
	    t['abrevegrave'] = 0x1EB1;
	    t['abrevehookabove'] = 0x1EB3;
	    t['abrevetilde'] = 0x1EB5;
	    t['acaron'] = 0x01CE;
	    t['acircle'] = 0x24D0;
	    t['acircumflex'] = 0x00E2;
	    t['acircumflexacute'] = 0x1EA5;
	    t['acircumflexdotbelow'] = 0x1EAD;
	    t['acircumflexgrave'] = 0x1EA7;
	    t['acircumflexhookabove'] = 0x1EA9;
	    t['acircumflextilde'] = 0x1EAB;
	    t['acute'] = 0x00B4;
	    t['acutebelowcmb'] = 0x0317;
	    t['acutecmb'] = 0x0301;
	    t['acutecomb'] = 0x0301;
	    t['acutedeva'] = 0x0954;
	    t['acutelowmod'] = 0x02CF;
	    t['acutetonecmb'] = 0x0341;
	    t['acyrillic'] = 0x0430;
	    t['adblgrave'] = 0x0201;
	    t['addakgurmukhi'] = 0x0A71;
	    t['adeva'] = 0x0905;
	    t['adieresis'] = 0x00E4;
	    t['adieresiscyrillic'] = 0x04D3;
	    t['adieresismacron'] = 0x01DF;
	    t['adotbelow'] = 0x1EA1;
	    t['adotmacron'] = 0x01E1;
	    t['ae'] = 0x00E6;
	    t['aeacute'] = 0x01FD;
	    t['aekorean'] = 0x3150;
	    t['aemacron'] = 0x01E3;
	    t['afii00208'] = 0x2015;
	    t['afii08941'] = 0x20A4;
	    t['afii10017'] = 0x0410;
	    t['afii10018'] = 0x0411;
	    t['afii10019'] = 0x0412;
	    t['afii10020'] = 0x0413;
	    t['afii10021'] = 0x0414;
	    t['afii10022'] = 0x0415;
	    t['afii10023'] = 0x0401;
	    t['afii10024'] = 0x0416;
	    t['afii10025'] = 0x0417;
	    t['afii10026'] = 0x0418;
	    t['afii10027'] = 0x0419;
	    t['afii10028'] = 0x041A;
	    t['afii10029'] = 0x041B;
	    t['afii10030'] = 0x041C;
	    t['afii10031'] = 0x041D;
	    t['afii10032'] = 0x041E;
	    t['afii10033'] = 0x041F;
	    t['afii10034'] = 0x0420;
	    t['afii10035'] = 0x0421;
	    t['afii10036'] = 0x0422;
	    t['afii10037'] = 0x0423;
	    t['afii10038'] = 0x0424;
	    t['afii10039'] = 0x0425;
	    t['afii10040'] = 0x0426;
	    t['afii10041'] = 0x0427;
	    t['afii10042'] = 0x0428;
	    t['afii10043'] = 0x0429;
	    t['afii10044'] = 0x042A;
	    t['afii10045'] = 0x042B;
	    t['afii10046'] = 0x042C;
	    t['afii10047'] = 0x042D;
	    t['afii10048'] = 0x042E;
	    t['afii10049'] = 0x042F;
	    t['afii10050'] = 0x0490;
	    t['afii10051'] = 0x0402;
	    t['afii10052'] = 0x0403;
	    t['afii10053'] = 0x0404;
	    t['afii10054'] = 0x0405;
	    t['afii10055'] = 0x0406;
	    t['afii10056'] = 0x0407;
	    t['afii10057'] = 0x0408;
	    t['afii10058'] = 0x0409;
	    t['afii10059'] = 0x040A;
	    t['afii10060'] = 0x040B;
	    t['afii10061'] = 0x040C;
	    t['afii10062'] = 0x040E;
	    t['afii10063'] = 0xF6C4;
	    t['afii10064'] = 0xF6C5;
	    t['afii10065'] = 0x0430;
	    t['afii10066'] = 0x0431;
	    t['afii10067'] = 0x0432;
	    t['afii10068'] = 0x0433;
	    t['afii10069'] = 0x0434;
	    t['afii10070'] = 0x0435;
	    t['afii10071'] = 0x0451;
	    t['afii10072'] = 0x0436;
	    t['afii10073'] = 0x0437;
	    t['afii10074'] = 0x0438;
	    t['afii10075'] = 0x0439;
	    t['afii10076'] = 0x043A;
	    t['afii10077'] = 0x043B;
	    t['afii10078'] = 0x043C;
	    t['afii10079'] = 0x043D;
	    t['afii10080'] = 0x043E;
	    t['afii10081'] = 0x043F;
	    t['afii10082'] = 0x0440;
	    t['afii10083'] = 0x0441;
	    t['afii10084'] = 0x0442;
	    t['afii10085'] = 0x0443;
	    t['afii10086'] = 0x0444;
	    t['afii10087'] = 0x0445;
	    t['afii10088'] = 0x0446;
	    t['afii10089'] = 0x0447;
	    t['afii10090'] = 0x0448;
	    t['afii10091'] = 0x0449;
	    t['afii10092'] = 0x044A;
	    t['afii10093'] = 0x044B;
	    t['afii10094'] = 0x044C;
	    t['afii10095'] = 0x044D;
	    t['afii10096'] = 0x044E;
	    t['afii10097'] = 0x044F;
	    t['afii10098'] = 0x0491;
	    t['afii10099'] = 0x0452;
	    t['afii10100'] = 0x0453;
	    t['afii10101'] = 0x0454;
	    t['afii10102'] = 0x0455;
	    t['afii10103'] = 0x0456;
	    t['afii10104'] = 0x0457;
	    t['afii10105'] = 0x0458;
	    t['afii10106'] = 0x0459;
	    t['afii10107'] = 0x045A;
	    t['afii10108'] = 0x045B;
	    t['afii10109'] = 0x045C;
	    t['afii10110'] = 0x045E;
	    t['afii10145'] = 0x040F;
	    t['afii10146'] = 0x0462;
	    t['afii10147'] = 0x0472;
	    t['afii10148'] = 0x0474;
	    t['afii10192'] = 0xF6C6;
	    t['afii10193'] = 0x045F;
	    t['afii10194'] = 0x0463;
	    t['afii10195'] = 0x0473;
	    t['afii10196'] = 0x0475;
	    t['afii10831'] = 0xF6C7;
	    t['afii10832'] = 0xF6C8;
	    t['afii10846'] = 0x04D9;
	    t['afii299'] = 0x200E;
	    t['afii300'] = 0x200F;
	    t['afii301'] = 0x200D;
	    t['afii57381'] = 0x066A;
	    t['afii57388'] = 0x060C;
	    t['afii57392'] = 0x0660;
	    t['afii57393'] = 0x0661;
	    t['afii57394'] = 0x0662;
	    t['afii57395'] = 0x0663;
	    t['afii57396'] = 0x0664;
	    t['afii57397'] = 0x0665;
	    t['afii57398'] = 0x0666;
	    t['afii57399'] = 0x0667;
	    t['afii57400'] = 0x0668;
	    t['afii57401'] = 0x0669;
	    t['afii57403'] = 0x061B;
	    t['afii57407'] = 0x061F;
	    t['afii57409'] = 0x0621;
	    t['afii57410'] = 0x0622;
	    t['afii57411'] = 0x0623;
	    t['afii57412'] = 0x0624;
	    t['afii57413'] = 0x0625;
	    t['afii57414'] = 0x0626;
	    t['afii57415'] = 0x0627;
	    t['afii57416'] = 0x0628;
	    t['afii57417'] = 0x0629;
	    t['afii57418'] = 0x062A;
	    t['afii57419'] = 0x062B;
	    t['afii57420'] = 0x062C;
	    t['afii57421'] = 0x062D;
	    t['afii57422'] = 0x062E;
	    t['afii57423'] = 0x062F;
	    t['afii57424'] = 0x0630;
	    t['afii57425'] = 0x0631;
	    t['afii57426'] = 0x0632;
	    t['afii57427'] = 0x0633;
	    t['afii57428'] = 0x0634;
	    t['afii57429'] = 0x0635;
	    t['afii57430'] = 0x0636;
	    t['afii57431'] = 0x0637;
	    t['afii57432'] = 0x0638;
	    t['afii57433'] = 0x0639;
	    t['afii57434'] = 0x063A;
	    t['afii57440'] = 0x0640;
	    t['afii57441'] = 0x0641;
	    t['afii57442'] = 0x0642;
	    t['afii57443'] = 0x0643;
	    t['afii57444'] = 0x0644;
	    t['afii57445'] = 0x0645;
	    t['afii57446'] = 0x0646;
	    t['afii57448'] = 0x0648;
	    t['afii57449'] = 0x0649;
	    t['afii57450'] = 0x064A;
	    t['afii57451'] = 0x064B;
	    t['afii57452'] = 0x064C;
	    t['afii57453'] = 0x064D;
	    t['afii57454'] = 0x064E;
	    t['afii57455'] = 0x064F;
	    t['afii57456'] = 0x0650;
	    t['afii57457'] = 0x0651;
	    t['afii57458'] = 0x0652;
	    t['afii57470'] = 0x0647;
	    t['afii57505'] = 0x06A4;
	    t['afii57506'] = 0x067E;
	    t['afii57507'] = 0x0686;
	    t['afii57508'] = 0x0698;
	    t['afii57509'] = 0x06AF;
	    t['afii57511'] = 0x0679;
	    t['afii57512'] = 0x0688;
	    t['afii57513'] = 0x0691;
	    t['afii57514'] = 0x06BA;
	    t['afii57519'] = 0x06D2;
	    t['afii57534'] = 0x06D5;
	    t['afii57636'] = 0x20AA;
	    t['afii57645'] = 0x05BE;
	    t['afii57658'] = 0x05C3;
	    t['afii57664'] = 0x05D0;
	    t['afii57665'] = 0x05D1;
	    t['afii57666'] = 0x05D2;
	    t['afii57667'] = 0x05D3;
	    t['afii57668'] = 0x05D4;
	    t['afii57669'] = 0x05D5;
	    t['afii57670'] = 0x05D6;
	    t['afii57671'] = 0x05D7;
	    t['afii57672'] = 0x05D8;
	    t['afii57673'] = 0x05D9;
	    t['afii57674'] = 0x05DA;
	    t['afii57675'] = 0x05DB;
	    t['afii57676'] = 0x05DC;
	    t['afii57677'] = 0x05DD;
	    t['afii57678'] = 0x05DE;
	    t['afii57679'] = 0x05DF;
	    t['afii57680'] = 0x05E0;
	    t['afii57681'] = 0x05E1;
	    t['afii57682'] = 0x05E2;
	    t['afii57683'] = 0x05E3;
	    t['afii57684'] = 0x05E4;
	    t['afii57685'] = 0x05E5;
	    t['afii57686'] = 0x05E6;
	    t['afii57687'] = 0x05E7;
	    t['afii57688'] = 0x05E8;
	    t['afii57689'] = 0x05E9;
	    t['afii57690'] = 0x05EA;
	    t['afii57694'] = 0xFB2A;
	    t['afii57695'] = 0xFB2B;
	    t['afii57700'] = 0xFB4B;
	    t['afii57705'] = 0xFB1F;
	    t['afii57716'] = 0x05F0;
	    t['afii57717'] = 0x05F1;
	    t['afii57718'] = 0x05F2;
	    t['afii57723'] = 0xFB35;
	    t['afii57793'] = 0x05B4;
	    t['afii57794'] = 0x05B5;
	    t['afii57795'] = 0x05B6;
	    t['afii57796'] = 0x05BB;
	    t['afii57797'] = 0x05B8;
	    t['afii57798'] = 0x05B7;
	    t['afii57799'] = 0x05B0;
	    t['afii57800'] = 0x05B2;
	    t['afii57801'] = 0x05B1;
	    t['afii57802'] = 0x05B3;
	    t['afii57803'] = 0x05C2;
	    t['afii57804'] = 0x05C1;
	    t['afii57806'] = 0x05B9;
	    t['afii57807'] = 0x05BC;
	    t['afii57839'] = 0x05BD;
	    t['afii57841'] = 0x05BF;
	    t['afii57842'] = 0x05C0;
	    t['afii57929'] = 0x02BC;
	    t['afii61248'] = 0x2105;
	    t['afii61289'] = 0x2113;
	    t['afii61352'] = 0x2116;
	    t['afii61573'] = 0x202C;
	    t['afii61574'] = 0x202D;
	    t['afii61575'] = 0x202E;
	    t['afii61664'] = 0x200C;
	    t['afii63167'] = 0x066D;
	    t['afii64937'] = 0x02BD;
	    t['agrave'] = 0x00E0;
	    t['agujarati'] = 0x0A85;
	    t['agurmukhi'] = 0x0A05;
	    t['ahiragana'] = 0x3042;
	    t['ahookabove'] = 0x1EA3;
	    t['aibengali'] = 0x0990;
	    t['aibopomofo'] = 0x311E;
	    t['aideva'] = 0x0910;
	    t['aiecyrillic'] = 0x04D5;
	    t['aigujarati'] = 0x0A90;
	    t['aigurmukhi'] = 0x0A10;
	    t['aimatragurmukhi'] = 0x0A48;
	    t['ainarabic'] = 0x0639;
	    t['ainfinalarabic'] = 0xFECA;
	    t['aininitialarabic'] = 0xFECB;
	    t['ainmedialarabic'] = 0xFECC;
	    t['ainvertedbreve'] = 0x0203;
	    t['aivowelsignbengali'] = 0x09C8;
	    t['aivowelsigndeva'] = 0x0948;
	    t['aivowelsigngujarati'] = 0x0AC8;
	    t['akatakana'] = 0x30A2;
	    t['akatakanahalfwidth'] = 0xFF71;
	    t['akorean'] = 0x314F;
	    t['alef'] = 0x05D0;
	    t['alefarabic'] = 0x0627;
	    t['alefdageshhebrew'] = 0xFB30;
	    t['aleffinalarabic'] = 0xFE8E;
	    t['alefhamzaabovearabic'] = 0x0623;
	    t['alefhamzaabovefinalarabic'] = 0xFE84;
	    t['alefhamzabelowarabic'] = 0x0625;
	    t['alefhamzabelowfinalarabic'] = 0xFE88;
	    t['alefhebrew'] = 0x05D0;
	    t['aleflamedhebrew'] = 0xFB4F;
	    t['alefmaddaabovearabic'] = 0x0622;
	    t['alefmaddaabovefinalarabic'] = 0xFE82;
	    t['alefmaksuraarabic'] = 0x0649;
	    t['alefmaksurafinalarabic'] = 0xFEF0;
	    t['alefmaksurainitialarabic'] = 0xFEF3;
	    t['alefmaksuramedialarabic'] = 0xFEF4;
	    t['alefpatahhebrew'] = 0xFB2E;
	    t['alefqamatshebrew'] = 0xFB2F;
	    t['aleph'] = 0x2135;
	    t['allequal'] = 0x224C;
	    t['alpha'] = 0x03B1;
	    t['alphatonos'] = 0x03AC;
	    t['amacron'] = 0x0101;
	    t['amonospace'] = 0xFF41;
	    t['ampersand'] = 0x0026;
	    t['ampersandmonospace'] = 0xFF06;
	    t['ampersandsmall'] = 0xF726;
	    t['amsquare'] = 0x33C2;
	    t['anbopomofo'] = 0x3122;
	    t['angbopomofo'] = 0x3124;
	    t['angbracketleft'] = 0x3008;
	    t['angbracketright'] = 0x3009;
	    t['angkhankhuthai'] = 0x0E5A;
	    t['angle'] = 0x2220;
	    t['anglebracketleft'] = 0x3008;
	    t['anglebracketleftvertical'] = 0xFE3F;
	    t['anglebracketright'] = 0x3009;
	    t['anglebracketrightvertical'] = 0xFE40;
	    t['angleleft'] = 0x2329;
	    t['angleright'] = 0x232A;
	    t['angstrom'] = 0x212B;
	    t['anoteleia'] = 0x0387;
	    t['anudattadeva'] = 0x0952;
	    t['anusvarabengali'] = 0x0982;
	    t['anusvaradeva'] = 0x0902;
	    t['anusvaragujarati'] = 0x0A82;
	    t['aogonek'] = 0x0105;
	    t['apaatosquare'] = 0x3300;
	    t['aparen'] = 0x249C;
	    t['apostrophearmenian'] = 0x055A;
	    t['apostrophemod'] = 0x02BC;
	    t['apple'] = 0xF8FF;
	    t['approaches'] = 0x2250;
	    t['approxequal'] = 0x2248;
	    t['approxequalorimage'] = 0x2252;
	    t['approximatelyequal'] = 0x2245;
	    t['araeaekorean'] = 0x318E;
	    t['araeakorean'] = 0x318D;
	    t['arc'] = 0x2312;
	    t['arighthalfring'] = 0x1E9A;
	    t['aring'] = 0x00E5;
	    t['aringacute'] = 0x01FB;
	    t['aringbelow'] = 0x1E01;
	    t['arrowboth'] = 0x2194;
	    t['arrowdashdown'] = 0x21E3;
	    t['arrowdashleft'] = 0x21E0;
	    t['arrowdashright'] = 0x21E2;
	    t['arrowdashup'] = 0x21E1;
	    t['arrowdblboth'] = 0x21D4;
	    t['arrowdbldown'] = 0x21D3;
	    t['arrowdblleft'] = 0x21D0;
	    t['arrowdblright'] = 0x21D2;
	    t['arrowdblup'] = 0x21D1;
	    t['arrowdown'] = 0x2193;
	    t['arrowdownleft'] = 0x2199;
	    t['arrowdownright'] = 0x2198;
	    t['arrowdownwhite'] = 0x21E9;
	    t['arrowheaddownmod'] = 0x02C5;
	    t['arrowheadleftmod'] = 0x02C2;
	    t['arrowheadrightmod'] = 0x02C3;
	    t['arrowheadupmod'] = 0x02C4;
	    t['arrowhorizex'] = 0xF8E7;
	    t['arrowleft'] = 0x2190;
	    t['arrowleftdbl'] = 0x21D0;
	    t['arrowleftdblstroke'] = 0x21CD;
	    t['arrowleftoverright'] = 0x21C6;
	    t['arrowleftwhite'] = 0x21E6;
	    t['arrowright'] = 0x2192;
	    t['arrowrightdblstroke'] = 0x21CF;
	    t['arrowrightheavy'] = 0x279E;
	    t['arrowrightoverleft'] = 0x21C4;
	    t['arrowrightwhite'] = 0x21E8;
	    t['arrowtableft'] = 0x21E4;
	    t['arrowtabright'] = 0x21E5;
	    t['arrowup'] = 0x2191;
	    t['arrowupdn'] = 0x2195;
	    t['arrowupdnbse'] = 0x21A8;
	    t['arrowupdownbase'] = 0x21A8;
	    t['arrowupleft'] = 0x2196;
	    t['arrowupleftofdown'] = 0x21C5;
	    t['arrowupright'] = 0x2197;
	    t['arrowupwhite'] = 0x21E7;
	    t['arrowvertex'] = 0xF8E6;
	    t['asciicircum'] = 0x005E;
	    t['asciicircummonospace'] = 0xFF3E;
	    t['asciitilde'] = 0x007E;
	    t['asciitildemonospace'] = 0xFF5E;
	    t['ascript'] = 0x0251;
	    t['ascriptturned'] = 0x0252;
	    t['asmallhiragana'] = 0x3041;
	    t['asmallkatakana'] = 0x30A1;
	    t['asmallkatakanahalfwidth'] = 0xFF67;
	    t['asterisk'] = 0x002A;
	    t['asteriskaltonearabic'] = 0x066D;
	    t['asteriskarabic'] = 0x066D;
	    t['asteriskmath'] = 0x2217;
	    t['asteriskmonospace'] = 0xFF0A;
	    t['asterisksmall'] = 0xFE61;
	    t['asterism'] = 0x2042;
	    t['asuperior'] = 0xF6E9;
	    t['asymptoticallyequal'] = 0x2243;
	    t['at'] = 0x0040;
	    t['atilde'] = 0x00E3;
	    t['atmonospace'] = 0xFF20;
	    t['atsmall'] = 0xFE6B;
	    t['aturned'] = 0x0250;
	    t['aubengali'] = 0x0994;
	    t['aubopomofo'] = 0x3120;
	    t['audeva'] = 0x0914;
	    t['augujarati'] = 0x0A94;
	    t['augurmukhi'] = 0x0A14;
	    t['aulengthmarkbengali'] = 0x09D7;
	    t['aumatragurmukhi'] = 0x0A4C;
	    t['auvowelsignbengali'] = 0x09CC;
	    t['auvowelsigndeva'] = 0x094C;
	    t['auvowelsigngujarati'] = 0x0ACC;
	    t['avagrahadeva'] = 0x093D;
	    t['aybarmenian'] = 0x0561;
	    t['ayin'] = 0x05E2;
	    t['ayinaltonehebrew'] = 0xFB20;
	    t['ayinhebrew'] = 0x05E2;
	    t['b'] = 0x0062;
	    t['babengali'] = 0x09AC;
	    t['backslash'] = 0x005C;
	    t['backslashmonospace'] = 0xFF3C;
	    t['badeva'] = 0x092C;
	    t['bagujarati'] = 0x0AAC;
	    t['bagurmukhi'] = 0x0A2C;
	    t['bahiragana'] = 0x3070;
	    t['bahtthai'] = 0x0E3F;
	    t['bakatakana'] = 0x30D0;
	    t['bar'] = 0x007C;
	    t['barmonospace'] = 0xFF5C;
	    t['bbopomofo'] = 0x3105;
	    t['bcircle'] = 0x24D1;
	    t['bdotaccent'] = 0x1E03;
	    t['bdotbelow'] = 0x1E05;
	    t['beamedsixteenthnotes'] = 0x266C;
	    t['because'] = 0x2235;
	    t['becyrillic'] = 0x0431;
	    t['beharabic'] = 0x0628;
	    t['behfinalarabic'] = 0xFE90;
	    t['behinitialarabic'] = 0xFE91;
	    t['behiragana'] = 0x3079;
	    t['behmedialarabic'] = 0xFE92;
	    t['behmeeminitialarabic'] = 0xFC9F;
	    t['behmeemisolatedarabic'] = 0xFC08;
	    t['behnoonfinalarabic'] = 0xFC6D;
	    t['bekatakana'] = 0x30D9;
	    t['benarmenian'] = 0x0562;
	    t['bet'] = 0x05D1;
	    t['beta'] = 0x03B2;
	    t['betasymbolgreek'] = 0x03D0;
	    t['betdagesh'] = 0xFB31;
	    t['betdageshhebrew'] = 0xFB31;
	    t['bethebrew'] = 0x05D1;
	    t['betrafehebrew'] = 0xFB4C;
	    t['bhabengali'] = 0x09AD;
	    t['bhadeva'] = 0x092D;
	    t['bhagujarati'] = 0x0AAD;
	    t['bhagurmukhi'] = 0x0A2D;
	    t['bhook'] = 0x0253;
	    t['bihiragana'] = 0x3073;
	    t['bikatakana'] = 0x30D3;
	    t['bilabialclick'] = 0x0298;
	    t['bindigurmukhi'] = 0x0A02;
	    t['birusquare'] = 0x3331;
	    t['blackcircle'] = 0x25CF;
	    t['blackdiamond'] = 0x25C6;
	    t['blackdownpointingtriangle'] = 0x25BC;
	    t['blackleftpointingpointer'] = 0x25C4;
	    t['blackleftpointingtriangle'] = 0x25C0;
	    t['blacklenticularbracketleft'] = 0x3010;
	    t['blacklenticularbracketleftvertical'] = 0xFE3B;
	    t['blacklenticularbracketright'] = 0x3011;
	    t['blacklenticularbracketrightvertical'] = 0xFE3C;
	    t['blacklowerlefttriangle'] = 0x25E3;
	    t['blacklowerrighttriangle'] = 0x25E2;
	    t['blackrectangle'] = 0x25AC;
	    t['blackrightpointingpointer'] = 0x25BA;
	    t['blackrightpointingtriangle'] = 0x25B6;
	    t['blacksmallsquare'] = 0x25AA;
	    t['blacksmilingface'] = 0x263B;
	    t['blacksquare'] = 0x25A0;
	    t['blackstar'] = 0x2605;
	    t['blackupperlefttriangle'] = 0x25E4;
	    t['blackupperrighttriangle'] = 0x25E5;
	    t['blackuppointingsmalltriangle'] = 0x25B4;
	    t['blackuppointingtriangle'] = 0x25B2;
	    t['blank'] = 0x2423;
	    t['blinebelow'] = 0x1E07;
	    t['block'] = 0x2588;
	    t['bmonospace'] = 0xFF42;
	    t['bobaimaithai'] = 0x0E1A;
	    t['bohiragana'] = 0x307C;
	    t['bokatakana'] = 0x30DC;
	    t['bparen'] = 0x249D;
	    t['bqsquare'] = 0x33C3;
	    t['braceex'] = 0xF8F4;
	    t['braceleft'] = 0x007B;
	    t['braceleftbt'] = 0xF8F3;
	    t['braceleftmid'] = 0xF8F2;
	    t['braceleftmonospace'] = 0xFF5B;
	    t['braceleftsmall'] = 0xFE5B;
	    t['bracelefttp'] = 0xF8F1;
	    t['braceleftvertical'] = 0xFE37;
	    t['braceright'] = 0x007D;
	    t['bracerightbt'] = 0xF8FE;
	    t['bracerightmid'] = 0xF8FD;
	    t['bracerightmonospace'] = 0xFF5D;
	    t['bracerightsmall'] = 0xFE5C;
	    t['bracerighttp'] = 0xF8FC;
	    t['bracerightvertical'] = 0xFE38;
	    t['bracketleft'] = 0x005B;
	    t['bracketleftbt'] = 0xF8F0;
	    t['bracketleftex'] = 0xF8EF;
	    t['bracketleftmonospace'] = 0xFF3B;
	    t['bracketlefttp'] = 0xF8EE;
	    t['bracketright'] = 0x005D;
	    t['bracketrightbt'] = 0xF8FB;
	    t['bracketrightex'] = 0xF8FA;
	    t['bracketrightmonospace'] = 0xFF3D;
	    t['bracketrighttp'] = 0xF8F9;
	    t['breve'] = 0x02D8;
	    t['brevebelowcmb'] = 0x032E;
	    t['brevecmb'] = 0x0306;
	    t['breveinvertedbelowcmb'] = 0x032F;
	    t['breveinvertedcmb'] = 0x0311;
	    t['breveinverteddoublecmb'] = 0x0361;
	    t['bridgebelowcmb'] = 0x032A;
	    t['bridgeinvertedbelowcmb'] = 0x033A;
	    t['brokenbar'] = 0x00A6;
	    t['bstroke'] = 0x0180;
	    t['bsuperior'] = 0xF6EA;
	    t['btopbar'] = 0x0183;
	    t['buhiragana'] = 0x3076;
	    t['bukatakana'] = 0x30D6;
	    t['bullet'] = 0x2022;
	    t['bulletinverse'] = 0x25D8;
	    t['bulletoperator'] = 0x2219;
	    t['bullseye'] = 0x25CE;
	    t['c'] = 0x0063;
	    t['caarmenian'] = 0x056E;
	    t['cabengali'] = 0x099A;
	    t['cacute'] = 0x0107;
	    t['cadeva'] = 0x091A;
	    t['cagujarati'] = 0x0A9A;
	    t['cagurmukhi'] = 0x0A1A;
	    t['calsquare'] = 0x3388;
	    t['candrabindubengali'] = 0x0981;
	    t['candrabinducmb'] = 0x0310;
	    t['candrabindudeva'] = 0x0901;
	    t['candrabindugujarati'] = 0x0A81;
	    t['capslock'] = 0x21EA;
	    t['careof'] = 0x2105;
	    t['caron'] = 0x02C7;
	    t['caronbelowcmb'] = 0x032C;
	    t['caroncmb'] = 0x030C;
	    t['carriagereturn'] = 0x21B5;
	    t['cbopomofo'] = 0x3118;
	    t['ccaron'] = 0x010D;
	    t['ccedilla'] = 0x00E7;
	    t['ccedillaacute'] = 0x1E09;
	    t['ccircle'] = 0x24D2;
	    t['ccircumflex'] = 0x0109;
	    t['ccurl'] = 0x0255;
	    t['cdot'] = 0x010B;
	    t['cdotaccent'] = 0x010B;
	    t['cdsquare'] = 0x33C5;
	    t['cedilla'] = 0x00B8;
	    t['cedillacmb'] = 0x0327;
	    t['cent'] = 0x00A2;
	    t['centigrade'] = 0x2103;
	    t['centinferior'] = 0xF6DF;
	    t['centmonospace'] = 0xFFE0;
	    t['centoldstyle'] = 0xF7A2;
	    t['centsuperior'] = 0xF6E0;
	    t['chaarmenian'] = 0x0579;
	    t['chabengali'] = 0x099B;
	    t['chadeva'] = 0x091B;
	    t['chagujarati'] = 0x0A9B;
	    t['chagurmukhi'] = 0x0A1B;
	    t['chbopomofo'] = 0x3114;
	    t['cheabkhasiancyrillic'] = 0x04BD;
	    t['checkmark'] = 0x2713;
	    t['checyrillic'] = 0x0447;
	    t['chedescenderabkhasiancyrillic'] = 0x04BF;
	    t['chedescendercyrillic'] = 0x04B7;
	    t['chedieresiscyrillic'] = 0x04F5;
	    t['cheharmenian'] = 0x0573;
	    t['chekhakassiancyrillic'] = 0x04CC;
	    t['cheverticalstrokecyrillic'] = 0x04B9;
	    t['chi'] = 0x03C7;
	    t['chieuchacirclekorean'] = 0x3277;
	    t['chieuchaparenkorean'] = 0x3217;
	    t['chieuchcirclekorean'] = 0x3269;
	    t['chieuchkorean'] = 0x314A;
	    t['chieuchparenkorean'] = 0x3209;
	    t['chochangthai'] = 0x0E0A;
	    t['chochanthai'] = 0x0E08;
	    t['chochingthai'] = 0x0E09;
	    t['chochoethai'] = 0x0E0C;
	    t['chook'] = 0x0188;
	    t['cieucacirclekorean'] = 0x3276;
	    t['cieucaparenkorean'] = 0x3216;
	    t['cieuccirclekorean'] = 0x3268;
	    t['cieuckorean'] = 0x3148;
	    t['cieucparenkorean'] = 0x3208;
	    t['cieucuparenkorean'] = 0x321C;
	    t['circle'] = 0x25CB;
	    t['circlecopyrt'] = 0x00A9;
	    t['circlemultiply'] = 0x2297;
	    t['circleot'] = 0x2299;
	    t['circleplus'] = 0x2295;
	    t['circlepostalmark'] = 0x3036;
	    t['circlewithlefthalfblack'] = 0x25D0;
	    t['circlewithrighthalfblack'] = 0x25D1;
	    t['circumflex'] = 0x02C6;
	    t['circumflexbelowcmb'] = 0x032D;
	    t['circumflexcmb'] = 0x0302;
	    t['clear'] = 0x2327;
	    t['clickalveolar'] = 0x01C2;
	    t['clickdental'] = 0x01C0;
	    t['clicklateral'] = 0x01C1;
	    t['clickretroflex'] = 0x01C3;
	    t['club'] = 0x2663;
	    t['clubsuitblack'] = 0x2663;
	    t['clubsuitwhite'] = 0x2667;
	    t['cmcubedsquare'] = 0x33A4;
	    t['cmonospace'] = 0xFF43;
	    t['cmsquaredsquare'] = 0x33A0;
	    t['coarmenian'] = 0x0581;
	    t['colon'] = 0x003A;
	    t['colonmonetary'] = 0x20A1;
	    t['colonmonospace'] = 0xFF1A;
	    t['colonsign'] = 0x20A1;
	    t['colonsmall'] = 0xFE55;
	    t['colontriangularhalfmod'] = 0x02D1;
	    t['colontriangularmod'] = 0x02D0;
	    t['comma'] = 0x002C;
	    t['commaabovecmb'] = 0x0313;
	    t['commaaboverightcmb'] = 0x0315;
	    t['commaaccent'] = 0xF6C3;
	    t['commaarabic'] = 0x060C;
	    t['commaarmenian'] = 0x055D;
	    t['commainferior'] = 0xF6E1;
	    t['commamonospace'] = 0xFF0C;
	    t['commareversedabovecmb'] = 0x0314;
	    t['commareversedmod'] = 0x02BD;
	    t['commasmall'] = 0xFE50;
	    t['commasuperior'] = 0xF6E2;
	    t['commaturnedabovecmb'] = 0x0312;
	    t['commaturnedmod'] = 0x02BB;
	    t['compass'] = 0x263C;
	    t['congruent'] = 0x2245;
	    t['contourintegral'] = 0x222E;
	    t['control'] = 0x2303;
	    t['controlACK'] = 0x0006;
	    t['controlBEL'] = 0x0007;
	    t['controlBS'] = 0x0008;
	    t['controlCAN'] = 0x0018;
	    t['controlCR'] = 0x000D;
	    t['controlDC1'] = 0x0011;
	    t['controlDC2'] = 0x0012;
	    t['controlDC3'] = 0x0013;
	    t['controlDC4'] = 0x0014;
	    t['controlDEL'] = 0x007F;
	    t['controlDLE'] = 0x0010;
	    t['controlEM'] = 0x0019;
	    t['controlENQ'] = 0x0005;
	    t['controlEOT'] = 0x0004;
	    t['controlESC'] = 0x001B;
	    t['controlETB'] = 0x0017;
	    t['controlETX'] = 0x0003;
	    t['controlFF'] = 0x000C;
	    t['controlFS'] = 0x001C;
	    t['controlGS'] = 0x001D;
	    t['controlHT'] = 0x0009;
	    t['controlLF'] = 0x000A;
	    t['controlNAK'] = 0x0015;
	    t['controlNULL'] = 0x0000;
	    t['controlRS'] = 0x001E;
	    t['controlSI'] = 0x000F;
	    t['controlSO'] = 0x000E;
	    t['controlSOT'] = 0x0002;
	    t['controlSTX'] = 0x0001;
	    t['controlSUB'] = 0x001A;
	    t['controlSYN'] = 0x0016;
	    t['controlUS'] = 0x001F;
	    t['controlVT'] = 0x000B;
	    t['copyright'] = 0x00A9;
	    t['copyrightsans'] = 0xF8E9;
	    t['copyrightserif'] = 0xF6D9;
	    t['cornerbracketleft'] = 0x300C;
	    t['cornerbracketlefthalfwidth'] = 0xFF62;
	    t['cornerbracketleftvertical'] = 0xFE41;
	    t['cornerbracketright'] = 0x300D;
	    t['cornerbracketrighthalfwidth'] = 0xFF63;
	    t['cornerbracketrightvertical'] = 0xFE42;
	    t['corporationsquare'] = 0x337F;
	    t['cosquare'] = 0x33C7;
	    t['coverkgsquare'] = 0x33C6;
	    t['cparen'] = 0x249E;
	    t['cruzeiro'] = 0x20A2;
	    t['cstretched'] = 0x0297;
	    t['curlyand'] = 0x22CF;
	    t['curlyor'] = 0x22CE;
	    t['currency'] = 0x00A4;
	    t['cyrBreve'] = 0xF6D1;
	    t['cyrFlex'] = 0xF6D2;
	    t['cyrbreve'] = 0xF6D4;
	    t['cyrflex'] = 0xF6D5;
	    t['d'] = 0x0064;
	    t['daarmenian'] = 0x0564;
	    t['dabengali'] = 0x09A6;
	    t['dadarabic'] = 0x0636;
	    t['dadeva'] = 0x0926;
	    t['dadfinalarabic'] = 0xFEBE;
	    t['dadinitialarabic'] = 0xFEBF;
	    t['dadmedialarabic'] = 0xFEC0;
	    t['dagesh'] = 0x05BC;
	    t['dageshhebrew'] = 0x05BC;
	    t['dagger'] = 0x2020;
	    t['daggerdbl'] = 0x2021;
	    t['dagujarati'] = 0x0AA6;
	    t['dagurmukhi'] = 0x0A26;
	    t['dahiragana'] = 0x3060;
	    t['dakatakana'] = 0x30C0;
	    t['dalarabic'] = 0x062F;
	    t['dalet'] = 0x05D3;
	    t['daletdagesh'] = 0xFB33;
	    t['daletdageshhebrew'] = 0xFB33;
	    t['dalethebrew'] = 0x05D3;
	    t['dalfinalarabic'] = 0xFEAA;
	    t['dammaarabic'] = 0x064F;
	    t['dammalowarabic'] = 0x064F;
	    t['dammatanaltonearabic'] = 0x064C;
	    t['dammatanarabic'] = 0x064C;
	    t['danda'] = 0x0964;
	    t['dargahebrew'] = 0x05A7;
	    t['dargalefthebrew'] = 0x05A7;
	    t['dasiapneumatacyrilliccmb'] = 0x0485;
	    t['dblGrave'] = 0xF6D3;
	    t['dblanglebracketleft'] = 0x300A;
	    t['dblanglebracketleftvertical'] = 0xFE3D;
	    t['dblanglebracketright'] = 0x300B;
	    t['dblanglebracketrightvertical'] = 0xFE3E;
	    t['dblarchinvertedbelowcmb'] = 0x032B;
	    t['dblarrowleft'] = 0x21D4;
	    t['dblarrowright'] = 0x21D2;
	    t['dbldanda'] = 0x0965;
	    t['dblgrave'] = 0xF6D6;
	    t['dblgravecmb'] = 0x030F;
	    t['dblintegral'] = 0x222C;
	    t['dbllowline'] = 0x2017;
	    t['dbllowlinecmb'] = 0x0333;
	    t['dbloverlinecmb'] = 0x033F;
	    t['dblprimemod'] = 0x02BA;
	    t['dblverticalbar'] = 0x2016;
	    t['dblverticallineabovecmb'] = 0x030E;
	    t['dbopomofo'] = 0x3109;
	    t['dbsquare'] = 0x33C8;
	    t['dcaron'] = 0x010F;
	    t['dcedilla'] = 0x1E11;
	    t['dcircle'] = 0x24D3;
	    t['dcircumflexbelow'] = 0x1E13;
	    t['dcroat'] = 0x0111;
	    t['ddabengali'] = 0x09A1;
	    t['ddadeva'] = 0x0921;
	    t['ddagujarati'] = 0x0AA1;
	    t['ddagurmukhi'] = 0x0A21;
	    t['ddalarabic'] = 0x0688;
	    t['ddalfinalarabic'] = 0xFB89;
	    t['dddhadeva'] = 0x095C;
	    t['ddhabengali'] = 0x09A2;
	    t['ddhadeva'] = 0x0922;
	    t['ddhagujarati'] = 0x0AA2;
	    t['ddhagurmukhi'] = 0x0A22;
	    t['ddotaccent'] = 0x1E0B;
	    t['ddotbelow'] = 0x1E0D;
	    t['decimalseparatorarabic'] = 0x066B;
	    t['decimalseparatorpersian'] = 0x066B;
	    t['decyrillic'] = 0x0434;
	    t['degree'] = 0x00B0;
	    t['dehihebrew'] = 0x05AD;
	    t['dehiragana'] = 0x3067;
	    t['deicoptic'] = 0x03EF;
	    t['dekatakana'] = 0x30C7;
	    t['deleteleft'] = 0x232B;
	    t['deleteright'] = 0x2326;
	    t['delta'] = 0x03B4;
	    t['deltaturned'] = 0x018D;
	    t['denominatorminusonenumeratorbengali'] = 0x09F8;
	    t['dezh'] = 0x02A4;
	    t['dhabengali'] = 0x09A7;
	    t['dhadeva'] = 0x0927;
	    t['dhagujarati'] = 0x0AA7;
	    t['dhagurmukhi'] = 0x0A27;
	    t['dhook'] = 0x0257;
	    t['dialytikatonos'] = 0x0385;
	    t['dialytikatonoscmb'] = 0x0344;
	    t['diamond'] = 0x2666;
	    t['diamondsuitwhite'] = 0x2662;
	    t['dieresis'] = 0x00A8;
	    t['dieresisacute'] = 0xF6D7;
	    t['dieresisbelowcmb'] = 0x0324;
	    t['dieresiscmb'] = 0x0308;
	    t['dieresisgrave'] = 0xF6D8;
	    t['dieresistonos'] = 0x0385;
	    t['dihiragana'] = 0x3062;
	    t['dikatakana'] = 0x30C2;
	    t['dittomark'] = 0x3003;
	    t['divide'] = 0x00F7;
	    t['divides'] = 0x2223;
	    t['divisionslash'] = 0x2215;
	    t['djecyrillic'] = 0x0452;
	    t['dkshade'] = 0x2593;
	    t['dlinebelow'] = 0x1E0F;
	    t['dlsquare'] = 0x3397;
	    t['dmacron'] = 0x0111;
	    t['dmonospace'] = 0xFF44;
	    t['dnblock'] = 0x2584;
	    t['dochadathai'] = 0x0E0E;
	    t['dodekthai'] = 0x0E14;
	    t['dohiragana'] = 0x3069;
	    t['dokatakana'] = 0x30C9;
	    t['dollar'] = 0x0024;
	    t['dollarinferior'] = 0xF6E3;
	    t['dollarmonospace'] = 0xFF04;
	    t['dollaroldstyle'] = 0xF724;
	    t['dollarsmall'] = 0xFE69;
	    t['dollarsuperior'] = 0xF6E4;
	    t['dong'] = 0x20AB;
	    t['dorusquare'] = 0x3326;
	    t['dotaccent'] = 0x02D9;
	    t['dotaccentcmb'] = 0x0307;
	    t['dotbelowcmb'] = 0x0323;
	    t['dotbelowcomb'] = 0x0323;
	    t['dotkatakana'] = 0x30FB;
	    t['dotlessi'] = 0x0131;
	    t['dotlessj'] = 0xF6BE;
	    t['dotlessjstrokehook'] = 0x0284;
	    t['dotmath'] = 0x22C5;
	    t['dottedcircle'] = 0x25CC;
	    t['doubleyodpatah'] = 0xFB1F;
	    t['doubleyodpatahhebrew'] = 0xFB1F;
	    t['downtackbelowcmb'] = 0x031E;
	    t['downtackmod'] = 0x02D5;
	    t['dparen'] = 0x249F;
	    t['dsuperior'] = 0xF6EB;
	    t['dtail'] = 0x0256;
	    t['dtopbar'] = 0x018C;
	    t['duhiragana'] = 0x3065;
	    t['dukatakana'] = 0x30C5;
	    t['dz'] = 0x01F3;
	    t['dzaltone'] = 0x02A3;
	    t['dzcaron'] = 0x01C6;
	    t['dzcurl'] = 0x02A5;
	    t['dzeabkhasiancyrillic'] = 0x04E1;
	    t['dzecyrillic'] = 0x0455;
	    t['dzhecyrillic'] = 0x045F;
	    t['e'] = 0x0065;
	    t['eacute'] = 0x00E9;
	    t['earth'] = 0x2641;
	    t['ebengali'] = 0x098F;
	    t['ebopomofo'] = 0x311C;
	    t['ebreve'] = 0x0115;
	    t['ecandradeva'] = 0x090D;
	    t['ecandragujarati'] = 0x0A8D;
	    t['ecandravowelsigndeva'] = 0x0945;
	    t['ecandravowelsigngujarati'] = 0x0AC5;
	    t['ecaron'] = 0x011B;
	    t['ecedillabreve'] = 0x1E1D;
	    t['echarmenian'] = 0x0565;
	    t['echyiwnarmenian'] = 0x0587;
	    t['ecircle'] = 0x24D4;
	    t['ecircumflex'] = 0x00EA;
	    t['ecircumflexacute'] = 0x1EBF;
	    t['ecircumflexbelow'] = 0x1E19;
	    t['ecircumflexdotbelow'] = 0x1EC7;
	    t['ecircumflexgrave'] = 0x1EC1;
	    t['ecircumflexhookabove'] = 0x1EC3;
	    t['ecircumflextilde'] = 0x1EC5;
	    t['ecyrillic'] = 0x0454;
	    t['edblgrave'] = 0x0205;
	    t['edeva'] = 0x090F;
	    t['edieresis'] = 0x00EB;
	    t['edot'] = 0x0117;
	    t['edotaccent'] = 0x0117;
	    t['edotbelow'] = 0x1EB9;
	    t['eegurmukhi'] = 0x0A0F;
	    t['eematragurmukhi'] = 0x0A47;
	    t['efcyrillic'] = 0x0444;
	    t['egrave'] = 0x00E8;
	    t['egujarati'] = 0x0A8F;
	    t['eharmenian'] = 0x0567;
	    t['ehbopomofo'] = 0x311D;
	    t['ehiragana'] = 0x3048;
	    t['ehookabove'] = 0x1EBB;
	    t['eibopomofo'] = 0x311F;
	    t['eight'] = 0x0038;
	    t['eightarabic'] = 0x0668;
	    t['eightbengali'] = 0x09EE;
	    t['eightcircle'] = 0x2467;
	    t['eightcircleinversesansserif'] = 0x2791;
	    t['eightdeva'] = 0x096E;
	    t['eighteencircle'] = 0x2471;
	    t['eighteenparen'] = 0x2485;
	    t['eighteenperiod'] = 0x2499;
	    t['eightgujarati'] = 0x0AEE;
	    t['eightgurmukhi'] = 0x0A6E;
	    t['eighthackarabic'] = 0x0668;
	    t['eighthangzhou'] = 0x3028;
	    t['eighthnotebeamed'] = 0x266B;
	    t['eightideographicparen'] = 0x3227;
	    t['eightinferior'] = 0x2088;
	    t['eightmonospace'] = 0xFF18;
	    t['eightoldstyle'] = 0xF738;
	    t['eightparen'] = 0x247B;
	    t['eightperiod'] = 0x248F;
	    t['eightpersian'] = 0x06F8;
	    t['eightroman'] = 0x2177;
	    t['eightsuperior'] = 0x2078;
	    t['eightthai'] = 0x0E58;
	    t['einvertedbreve'] = 0x0207;
	    t['eiotifiedcyrillic'] = 0x0465;
	    t['ekatakana'] = 0x30A8;
	    t['ekatakanahalfwidth'] = 0xFF74;
	    t['ekonkargurmukhi'] = 0x0A74;
	    t['ekorean'] = 0x3154;
	    t['elcyrillic'] = 0x043B;
	    t['element'] = 0x2208;
	    t['elevencircle'] = 0x246A;
	    t['elevenparen'] = 0x247E;
	    t['elevenperiod'] = 0x2492;
	    t['elevenroman'] = 0x217A;
	    t['ellipsis'] = 0x2026;
	    t['ellipsisvertical'] = 0x22EE;
	    t['emacron'] = 0x0113;
	    t['emacronacute'] = 0x1E17;
	    t['emacrongrave'] = 0x1E15;
	    t['emcyrillic'] = 0x043C;
	    t['emdash'] = 0x2014;
	    t['emdashvertical'] = 0xFE31;
	    t['emonospace'] = 0xFF45;
	    t['emphasismarkarmenian'] = 0x055B;
	    t['emptyset'] = 0x2205;
	    t['enbopomofo'] = 0x3123;
	    t['encyrillic'] = 0x043D;
	    t['endash'] = 0x2013;
	    t['endashvertical'] = 0xFE32;
	    t['endescendercyrillic'] = 0x04A3;
	    t['eng'] = 0x014B;
	    t['engbopomofo'] = 0x3125;
	    t['enghecyrillic'] = 0x04A5;
	    t['enhookcyrillic'] = 0x04C8;
	    t['enspace'] = 0x2002;
	    t['eogonek'] = 0x0119;
	    t['eokorean'] = 0x3153;
	    t['eopen'] = 0x025B;
	    t['eopenclosed'] = 0x029A;
	    t['eopenreversed'] = 0x025C;
	    t['eopenreversedclosed'] = 0x025E;
	    t['eopenreversedhook'] = 0x025D;
	    t['eparen'] = 0x24A0;
	    t['epsilon'] = 0x03B5;
	    t['epsilontonos'] = 0x03AD;
	    t['equal'] = 0x003D;
	    t['equalmonospace'] = 0xFF1D;
	    t['equalsmall'] = 0xFE66;
	    t['equalsuperior'] = 0x207C;
	    t['equivalence'] = 0x2261;
	    t['erbopomofo'] = 0x3126;
	    t['ercyrillic'] = 0x0440;
	    t['ereversed'] = 0x0258;
	    t['ereversedcyrillic'] = 0x044D;
	    t['escyrillic'] = 0x0441;
	    t['esdescendercyrillic'] = 0x04AB;
	    t['esh'] = 0x0283;
	    t['eshcurl'] = 0x0286;
	    t['eshortdeva'] = 0x090E;
	    t['eshortvowelsigndeva'] = 0x0946;
	    t['eshreversedloop'] = 0x01AA;
	    t['eshsquatreversed'] = 0x0285;
	    t['esmallhiragana'] = 0x3047;
	    t['esmallkatakana'] = 0x30A7;
	    t['esmallkatakanahalfwidth'] = 0xFF6A;
	    t['estimated'] = 0x212E;
	    t['esuperior'] = 0xF6EC;
	    t['eta'] = 0x03B7;
	    t['etarmenian'] = 0x0568;
	    t['etatonos'] = 0x03AE;
	    t['eth'] = 0x00F0;
	    t['etilde'] = 0x1EBD;
	    t['etildebelow'] = 0x1E1B;
	    t['etnahtafoukhhebrew'] = 0x0591;
	    t['etnahtafoukhlefthebrew'] = 0x0591;
	    t['etnahtahebrew'] = 0x0591;
	    t['etnahtalefthebrew'] = 0x0591;
	    t['eturned'] = 0x01DD;
	    t['eukorean'] = 0x3161;
	    t['euro'] = 0x20AC;
	    t['evowelsignbengali'] = 0x09C7;
	    t['evowelsigndeva'] = 0x0947;
	    t['evowelsigngujarati'] = 0x0AC7;
	    t['exclam'] = 0x0021;
	    t['exclamarmenian'] = 0x055C;
	    t['exclamdbl'] = 0x203C;
	    t['exclamdown'] = 0x00A1;
	    t['exclamdownsmall'] = 0xF7A1;
	    t['exclammonospace'] = 0xFF01;
	    t['exclamsmall'] = 0xF721;
	    t['existential'] = 0x2203;
	    t['ezh'] = 0x0292;
	    t['ezhcaron'] = 0x01EF;
	    t['ezhcurl'] = 0x0293;
	    t['ezhreversed'] = 0x01B9;
	    t['ezhtail'] = 0x01BA;
	    t['f'] = 0x0066;
	    t['fadeva'] = 0x095E;
	    t['fagurmukhi'] = 0x0A5E;
	    t['fahrenheit'] = 0x2109;
	    t['fathaarabic'] = 0x064E;
	    t['fathalowarabic'] = 0x064E;
	    t['fathatanarabic'] = 0x064B;
	    t['fbopomofo'] = 0x3108;
	    t['fcircle'] = 0x24D5;
	    t['fdotaccent'] = 0x1E1F;
	    t['feharabic'] = 0x0641;
	    t['feharmenian'] = 0x0586;
	    t['fehfinalarabic'] = 0xFED2;
	    t['fehinitialarabic'] = 0xFED3;
	    t['fehmedialarabic'] = 0xFED4;
	    t['feicoptic'] = 0x03E5;
	    t['female'] = 0x2640;
	    t['ff'] = 0xFB00;
	    t['ffi'] = 0xFB03;
	    t['ffl'] = 0xFB04;
	    t['fi'] = 0xFB01;
	    t['fifteencircle'] = 0x246E;
	    t['fifteenparen'] = 0x2482;
	    t['fifteenperiod'] = 0x2496;
	    t['figuredash'] = 0x2012;
	    t['filledbox'] = 0x25A0;
	    t['filledrect'] = 0x25AC;
	    t['finalkaf'] = 0x05DA;
	    t['finalkafdagesh'] = 0xFB3A;
	    t['finalkafdageshhebrew'] = 0xFB3A;
	    t['finalkafhebrew'] = 0x05DA;
	    t['finalmem'] = 0x05DD;
	    t['finalmemhebrew'] = 0x05DD;
	    t['finalnun'] = 0x05DF;
	    t['finalnunhebrew'] = 0x05DF;
	    t['finalpe'] = 0x05E3;
	    t['finalpehebrew'] = 0x05E3;
	    t['finaltsadi'] = 0x05E5;
	    t['finaltsadihebrew'] = 0x05E5;
	    t['firsttonechinese'] = 0x02C9;
	    t['fisheye'] = 0x25C9;
	    t['fitacyrillic'] = 0x0473;
	    t['five'] = 0x0035;
	    t['fivearabic'] = 0x0665;
	    t['fivebengali'] = 0x09EB;
	    t['fivecircle'] = 0x2464;
	    t['fivecircleinversesansserif'] = 0x278E;
	    t['fivedeva'] = 0x096B;
	    t['fiveeighths'] = 0x215D;
	    t['fivegujarati'] = 0x0AEB;
	    t['fivegurmukhi'] = 0x0A6B;
	    t['fivehackarabic'] = 0x0665;
	    t['fivehangzhou'] = 0x3025;
	    t['fiveideographicparen'] = 0x3224;
	    t['fiveinferior'] = 0x2085;
	    t['fivemonospace'] = 0xFF15;
	    t['fiveoldstyle'] = 0xF735;
	    t['fiveparen'] = 0x2478;
	    t['fiveperiod'] = 0x248C;
	    t['fivepersian'] = 0x06F5;
	    t['fiveroman'] = 0x2174;
	    t['fivesuperior'] = 0x2075;
	    t['fivethai'] = 0x0E55;
	    t['fl'] = 0xFB02;
	    t['florin'] = 0x0192;
	    t['fmonospace'] = 0xFF46;
	    t['fmsquare'] = 0x3399;
	    t['fofanthai'] = 0x0E1F;
	    t['fofathai'] = 0x0E1D;
	    t['fongmanthai'] = 0x0E4F;
	    t['forall'] = 0x2200;
	    t['four'] = 0x0034;
	    t['fourarabic'] = 0x0664;
	    t['fourbengali'] = 0x09EA;
	    t['fourcircle'] = 0x2463;
	    t['fourcircleinversesansserif'] = 0x278D;
	    t['fourdeva'] = 0x096A;
	    t['fourgujarati'] = 0x0AEA;
	    t['fourgurmukhi'] = 0x0A6A;
	    t['fourhackarabic'] = 0x0664;
	    t['fourhangzhou'] = 0x3024;
	    t['fourideographicparen'] = 0x3223;
	    t['fourinferior'] = 0x2084;
	    t['fourmonospace'] = 0xFF14;
	    t['fournumeratorbengali'] = 0x09F7;
	    t['fouroldstyle'] = 0xF734;
	    t['fourparen'] = 0x2477;
	    t['fourperiod'] = 0x248B;
	    t['fourpersian'] = 0x06F4;
	    t['fourroman'] = 0x2173;
	    t['foursuperior'] = 0x2074;
	    t['fourteencircle'] = 0x246D;
	    t['fourteenparen'] = 0x2481;
	    t['fourteenperiod'] = 0x2495;
	    t['fourthai'] = 0x0E54;
	    t['fourthtonechinese'] = 0x02CB;
	    t['fparen'] = 0x24A1;
	    t['fraction'] = 0x2044;
	    t['franc'] = 0x20A3;
	    t['g'] = 0x0067;
	    t['gabengali'] = 0x0997;
	    t['gacute'] = 0x01F5;
	    t['gadeva'] = 0x0917;
	    t['gafarabic'] = 0x06AF;
	    t['gaffinalarabic'] = 0xFB93;
	    t['gafinitialarabic'] = 0xFB94;
	    t['gafmedialarabic'] = 0xFB95;
	    t['gagujarati'] = 0x0A97;
	    t['gagurmukhi'] = 0x0A17;
	    t['gahiragana'] = 0x304C;
	    t['gakatakana'] = 0x30AC;
	    t['gamma'] = 0x03B3;
	    t['gammalatinsmall'] = 0x0263;
	    t['gammasuperior'] = 0x02E0;
	    t['gangiacoptic'] = 0x03EB;
	    t['gbopomofo'] = 0x310D;
	    t['gbreve'] = 0x011F;
	    t['gcaron'] = 0x01E7;
	    t['gcedilla'] = 0x0123;
	    t['gcircle'] = 0x24D6;
	    t['gcircumflex'] = 0x011D;
	    t['gcommaaccent'] = 0x0123;
	    t['gdot'] = 0x0121;
	    t['gdotaccent'] = 0x0121;
	    t['gecyrillic'] = 0x0433;
	    t['gehiragana'] = 0x3052;
	    t['gekatakana'] = 0x30B2;
	    t['geometricallyequal'] = 0x2251;
	    t['gereshaccenthebrew'] = 0x059C;
	    t['gereshhebrew'] = 0x05F3;
	    t['gereshmuqdamhebrew'] = 0x059D;
	    t['germandbls'] = 0x00DF;
	    t['gershayimaccenthebrew'] = 0x059E;
	    t['gershayimhebrew'] = 0x05F4;
	    t['getamark'] = 0x3013;
	    t['ghabengali'] = 0x0998;
	    t['ghadarmenian'] = 0x0572;
	    t['ghadeva'] = 0x0918;
	    t['ghagujarati'] = 0x0A98;
	    t['ghagurmukhi'] = 0x0A18;
	    t['ghainarabic'] = 0x063A;
	    t['ghainfinalarabic'] = 0xFECE;
	    t['ghaininitialarabic'] = 0xFECF;
	    t['ghainmedialarabic'] = 0xFED0;
	    t['ghemiddlehookcyrillic'] = 0x0495;
	    t['ghestrokecyrillic'] = 0x0493;
	    t['gheupturncyrillic'] = 0x0491;
	    t['ghhadeva'] = 0x095A;
	    t['ghhagurmukhi'] = 0x0A5A;
	    t['ghook'] = 0x0260;
	    t['ghzsquare'] = 0x3393;
	    t['gihiragana'] = 0x304E;
	    t['gikatakana'] = 0x30AE;
	    t['gimarmenian'] = 0x0563;
	    t['gimel'] = 0x05D2;
	    t['gimeldagesh'] = 0xFB32;
	    t['gimeldageshhebrew'] = 0xFB32;
	    t['gimelhebrew'] = 0x05D2;
	    t['gjecyrillic'] = 0x0453;
	    t['glottalinvertedstroke'] = 0x01BE;
	    t['glottalstop'] = 0x0294;
	    t['glottalstopinverted'] = 0x0296;
	    t['glottalstopmod'] = 0x02C0;
	    t['glottalstopreversed'] = 0x0295;
	    t['glottalstopreversedmod'] = 0x02C1;
	    t['glottalstopreversedsuperior'] = 0x02E4;
	    t['glottalstopstroke'] = 0x02A1;
	    t['glottalstopstrokereversed'] = 0x02A2;
	    t['gmacron'] = 0x1E21;
	    t['gmonospace'] = 0xFF47;
	    t['gohiragana'] = 0x3054;
	    t['gokatakana'] = 0x30B4;
	    t['gparen'] = 0x24A2;
	    t['gpasquare'] = 0x33AC;
	    t['gradient'] = 0x2207;
	    t['grave'] = 0x0060;
	    t['gravebelowcmb'] = 0x0316;
	    t['gravecmb'] = 0x0300;
	    t['gravecomb'] = 0x0300;
	    t['gravedeva'] = 0x0953;
	    t['gravelowmod'] = 0x02CE;
	    t['gravemonospace'] = 0xFF40;
	    t['gravetonecmb'] = 0x0340;
	    t['greater'] = 0x003E;
	    t['greaterequal'] = 0x2265;
	    t['greaterequalorless'] = 0x22DB;
	    t['greatermonospace'] = 0xFF1E;
	    t['greaterorequivalent'] = 0x2273;
	    t['greaterorless'] = 0x2277;
	    t['greateroverequal'] = 0x2267;
	    t['greatersmall'] = 0xFE65;
	    t['gscript'] = 0x0261;
	    t['gstroke'] = 0x01E5;
	    t['guhiragana'] = 0x3050;
	    t['guillemotleft'] = 0x00AB;
	    t['guillemotright'] = 0x00BB;
	    t['guilsinglleft'] = 0x2039;
	    t['guilsinglright'] = 0x203A;
	    t['gukatakana'] = 0x30B0;
	    t['guramusquare'] = 0x3318;
	    t['gysquare'] = 0x33C9;
	    t['h'] = 0x0068;
	    t['haabkhasiancyrillic'] = 0x04A9;
	    t['haaltonearabic'] = 0x06C1;
	    t['habengali'] = 0x09B9;
	    t['hadescendercyrillic'] = 0x04B3;
	    t['hadeva'] = 0x0939;
	    t['hagujarati'] = 0x0AB9;
	    t['hagurmukhi'] = 0x0A39;
	    t['haharabic'] = 0x062D;
	    t['hahfinalarabic'] = 0xFEA2;
	    t['hahinitialarabic'] = 0xFEA3;
	    t['hahiragana'] = 0x306F;
	    t['hahmedialarabic'] = 0xFEA4;
	    t['haitusquare'] = 0x332A;
	    t['hakatakana'] = 0x30CF;
	    t['hakatakanahalfwidth'] = 0xFF8A;
	    t['halantgurmukhi'] = 0x0A4D;
	    t['hamzaarabic'] = 0x0621;
	    t['hamzalowarabic'] = 0x0621;
	    t['hangulfiller'] = 0x3164;
	    t['hardsigncyrillic'] = 0x044A;
	    t['harpoonleftbarbup'] = 0x21BC;
	    t['harpoonrightbarbup'] = 0x21C0;
	    t['hasquare'] = 0x33CA;
	    t['hatafpatah'] = 0x05B2;
	    t['hatafpatah16'] = 0x05B2;
	    t['hatafpatah23'] = 0x05B2;
	    t['hatafpatah2f'] = 0x05B2;
	    t['hatafpatahhebrew'] = 0x05B2;
	    t['hatafpatahnarrowhebrew'] = 0x05B2;
	    t['hatafpatahquarterhebrew'] = 0x05B2;
	    t['hatafpatahwidehebrew'] = 0x05B2;
	    t['hatafqamats'] = 0x05B3;
	    t['hatafqamats1b'] = 0x05B3;
	    t['hatafqamats28'] = 0x05B3;
	    t['hatafqamats34'] = 0x05B3;
	    t['hatafqamatshebrew'] = 0x05B3;
	    t['hatafqamatsnarrowhebrew'] = 0x05B3;
	    t['hatafqamatsquarterhebrew'] = 0x05B3;
	    t['hatafqamatswidehebrew'] = 0x05B3;
	    t['hatafsegol'] = 0x05B1;
	    t['hatafsegol17'] = 0x05B1;
	    t['hatafsegol24'] = 0x05B1;
	    t['hatafsegol30'] = 0x05B1;
	    t['hatafsegolhebrew'] = 0x05B1;
	    t['hatafsegolnarrowhebrew'] = 0x05B1;
	    t['hatafsegolquarterhebrew'] = 0x05B1;
	    t['hatafsegolwidehebrew'] = 0x05B1;
	    t['hbar'] = 0x0127;
	    t['hbopomofo'] = 0x310F;
	    t['hbrevebelow'] = 0x1E2B;
	    t['hcedilla'] = 0x1E29;
	    t['hcircle'] = 0x24D7;
	    t['hcircumflex'] = 0x0125;
	    t['hdieresis'] = 0x1E27;
	    t['hdotaccent'] = 0x1E23;
	    t['hdotbelow'] = 0x1E25;
	    t['he'] = 0x05D4;
	    t['heart'] = 0x2665;
	    t['heartsuitblack'] = 0x2665;
	    t['heartsuitwhite'] = 0x2661;
	    t['hedagesh'] = 0xFB34;
	    t['hedageshhebrew'] = 0xFB34;
	    t['hehaltonearabic'] = 0x06C1;
	    t['heharabic'] = 0x0647;
	    t['hehebrew'] = 0x05D4;
	    t['hehfinalaltonearabic'] = 0xFBA7;
	    t['hehfinalalttwoarabic'] = 0xFEEA;
	    t['hehfinalarabic'] = 0xFEEA;
	    t['hehhamzaabovefinalarabic'] = 0xFBA5;
	    t['hehhamzaaboveisolatedarabic'] = 0xFBA4;
	    t['hehinitialaltonearabic'] = 0xFBA8;
	    t['hehinitialarabic'] = 0xFEEB;
	    t['hehiragana'] = 0x3078;
	    t['hehmedialaltonearabic'] = 0xFBA9;
	    t['hehmedialarabic'] = 0xFEEC;
	    t['heiseierasquare'] = 0x337B;
	    t['hekatakana'] = 0x30D8;
	    t['hekatakanahalfwidth'] = 0xFF8D;
	    t['hekutaarusquare'] = 0x3336;
	    t['henghook'] = 0x0267;
	    t['herutusquare'] = 0x3339;
	    t['het'] = 0x05D7;
	    t['hethebrew'] = 0x05D7;
	    t['hhook'] = 0x0266;
	    t['hhooksuperior'] = 0x02B1;
	    t['hieuhacirclekorean'] = 0x327B;
	    t['hieuhaparenkorean'] = 0x321B;
	    t['hieuhcirclekorean'] = 0x326D;
	    t['hieuhkorean'] = 0x314E;
	    t['hieuhparenkorean'] = 0x320D;
	    t['hihiragana'] = 0x3072;
	    t['hikatakana'] = 0x30D2;
	    t['hikatakanahalfwidth'] = 0xFF8B;
	    t['hiriq'] = 0x05B4;
	    t['hiriq14'] = 0x05B4;
	    t['hiriq21'] = 0x05B4;
	    t['hiriq2d'] = 0x05B4;
	    t['hiriqhebrew'] = 0x05B4;
	    t['hiriqnarrowhebrew'] = 0x05B4;
	    t['hiriqquarterhebrew'] = 0x05B4;
	    t['hiriqwidehebrew'] = 0x05B4;
	    t['hlinebelow'] = 0x1E96;
	    t['hmonospace'] = 0xFF48;
	    t['hoarmenian'] = 0x0570;
	    t['hohipthai'] = 0x0E2B;
	    t['hohiragana'] = 0x307B;
	    t['hokatakana'] = 0x30DB;
	    t['hokatakanahalfwidth'] = 0xFF8E;
	    t['holam'] = 0x05B9;
	    t['holam19'] = 0x05B9;
	    t['holam26'] = 0x05B9;
	    t['holam32'] = 0x05B9;
	    t['holamhebrew'] = 0x05B9;
	    t['holamnarrowhebrew'] = 0x05B9;
	    t['holamquarterhebrew'] = 0x05B9;
	    t['holamwidehebrew'] = 0x05B9;
	    t['honokhukthai'] = 0x0E2E;
	    t['hookabovecomb'] = 0x0309;
	    t['hookcmb'] = 0x0309;
	    t['hookpalatalizedbelowcmb'] = 0x0321;
	    t['hookretroflexbelowcmb'] = 0x0322;
	    t['hoonsquare'] = 0x3342;
	    t['horicoptic'] = 0x03E9;
	    t['horizontalbar'] = 0x2015;
	    t['horncmb'] = 0x031B;
	    t['hotsprings'] = 0x2668;
	    t['house'] = 0x2302;
	    t['hparen'] = 0x24A3;
	    t['hsuperior'] = 0x02B0;
	    t['hturned'] = 0x0265;
	    t['huhiragana'] = 0x3075;
	    t['huiitosquare'] = 0x3333;
	    t['hukatakana'] = 0x30D5;
	    t['hukatakanahalfwidth'] = 0xFF8C;
	    t['hungarumlaut'] = 0x02DD;
	    t['hungarumlautcmb'] = 0x030B;
	    t['hv'] = 0x0195;
	    t['hyphen'] = 0x002D;
	    t['hypheninferior'] = 0xF6E5;
	    t['hyphenmonospace'] = 0xFF0D;
	    t['hyphensmall'] = 0xFE63;
	    t['hyphensuperior'] = 0xF6E6;
	    t['hyphentwo'] = 0x2010;
	    t['i'] = 0x0069;
	    t['iacute'] = 0x00ED;
	    t['iacyrillic'] = 0x044F;
	    t['ibengali'] = 0x0987;
	    t['ibopomofo'] = 0x3127;
	    t['ibreve'] = 0x012D;
	    t['icaron'] = 0x01D0;
	    t['icircle'] = 0x24D8;
	    t['icircumflex'] = 0x00EE;
	    t['icyrillic'] = 0x0456;
	    t['idblgrave'] = 0x0209;
	    t['ideographearthcircle'] = 0x328F;
	    t['ideographfirecircle'] = 0x328B;
	    t['ideographicallianceparen'] = 0x323F;
	    t['ideographiccallparen'] = 0x323A;
	    t['ideographiccentrecircle'] = 0x32A5;
	    t['ideographicclose'] = 0x3006;
	    t['ideographiccomma'] = 0x3001;
	    t['ideographiccommaleft'] = 0xFF64;
	    t['ideographiccongratulationparen'] = 0x3237;
	    t['ideographiccorrectcircle'] = 0x32A3;
	    t['ideographicearthparen'] = 0x322F;
	    t['ideographicenterpriseparen'] = 0x323D;
	    t['ideographicexcellentcircle'] = 0x329D;
	    t['ideographicfestivalparen'] = 0x3240;
	    t['ideographicfinancialcircle'] = 0x3296;
	    t['ideographicfinancialparen'] = 0x3236;
	    t['ideographicfireparen'] = 0x322B;
	    t['ideographichaveparen'] = 0x3232;
	    t['ideographichighcircle'] = 0x32A4;
	    t['ideographiciterationmark'] = 0x3005;
	    t['ideographiclaborcircle'] = 0x3298;
	    t['ideographiclaborparen'] = 0x3238;
	    t['ideographicleftcircle'] = 0x32A7;
	    t['ideographiclowcircle'] = 0x32A6;
	    t['ideographicmedicinecircle'] = 0x32A9;
	    t['ideographicmetalparen'] = 0x322E;
	    t['ideographicmoonparen'] = 0x322A;
	    t['ideographicnameparen'] = 0x3234;
	    t['ideographicperiod'] = 0x3002;
	    t['ideographicprintcircle'] = 0x329E;
	    t['ideographicreachparen'] = 0x3243;
	    t['ideographicrepresentparen'] = 0x3239;
	    t['ideographicresourceparen'] = 0x323E;
	    t['ideographicrightcircle'] = 0x32A8;
	    t['ideographicsecretcircle'] = 0x3299;
	    t['ideographicselfparen'] = 0x3242;
	    t['ideographicsocietyparen'] = 0x3233;
	    t['ideographicspace'] = 0x3000;
	    t['ideographicspecialparen'] = 0x3235;
	    t['ideographicstockparen'] = 0x3231;
	    t['ideographicstudyparen'] = 0x323B;
	    t['ideographicsunparen'] = 0x3230;
	    t['ideographicsuperviseparen'] = 0x323C;
	    t['ideographicwaterparen'] = 0x322C;
	    t['ideographicwoodparen'] = 0x322D;
	    t['ideographiczero'] = 0x3007;
	    t['ideographmetalcircle'] = 0x328E;
	    t['ideographmooncircle'] = 0x328A;
	    t['ideographnamecircle'] = 0x3294;
	    t['ideographsuncircle'] = 0x3290;
	    t['ideographwatercircle'] = 0x328C;
	    t['ideographwoodcircle'] = 0x328D;
	    t['ideva'] = 0x0907;
	    t['idieresis'] = 0x00EF;
	    t['idieresisacute'] = 0x1E2F;
	    t['idieresiscyrillic'] = 0x04E5;
	    t['idotbelow'] = 0x1ECB;
	    t['iebrevecyrillic'] = 0x04D7;
	    t['iecyrillic'] = 0x0435;
	    t['ieungacirclekorean'] = 0x3275;
	    t['ieungaparenkorean'] = 0x3215;
	    t['ieungcirclekorean'] = 0x3267;
	    t['ieungkorean'] = 0x3147;
	    t['ieungparenkorean'] = 0x3207;
	    t['igrave'] = 0x00EC;
	    t['igujarati'] = 0x0A87;
	    t['igurmukhi'] = 0x0A07;
	    t['ihiragana'] = 0x3044;
	    t['ihookabove'] = 0x1EC9;
	    t['iibengali'] = 0x0988;
	    t['iicyrillic'] = 0x0438;
	    t['iideva'] = 0x0908;
	    t['iigujarati'] = 0x0A88;
	    t['iigurmukhi'] = 0x0A08;
	    t['iimatragurmukhi'] = 0x0A40;
	    t['iinvertedbreve'] = 0x020B;
	    t['iishortcyrillic'] = 0x0439;
	    t['iivowelsignbengali'] = 0x09C0;
	    t['iivowelsigndeva'] = 0x0940;
	    t['iivowelsigngujarati'] = 0x0AC0;
	    t['ij'] = 0x0133;
	    t['ikatakana'] = 0x30A4;
	    t['ikatakanahalfwidth'] = 0xFF72;
	    t['ikorean'] = 0x3163;
	    t['ilde'] = 0x02DC;
	    t['iluyhebrew'] = 0x05AC;
	    t['imacron'] = 0x012B;
	    t['imacroncyrillic'] = 0x04E3;
	    t['imageorapproximatelyequal'] = 0x2253;
	    t['imatragurmukhi'] = 0x0A3F;
	    t['imonospace'] = 0xFF49;
	    t['increment'] = 0x2206;
	    t['infinity'] = 0x221E;
	    t['iniarmenian'] = 0x056B;
	    t['integral'] = 0x222B;
	    t['integralbottom'] = 0x2321;
	    t['integralbt'] = 0x2321;
	    t['integralex'] = 0xF8F5;
	    t['integraltop'] = 0x2320;
	    t['integraltp'] = 0x2320;
	    t['intersection'] = 0x2229;
	    t['intisquare'] = 0x3305;
	    t['invbullet'] = 0x25D8;
	    t['invcircle'] = 0x25D9;
	    t['invsmileface'] = 0x263B;
	    t['iocyrillic'] = 0x0451;
	    t['iogonek'] = 0x012F;
	    t['iota'] = 0x03B9;
	    t['iotadieresis'] = 0x03CA;
	    t['iotadieresistonos'] = 0x0390;
	    t['iotalatin'] = 0x0269;
	    t['iotatonos'] = 0x03AF;
	    t['iparen'] = 0x24A4;
	    t['irigurmukhi'] = 0x0A72;
	    t['ismallhiragana'] = 0x3043;
	    t['ismallkatakana'] = 0x30A3;
	    t['ismallkatakanahalfwidth'] = 0xFF68;
	    t['issharbengali'] = 0x09FA;
	    t['istroke'] = 0x0268;
	    t['isuperior'] = 0xF6ED;
	    t['iterationhiragana'] = 0x309D;
	    t['iterationkatakana'] = 0x30FD;
	    t['itilde'] = 0x0129;
	    t['itildebelow'] = 0x1E2D;
	    t['iubopomofo'] = 0x3129;
	    t['iucyrillic'] = 0x044E;
	    t['ivowelsignbengali'] = 0x09BF;
	    t['ivowelsigndeva'] = 0x093F;
	    t['ivowelsigngujarati'] = 0x0ABF;
	    t['izhitsacyrillic'] = 0x0475;
	    t['izhitsadblgravecyrillic'] = 0x0477;
	    t['j'] = 0x006A;
	    t['jaarmenian'] = 0x0571;
	    t['jabengali'] = 0x099C;
	    t['jadeva'] = 0x091C;
	    t['jagujarati'] = 0x0A9C;
	    t['jagurmukhi'] = 0x0A1C;
	    t['jbopomofo'] = 0x3110;
	    t['jcaron'] = 0x01F0;
	    t['jcircle'] = 0x24D9;
	    t['jcircumflex'] = 0x0135;
	    t['jcrossedtail'] = 0x029D;
	    t['jdotlessstroke'] = 0x025F;
	    t['jecyrillic'] = 0x0458;
	    t['jeemarabic'] = 0x062C;
	    t['jeemfinalarabic'] = 0xFE9E;
	    t['jeeminitialarabic'] = 0xFE9F;
	    t['jeemmedialarabic'] = 0xFEA0;
	    t['jeharabic'] = 0x0698;
	    t['jehfinalarabic'] = 0xFB8B;
	    t['jhabengali'] = 0x099D;
	    t['jhadeva'] = 0x091D;
	    t['jhagujarati'] = 0x0A9D;
	    t['jhagurmukhi'] = 0x0A1D;
	    t['jheharmenian'] = 0x057B;
	    t['jis'] = 0x3004;
	    t['jmonospace'] = 0xFF4A;
	    t['jparen'] = 0x24A5;
	    t['jsuperior'] = 0x02B2;
	    t['k'] = 0x006B;
	    t['kabashkircyrillic'] = 0x04A1;
	    t['kabengali'] = 0x0995;
	    t['kacute'] = 0x1E31;
	    t['kacyrillic'] = 0x043A;
	    t['kadescendercyrillic'] = 0x049B;
	    t['kadeva'] = 0x0915;
	    t['kaf'] = 0x05DB;
	    t['kafarabic'] = 0x0643;
	    t['kafdagesh'] = 0xFB3B;
	    t['kafdageshhebrew'] = 0xFB3B;
	    t['kaffinalarabic'] = 0xFEDA;
	    t['kafhebrew'] = 0x05DB;
	    t['kafinitialarabic'] = 0xFEDB;
	    t['kafmedialarabic'] = 0xFEDC;
	    t['kafrafehebrew'] = 0xFB4D;
	    t['kagujarati'] = 0x0A95;
	    t['kagurmukhi'] = 0x0A15;
	    t['kahiragana'] = 0x304B;
	    t['kahookcyrillic'] = 0x04C4;
	    t['kakatakana'] = 0x30AB;
	    t['kakatakanahalfwidth'] = 0xFF76;
	    t['kappa'] = 0x03BA;
	    t['kappasymbolgreek'] = 0x03F0;
	    t['kapyeounmieumkorean'] = 0x3171;
	    t['kapyeounphieuphkorean'] = 0x3184;
	    t['kapyeounpieupkorean'] = 0x3178;
	    t['kapyeounssangpieupkorean'] = 0x3179;
	    t['karoriisquare'] = 0x330D;
	    t['kashidaautoarabic'] = 0x0640;
	    t['kashidaautonosidebearingarabic'] = 0x0640;
	    t['kasmallkatakana'] = 0x30F5;
	    t['kasquare'] = 0x3384;
	    t['kasraarabic'] = 0x0650;
	    t['kasratanarabic'] = 0x064D;
	    t['kastrokecyrillic'] = 0x049F;
	    t['katahiraprolongmarkhalfwidth'] = 0xFF70;
	    t['kaverticalstrokecyrillic'] = 0x049D;
	    t['kbopomofo'] = 0x310E;
	    t['kcalsquare'] = 0x3389;
	    t['kcaron'] = 0x01E9;
	    t['kcedilla'] = 0x0137;
	    t['kcircle'] = 0x24DA;
	    t['kcommaaccent'] = 0x0137;
	    t['kdotbelow'] = 0x1E33;
	    t['keharmenian'] = 0x0584;
	    t['kehiragana'] = 0x3051;
	    t['kekatakana'] = 0x30B1;
	    t['kekatakanahalfwidth'] = 0xFF79;
	    t['kenarmenian'] = 0x056F;
	    t['kesmallkatakana'] = 0x30F6;
	    t['kgreenlandic'] = 0x0138;
	    t['khabengali'] = 0x0996;
	    t['khacyrillic'] = 0x0445;
	    t['khadeva'] = 0x0916;
	    t['khagujarati'] = 0x0A96;
	    t['khagurmukhi'] = 0x0A16;
	    t['khaharabic'] = 0x062E;
	    t['khahfinalarabic'] = 0xFEA6;
	    t['khahinitialarabic'] = 0xFEA7;
	    t['khahmedialarabic'] = 0xFEA8;
	    t['kheicoptic'] = 0x03E7;
	    t['khhadeva'] = 0x0959;
	    t['khhagurmukhi'] = 0x0A59;
	    t['khieukhacirclekorean'] = 0x3278;
	    t['khieukhaparenkorean'] = 0x3218;
	    t['khieukhcirclekorean'] = 0x326A;
	    t['khieukhkorean'] = 0x314B;
	    t['khieukhparenkorean'] = 0x320A;
	    t['khokhaithai'] = 0x0E02;
	    t['khokhonthai'] = 0x0E05;
	    t['khokhuatthai'] = 0x0E03;
	    t['khokhwaithai'] = 0x0E04;
	    t['khomutthai'] = 0x0E5B;
	    t['khook'] = 0x0199;
	    t['khorakhangthai'] = 0x0E06;
	    t['khzsquare'] = 0x3391;
	    t['kihiragana'] = 0x304D;
	    t['kikatakana'] = 0x30AD;
	    t['kikatakanahalfwidth'] = 0xFF77;
	    t['kiroguramusquare'] = 0x3315;
	    t['kiromeetorusquare'] = 0x3316;
	    t['kirosquare'] = 0x3314;
	    t['kiyeokacirclekorean'] = 0x326E;
	    t['kiyeokaparenkorean'] = 0x320E;
	    t['kiyeokcirclekorean'] = 0x3260;
	    t['kiyeokkorean'] = 0x3131;
	    t['kiyeokparenkorean'] = 0x3200;
	    t['kiyeoksioskorean'] = 0x3133;
	    t['kjecyrillic'] = 0x045C;
	    t['klinebelow'] = 0x1E35;
	    t['klsquare'] = 0x3398;
	    t['kmcubedsquare'] = 0x33A6;
	    t['kmonospace'] = 0xFF4B;
	    t['kmsquaredsquare'] = 0x33A2;
	    t['kohiragana'] = 0x3053;
	    t['kohmsquare'] = 0x33C0;
	    t['kokaithai'] = 0x0E01;
	    t['kokatakana'] = 0x30B3;
	    t['kokatakanahalfwidth'] = 0xFF7A;
	    t['kooposquare'] = 0x331E;
	    t['koppacyrillic'] = 0x0481;
	    t['koreanstandardsymbol'] = 0x327F;
	    t['koroniscmb'] = 0x0343;
	    t['kparen'] = 0x24A6;
	    t['kpasquare'] = 0x33AA;
	    t['ksicyrillic'] = 0x046F;
	    t['ktsquare'] = 0x33CF;
	    t['kturned'] = 0x029E;
	    t['kuhiragana'] = 0x304F;
	    t['kukatakana'] = 0x30AF;
	    t['kukatakanahalfwidth'] = 0xFF78;
	    t['kvsquare'] = 0x33B8;
	    t['kwsquare'] = 0x33BE;
	    t['l'] = 0x006C;
	    t['labengali'] = 0x09B2;
	    t['lacute'] = 0x013A;
	    t['ladeva'] = 0x0932;
	    t['lagujarati'] = 0x0AB2;
	    t['lagurmukhi'] = 0x0A32;
	    t['lakkhangyaothai'] = 0x0E45;
	    t['lamaleffinalarabic'] = 0xFEFC;
	    t['lamalefhamzaabovefinalarabic'] = 0xFEF8;
	    t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;
	    t['lamalefhamzabelowfinalarabic'] = 0xFEFA;
	    t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;
	    t['lamalefisolatedarabic'] = 0xFEFB;
	    t['lamalefmaddaabovefinalarabic'] = 0xFEF6;
	    t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;
	    t['lamarabic'] = 0x0644;
	    t['lambda'] = 0x03BB;
	    t['lambdastroke'] = 0x019B;
	    t['lamed'] = 0x05DC;
	    t['lameddagesh'] = 0xFB3C;
	    t['lameddageshhebrew'] = 0xFB3C;
	    t['lamedhebrew'] = 0x05DC;
	    t['lamfinalarabic'] = 0xFEDE;
	    t['lamhahinitialarabic'] = 0xFCCA;
	    t['laminitialarabic'] = 0xFEDF;
	    t['lamjeeminitialarabic'] = 0xFCC9;
	    t['lamkhahinitialarabic'] = 0xFCCB;
	    t['lamlamhehisolatedarabic'] = 0xFDF2;
	    t['lammedialarabic'] = 0xFEE0;
	    t['lammeemhahinitialarabic'] = 0xFD88;
	    t['lammeeminitialarabic'] = 0xFCCC;
	    t['largecircle'] = 0x25EF;
	    t['lbar'] = 0x019A;
	    t['lbelt'] = 0x026C;
	    t['lbopomofo'] = 0x310C;
	    t['lcaron'] = 0x013E;
	    t['lcedilla'] = 0x013C;
	    t['lcircle'] = 0x24DB;
	    t['lcircumflexbelow'] = 0x1E3D;
	    t['lcommaaccent'] = 0x013C;
	    t['ldot'] = 0x0140;
	    t['ldotaccent'] = 0x0140;
	    t['ldotbelow'] = 0x1E37;
	    t['ldotbelowmacron'] = 0x1E39;
	    t['leftangleabovecmb'] = 0x031A;
	    t['lefttackbelowcmb'] = 0x0318;
	    t['less'] = 0x003C;
	    t['lessequal'] = 0x2264;
	    t['lessequalorgreater'] = 0x22DA;
	    t['lessmonospace'] = 0xFF1C;
	    t['lessorequivalent'] = 0x2272;
	    t['lessorgreater'] = 0x2276;
	    t['lessoverequal'] = 0x2266;
	    t['lesssmall'] = 0xFE64;
	    t['lezh'] = 0x026E;
	    t['lfblock'] = 0x258C;
	    t['lhookretroflex'] = 0x026D;
	    t['lira'] = 0x20A4;
	    t['liwnarmenian'] = 0x056C;
	    t['lj'] = 0x01C9;
	    t['ljecyrillic'] = 0x0459;
	    t['ll'] = 0xF6C0;
	    t['lladeva'] = 0x0933;
	    t['llagujarati'] = 0x0AB3;
	    t['llinebelow'] = 0x1E3B;
	    t['llladeva'] = 0x0934;
	    t['llvocalicbengali'] = 0x09E1;
	    t['llvocalicdeva'] = 0x0961;
	    t['llvocalicvowelsignbengali'] = 0x09E3;
	    t['llvocalicvowelsigndeva'] = 0x0963;
	    t['lmiddletilde'] = 0x026B;
	    t['lmonospace'] = 0xFF4C;
	    t['lmsquare'] = 0x33D0;
	    t['lochulathai'] = 0x0E2C;
	    t['logicaland'] = 0x2227;
	    t['logicalnot'] = 0x00AC;
	    t['logicalnotreversed'] = 0x2310;
	    t['logicalor'] = 0x2228;
	    t['lolingthai'] = 0x0E25;
	    t['longs'] = 0x017F;
	    t['lowlinecenterline'] = 0xFE4E;
	    t['lowlinecmb'] = 0x0332;
	    t['lowlinedashed'] = 0xFE4D;
	    t['lozenge'] = 0x25CA;
	    t['lparen'] = 0x24A7;
	    t['lslash'] = 0x0142;
	    t['lsquare'] = 0x2113;
	    t['lsuperior'] = 0xF6EE;
	    t['ltshade'] = 0x2591;
	    t['luthai'] = 0x0E26;
	    t['lvocalicbengali'] = 0x098C;
	    t['lvocalicdeva'] = 0x090C;
	    t['lvocalicvowelsignbengali'] = 0x09E2;
	    t['lvocalicvowelsigndeva'] = 0x0962;
	    t['lxsquare'] = 0x33D3;
	    t['m'] = 0x006D;
	    t['mabengali'] = 0x09AE;
	    t['macron'] = 0x00AF;
	    t['macronbelowcmb'] = 0x0331;
	    t['macroncmb'] = 0x0304;
	    t['macronlowmod'] = 0x02CD;
	    t['macronmonospace'] = 0xFFE3;
	    t['macute'] = 0x1E3F;
	    t['madeva'] = 0x092E;
	    t['magujarati'] = 0x0AAE;
	    t['magurmukhi'] = 0x0A2E;
	    t['mahapakhhebrew'] = 0x05A4;
	    t['mahapakhlefthebrew'] = 0x05A4;
	    t['mahiragana'] = 0x307E;
	    t['maichattawalowleftthai'] = 0xF895;
	    t['maichattawalowrightthai'] = 0xF894;
	    t['maichattawathai'] = 0x0E4B;
	    t['maichattawaupperleftthai'] = 0xF893;
	    t['maieklowleftthai'] = 0xF88C;
	    t['maieklowrightthai'] = 0xF88B;
	    t['maiekthai'] = 0x0E48;
	    t['maiekupperleftthai'] = 0xF88A;
	    t['maihanakatleftthai'] = 0xF884;
	    t['maihanakatthai'] = 0x0E31;
	    t['maitaikhuleftthai'] = 0xF889;
	    t['maitaikhuthai'] = 0x0E47;
	    t['maitholowleftthai'] = 0xF88F;
	    t['maitholowrightthai'] = 0xF88E;
	    t['maithothai'] = 0x0E49;
	    t['maithoupperleftthai'] = 0xF88D;
	    t['maitrilowleftthai'] = 0xF892;
	    t['maitrilowrightthai'] = 0xF891;
	    t['maitrithai'] = 0x0E4A;
	    t['maitriupperleftthai'] = 0xF890;
	    t['maiyamokthai'] = 0x0E46;
	    t['makatakana'] = 0x30DE;
	    t['makatakanahalfwidth'] = 0xFF8F;
	    t['male'] = 0x2642;
	    t['mansyonsquare'] = 0x3347;
	    t['maqafhebrew'] = 0x05BE;
	    t['mars'] = 0x2642;
	    t['masoracirclehebrew'] = 0x05AF;
	    t['masquare'] = 0x3383;
	    t['mbopomofo'] = 0x3107;
	    t['mbsquare'] = 0x33D4;
	    t['mcircle'] = 0x24DC;
	    t['mcubedsquare'] = 0x33A5;
	    t['mdotaccent'] = 0x1E41;
	    t['mdotbelow'] = 0x1E43;
	    t['meemarabic'] = 0x0645;
	    t['meemfinalarabic'] = 0xFEE2;
	    t['meeminitialarabic'] = 0xFEE3;
	    t['meemmedialarabic'] = 0xFEE4;
	    t['meemmeeminitialarabic'] = 0xFCD1;
	    t['meemmeemisolatedarabic'] = 0xFC48;
	    t['meetorusquare'] = 0x334D;
	    t['mehiragana'] = 0x3081;
	    t['meizierasquare'] = 0x337E;
	    t['mekatakana'] = 0x30E1;
	    t['mekatakanahalfwidth'] = 0xFF92;
	    t['mem'] = 0x05DE;
	    t['memdagesh'] = 0xFB3E;
	    t['memdageshhebrew'] = 0xFB3E;
	    t['memhebrew'] = 0x05DE;
	    t['menarmenian'] = 0x0574;
	    t['merkhahebrew'] = 0x05A5;
	    t['merkhakefulahebrew'] = 0x05A6;
	    t['merkhakefulalefthebrew'] = 0x05A6;
	    t['merkhalefthebrew'] = 0x05A5;
	    t['mhook'] = 0x0271;
	    t['mhzsquare'] = 0x3392;
	    t['middledotkatakanahalfwidth'] = 0xFF65;
	    t['middot'] = 0x00B7;
	    t['mieumacirclekorean'] = 0x3272;
	    t['mieumaparenkorean'] = 0x3212;
	    t['mieumcirclekorean'] = 0x3264;
	    t['mieumkorean'] = 0x3141;
	    t['mieumpansioskorean'] = 0x3170;
	    t['mieumparenkorean'] = 0x3204;
	    t['mieumpieupkorean'] = 0x316E;
	    t['mieumsioskorean'] = 0x316F;
	    t['mihiragana'] = 0x307F;
	    t['mikatakana'] = 0x30DF;
	    t['mikatakanahalfwidth'] = 0xFF90;
	    t['minus'] = 0x2212;
	    t['minusbelowcmb'] = 0x0320;
	    t['minuscircle'] = 0x2296;
	    t['minusmod'] = 0x02D7;
	    t['minusplus'] = 0x2213;
	    t['minute'] = 0x2032;
	    t['miribaarusquare'] = 0x334A;
	    t['mirisquare'] = 0x3349;
	    t['mlonglegturned'] = 0x0270;
	    t['mlsquare'] = 0x3396;
	    t['mmcubedsquare'] = 0x33A3;
	    t['mmonospace'] = 0xFF4D;
	    t['mmsquaredsquare'] = 0x339F;
	    t['mohiragana'] = 0x3082;
	    t['mohmsquare'] = 0x33C1;
	    t['mokatakana'] = 0x30E2;
	    t['mokatakanahalfwidth'] = 0xFF93;
	    t['molsquare'] = 0x33D6;
	    t['momathai'] = 0x0E21;
	    t['moverssquare'] = 0x33A7;
	    t['moverssquaredsquare'] = 0x33A8;
	    t['mparen'] = 0x24A8;
	    t['mpasquare'] = 0x33AB;
	    t['mssquare'] = 0x33B3;
	    t['msuperior'] = 0xF6EF;
	    t['mturned'] = 0x026F;
	    t['mu'] = 0x00B5;
	    t['mu1'] = 0x00B5;
	    t['muasquare'] = 0x3382;
	    t['muchgreater'] = 0x226B;
	    t['muchless'] = 0x226A;
	    t['mufsquare'] = 0x338C;
	    t['mugreek'] = 0x03BC;
	    t['mugsquare'] = 0x338D;
	    t['muhiragana'] = 0x3080;
	    t['mukatakana'] = 0x30E0;
	    t['mukatakanahalfwidth'] = 0xFF91;
	    t['mulsquare'] = 0x3395;
	    t['multiply'] = 0x00D7;
	    t['mumsquare'] = 0x339B;
	    t['munahhebrew'] = 0x05A3;
	    t['munahlefthebrew'] = 0x05A3;
	    t['musicalnote'] = 0x266A;
	    t['musicalnotedbl'] = 0x266B;
	    t['musicflatsign'] = 0x266D;
	    t['musicsharpsign'] = 0x266F;
	    t['mussquare'] = 0x33B2;
	    t['muvsquare'] = 0x33B6;
	    t['muwsquare'] = 0x33BC;
	    t['mvmegasquare'] = 0x33B9;
	    t['mvsquare'] = 0x33B7;
	    t['mwmegasquare'] = 0x33BF;
	    t['mwsquare'] = 0x33BD;
	    t['n'] = 0x006E;
	    t['nabengali'] = 0x09A8;
	    t['nabla'] = 0x2207;
	    t['nacute'] = 0x0144;
	    t['nadeva'] = 0x0928;
	    t['nagujarati'] = 0x0AA8;
	    t['nagurmukhi'] = 0x0A28;
	    t['nahiragana'] = 0x306A;
	    t['nakatakana'] = 0x30CA;
	    t['nakatakanahalfwidth'] = 0xFF85;
	    t['napostrophe'] = 0x0149;
	    t['nasquare'] = 0x3381;
	    t['nbopomofo'] = 0x310B;
	    t['nbspace'] = 0x00A0;
	    t['ncaron'] = 0x0148;
	    t['ncedilla'] = 0x0146;
	    t['ncircle'] = 0x24DD;
	    t['ncircumflexbelow'] = 0x1E4B;
	    t['ncommaaccent'] = 0x0146;
	    t['ndotaccent'] = 0x1E45;
	    t['ndotbelow'] = 0x1E47;
	    t['nehiragana'] = 0x306D;
	    t['nekatakana'] = 0x30CD;
	    t['nekatakanahalfwidth'] = 0xFF88;
	    t['newsheqelsign'] = 0x20AA;
	    t['nfsquare'] = 0x338B;
	    t['ngabengali'] = 0x0999;
	    t['ngadeva'] = 0x0919;
	    t['ngagujarati'] = 0x0A99;
	    t['ngagurmukhi'] = 0x0A19;
	    t['ngonguthai'] = 0x0E07;
	    t['nhiragana'] = 0x3093;
	    t['nhookleft'] = 0x0272;
	    t['nhookretroflex'] = 0x0273;
	    t['nieunacirclekorean'] = 0x326F;
	    t['nieunaparenkorean'] = 0x320F;
	    t['nieuncieuckorean'] = 0x3135;
	    t['nieuncirclekorean'] = 0x3261;
	    t['nieunhieuhkorean'] = 0x3136;
	    t['nieunkorean'] = 0x3134;
	    t['nieunpansioskorean'] = 0x3168;
	    t['nieunparenkorean'] = 0x3201;
	    t['nieunsioskorean'] = 0x3167;
	    t['nieuntikeutkorean'] = 0x3166;
	    t['nihiragana'] = 0x306B;
	    t['nikatakana'] = 0x30CB;
	    t['nikatakanahalfwidth'] = 0xFF86;
	    t['nikhahitleftthai'] = 0xF899;
	    t['nikhahitthai'] = 0x0E4D;
	    t['nine'] = 0x0039;
	    t['ninearabic'] = 0x0669;
	    t['ninebengali'] = 0x09EF;
	    t['ninecircle'] = 0x2468;
	    t['ninecircleinversesansserif'] = 0x2792;
	    t['ninedeva'] = 0x096F;
	    t['ninegujarati'] = 0x0AEF;
	    t['ninegurmukhi'] = 0x0A6F;
	    t['ninehackarabic'] = 0x0669;
	    t['ninehangzhou'] = 0x3029;
	    t['nineideographicparen'] = 0x3228;
	    t['nineinferior'] = 0x2089;
	    t['ninemonospace'] = 0xFF19;
	    t['nineoldstyle'] = 0xF739;
	    t['nineparen'] = 0x247C;
	    t['nineperiod'] = 0x2490;
	    t['ninepersian'] = 0x06F9;
	    t['nineroman'] = 0x2178;
	    t['ninesuperior'] = 0x2079;
	    t['nineteencircle'] = 0x2472;
	    t['nineteenparen'] = 0x2486;
	    t['nineteenperiod'] = 0x249A;
	    t['ninethai'] = 0x0E59;
	    t['nj'] = 0x01CC;
	    t['njecyrillic'] = 0x045A;
	    t['nkatakana'] = 0x30F3;
	    t['nkatakanahalfwidth'] = 0xFF9D;
	    t['nlegrightlong'] = 0x019E;
	    t['nlinebelow'] = 0x1E49;
	    t['nmonospace'] = 0xFF4E;
	    t['nmsquare'] = 0x339A;
	    t['nnabengali'] = 0x09A3;
	    t['nnadeva'] = 0x0923;
	    t['nnagujarati'] = 0x0AA3;
	    t['nnagurmukhi'] = 0x0A23;
	    t['nnnadeva'] = 0x0929;
	    t['nohiragana'] = 0x306E;
	    t['nokatakana'] = 0x30CE;
	    t['nokatakanahalfwidth'] = 0xFF89;
	    t['nonbreakingspace'] = 0x00A0;
	    t['nonenthai'] = 0x0E13;
	    t['nonuthai'] = 0x0E19;
	    t['noonarabic'] = 0x0646;
	    t['noonfinalarabic'] = 0xFEE6;
	    t['noonghunnaarabic'] = 0x06BA;
	    t['noonghunnafinalarabic'] = 0xFB9F;
	    t['nooninitialarabic'] = 0xFEE7;
	    t['noonjeeminitialarabic'] = 0xFCD2;
	    t['noonjeemisolatedarabic'] = 0xFC4B;
	    t['noonmedialarabic'] = 0xFEE8;
	    t['noonmeeminitialarabic'] = 0xFCD5;
	    t['noonmeemisolatedarabic'] = 0xFC4E;
	    t['noonnoonfinalarabic'] = 0xFC8D;
	    t['notcontains'] = 0x220C;
	    t['notelement'] = 0x2209;
	    t['notelementof'] = 0x2209;
	    t['notequal'] = 0x2260;
	    t['notgreater'] = 0x226F;
	    t['notgreaternorequal'] = 0x2271;
	    t['notgreaternorless'] = 0x2279;
	    t['notidentical'] = 0x2262;
	    t['notless'] = 0x226E;
	    t['notlessnorequal'] = 0x2270;
	    t['notparallel'] = 0x2226;
	    t['notprecedes'] = 0x2280;
	    t['notsubset'] = 0x2284;
	    t['notsucceeds'] = 0x2281;
	    t['notsuperset'] = 0x2285;
	    t['nowarmenian'] = 0x0576;
	    t['nparen'] = 0x24A9;
	    t['nssquare'] = 0x33B1;
	    t['nsuperior'] = 0x207F;
	    t['ntilde'] = 0x00F1;
	    t['nu'] = 0x03BD;
	    t['nuhiragana'] = 0x306C;
	    t['nukatakana'] = 0x30CC;
	    t['nukatakanahalfwidth'] = 0xFF87;
	    t['nuktabengali'] = 0x09BC;
	    t['nuktadeva'] = 0x093C;
	    t['nuktagujarati'] = 0x0ABC;
	    t['nuktagurmukhi'] = 0x0A3C;
	    t['numbersign'] = 0x0023;
	    t['numbersignmonospace'] = 0xFF03;
	    t['numbersignsmall'] = 0xFE5F;
	    t['numeralsigngreek'] = 0x0374;
	    t['numeralsignlowergreek'] = 0x0375;
	    t['numero'] = 0x2116;
	    t['nun'] = 0x05E0;
	    t['nundagesh'] = 0xFB40;
	    t['nundageshhebrew'] = 0xFB40;
	    t['nunhebrew'] = 0x05E0;
	    t['nvsquare'] = 0x33B5;
	    t['nwsquare'] = 0x33BB;
	    t['nyabengali'] = 0x099E;
	    t['nyadeva'] = 0x091E;
	    t['nyagujarati'] = 0x0A9E;
	    t['nyagurmukhi'] = 0x0A1E;
	    t['o'] = 0x006F;
	    t['oacute'] = 0x00F3;
	    t['oangthai'] = 0x0E2D;
	    t['obarred'] = 0x0275;
	    t['obarredcyrillic'] = 0x04E9;
	    t['obarreddieresiscyrillic'] = 0x04EB;
	    t['obengali'] = 0x0993;
	    t['obopomofo'] = 0x311B;
	    t['obreve'] = 0x014F;
	    t['ocandradeva'] = 0x0911;
	    t['ocandragujarati'] = 0x0A91;
	    t['ocandravowelsigndeva'] = 0x0949;
	    t['ocandravowelsigngujarati'] = 0x0AC9;
	    t['ocaron'] = 0x01D2;
	    t['ocircle'] = 0x24DE;
	    t['ocircumflex'] = 0x00F4;
	    t['ocircumflexacute'] = 0x1ED1;
	    t['ocircumflexdotbelow'] = 0x1ED9;
	    t['ocircumflexgrave'] = 0x1ED3;
	    t['ocircumflexhookabove'] = 0x1ED5;
	    t['ocircumflextilde'] = 0x1ED7;
	    t['ocyrillic'] = 0x043E;
	    t['odblacute'] = 0x0151;
	    t['odblgrave'] = 0x020D;
	    t['odeva'] = 0x0913;
	    t['odieresis'] = 0x00F6;
	    t['odieresiscyrillic'] = 0x04E7;
	    t['odotbelow'] = 0x1ECD;
	    t['oe'] = 0x0153;
	    t['oekorean'] = 0x315A;
	    t['ogonek'] = 0x02DB;
	    t['ogonekcmb'] = 0x0328;
	    t['ograve'] = 0x00F2;
	    t['ogujarati'] = 0x0A93;
	    t['oharmenian'] = 0x0585;
	    t['ohiragana'] = 0x304A;
	    t['ohookabove'] = 0x1ECF;
	    t['ohorn'] = 0x01A1;
	    t['ohornacute'] = 0x1EDB;
	    t['ohorndotbelow'] = 0x1EE3;
	    t['ohorngrave'] = 0x1EDD;
	    t['ohornhookabove'] = 0x1EDF;
	    t['ohorntilde'] = 0x1EE1;
	    t['ohungarumlaut'] = 0x0151;
	    t['oi'] = 0x01A3;
	    t['oinvertedbreve'] = 0x020F;
	    t['okatakana'] = 0x30AA;
	    t['okatakanahalfwidth'] = 0xFF75;
	    t['okorean'] = 0x3157;
	    t['olehebrew'] = 0x05AB;
	    t['omacron'] = 0x014D;
	    t['omacronacute'] = 0x1E53;
	    t['omacrongrave'] = 0x1E51;
	    t['omdeva'] = 0x0950;
	    t['omega'] = 0x03C9;
	    t['omega1'] = 0x03D6;
	    t['omegacyrillic'] = 0x0461;
	    t['omegalatinclosed'] = 0x0277;
	    t['omegaroundcyrillic'] = 0x047B;
	    t['omegatitlocyrillic'] = 0x047D;
	    t['omegatonos'] = 0x03CE;
	    t['omgujarati'] = 0x0AD0;
	    t['omicron'] = 0x03BF;
	    t['omicrontonos'] = 0x03CC;
	    t['omonospace'] = 0xFF4F;
	    t['one'] = 0x0031;
	    t['onearabic'] = 0x0661;
	    t['onebengali'] = 0x09E7;
	    t['onecircle'] = 0x2460;
	    t['onecircleinversesansserif'] = 0x278A;
	    t['onedeva'] = 0x0967;
	    t['onedotenleader'] = 0x2024;
	    t['oneeighth'] = 0x215B;
	    t['onefitted'] = 0xF6DC;
	    t['onegujarati'] = 0x0AE7;
	    t['onegurmukhi'] = 0x0A67;
	    t['onehackarabic'] = 0x0661;
	    t['onehalf'] = 0x00BD;
	    t['onehangzhou'] = 0x3021;
	    t['oneideographicparen'] = 0x3220;
	    t['oneinferior'] = 0x2081;
	    t['onemonospace'] = 0xFF11;
	    t['onenumeratorbengali'] = 0x09F4;
	    t['oneoldstyle'] = 0xF731;
	    t['oneparen'] = 0x2474;
	    t['oneperiod'] = 0x2488;
	    t['onepersian'] = 0x06F1;
	    t['onequarter'] = 0x00BC;
	    t['oneroman'] = 0x2170;
	    t['onesuperior'] = 0x00B9;
	    t['onethai'] = 0x0E51;
	    t['onethird'] = 0x2153;
	    t['oogonek'] = 0x01EB;
	    t['oogonekmacron'] = 0x01ED;
	    t['oogurmukhi'] = 0x0A13;
	    t['oomatragurmukhi'] = 0x0A4B;
	    t['oopen'] = 0x0254;
	    t['oparen'] = 0x24AA;
	    t['openbullet'] = 0x25E6;
	    t['option'] = 0x2325;
	    t['ordfeminine'] = 0x00AA;
	    t['ordmasculine'] = 0x00BA;
	    t['orthogonal'] = 0x221F;
	    t['oshortdeva'] = 0x0912;
	    t['oshortvowelsigndeva'] = 0x094A;
	    t['oslash'] = 0x00F8;
	    t['oslashacute'] = 0x01FF;
	    t['osmallhiragana'] = 0x3049;
	    t['osmallkatakana'] = 0x30A9;
	    t['osmallkatakanahalfwidth'] = 0xFF6B;
	    t['ostrokeacute'] = 0x01FF;
	    t['osuperior'] = 0xF6F0;
	    t['otcyrillic'] = 0x047F;
	    t['otilde'] = 0x00F5;
	    t['otildeacute'] = 0x1E4D;
	    t['otildedieresis'] = 0x1E4F;
	    t['oubopomofo'] = 0x3121;
	    t['overline'] = 0x203E;
	    t['overlinecenterline'] = 0xFE4A;
	    t['overlinecmb'] = 0x0305;
	    t['overlinedashed'] = 0xFE49;
	    t['overlinedblwavy'] = 0xFE4C;
	    t['overlinewavy'] = 0xFE4B;
	    t['overscore'] = 0x00AF;
	    t['ovowelsignbengali'] = 0x09CB;
	    t['ovowelsigndeva'] = 0x094B;
	    t['ovowelsigngujarati'] = 0x0ACB;
	    t['p'] = 0x0070;
	    t['paampssquare'] = 0x3380;
	    t['paasentosquare'] = 0x332B;
	    t['pabengali'] = 0x09AA;
	    t['pacute'] = 0x1E55;
	    t['padeva'] = 0x092A;
	    t['pagedown'] = 0x21DF;
	    t['pageup'] = 0x21DE;
	    t['pagujarati'] = 0x0AAA;
	    t['pagurmukhi'] = 0x0A2A;
	    t['pahiragana'] = 0x3071;
	    t['paiyannoithai'] = 0x0E2F;
	    t['pakatakana'] = 0x30D1;
	    t['palatalizationcyrilliccmb'] = 0x0484;
	    t['palochkacyrillic'] = 0x04C0;
	    t['pansioskorean'] = 0x317F;
	    t['paragraph'] = 0x00B6;
	    t['parallel'] = 0x2225;
	    t['parenleft'] = 0x0028;
	    t['parenleftaltonearabic'] = 0xFD3E;
	    t['parenleftbt'] = 0xF8ED;
	    t['parenleftex'] = 0xF8EC;
	    t['parenleftinferior'] = 0x208D;
	    t['parenleftmonospace'] = 0xFF08;
	    t['parenleftsmall'] = 0xFE59;
	    t['parenleftsuperior'] = 0x207D;
	    t['parenlefttp'] = 0xF8EB;
	    t['parenleftvertical'] = 0xFE35;
	    t['parenright'] = 0x0029;
	    t['parenrightaltonearabic'] = 0xFD3F;
	    t['parenrightbt'] = 0xF8F8;
	    t['parenrightex'] = 0xF8F7;
	    t['parenrightinferior'] = 0x208E;
	    t['parenrightmonospace'] = 0xFF09;
	    t['parenrightsmall'] = 0xFE5A;
	    t['parenrightsuperior'] = 0x207E;
	    t['parenrighttp'] = 0xF8F6;
	    t['parenrightvertical'] = 0xFE36;
	    t['partialdiff'] = 0x2202;
	    t['paseqhebrew'] = 0x05C0;
	    t['pashtahebrew'] = 0x0599;
	    t['pasquare'] = 0x33A9;
	    t['patah'] = 0x05B7;
	    t['patah11'] = 0x05B7;
	    t['patah1d'] = 0x05B7;
	    t['patah2a'] = 0x05B7;
	    t['patahhebrew'] = 0x05B7;
	    t['patahnarrowhebrew'] = 0x05B7;
	    t['patahquarterhebrew'] = 0x05B7;
	    t['patahwidehebrew'] = 0x05B7;
	    t['pazerhebrew'] = 0x05A1;
	    t['pbopomofo'] = 0x3106;
	    t['pcircle'] = 0x24DF;
	    t['pdotaccent'] = 0x1E57;
	    t['pe'] = 0x05E4;
	    t['pecyrillic'] = 0x043F;
	    t['pedagesh'] = 0xFB44;
	    t['pedageshhebrew'] = 0xFB44;
	    t['peezisquare'] = 0x333B;
	    t['pefinaldageshhebrew'] = 0xFB43;
	    t['peharabic'] = 0x067E;
	    t['peharmenian'] = 0x057A;
	    t['pehebrew'] = 0x05E4;
	    t['pehfinalarabic'] = 0xFB57;
	    t['pehinitialarabic'] = 0xFB58;
	    t['pehiragana'] = 0x307A;
	    t['pehmedialarabic'] = 0xFB59;
	    t['pekatakana'] = 0x30DA;
	    t['pemiddlehookcyrillic'] = 0x04A7;
	    t['perafehebrew'] = 0xFB4E;
	    t['percent'] = 0x0025;
	    t['percentarabic'] = 0x066A;
	    t['percentmonospace'] = 0xFF05;
	    t['percentsmall'] = 0xFE6A;
	    t['period'] = 0x002E;
	    t['periodarmenian'] = 0x0589;
	    t['periodcentered'] = 0x00B7;
	    t['periodhalfwidth'] = 0xFF61;
	    t['periodinferior'] = 0xF6E7;
	    t['periodmonospace'] = 0xFF0E;
	    t['periodsmall'] = 0xFE52;
	    t['periodsuperior'] = 0xF6E8;
	    t['perispomenigreekcmb'] = 0x0342;
	    t['perpendicular'] = 0x22A5;
	    t['perthousand'] = 0x2030;
	    t['peseta'] = 0x20A7;
	    t['pfsquare'] = 0x338A;
	    t['phabengali'] = 0x09AB;
	    t['phadeva'] = 0x092B;
	    t['phagujarati'] = 0x0AAB;
	    t['phagurmukhi'] = 0x0A2B;
	    t['phi'] = 0x03C6;
	    t['phi1'] = 0x03D5;
	    t['phieuphacirclekorean'] = 0x327A;
	    t['phieuphaparenkorean'] = 0x321A;
	    t['phieuphcirclekorean'] = 0x326C;
	    t['phieuphkorean'] = 0x314D;
	    t['phieuphparenkorean'] = 0x320C;
	    t['philatin'] = 0x0278;
	    t['phinthuthai'] = 0x0E3A;
	    t['phisymbolgreek'] = 0x03D5;
	    t['phook'] = 0x01A5;
	    t['phophanthai'] = 0x0E1E;
	    t['phophungthai'] = 0x0E1C;
	    t['phosamphaothai'] = 0x0E20;
	    t['pi'] = 0x03C0;
	    t['pieupacirclekorean'] = 0x3273;
	    t['pieupaparenkorean'] = 0x3213;
	    t['pieupcieuckorean'] = 0x3176;
	    t['pieupcirclekorean'] = 0x3265;
	    t['pieupkiyeokkorean'] = 0x3172;
	    t['pieupkorean'] = 0x3142;
	    t['pieupparenkorean'] = 0x3205;
	    t['pieupsioskiyeokkorean'] = 0x3174;
	    t['pieupsioskorean'] = 0x3144;
	    t['pieupsiostikeutkorean'] = 0x3175;
	    t['pieupthieuthkorean'] = 0x3177;
	    t['pieuptikeutkorean'] = 0x3173;
	    t['pihiragana'] = 0x3074;
	    t['pikatakana'] = 0x30D4;
	    t['pisymbolgreek'] = 0x03D6;
	    t['piwrarmenian'] = 0x0583;
	    t['plus'] = 0x002B;
	    t['plusbelowcmb'] = 0x031F;
	    t['pluscircle'] = 0x2295;
	    t['plusminus'] = 0x00B1;
	    t['plusmod'] = 0x02D6;
	    t['plusmonospace'] = 0xFF0B;
	    t['plussmall'] = 0xFE62;
	    t['plussuperior'] = 0x207A;
	    t['pmonospace'] = 0xFF50;
	    t['pmsquare'] = 0x33D8;
	    t['pohiragana'] = 0x307D;
	    t['pointingindexdownwhite'] = 0x261F;
	    t['pointingindexleftwhite'] = 0x261C;
	    t['pointingindexrightwhite'] = 0x261E;
	    t['pointingindexupwhite'] = 0x261D;
	    t['pokatakana'] = 0x30DD;
	    t['poplathai'] = 0x0E1B;
	    t['postalmark'] = 0x3012;
	    t['postalmarkface'] = 0x3020;
	    t['pparen'] = 0x24AB;
	    t['precedes'] = 0x227A;
	    t['prescription'] = 0x211E;
	    t['primemod'] = 0x02B9;
	    t['primereversed'] = 0x2035;
	    t['product'] = 0x220F;
	    t['projective'] = 0x2305;
	    t['prolongedkana'] = 0x30FC;
	    t['propellor'] = 0x2318;
	    t['propersubset'] = 0x2282;
	    t['propersuperset'] = 0x2283;
	    t['proportion'] = 0x2237;
	    t['proportional'] = 0x221D;
	    t['psi'] = 0x03C8;
	    t['psicyrillic'] = 0x0471;
	    t['psilipneumatacyrilliccmb'] = 0x0486;
	    t['pssquare'] = 0x33B0;
	    t['puhiragana'] = 0x3077;
	    t['pukatakana'] = 0x30D7;
	    t['pvsquare'] = 0x33B4;
	    t['pwsquare'] = 0x33BA;
	    t['q'] = 0x0071;
	    t['qadeva'] = 0x0958;
	    t['qadmahebrew'] = 0x05A8;
	    t['qafarabic'] = 0x0642;
	    t['qaffinalarabic'] = 0xFED6;
	    t['qafinitialarabic'] = 0xFED7;
	    t['qafmedialarabic'] = 0xFED8;
	    t['qamats'] = 0x05B8;
	    t['qamats10'] = 0x05B8;
	    t['qamats1a'] = 0x05B8;
	    t['qamats1c'] = 0x05B8;
	    t['qamats27'] = 0x05B8;
	    t['qamats29'] = 0x05B8;
	    t['qamats33'] = 0x05B8;
	    t['qamatsde'] = 0x05B8;
	    t['qamatshebrew'] = 0x05B8;
	    t['qamatsnarrowhebrew'] = 0x05B8;
	    t['qamatsqatanhebrew'] = 0x05B8;
	    t['qamatsqatannarrowhebrew'] = 0x05B8;
	    t['qamatsqatanquarterhebrew'] = 0x05B8;
	    t['qamatsqatanwidehebrew'] = 0x05B8;
	    t['qamatsquarterhebrew'] = 0x05B8;
	    t['qamatswidehebrew'] = 0x05B8;
	    t['qarneyparahebrew'] = 0x059F;
	    t['qbopomofo'] = 0x3111;
	    t['qcircle'] = 0x24E0;
	    t['qhook'] = 0x02A0;
	    t['qmonospace'] = 0xFF51;
	    t['qof'] = 0x05E7;
	    t['qofdagesh'] = 0xFB47;
	    t['qofdageshhebrew'] = 0xFB47;
	    t['qofhebrew'] = 0x05E7;
	    t['qparen'] = 0x24AC;
	    t['quarternote'] = 0x2669;
	    t['qubuts'] = 0x05BB;
	    t['qubuts18'] = 0x05BB;
	    t['qubuts25'] = 0x05BB;
	    t['qubuts31'] = 0x05BB;
	    t['qubutshebrew'] = 0x05BB;
	    t['qubutsnarrowhebrew'] = 0x05BB;
	    t['qubutsquarterhebrew'] = 0x05BB;
	    t['qubutswidehebrew'] = 0x05BB;
	    t['question'] = 0x003F;
	    t['questionarabic'] = 0x061F;
	    t['questionarmenian'] = 0x055E;
	    t['questiondown'] = 0x00BF;
	    t['questiondownsmall'] = 0xF7BF;
	    t['questiongreek'] = 0x037E;
	    t['questionmonospace'] = 0xFF1F;
	    t['questionsmall'] = 0xF73F;
	    t['quotedbl'] = 0x0022;
	    t['quotedblbase'] = 0x201E;
	    t['quotedblleft'] = 0x201C;
	    t['quotedblmonospace'] = 0xFF02;
	    t['quotedblprime'] = 0x301E;
	    t['quotedblprimereversed'] = 0x301D;
	    t['quotedblright'] = 0x201D;
	    t['quoteleft'] = 0x2018;
	    t['quoteleftreversed'] = 0x201B;
	    t['quotereversed'] = 0x201B;
	    t['quoteright'] = 0x2019;
	    t['quoterightn'] = 0x0149;
	    t['quotesinglbase'] = 0x201A;
	    t['quotesingle'] = 0x0027;
	    t['quotesinglemonospace'] = 0xFF07;
	    t['r'] = 0x0072;
	    t['raarmenian'] = 0x057C;
	    t['rabengali'] = 0x09B0;
	    t['racute'] = 0x0155;
	    t['radeva'] = 0x0930;
	    t['radical'] = 0x221A;
	    t['radicalex'] = 0xF8E5;
	    t['radoverssquare'] = 0x33AE;
	    t['radoverssquaredsquare'] = 0x33AF;
	    t['radsquare'] = 0x33AD;
	    t['rafe'] = 0x05BF;
	    t['rafehebrew'] = 0x05BF;
	    t['ragujarati'] = 0x0AB0;
	    t['ragurmukhi'] = 0x0A30;
	    t['rahiragana'] = 0x3089;
	    t['rakatakana'] = 0x30E9;
	    t['rakatakanahalfwidth'] = 0xFF97;
	    t['ralowerdiagonalbengali'] = 0x09F1;
	    t['ramiddlediagonalbengali'] = 0x09F0;
	    t['ramshorn'] = 0x0264;
	    t['ratio'] = 0x2236;
	    t['rbopomofo'] = 0x3116;
	    t['rcaron'] = 0x0159;
	    t['rcedilla'] = 0x0157;
	    t['rcircle'] = 0x24E1;
	    t['rcommaaccent'] = 0x0157;
	    t['rdblgrave'] = 0x0211;
	    t['rdotaccent'] = 0x1E59;
	    t['rdotbelow'] = 0x1E5B;
	    t['rdotbelowmacron'] = 0x1E5D;
	    t['referencemark'] = 0x203B;
	    t['reflexsubset'] = 0x2286;
	    t['reflexsuperset'] = 0x2287;
	    t['registered'] = 0x00AE;
	    t['registersans'] = 0xF8E8;
	    t['registerserif'] = 0xF6DA;
	    t['reharabic'] = 0x0631;
	    t['reharmenian'] = 0x0580;
	    t['rehfinalarabic'] = 0xFEAE;
	    t['rehiragana'] = 0x308C;
	    t['rekatakana'] = 0x30EC;
	    t['rekatakanahalfwidth'] = 0xFF9A;
	    t['resh'] = 0x05E8;
	    t['reshdageshhebrew'] = 0xFB48;
	    t['reshhebrew'] = 0x05E8;
	    t['reversedtilde'] = 0x223D;
	    t['reviahebrew'] = 0x0597;
	    t['reviamugrashhebrew'] = 0x0597;
	    t['revlogicalnot'] = 0x2310;
	    t['rfishhook'] = 0x027E;
	    t['rfishhookreversed'] = 0x027F;
	    t['rhabengali'] = 0x09DD;
	    t['rhadeva'] = 0x095D;
	    t['rho'] = 0x03C1;
	    t['rhook'] = 0x027D;
	    t['rhookturned'] = 0x027B;
	    t['rhookturnedsuperior'] = 0x02B5;
	    t['rhosymbolgreek'] = 0x03F1;
	    t['rhotichookmod'] = 0x02DE;
	    t['rieulacirclekorean'] = 0x3271;
	    t['rieulaparenkorean'] = 0x3211;
	    t['rieulcirclekorean'] = 0x3263;
	    t['rieulhieuhkorean'] = 0x3140;
	    t['rieulkiyeokkorean'] = 0x313A;
	    t['rieulkiyeoksioskorean'] = 0x3169;
	    t['rieulkorean'] = 0x3139;
	    t['rieulmieumkorean'] = 0x313B;
	    t['rieulpansioskorean'] = 0x316C;
	    t['rieulparenkorean'] = 0x3203;
	    t['rieulphieuphkorean'] = 0x313F;
	    t['rieulpieupkorean'] = 0x313C;
	    t['rieulpieupsioskorean'] = 0x316B;
	    t['rieulsioskorean'] = 0x313D;
	    t['rieulthieuthkorean'] = 0x313E;
	    t['rieultikeutkorean'] = 0x316A;
	    t['rieulyeorinhieuhkorean'] = 0x316D;
	    t['rightangle'] = 0x221F;
	    t['righttackbelowcmb'] = 0x0319;
	    t['righttriangle'] = 0x22BF;
	    t['rihiragana'] = 0x308A;
	    t['rikatakana'] = 0x30EA;
	    t['rikatakanahalfwidth'] = 0xFF98;
	    t['ring'] = 0x02DA;
	    t['ringbelowcmb'] = 0x0325;
	    t['ringcmb'] = 0x030A;
	    t['ringhalfleft'] = 0x02BF;
	    t['ringhalfleftarmenian'] = 0x0559;
	    t['ringhalfleftbelowcmb'] = 0x031C;
	    t['ringhalfleftcentered'] = 0x02D3;
	    t['ringhalfright'] = 0x02BE;
	    t['ringhalfrightbelowcmb'] = 0x0339;
	    t['ringhalfrightcentered'] = 0x02D2;
	    t['rinvertedbreve'] = 0x0213;
	    t['rittorusquare'] = 0x3351;
	    t['rlinebelow'] = 0x1E5F;
	    t['rlongleg'] = 0x027C;
	    t['rlonglegturned'] = 0x027A;
	    t['rmonospace'] = 0xFF52;
	    t['rohiragana'] = 0x308D;
	    t['rokatakana'] = 0x30ED;
	    t['rokatakanahalfwidth'] = 0xFF9B;
	    t['roruathai'] = 0x0E23;
	    t['rparen'] = 0x24AD;
	    t['rrabengali'] = 0x09DC;
	    t['rradeva'] = 0x0931;
	    t['rragurmukhi'] = 0x0A5C;
	    t['rreharabic'] = 0x0691;
	    t['rrehfinalarabic'] = 0xFB8D;
	    t['rrvocalicbengali'] = 0x09E0;
	    t['rrvocalicdeva'] = 0x0960;
	    t['rrvocalicgujarati'] = 0x0AE0;
	    t['rrvocalicvowelsignbengali'] = 0x09C4;
	    t['rrvocalicvowelsigndeva'] = 0x0944;
	    t['rrvocalicvowelsigngujarati'] = 0x0AC4;
	    t['rsuperior'] = 0xF6F1;
	    t['rtblock'] = 0x2590;
	    t['rturned'] = 0x0279;
	    t['rturnedsuperior'] = 0x02B4;
	    t['ruhiragana'] = 0x308B;
	    t['rukatakana'] = 0x30EB;
	    t['rukatakanahalfwidth'] = 0xFF99;
	    t['rupeemarkbengali'] = 0x09F2;
	    t['rupeesignbengali'] = 0x09F3;
	    t['rupiah'] = 0xF6DD;
	    t['ruthai'] = 0x0E24;
	    t['rvocalicbengali'] = 0x098B;
	    t['rvocalicdeva'] = 0x090B;
	    t['rvocalicgujarati'] = 0x0A8B;
	    t['rvocalicvowelsignbengali'] = 0x09C3;
	    t['rvocalicvowelsigndeva'] = 0x0943;
	    t['rvocalicvowelsigngujarati'] = 0x0AC3;
	    t['s'] = 0x0073;
	    t['sabengali'] = 0x09B8;
	    t['sacute'] = 0x015B;
	    t['sacutedotaccent'] = 0x1E65;
	    t['sadarabic'] = 0x0635;
	    t['sadeva'] = 0x0938;
	    t['sadfinalarabic'] = 0xFEBA;
	    t['sadinitialarabic'] = 0xFEBB;
	    t['sadmedialarabic'] = 0xFEBC;
	    t['sagujarati'] = 0x0AB8;
	    t['sagurmukhi'] = 0x0A38;
	    t['sahiragana'] = 0x3055;
	    t['sakatakana'] = 0x30B5;
	    t['sakatakanahalfwidth'] = 0xFF7B;
	    t['sallallahoualayhewasallamarabic'] = 0xFDFA;
	    t['samekh'] = 0x05E1;
	    t['samekhdagesh'] = 0xFB41;
	    t['samekhdageshhebrew'] = 0xFB41;
	    t['samekhhebrew'] = 0x05E1;
	    t['saraaathai'] = 0x0E32;
	    t['saraaethai'] = 0x0E41;
	    t['saraaimaimalaithai'] = 0x0E44;
	    t['saraaimaimuanthai'] = 0x0E43;
	    t['saraamthai'] = 0x0E33;
	    t['saraathai'] = 0x0E30;
	    t['saraethai'] = 0x0E40;
	    t['saraiileftthai'] = 0xF886;
	    t['saraiithai'] = 0x0E35;
	    t['saraileftthai'] = 0xF885;
	    t['saraithai'] = 0x0E34;
	    t['saraothai'] = 0x0E42;
	    t['saraueeleftthai'] = 0xF888;
	    t['saraueethai'] = 0x0E37;
	    t['saraueleftthai'] = 0xF887;
	    t['sarauethai'] = 0x0E36;
	    t['sarauthai'] = 0x0E38;
	    t['sarauuthai'] = 0x0E39;
	    t['sbopomofo'] = 0x3119;
	    t['scaron'] = 0x0161;
	    t['scarondotaccent'] = 0x1E67;
	    t['scedilla'] = 0x015F;
	    t['schwa'] = 0x0259;
	    t['schwacyrillic'] = 0x04D9;
	    t['schwadieresiscyrillic'] = 0x04DB;
	    t['schwahook'] = 0x025A;
	    t['scircle'] = 0x24E2;
	    t['scircumflex'] = 0x015D;
	    t['scommaaccent'] = 0x0219;
	    t['sdotaccent'] = 0x1E61;
	    t['sdotbelow'] = 0x1E63;
	    t['sdotbelowdotaccent'] = 0x1E69;
	    t['seagullbelowcmb'] = 0x033C;
	    t['second'] = 0x2033;
	    t['secondtonechinese'] = 0x02CA;
	    t['section'] = 0x00A7;
	    t['seenarabic'] = 0x0633;
	    t['seenfinalarabic'] = 0xFEB2;
	    t['seeninitialarabic'] = 0xFEB3;
	    t['seenmedialarabic'] = 0xFEB4;
	    t['segol'] = 0x05B6;
	    t['segol13'] = 0x05B6;
	    t['segol1f'] = 0x05B6;
	    t['segol2c'] = 0x05B6;
	    t['segolhebrew'] = 0x05B6;
	    t['segolnarrowhebrew'] = 0x05B6;
	    t['segolquarterhebrew'] = 0x05B6;
	    t['segoltahebrew'] = 0x0592;
	    t['segolwidehebrew'] = 0x05B6;
	    t['seharmenian'] = 0x057D;
	    t['sehiragana'] = 0x305B;
	    t['sekatakana'] = 0x30BB;
	    t['sekatakanahalfwidth'] = 0xFF7E;
	    t['semicolon'] = 0x003B;
	    t['semicolonarabic'] = 0x061B;
	    t['semicolonmonospace'] = 0xFF1B;
	    t['semicolonsmall'] = 0xFE54;
	    t['semivoicedmarkkana'] = 0x309C;
	    t['semivoicedmarkkanahalfwidth'] = 0xFF9F;
	    t['sentisquare'] = 0x3322;
	    t['sentosquare'] = 0x3323;
	    t['seven'] = 0x0037;
	    t['sevenarabic'] = 0x0667;
	    t['sevenbengali'] = 0x09ED;
	    t['sevencircle'] = 0x2466;
	    t['sevencircleinversesansserif'] = 0x2790;
	    t['sevendeva'] = 0x096D;
	    t['seveneighths'] = 0x215E;
	    t['sevengujarati'] = 0x0AED;
	    t['sevengurmukhi'] = 0x0A6D;
	    t['sevenhackarabic'] = 0x0667;
	    t['sevenhangzhou'] = 0x3027;
	    t['sevenideographicparen'] = 0x3226;
	    t['seveninferior'] = 0x2087;
	    t['sevenmonospace'] = 0xFF17;
	    t['sevenoldstyle'] = 0xF737;
	    t['sevenparen'] = 0x247A;
	    t['sevenperiod'] = 0x248E;
	    t['sevenpersian'] = 0x06F7;
	    t['sevenroman'] = 0x2176;
	    t['sevensuperior'] = 0x2077;
	    t['seventeencircle'] = 0x2470;
	    t['seventeenparen'] = 0x2484;
	    t['seventeenperiod'] = 0x2498;
	    t['seventhai'] = 0x0E57;
	    t['sfthyphen'] = 0x00AD;
	    t['shaarmenian'] = 0x0577;
	    t['shabengali'] = 0x09B6;
	    t['shacyrillic'] = 0x0448;
	    t['shaddaarabic'] = 0x0651;
	    t['shaddadammaarabic'] = 0xFC61;
	    t['shaddadammatanarabic'] = 0xFC5E;
	    t['shaddafathaarabic'] = 0xFC60;
	    t['shaddakasraarabic'] = 0xFC62;
	    t['shaddakasratanarabic'] = 0xFC5F;
	    t['shade'] = 0x2592;
	    t['shadedark'] = 0x2593;
	    t['shadelight'] = 0x2591;
	    t['shademedium'] = 0x2592;
	    t['shadeva'] = 0x0936;
	    t['shagujarati'] = 0x0AB6;
	    t['shagurmukhi'] = 0x0A36;
	    t['shalshelethebrew'] = 0x0593;
	    t['shbopomofo'] = 0x3115;
	    t['shchacyrillic'] = 0x0449;
	    t['sheenarabic'] = 0x0634;
	    t['sheenfinalarabic'] = 0xFEB6;
	    t['sheeninitialarabic'] = 0xFEB7;
	    t['sheenmedialarabic'] = 0xFEB8;
	    t['sheicoptic'] = 0x03E3;
	    t['sheqel'] = 0x20AA;
	    t['sheqelhebrew'] = 0x20AA;
	    t['sheva'] = 0x05B0;
	    t['sheva115'] = 0x05B0;
	    t['sheva15'] = 0x05B0;
	    t['sheva22'] = 0x05B0;
	    t['sheva2e'] = 0x05B0;
	    t['shevahebrew'] = 0x05B0;
	    t['shevanarrowhebrew'] = 0x05B0;
	    t['shevaquarterhebrew'] = 0x05B0;
	    t['shevawidehebrew'] = 0x05B0;
	    t['shhacyrillic'] = 0x04BB;
	    t['shimacoptic'] = 0x03ED;
	    t['shin'] = 0x05E9;
	    t['shindagesh'] = 0xFB49;
	    t['shindageshhebrew'] = 0xFB49;
	    t['shindageshshindot'] = 0xFB2C;
	    t['shindageshshindothebrew'] = 0xFB2C;
	    t['shindageshsindot'] = 0xFB2D;
	    t['shindageshsindothebrew'] = 0xFB2D;
	    t['shindothebrew'] = 0x05C1;
	    t['shinhebrew'] = 0x05E9;
	    t['shinshindot'] = 0xFB2A;
	    t['shinshindothebrew'] = 0xFB2A;
	    t['shinsindot'] = 0xFB2B;
	    t['shinsindothebrew'] = 0xFB2B;
	    t['shook'] = 0x0282;
	    t['sigma'] = 0x03C3;
	    t['sigma1'] = 0x03C2;
	    t['sigmafinal'] = 0x03C2;
	    t['sigmalunatesymbolgreek'] = 0x03F2;
	    t['sihiragana'] = 0x3057;
	    t['sikatakana'] = 0x30B7;
	    t['sikatakanahalfwidth'] = 0xFF7C;
	    t['siluqhebrew'] = 0x05BD;
	    t['siluqlefthebrew'] = 0x05BD;
	    t['similar'] = 0x223C;
	    t['sindothebrew'] = 0x05C2;
	    t['siosacirclekorean'] = 0x3274;
	    t['siosaparenkorean'] = 0x3214;
	    t['sioscieuckorean'] = 0x317E;
	    t['sioscirclekorean'] = 0x3266;
	    t['sioskiyeokkorean'] = 0x317A;
	    t['sioskorean'] = 0x3145;
	    t['siosnieunkorean'] = 0x317B;
	    t['siosparenkorean'] = 0x3206;
	    t['siospieupkorean'] = 0x317D;
	    t['siostikeutkorean'] = 0x317C;
	    t['six'] = 0x0036;
	    t['sixarabic'] = 0x0666;
	    t['sixbengali'] = 0x09EC;
	    t['sixcircle'] = 0x2465;
	    t['sixcircleinversesansserif'] = 0x278F;
	    t['sixdeva'] = 0x096C;
	    t['sixgujarati'] = 0x0AEC;
	    t['sixgurmukhi'] = 0x0A6C;
	    t['sixhackarabic'] = 0x0666;
	    t['sixhangzhou'] = 0x3026;
	    t['sixideographicparen'] = 0x3225;
	    t['sixinferior'] = 0x2086;
	    t['sixmonospace'] = 0xFF16;
	    t['sixoldstyle'] = 0xF736;
	    t['sixparen'] = 0x2479;
	    t['sixperiod'] = 0x248D;
	    t['sixpersian'] = 0x06F6;
	    t['sixroman'] = 0x2175;
	    t['sixsuperior'] = 0x2076;
	    t['sixteencircle'] = 0x246F;
	    t['sixteencurrencydenominatorbengali'] = 0x09F9;
	    t['sixteenparen'] = 0x2483;
	    t['sixteenperiod'] = 0x2497;
	    t['sixthai'] = 0x0E56;
	    t['slash'] = 0x002F;
	    t['slashmonospace'] = 0xFF0F;
	    t['slong'] = 0x017F;
	    t['slongdotaccent'] = 0x1E9B;
	    t['smileface'] = 0x263A;
	    t['smonospace'] = 0xFF53;
	    t['sofpasuqhebrew'] = 0x05C3;
	    t['softhyphen'] = 0x00AD;
	    t['softsigncyrillic'] = 0x044C;
	    t['sohiragana'] = 0x305D;
	    t['sokatakana'] = 0x30BD;
	    t['sokatakanahalfwidth'] = 0xFF7F;
	    t['soliduslongoverlaycmb'] = 0x0338;
	    t['solidusshortoverlaycmb'] = 0x0337;
	    t['sorusithai'] = 0x0E29;
	    t['sosalathai'] = 0x0E28;
	    t['sosothai'] = 0x0E0B;
	    t['sosuathai'] = 0x0E2A;
	    t['space'] = 0x0020;
	    t['spacehackarabic'] = 0x0020;
	    t['spade'] = 0x2660;
	    t['spadesuitblack'] = 0x2660;
	    t['spadesuitwhite'] = 0x2664;
	    t['sparen'] = 0x24AE;
	    t['squarebelowcmb'] = 0x033B;
	    t['squarecc'] = 0x33C4;
	    t['squarecm'] = 0x339D;
	    t['squarediagonalcrosshatchfill'] = 0x25A9;
	    t['squarehorizontalfill'] = 0x25A4;
	    t['squarekg'] = 0x338F;
	    t['squarekm'] = 0x339E;
	    t['squarekmcapital'] = 0x33CE;
	    t['squareln'] = 0x33D1;
	    t['squarelog'] = 0x33D2;
	    t['squaremg'] = 0x338E;
	    t['squaremil'] = 0x33D5;
	    t['squaremm'] = 0x339C;
	    t['squaremsquared'] = 0x33A1;
	    t['squareorthogonalcrosshatchfill'] = 0x25A6;
	    t['squareupperlefttolowerrightfill'] = 0x25A7;
	    t['squareupperrighttolowerleftfill'] = 0x25A8;
	    t['squareverticalfill'] = 0x25A5;
	    t['squarewhitewithsmallblack'] = 0x25A3;
	    t['srsquare'] = 0x33DB;
	    t['ssabengali'] = 0x09B7;
	    t['ssadeva'] = 0x0937;
	    t['ssagujarati'] = 0x0AB7;
	    t['ssangcieuckorean'] = 0x3149;
	    t['ssanghieuhkorean'] = 0x3185;
	    t['ssangieungkorean'] = 0x3180;
	    t['ssangkiyeokkorean'] = 0x3132;
	    t['ssangnieunkorean'] = 0x3165;
	    t['ssangpieupkorean'] = 0x3143;
	    t['ssangsioskorean'] = 0x3146;
	    t['ssangtikeutkorean'] = 0x3138;
	    t['ssuperior'] = 0xF6F2;
	    t['sterling'] = 0x00A3;
	    t['sterlingmonospace'] = 0xFFE1;
	    t['strokelongoverlaycmb'] = 0x0336;
	    t['strokeshortoverlaycmb'] = 0x0335;
	    t['subset'] = 0x2282;
	    t['subsetnotequal'] = 0x228A;
	    t['subsetorequal'] = 0x2286;
	    t['succeeds'] = 0x227B;
	    t['suchthat'] = 0x220B;
	    t['suhiragana'] = 0x3059;
	    t['sukatakana'] = 0x30B9;
	    t['sukatakanahalfwidth'] = 0xFF7D;
	    t['sukunarabic'] = 0x0652;
	    t['summation'] = 0x2211;
	    t['sun'] = 0x263C;
	    t['superset'] = 0x2283;
	    t['supersetnotequal'] = 0x228B;
	    t['supersetorequal'] = 0x2287;
	    t['svsquare'] = 0x33DC;
	    t['syouwaerasquare'] = 0x337C;
	    t['t'] = 0x0074;
	    t['tabengali'] = 0x09A4;
	    t['tackdown'] = 0x22A4;
	    t['tackleft'] = 0x22A3;
	    t['tadeva'] = 0x0924;
	    t['tagujarati'] = 0x0AA4;
	    t['tagurmukhi'] = 0x0A24;
	    t['taharabic'] = 0x0637;
	    t['tahfinalarabic'] = 0xFEC2;
	    t['tahinitialarabic'] = 0xFEC3;
	    t['tahiragana'] = 0x305F;
	    t['tahmedialarabic'] = 0xFEC4;
	    t['taisyouerasquare'] = 0x337D;
	    t['takatakana'] = 0x30BF;
	    t['takatakanahalfwidth'] = 0xFF80;
	    t['tatweelarabic'] = 0x0640;
	    t['tau'] = 0x03C4;
	    t['tav'] = 0x05EA;
	    t['tavdages'] = 0xFB4A;
	    t['tavdagesh'] = 0xFB4A;
	    t['tavdageshhebrew'] = 0xFB4A;
	    t['tavhebrew'] = 0x05EA;
	    t['tbar'] = 0x0167;
	    t['tbopomofo'] = 0x310A;
	    t['tcaron'] = 0x0165;
	    t['tccurl'] = 0x02A8;
	    t['tcedilla'] = 0x0163;
	    t['tcheharabic'] = 0x0686;
	    t['tchehfinalarabic'] = 0xFB7B;
	    t['tchehinitialarabic'] = 0xFB7C;
	    t['tchehmedialarabic'] = 0xFB7D;
	    t['tcircle'] = 0x24E3;
	    t['tcircumflexbelow'] = 0x1E71;
	    t['tcommaaccent'] = 0x0163;
	    t['tdieresis'] = 0x1E97;
	    t['tdotaccent'] = 0x1E6B;
	    t['tdotbelow'] = 0x1E6D;
	    t['tecyrillic'] = 0x0442;
	    t['tedescendercyrillic'] = 0x04AD;
	    t['teharabic'] = 0x062A;
	    t['tehfinalarabic'] = 0xFE96;
	    t['tehhahinitialarabic'] = 0xFCA2;
	    t['tehhahisolatedarabic'] = 0xFC0C;
	    t['tehinitialarabic'] = 0xFE97;
	    t['tehiragana'] = 0x3066;
	    t['tehjeeminitialarabic'] = 0xFCA1;
	    t['tehjeemisolatedarabic'] = 0xFC0B;
	    t['tehmarbutaarabic'] = 0x0629;
	    t['tehmarbutafinalarabic'] = 0xFE94;
	    t['tehmedialarabic'] = 0xFE98;
	    t['tehmeeminitialarabic'] = 0xFCA4;
	    t['tehmeemisolatedarabic'] = 0xFC0E;
	    t['tehnoonfinalarabic'] = 0xFC73;
	    t['tekatakana'] = 0x30C6;
	    t['tekatakanahalfwidth'] = 0xFF83;
	    t['telephone'] = 0x2121;
	    t['telephoneblack'] = 0x260E;
	    t['telishagedolahebrew'] = 0x05A0;
	    t['telishaqetanahebrew'] = 0x05A9;
	    t['tencircle'] = 0x2469;
	    t['tenideographicparen'] = 0x3229;
	    t['tenparen'] = 0x247D;
	    t['tenperiod'] = 0x2491;
	    t['tenroman'] = 0x2179;
	    t['tesh'] = 0x02A7;
	    t['tet'] = 0x05D8;
	    t['tetdagesh'] = 0xFB38;
	    t['tetdageshhebrew'] = 0xFB38;
	    t['tethebrew'] = 0x05D8;
	    t['tetsecyrillic'] = 0x04B5;
	    t['tevirhebrew'] = 0x059B;
	    t['tevirlefthebrew'] = 0x059B;
	    t['thabengali'] = 0x09A5;
	    t['thadeva'] = 0x0925;
	    t['thagujarati'] = 0x0AA5;
	    t['thagurmukhi'] = 0x0A25;
	    t['thalarabic'] = 0x0630;
	    t['thalfinalarabic'] = 0xFEAC;
	    t['thanthakhatlowleftthai'] = 0xF898;
	    t['thanthakhatlowrightthai'] = 0xF897;
	    t['thanthakhatthai'] = 0x0E4C;
	    t['thanthakhatupperleftthai'] = 0xF896;
	    t['theharabic'] = 0x062B;
	    t['thehfinalarabic'] = 0xFE9A;
	    t['thehinitialarabic'] = 0xFE9B;
	    t['thehmedialarabic'] = 0xFE9C;
	    t['thereexists'] = 0x2203;
	    t['therefore'] = 0x2234;
	    t['theta'] = 0x03B8;
	    t['theta1'] = 0x03D1;
	    t['thetasymbolgreek'] = 0x03D1;
	    t['thieuthacirclekorean'] = 0x3279;
	    t['thieuthaparenkorean'] = 0x3219;
	    t['thieuthcirclekorean'] = 0x326B;
	    t['thieuthkorean'] = 0x314C;
	    t['thieuthparenkorean'] = 0x320B;
	    t['thirteencircle'] = 0x246C;
	    t['thirteenparen'] = 0x2480;
	    t['thirteenperiod'] = 0x2494;
	    t['thonangmonthothai'] = 0x0E11;
	    t['thook'] = 0x01AD;
	    t['thophuthaothai'] = 0x0E12;
	    t['thorn'] = 0x00FE;
	    t['thothahanthai'] = 0x0E17;
	    t['thothanthai'] = 0x0E10;
	    t['thothongthai'] = 0x0E18;
	    t['thothungthai'] = 0x0E16;
	    t['thousandcyrillic'] = 0x0482;
	    t['thousandsseparatorarabic'] = 0x066C;
	    t['thousandsseparatorpersian'] = 0x066C;
	    t['three'] = 0x0033;
	    t['threearabic'] = 0x0663;
	    t['threebengali'] = 0x09E9;
	    t['threecircle'] = 0x2462;
	    t['threecircleinversesansserif'] = 0x278C;
	    t['threedeva'] = 0x0969;
	    t['threeeighths'] = 0x215C;
	    t['threegujarati'] = 0x0AE9;
	    t['threegurmukhi'] = 0x0A69;
	    t['threehackarabic'] = 0x0663;
	    t['threehangzhou'] = 0x3023;
	    t['threeideographicparen'] = 0x3222;
	    t['threeinferior'] = 0x2083;
	    t['threemonospace'] = 0xFF13;
	    t['threenumeratorbengali'] = 0x09F6;
	    t['threeoldstyle'] = 0xF733;
	    t['threeparen'] = 0x2476;
	    t['threeperiod'] = 0x248A;
	    t['threepersian'] = 0x06F3;
	    t['threequarters'] = 0x00BE;
	    t['threequartersemdash'] = 0xF6DE;
	    t['threeroman'] = 0x2172;
	    t['threesuperior'] = 0x00B3;
	    t['threethai'] = 0x0E53;
	    t['thzsquare'] = 0x3394;
	    t['tihiragana'] = 0x3061;
	    t['tikatakana'] = 0x30C1;
	    t['tikatakanahalfwidth'] = 0xFF81;
	    t['tikeutacirclekorean'] = 0x3270;
	    t['tikeutaparenkorean'] = 0x3210;
	    t['tikeutcirclekorean'] = 0x3262;
	    t['tikeutkorean'] = 0x3137;
	    t['tikeutparenkorean'] = 0x3202;
	    t['tilde'] = 0x02DC;
	    t['tildebelowcmb'] = 0x0330;
	    t['tildecmb'] = 0x0303;
	    t['tildecomb'] = 0x0303;
	    t['tildedoublecmb'] = 0x0360;
	    t['tildeoperator'] = 0x223C;
	    t['tildeoverlaycmb'] = 0x0334;
	    t['tildeverticalcmb'] = 0x033E;
	    t['timescircle'] = 0x2297;
	    t['tipehahebrew'] = 0x0596;
	    t['tipehalefthebrew'] = 0x0596;
	    t['tippigurmukhi'] = 0x0A70;
	    t['titlocyrilliccmb'] = 0x0483;
	    t['tiwnarmenian'] = 0x057F;
	    t['tlinebelow'] = 0x1E6F;
	    t['tmonospace'] = 0xFF54;
	    t['toarmenian'] = 0x0569;
	    t['tohiragana'] = 0x3068;
	    t['tokatakana'] = 0x30C8;
	    t['tokatakanahalfwidth'] = 0xFF84;
	    t['tonebarextrahighmod'] = 0x02E5;
	    t['tonebarextralowmod'] = 0x02E9;
	    t['tonebarhighmod'] = 0x02E6;
	    t['tonebarlowmod'] = 0x02E8;
	    t['tonebarmidmod'] = 0x02E7;
	    t['tonefive'] = 0x01BD;
	    t['tonesix'] = 0x0185;
	    t['tonetwo'] = 0x01A8;
	    t['tonos'] = 0x0384;
	    t['tonsquare'] = 0x3327;
	    t['topatakthai'] = 0x0E0F;
	    t['tortoiseshellbracketleft'] = 0x3014;
	    t['tortoiseshellbracketleftsmall'] = 0xFE5D;
	    t['tortoiseshellbracketleftvertical'] = 0xFE39;
	    t['tortoiseshellbracketright'] = 0x3015;
	    t['tortoiseshellbracketrightsmall'] = 0xFE5E;
	    t['tortoiseshellbracketrightvertical'] = 0xFE3A;
	    t['totaothai'] = 0x0E15;
	    t['tpalatalhook'] = 0x01AB;
	    t['tparen'] = 0x24AF;
	    t['trademark'] = 0x2122;
	    t['trademarksans'] = 0xF8EA;
	    t['trademarkserif'] = 0xF6DB;
	    t['tretroflexhook'] = 0x0288;
	    t['triagdn'] = 0x25BC;
	    t['triaglf'] = 0x25C4;
	    t['triagrt'] = 0x25BA;
	    t['triagup'] = 0x25B2;
	    t['ts'] = 0x02A6;
	    t['tsadi'] = 0x05E6;
	    t['tsadidagesh'] = 0xFB46;
	    t['tsadidageshhebrew'] = 0xFB46;
	    t['tsadihebrew'] = 0x05E6;
	    t['tsecyrillic'] = 0x0446;
	    t['tsere'] = 0x05B5;
	    t['tsere12'] = 0x05B5;
	    t['tsere1e'] = 0x05B5;
	    t['tsere2b'] = 0x05B5;
	    t['tserehebrew'] = 0x05B5;
	    t['tserenarrowhebrew'] = 0x05B5;
	    t['tserequarterhebrew'] = 0x05B5;
	    t['tserewidehebrew'] = 0x05B5;
	    t['tshecyrillic'] = 0x045B;
	    t['tsuperior'] = 0xF6F3;
	    t['ttabengali'] = 0x099F;
	    t['ttadeva'] = 0x091F;
	    t['ttagujarati'] = 0x0A9F;
	    t['ttagurmukhi'] = 0x0A1F;
	    t['tteharabic'] = 0x0679;
	    t['ttehfinalarabic'] = 0xFB67;
	    t['ttehinitialarabic'] = 0xFB68;
	    t['ttehmedialarabic'] = 0xFB69;
	    t['tthabengali'] = 0x09A0;
	    t['tthadeva'] = 0x0920;
	    t['tthagujarati'] = 0x0AA0;
	    t['tthagurmukhi'] = 0x0A20;
	    t['tturned'] = 0x0287;
	    t['tuhiragana'] = 0x3064;
	    t['tukatakana'] = 0x30C4;
	    t['tukatakanahalfwidth'] = 0xFF82;
	    t['tusmallhiragana'] = 0x3063;
	    t['tusmallkatakana'] = 0x30C3;
	    t['tusmallkatakanahalfwidth'] = 0xFF6F;
	    t['twelvecircle'] = 0x246B;
	    t['twelveparen'] = 0x247F;
	    t['twelveperiod'] = 0x2493;
	    t['twelveroman'] = 0x217B;
	    t['twentycircle'] = 0x2473;
	    t['twentyhangzhou'] = 0x5344;
	    t['twentyparen'] = 0x2487;
	    t['twentyperiod'] = 0x249B;
	    t['two'] = 0x0032;
	    t['twoarabic'] = 0x0662;
	    t['twobengali'] = 0x09E8;
	    t['twocircle'] = 0x2461;
	    t['twocircleinversesansserif'] = 0x278B;
	    t['twodeva'] = 0x0968;
	    t['twodotenleader'] = 0x2025;
	    t['twodotleader'] = 0x2025;
	    t['twodotleadervertical'] = 0xFE30;
	    t['twogujarati'] = 0x0AE8;
	    t['twogurmukhi'] = 0x0A68;
	    t['twohackarabic'] = 0x0662;
	    t['twohangzhou'] = 0x3022;
	    t['twoideographicparen'] = 0x3221;
	    t['twoinferior'] = 0x2082;
	    t['twomonospace'] = 0xFF12;
	    t['twonumeratorbengali'] = 0x09F5;
	    t['twooldstyle'] = 0xF732;
	    t['twoparen'] = 0x2475;
	    t['twoperiod'] = 0x2489;
	    t['twopersian'] = 0x06F2;
	    t['tworoman'] = 0x2171;
	    t['twostroke'] = 0x01BB;
	    t['twosuperior'] = 0x00B2;
	    t['twothai'] = 0x0E52;
	    t['twothirds'] = 0x2154;
	    t['u'] = 0x0075;
	    t['uacute'] = 0x00FA;
	    t['ubar'] = 0x0289;
	    t['ubengali'] = 0x0989;
	    t['ubopomofo'] = 0x3128;
	    t['ubreve'] = 0x016D;
	    t['ucaron'] = 0x01D4;
	    t['ucircle'] = 0x24E4;
	    t['ucircumflex'] = 0x00FB;
	    t['ucircumflexbelow'] = 0x1E77;
	    t['ucyrillic'] = 0x0443;
	    t['udattadeva'] = 0x0951;
	    t['udblacute'] = 0x0171;
	    t['udblgrave'] = 0x0215;
	    t['udeva'] = 0x0909;
	    t['udieresis'] = 0x00FC;
	    t['udieresisacute'] = 0x01D8;
	    t['udieresisbelow'] = 0x1E73;
	    t['udieresiscaron'] = 0x01DA;
	    t['udieresiscyrillic'] = 0x04F1;
	    t['udieresisgrave'] = 0x01DC;
	    t['udieresismacron'] = 0x01D6;
	    t['udotbelow'] = 0x1EE5;
	    t['ugrave'] = 0x00F9;
	    t['ugujarati'] = 0x0A89;
	    t['ugurmukhi'] = 0x0A09;
	    t['uhiragana'] = 0x3046;
	    t['uhookabove'] = 0x1EE7;
	    t['uhorn'] = 0x01B0;
	    t['uhornacute'] = 0x1EE9;
	    t['uhorndotbelow'] = 0x1EF1;
	    t['uhorngrave'] = 0x1EEB;
	    t['uhornhookabove'] = 0x1EED;
	    t['uhorntilde'] = 0x1EEF;
	    t['uhungarumlaut'] = 0x0171;
	    t['uhungarumlautcyrillic'] = 0x04F3;
	    t['uinvertedbreve'] = 0x0217;
	    t['ukatakana'] = 0x30A6;
	    t['ukatakanahalfwidth'] = 0xFF73;
	    t['ukcyrillic'] = 0x0479;
	    t['ukorean'] = 0x315C;
	    t['umacron'] = 0x016B;
	    t['umacroncyrillic'] = 0x04EF;
	    t['umacrondieresis'] = 0x1E7B;
	    t['umatragurmukhi'] = 0x0A41;
	    t['umonospace'] = 0xFF55;
	    t['underscore'] = 0x005F;
	    t['underscoredbl'] = 0x2017;
	    t['underscoremonospace'] = 0xFF3F;
	    t['underscorevertical'] = 0xFE33;
	    t['underscorewavy'] = 0xFE4F;
	    t['union'] = 0x222A;
	    t['universal'] = 0x2200;
	    t['uogonek'] = 0x0173;
	    t['uparen'] = 0x24B0;
	    t['upblock'] = 0x2580;
	    t['upperdothebrew'] = 0x05C4;
	    t['upsilon'] = 0x03C5;
	    t['upsilondieresis'] = 0x03CB;
	    t['upsilondieresistonos'] = 0x03B0;
	    t['upsilonlatin'] = 0x028A;
	    t['upsilontonos'] = 0x03CD;
	    t['uptackbelowcmb'] = 0x031D;
	    t['uptackmod'] = 0x02D4;
	    t['uragurmukhi'] = 0x0A73;
	    t['uring'] = 0x016F;
	    t['ushortcyrillic'] = 0x045E;
	    t['usmallhiragana'] = 0x3045;
	    t['usmallkatakana'] = 0x30A5;
	    t['usmallkatakanahalfwidth'] = 0xFF69;
	    t['ustraightcyrillic'] = 0x04AF;
	    t['ustraightstrokecyrillic'] = 0x04B1;
	    t['utilde'] = 0x0169;
	    t['utildeacute'] = 0x1E79;
	    t['utildebelow'] = 0x1E75;
	    t['uubengali'] = 0x098A;
	    t['uudeva'] = 0x090A;
	    t['uugujarati'] = 0x0A8A;
	    t['uugurmukhi'] = 0x0A0A;
	    t['uumatragurmukhi'] = 0x0A42;
	    t['uuvowelsignbengali'] = 0x09C2;
	    t['uuvowelsigndeva'] = 0x0942;
	    t['uuvowelsigngujarati'] = 0x0AC2;
	    t['uvowelsignbengali'] = 0x09C1;
	    t['uvowelsigndeva'] = 0x0941;
	    t['uvowelsigngujarati'] = 0x0AC1;
	    t['v'] = 0x0076;
	    t['vadeva'] = 0x0935;
	    t['vagujarati'] = 0x0AB5;
	    t['vagurmukhi'] = 0x0A35;
	    t['vakatakana'] = 0x30F7;
	    t['vav'] = 0x05D5;
	    t['vavdagesh'] = 0xFB35;
	    t['vavdagesh65'] = 0xFB35;
	    t['vavdageshhebrew'] = 0xFB35;
	    t['vavhebrew'] = 0x05D5;
	    t['vavholam'] = 0xFB4B;
	    t['vavholamhebrew'] = 0xFB4B;
	    t['vavvavhebrew'] = 0x05F0;
	    t['vavyodhebrew'] = 0x05F1;
	    t['vcircle'] = 0x24E5;
	    t['vdotbelow'] = 0x1E7F;
	    t['vecyrillic'] = 0x0432;
	    t['veharabic'] = 0x06A4;
	    t['vehfinalarabic'] = 0xFB6B;
	    t['vehinitialarabic'] = 0xFB6C;
	    t['vehmedialarabic'] = 0xFB6D;
	    t['vekatakana'] = 0x30F9;
	    t['venus'] = 0x2640;
	    t['verticalbar'] = 0x007C;
	    t['verticallineabovecmb'] = 0x030D;
	    t['verticallinebelowcmb'] = 0x0329;
	    t['verticallinelowmod'] = 0x02CC;
	    t['verticallinemod'] = 0x02C8;
	    t['vewarmenian'] = 0x057E;
	    t['vhook'] = 0x028B;
	    t['vikatakana'] = 0x30F8;
	    t['viramabengali'] = 0x09CD;
	    t['viramadeva'] = 0x094D;
	    t['viramagujarati'] = 0x0ACD;
	    t['visargabengali'] = 0x0983;
	    t['visargadeva'] = 0x0903;
	    t['visargagujarati'] = 0x0A83;
	    t['vmonospace'] = 0xFF56;
	    t['voarmenian'] = 0x0578;
	    t['voicediterationhiragana'] = 0x309E;
	    t['voicediterationkatakana'] = 0x30FE;
	    t['voicedmarkkana'] = 0x309B;
	    t['voicedmarkkanahalfwidth'] = 0xFF9E;
	    t['vokatakana'] = 0x30FA;
	    t['vparen'] = 0x24B1;
	    t['vtilde'] = 0x1E7D;
	    t['vturned'] = 0x028C;
	    t['vuhiragana'] = 0x3094;
	    t['vukatakana'] = 0x30F4;
	    t['w'] = 0x0077;
	    t['wacute'] = 0x1E83;
	    t['waekorean'] = 0x3159;
	    t['wahiragana'] = 0x308F;
	    t['wakatakana'] = 0x30EF;
	    t['wakatakanahalfwidth'] = 0xFF9C;
	    t['wakorean'] = 0x3158;
	    t['wasmallhiragana'] = 0x308E;
	    t['wasmallkatakana'] = 0x30EE;
	    t['wattosquare'] = 0x3357;
	    t['wavedash'] = 0x301C;
	    t['wavyunderscorevertical'] = 0xFE34;
	    t['wawarabic'] = 0x0648;
	    t['wawfinalarabic'] = 0xFEEE;
	    t['wawhamzaabovearabic'] = 0x0624;
	    t['wawhamzaabovefinalarabic'] = 0xFE86;
	    t['wbsquare'] = 0x33DD;
	    t['wcircle'] = 0x24E6;
	    t['wcircumflex'] = 0x0175;
	    t['wdieresis'] = 0x1E85;
	    t['wdotaccent'] = 0x1E87;
	    t['wdotbelow'] = 0x1E89;
	    t['wehiragana'] = 0x3091;
	    t['weierstrass'] = 0x2118;
	    t['wekatakana'] = 0x30F1;
	    t['wekorean'] = 0x315E;
	    t['weokorean'] = 0x315D;
	    t['wgrave'] = 0x1E81;
	    t['whitebullet'] = 0x25E6;
	    t['whitecircle'] = 0x25CB;
	    t['whitecircleinverse'] = 0x25D9;
	    t['whitecornerbracketleft'] = 0x300E;
	    t['whitecornerbracketleftvertical'] = 0xFE43;
	    t['whitecornerbracketright'] = 0x300F;
	    t['whitecornerbracketrightvertical'] = 0xFE44;
	    t['whitediamond'] = 0x25C7;
	    t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;
	    t['whitedownpointingsmalltriangle'] = 0x25BF;
	    t['whitedownpointingtriangle'] = 0x25BD;
	    t['whiteleftpointingsmalltriangle'] = 0x25C3;
	    t['whiteleftpointingtriangle'] = 0x25C1;
	    t['whitelenticularbracketleft'] = 0x3016;
	    t['whitelenticularbracketright'] = 0x3017;
	    t['whiterightpointingsmalltriangle'] = 0x25B9;
	    t['whiterightpointingtriangle'] = 0x25B7;
	    t['whitesmallsquare'] = 0x25AB;
	    t['whitesmilingface'] = 0x263A;
	    t['whitesquare'] = 0x25A1;
	    t['whitestar'] = 0x2606;
	    t['whitetelephone'] = 0x260F;
	    t['whitetortoiseshellbracketleft'] = 0x3018;
	    t['whitetortoiseshellbracketright'] = 0x3019;
	    t['whiteuppointingsmalltriangle'] = 0x25B5;
	    t['whiteuppointingtriangle'] = 0x25B3;
	    t['wihiragana'] = 0x3090;
	    t['wikatakana'] = 0x30F0;
	    t['wikorean'] = 0x315F;
	    t['wmonospace'] = 0xFF57;
	    t['wohiragana'] = 0x3092;
	    t['wokatakana'] = 0x30F2;
	    t['wokatakanahalfwidth'] = 0xFF66;
	    t['won'] = 0x20A9;
	    t['wonmonospace'] = 0xFFE6;
	    t['wowaenthai'] = 0x0E27;
	    t['wparen'] = 0x24B2;
	    t['wring'] = 0x1E98;
	    t['wsuperior'] = 0x02B7;
	    t['wturned'] = 0x028D;
	    t['wynn'] = 0x01BF;
	    t['x'] = 0x0078;
	    t['xabovecmb'] = 0x033D;
	    t['xbopomofo'] = 0x3112;
	    t['xcircle'] = 0x24E7;
	    t['xdieresis'] = 0x1E8D;
	    t['xdotaccent'] = 0x1E8B;
	    t['xeharmenian'] = 0x056D;
	    t['xi'] = 0x03BE;
	    t['xmonospace'] = 0xFF58;
	    t['xparen'] = 0x24B3;
	    t['xsuperior'] = 0x02E3;
	    t['y'] = 0x0079;
	    t['yaadosquare'] = 0x334E;
	    t['yabengali'] = 0x09AF;
	    t['yacute'] = 0x00FD;
	    t['yadeva'] = 0x092F;
	    t['yaekorean'] = 0x3152;
	    t['yagujarati'] = 0x0AAF;
	    t['yagurmukhi'] = 0x0A2F;
	    t['yahiragana'] = 0x3084;
	    t['yakatakana'] = 0x30E4;
	    t['yakatakanahalfwidth'] = 0xFF94;
	    t['yakorean'] = 0x3151;
	    t['yamakkanthai'] = 0x0E4E;
	    t['yasmallhiragana'] = 0x3083;
	    t['yasmallkatakana'] = 0x30E3;
	    t['yasmallkatakanahalfwidth'] = 0xFF6C;
	    t['yatcyrillic'] = 0x0463;
	    t['ycircle'] = 0x24E8;
	    t['ycircumflex'] = 0x0177;
	    t['ydieresis'] = 0x00FF;
	    t['ydotaccent'] = 0x1E8F;
	    t['ydotbelow'] = 0x1EF5;
	    t['yeharabic'] = 0x064A;
	    t['yehbarreearabic'] = 0x06D2;
	    t['yehbarreefinalarabic'] = 0xFBAF;
	    t['yehfinalarabic'] = 0xFEF2;
	    t['yehhamzaabovearabic'] = 0x0626;
	    t['yehhamzaabovefinalarabic'] = 0xFE8A;
	    t['yehhamzaaboveinitialarabic'] = 0xFE8B;
	    t['yehhamzaabovemedialarabic'] = 0xFE8C;
	    t['yehinitialarabic'] = 0xFEF3;
	    t['yehmedialarabic'] = 0xFEF4;
	    t['yehmeeminitialarabic'] = 0xFCDD;
	    t['yehmeemisolatedarabic'] = 0xFC58;
	    t['yehnoonfinalarabic'] = 0xFC94;
	    t['yehthreedotsbelowarabic'] = 0x06D1;
	    t['yekorean'] = 0x3156;
	    t['yen'] = 0x00A5;
	    t['yenmonospace'] = 0xFFE5;
	    t['yeokorean'] = 0x3155;
	    t['yeorinhieuhkorean'] = 0x3186;
	    t['yerahbenyomohebrew'] = 0x05AA;
	    t['yerahbenyomolefthebrew'] = 0x05AA;
	    t['yericyrillic'] = 0x044B;
	    t['yerudieresiscyrillic'] = 0x04F9;
	    t['yesieungkorean'] = 0x3181;
	    t['yesieungpansioskorean'] = 0x3183;
	    t['yesieungsioskorean'] = 0x3182;
	    t['yetivhebrew'] = 0x059A;
	    t['ygrave'] = 0x1EF3;
	    t['yhook'] = 0x01B4;
	    t['yhookabove'] = 0x1EF7;
	    t['yiarmenian'] = 0x0575;
	    t['yicyrillic'] = 0x0457;
	    t['yikorean'] = 0x3162;
	    t['yinyang'] = 0x262F;
	    t['yiwnarmenian'] = 0x0582;
	    t['ymonospace'] = 0xFF59;
	    t['yod'] = 0x05D9;
	    t['yoddagesh'] = 0xFB39;
	    t['yoddageshhebrew'] = 0xFB39;
	    t['yodhebrew'] = 0x05D9;
	    t['yodyodhebrew'] = 0x05F2;
	    t['yodyodpatahhebrew'] = 0xFB1F;
	    t['yohiragana'] = 0x3088;
	    t['yoikorean'] = 0x3189;
	    t['yokatakana'] = 0x30E8;
	    t['yokatakanahalfwidth'] = 0xFF96;
	    t['yokorean'] = 0x315B;
	    t['yosmallhiragana'] = 0x3087;
	    t['yosmallkatakana'] = 0x30E7;
	    t['yosmallkatakanahalfwidth'] = 0xFF6E;
	    t['yotgreek'] = 0x03F3;
	    t['yoyaekorean'] = 0x3188;
	    t['yoyakorean'] = 0x3187;
	    t['yoyakthai'] = 0x0E22;
	    t['yoyingthai'] = 0x0E0D;
	    t['yparen'] = 0x24B4;
	    t['ypogegrammeni'] = 0x037A;
	    t['ypogegrammenigreekcmb'] = 0x0345;
	    t['yr'] = 0x01A6;
	    t['yring'] = 0x1E99;
	    t['ysuperior'] = 0x02B8;
	    t['ytilde'] = 0x1EF9;
	    t['yturned'] = 0x028E;
	    t['yuhiragana'] = 0x3086;
	    t['yuikorean'] = 0x318C;
	    t['yukatakana'] = 0x30E6;
	    t['yukatakanahalfwidth'] = 0xFF95;
	    t['yukorean'] = 0x3160;
	    t['yusbigcyrillic'] = 0x046B;
	    t['yusbigiotifiedcyrillic'] = 0x046D;
	    t['yuslittlecyrillic'] = 0x0467;
	    t['yuslittleiotifiedcyrillic'] = 0x0469;
	    t['yusmallhiragana'] = 0x3085;
	    t['yusmallkatakana'] = 0x30E5;
	    t['yusmallkatakanahalfwidth'] = 0xFF6D;
	    t['yuyekorean'] = 0x318B;
	    t['yuyeokorean'] = 0x318A;
	    t['yyabengali'] = 0x09DF;
	    t['yyadeva'] = 0x095F;
	    t['z'] = 0x007A;
	    t['zaarmenian'] = 0x0566;
	    t['zacute'] = 0x017A;
	    t['zadeva'] = 0x095B;
	    t['zagurmukhi'] = 0x0A5B;
	    t['zaharabic'] = 0x0638;
	    t['zahfinalarabic'] = 0xFEC6;
	    t['zahinitialarabic'] = 0xFEC7;
	    t['zahiragana'] = 0x3056;
	    t['zahmedialarabic'] = 0xFEC8;
	    t['zainarabic'] = 0x0632;
	    t['zainfinalarabic'] = 0xFEB0;
	    t['zakatakana'] = 0x30B6;
	    t['zaqefgadolhebrew'] = 0x0595;
	    t['zaqefqatanhebrew'] = 0x0594;
	    t['zarqahebrew'] = 0x0598;
	    t['zayin'] = 0x05D6;
	    t['zayindagesh'] = 0xFB36;
	    t['zayindageshhebrew'] = 0xFB36;
	    t['zayinhebrew'] = 0x05D6;
	    t['zbopomofo'] = 0x3117;
	    t['zcaron'] = 0x017E;
	    t['zcircle'] = 0x24E9;
	    t['zcircumflex'] = 0x1E91;
	    t['zcurl'] = 0x0291;
	    t['zdot'] = 0x017C;
	    t['zdotaccent'] = 0x017C;
	    t['zdotbelow'] = 0x1E93;
	    t['zecyrillic'] = 0x0437;
	    t['zedescendercyrillic'] = 0x0499;
	    t['zedieresiscyrillic'] = 0x04DF;
	    t['zehiragana'] = 0x305C;
	    t['zekatakana'] = 0x30BC;
	    t['zero'] = 0x0030;
	    t['zeroarabic'] = 0x0660;
	    t['zerobengali'] = 0x09E6;
	    t['zerodeva'] = 0x0966;
	    t['zerogujarati'] = 0x0AE6;
	    t['zerogurmukhi'] = 0x0A66;
	    t['zerohackarabic'] = 0x0660;
	    t['zeroinferior'] = 0x2080;
	    t['zeromonospace'] = 0xFF10;
	    t['zerooldstyle'] = 0xF730;
	    t['zeropersian'] = 0x06F0;
	    t['zerosuperior'] = 0x2070;
	    t['zerothai'] = 0x0E50;
	    t['zerowidthjoiner'] = 0xFEFF;
	    t['zerowidthnonjoiner'] = 0x200C;
	    t['zerowidthspace'] = 0x200B;
	    t['zeta'] = 0x03B6;
	    t['zhbopomofo'] = 0x3113;
	    t['zhearmenian'] = 0x056A;
	    t['zhebrevecyrillic'] = 0x04C2;
	    t['zhecyrillic'] = 0x0436;
	    t['zhedescendercyrillic'] = 0x0497;
	    t['zhedieresiscyrillic'] = 0x04DD;
	    t['zihiragana'] = 0x3058;
	    t['zikatakana'] = 0x30B8;
	    t['zinorhebrew'] = 0x05AE;
	    t['zlinebelow'] = 0x1E95;
	    t['zmonospace'] = 0xFF5A;
	    t['zohiragana'] = 0x305E;
	    t['zokatakana'] = 0x30BE;
	    t['zparen'] = 0x24B5;
	    t['zretroflexhook'] = 0x0290;
	    t['zstroke'] = 0x01B6;
	    t['zuhiragana'] = 0x305A;
	    t['zukatakana'] = 0x30BA;
	    t['.notdef'] = 0x0000;
	    t['angbracketleftbig'] = 0x2329;
	    t['angbracketleftBig'] = 0x2329;
	    t['angbracketleftbigg'] = 0x2329;
	    t['angbracketleftBigg'] = 0x2329;
	    t['angbracketrightBig'] = 0x232A;
	    t['angbracketrightbig'] = 0x232A;
	    t['angbracketrightBigg'] = 0x232A;
	    t['angbracketrightbigg'] = 0x232A;
	    t['arrowhookleft'] = 0x21AA;
	    t['arrowhookright'] = 0x21A9;
	    t['arrowlefttophalf'] = 0x21BC;
	    t['arrowleftbothalf'] = 0x21BD;
	    t['arrownortheast'] = 0x2197;
	    t['arrownorthwest'] = 0x2196;
	    t['arrowrighttophalf'] = 0x21C0;
	    t['arrowrightbothalf'] = 0x21C1;
	    t['arrowsoutheast'] = 0x2198;
	    t['arrowsouthwest'] = 0x2199;
	    t['backslashbig'] = 0x2216;
	    t['backslashBig'] = 0x2216;
	    t['backslashBigg'] = 0x2216;
	    t['backslashbigg'] = 0x2216;
	    t['bardbl'] = 0x2016;
	    t['bracehtipdownleft'] = 0xFE37;
	    t['bracehtipdownright'] = 0xFE37;
	    t['bracehtipupleft'] = 0xFE38;
	    t['bracehtipupright'] = 0xFE38;
	    t['braceleftBig'] = 0x007B;
	    t['braceleftbig'] = 0x007B;
	    t['braceleftbigg'] = 0x007B;
	    t['braceleftBigg'] = 0x007B;
	    t['bracerightBig'] = 0x007D;
	    t['bracerightbig'] = 0x007D;
	    t['bracerightbigg'] = 0x007D;
	    t['bracerightBigg'] = 0x007D;
	    t['bracketleftbig'] = 0x005B;
	    t['bracketleftBig'] = 0x005B;
	    t['bracketleftbigg'] = 0x005B;
	    t['bracketleftBigg'] = 0x005B;
	    t['bracketrightBig'] = 0x005D;
	    t['bracketrightbig'] = 0x005D;
	    t['bracketrightbigg'] = 0x005D;
	    t['bracketrightBigg'] = 0x005D;
	    t['ceilingleftbig'] = 0x2308;
	    t['ceilingleftBig'] = 0x2308;
	    t['ceilingleftBigg'] = 0x2308;
	    t['ceilingleftbigg'] = 0x2308;
	    t['ceilingrightbig'] = 0x2309;
	    t['ceilingrightBig'] = 0x2309;
	    t['ceilingrightbigg'] = 0x2309;
	    t['ceilingrightBigg'] = 0x2309;
	    t['circledotdisplay'] = 0x2299;
	    t['circledottext'] = 0x2299;
	    t['circlemultiplydisplay'] = 0x2297;
	    t['circlemultiplytext'] = 0x2297;
	    t['circleplusdisplay'] = 0x2295;
	    t['circleplustext'] = 0x2295;
	    t['contintegraldisplay'] = 0x222E;
	    t['contintegraltext'] = 0x222E;
	    t['coproductdisplay'] = 0x2210;
	    t['coproducttext'] = 0x2210;
	    t['floorleftBig'] = 0x230A;
	    t['floorleftbig'] = 0x230A;
	    t['floorleftbigg'] = 0x230A;
	    t['floorleftBigg'] = 0x230A;
	    t['floorrightbig'] = 0x230B;
	    t['floorrightBig'] = 0x230B;
	    t['floorrightBigg'] = 0x230B;
	    t['floorrightbigg'] = 0x230B;
	    t['hatwide'] = 0x0302;
	    t['hatwider'] = 0x0302;
	    t['hatwidest'] = 0x0302;
	    t['intercal'] = 0x1D40;
	    t['integraldisplay'] = 0x222B;
	    t['integraltext'] = 0x222B;
	    t['intersectiondisplay'] = 0x22C2;
	    t['intersectiontext'] = 0x22C2;
	    t['logicalanddisplay'] = 0x2227;
	    t['logicalandtext'] = 0x2227;
	    t['logicalordisplay'] = 0x2228;
	    t['logicalortext'] = 0x2228;
	    t['parenleftBig'] = 0x0028;
	    t['parenleftbig'] = 0x0028;
	    t['parenleftBigg'] = 0x0028;
	    t['parenleftbigg'] = 0x0028;
	    t['parenrightBig'] = 0x0029;
	    t['parenrightbig'] = 0x0029;
	    t['parenrightBigg'] = 0x0029;
	    t['parenrightbigg'] = 0x0029;
	    t['prime'] = 0x2032;
	    t['productdisplay'] = 0x220F;
	    t['producttext'] = 0x220F;
	    t['radicalbig'] = 0x221A;
	    t['radicalBig'] = 0x221A;
	    t['radicalBigg'] = 0x221A;
	    t['radicalbigg'] = 0x221A;
	    t['radicalbt'] = 0x221A;
	    t['radicaltp'] = 0x221A;
	    t['radicalvertex'] = 0x221A;
	    t['slashbig'] = 0x002F;
	    t['slashBig'] = 0x002F;
	    t['slashBigg'] = 0x002F;
	    t['slashbigg'] = 0x002F;
	    t['summationdisplay'] = 0x2211;
	    t['summationtext'] = 0x2211;
	    t['tildewide'] = 0x02DC;
	    t['tildewider'] = 0x02DC;
	    t['tildewidest'] = 0x02DC;
	    t['uniondisplay'] = 0x22C3;
	    t['unionmultidisplay'] = 0x228E;
	    t['unionmultitext'] = 0x228E;
	    t['unionsqdisplay'] = 0x2294;
	    t['unionsqtext'] = 0x2294;
	    t['uniontext'] = 0x22C3;
	    t['vextenddouble'] = 0x2225;
	    t['vextendsingle'] = 0x2223;
	   });
	   var getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {
	    t['space'] = 0x0020;
	    t['a1'] = 0x2701;
	    t['a2'] = 0x2702;
	    t['a202'] = 0x2703;
	    t['a3'] = 0x2704;
	    t['a4'] = 0x260E;
	    t['a5'] = 0x2706;
	    t['a119'] = 0x2707;
	    t['a118'] = 0x2708;
	    t['a117'] = 0x2709;
	    t['a11'] = 0x261B;
	    t['a12'] = 0x261E;
	    t['a13'] = 0x270C;
	    t['a14'] = 0x270D;
	    t['a15'] = 0x270E;
	    t['a16'] = 0x270F;
	    t['a105'] = 0x2710;
	    t['a17'] = 0x2711;
	    t['a18'] = 0x2712;
	    t['a19'] = 0x2713;
	    t['a20'] = 0x2714;
	    t['a21'] = 0x2715;
	    t['a22'] = 0x2716;
	    t['a23'] = 0x2717;
	    t['a24'] = 0x2718;
	    t['a25'] = 0x2719;
	    t['a26'] = 0x271A;
	    t['a27'] = 0x271B;
	    t['a28'] = 0x271C;
	    t['a6'] = 0x271D;
	    t['a7'] = 0x271E;
	    t['a8'] = 0x271F;
	    t['a9'] = 0x2720;
	    t['a10'] = 0x2721;
	    t['a29'] = 0x2722;
	    t['a30'] = 0x2723;
	    t['a31'] = 0x2724;
	    t['a32'] = 0x2725;
	    t['a33'] = 0x2726;
	    t['a34'] = 0x2727;
	    t['a35'] = 0x2605;
	    t['a36'] = 0x2729;
	    t['a37'] = 0x272A;
	    t['a38'] = 0x272B;
	    t['a39'] = 0x272C;
	    t['a40'] = 0x272D;
	    t['a41'] = 0x272E;
	    t['a42'] = 0x272F;
	    t['a43'] = 0x2730;
	    t['a44'] = 0x2731;
	    t['a45'] = 0x2732;
	    t['a46'] = 0x2733;
	    t['a47'] = 0x2734;
	    t['a48'] = 0x2735;
	    t['a49'] = 0x2736;
	    t['a50'] = 0x2737;
	    t['a51'] = 0x2738;
	    t['a52'] = 0x2739;
	    t['a53'] = 0x273A;
	    t['a54'] = 0x273B;
	    t['a55'] = 0x273C;
	    t['a56'] = 0x273D;
	    t['a57'] = 0x273E;
	    t['a58'] = 0x273F;
	    t['a59'] = 0x2740;
	    t['a60'] = 0x2741;
	    t['a61'] = 0x2742;
	    t['a62'] = 0x2743;
	    t['a63'] = 0x2744;
	    t['a64'] = 0x2745;
	    t['a65'] = 0x2746;
	    t['a66'] = 0x2747;
	    t['a67'] = 0x2748;
	    t['a68'] = 0x2749;
	    t['a69'] = 0x274A;
	    t['a70'] = 0x274B;
	    t['a71'] = 0x25CF;
	    t['a72'] = 0x274D;
	    t['a73'] = 0x25A0;
	    t['a74'] = 0x274F;
	    t['a203'] = 0x2750;
	    t['a75'] = 0x2751;
	    t['a204'] = 0x2752;
	    t['a76'] = 0x25B2;
	    t['a77'] = 0x25BC;
	    t['a78'] = 0x25C6;
	    t['a79'] = 0x2756;
	    t['a81'] = 0x25D7;
	    t['a82'] = 0x2758;
	    t['a83'] = 0x2759;
	    t['a84'] = 0x275A;
	    t['a97'] = 0x275B;
	    t['a98'] = 0x275C;
	    t['a99'] = 0x275D;
	    t['a100'] = 0x275E;
	    t['a101'] = 0x2761;
	    t['a102'] = 0x2762;
	    t['a103'] = 0x2763;
	    t['a104'] = 0x2764;
	    t['a106'] = 0x2765;
	    t['a107'] = 0x2766;
	    t['a108'] = 0x2767;
	    t['a112'] = 0x2663;
	    t['a111'] = 0x2666;
	    t['a110'] = 0x2665;
	    t['a109'] = 0x2660;
	    t['a120'] = 0x2460;
	    t['a121'] = 0x2461;
	    t['a122'] = 0x2462;
	    t['a123'] = 0x2463;
	    t['a124'] = 0x2464;
	    t['a125'] = 0x2465;
	    t['a126'] = 0x2466;
	    t['a127'] = 0x2467;
	    t['a128'] = 0x2468;
	    t['a129'] = 0x2469;
	    t['a130'] = 0x2776;
	    t['a131'] = 0x2777;
	    t['a132'] = 0x2778;
	    t['a133'] = 0x2779;
	    t['a134'] = 0x277A;
	    t['a135'] = 0x277B;
	    t['a136'] = 0x277C;
	    t['a137'] = 0x277D;
	    t['a138'] = 0x277E;
	    t['a139'] = 0x277F;
	    t['a140'] = 0x2780;
	    t['a141'] = 0x2781;
	    t['a142'] = 0x2782;
	    t['a143'] = 0x2783;
	    t['a144'] = 0x2784;
	    t['a145'] = 0x2785;
	    t['a146'] = 0x2786;
	    t['a147'] = 0x2787;
	    t['a148'] = 0x2788;
	    t['a149'] = 0x2789;
	    t['a150'] = 0x278A;
	    t['a151'] = 0x278B;
	    t['a152'] = 0x278C;
	    t['a153'] = 0x278D;
	    t['a154'] = 0x278E;
	    t['a155'] = 0x278F;
	    t['a156'] = 0x2790;
	    t['a157'] = 0x2791;
	    t['a158'] = 0x2792;
	    t['a159'] = 0x2793;
	    t['a160'] = 0x2794;
	    t['a161'] = 0x2192;
	    t['a163'] = 0x2194;
	    t['a164'] = 0x2195;
	    t['a196'] = 0x2798;
	    t['a165'] = 0x2799;
	    t['a192'] = 0x279A;
	    t['a166'] = 0x279B;
	    t['a167'] = 0x279C;
	    t['a168'] = 0x279D;
	    t['a169'] = 0x279E;
	    t['a170'] = 0x279F;
	    t['a171'] = 0x27A0;
	    t['a172'] = 0x27A1;
	    t['a173'] = 0x27A2;
	    t['a162'] = 0x27A3;
	    t['a174'] = 0x27A4;
	    t['a175'] = 0x27A5;
	    t['a176'] = 0x27A6;
	    t['a177'] = 0x27A7;
	    t['a178'] = 0x27A8;
	    t['a179'] = 0x27A9;
	    t['a193'] = 0x27AA;
	    t['a180'] = 0x27AB;
	    t['a199'] = 0x27AC;
	    t['a181'] = 0x27AD;
	    t['a200'] = 0x27AE;
	    t['a182'] = 0x27AF;
	    t['a201'] = 0x27B1;
	    t['a183'] = 0x27B2;
	    t['a184'] = 0x27B3;
	    t['a197'] = 0x27B4;
	    t['a185'] = 0x27B5;
	    t['a194'] = 0x27B6;
	    t['a198'] = 0x27B7;
	    t['a186'] = 0x27B8;
	    t['a195'] = 0x27B9;
	    t['a187'] = 0x27BA;
	    t['a188'] = 0x27BB;
	    t['a189'] = 0x27BC;
	    t['a190'] = 0x27BD;
	    t['a191'] = 0x27BE;
	    t['a89'] = 0x2768;
	    t['a90'] = 0x2769;
	    t['a93'] = 0x276A;
	    t['a94'] = 0x276B;
	    t['a91'] = 0x276C;
	    t['a92'] = 0x276D;
	    t['a205'] = 0x276E;
	    t['a85'] = 0x276F;
	    t['a206'] = 0x2770;
	    t['a86'] = 0x2771;
	    t['a87'] = 0x2772;
	    t['a88'] = 0x2773;
	    t['a95'] = 0x2774;
	    t['a96'] = 0x2775;
	    t['.notdef'] = 0x0000;
	   });
	   exports.getGlyphsUnicode = getGlyphsUnicode;
	   exports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreJbig2 = {}, root.pdfjsSharedUtil, root.pdfjsCoreArithmeticDecoder);
	  }(this, function (exports, sharedUtil, coreArithmeticDecoder) {
	   var error = sharedUtil.error;
	   var log2 = sharedUtil.log2;
	   var readInt8 = sharedUtil.readInt8;
	   var readUint16 = sharedUtil.readUint16;
	   var readUint32 = sharedUtil.readUint32;
	   var shadow = sharedUtil.shadow;
	   var ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;
	   var Jbig2Image = function Jbig2ImageClosure() {
	    function ContextCache() {
	    }
	    ContextCache.prototype = {
	     getContexts: function (id) {
	      if (id in this) {
	       return this[id];
	      }
	      return this[id] = new Int8Array(1 << 16);
	     }
	    };
	    function DecodingContext(data, start, end) {
	     this.data = data;
	     this.start = start;
	     this.end = end;
	    }
	    DecodingContext.prototype = {
	     get decoder() {
	      var decoder = new ArithmeticDecoder(this.data, this.start, this.end);
	      return shadow(this, 'decoder', decoder);
	     },
	     get contextCache() {
	      var cache = new ContextCache();
	      return shadow(this, 'contextCache', cache);
	     }
	    };
	    function decodeInteger(contextCache, procedure, decoder) {
	     var contexts = contextCache.getContexts(procedure);
	     var prev = 1;
	     function readBits(length) {
	      var v = 0;
	      for (var i = 0; i < length; i++) {
	       var bit = decoder.readBit(contexts, prev);
	       prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;
	       v = v << 1 | bit;
	      }
	      return v >>> 0;
	     }
	     var sign = readBits(1);
	     var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);
	     return sign === 0 ? value : value > 0 ? -value : null;
	    }
	    function decodeIAID(contextCache, decoder, codeLength) {
	     var contexts = contextCache.getContexts('IAID');
	     var prev = 1;
	     for (var i = 0; i < codeLength; i++) {
	      var bit = decoder.readBit(contexts, prev);
	      prev = prev << 1 | bit;
	     }
	     if (codeLength < 31) {
	      return prev & (1 << codeLength) - 1;
	     }
	     return prev & 0x7FFFFFFF;
	    }
	    var SegmentTypes = [
	     'SymbolDictionary',
	     null,
	     null,
	     null,
	     'IntermediateTextRegion',
	     null,
	     'ImmediateTextRegion',
	     'ImmediateLosslessTextRegion',
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     'patternDictionary',
	     null,
	     null,
	     null,
	     'IntermediateHalftoneRegion',
	     null,
	     'ImmediateHalftoneRegion',
	     'ImmediateLosslessHalftoneRegion',
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     'IntermediateGenericRegion',
	     null,
	     'ImmediateGenericRegion',
	     'ImmediateLosslessGenericRegion',
	     'IntermediateGenericRefinementRegion',
	     null,
	     'ImmediateGenericRefinementRegion',
	     'ImmediateLosslessGenericRefinementRegion',
	     null,
	     null,
	     null,
	     null,
	     'PageInformation',
	     'EndOfPage',
	     'EndOfStripe',
	     'EndOfFile',
	     'Profiles',
	     'Tables',
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     null,
	     'Extension'
	    ];
	    var CodingTemplates = [
	     [
	      {
	       x: -1,
	       y: -2
	      },
	      {
	       x: 0,
	       y: -2
	      },
	      {
	       x: 1,
	       y: -2
	      },
	      {
	       x: -2,
	       y: -1
	      },
	      {
	       x: -1,
	       y: -1
	      },
	      {
	       x: 0,
	       y: -1
	      },
	      {
	       x: 1,
	       y: -1
	      },
	      {
	       x: 2,
	       y: -1
	      },
	      {
	       x: -4,
	       y: 0
	      },
	      {
	       x: -3,
	       y: 0
	      },
	      {
	       x: -2,
	       y: 0
	      },
	      {
	       x: -1,
	       y: 0
	      }
	     ],
	     [
	      {
	       x: -1,
	       y: -2
	      },
	      {
	       x: 0,
	       y: -2
	      },
	      {
	       x: 1,
	       y: -2
	      },
	      {
	       x: 2,
	       y: -2
	      },
	      {
	       x: -2,
	       y: -1
	      },
	      {
	       x: -1,
	       y: -1
	      },
	      {
	       x: 0,
	       y: -1
	      },
	      {
	       x: 1,
	       y: -1
	      },
	      {
	       x: 2,
	       y: -1
	      },
	      {
	       x: -3,
	       y: 0
	      },
	      {
	       x: -2,
	       y: 0
	      },
	      {
	       x: -1,
	       y: 0
	      }
	     ],
	     [
	      {
	       x: -1,
	       y: -2
	      },
	      {
	       x: 0,
	       y: -2
	      },
	      {
	       x: 1,
	       y: -2
	      },
	      {
	       x: -2,
	       y: -1
	      },
	      {
	       x: -1,
	       y: -1
	      },
	      {
	       x: 0,
	       y: -1
	      },
	      {
	       x: 1,
	       y: -1
	      },
	      {
	       x: -2,
	       y: 0
	      },
	      {
	       x: -1,
	       y: 0
	      }
	     ],
	     [
	      {
	       x: -3,
	       y: -1
	      },
	      {
	       x: -2,
	       y: -1
	      },
	      {
	       x: -1,
	       y: -1
	      },
	      {
	       x: 0,
	       y: -1
	      },
	      {
	       x: 1,
	       y: -1
	      },
	      {
	       x: -4,
	       y: 0
	      },
	      {
	       x: -3,
	       y: 0
	      },
	      {
	       x: -2,
	       y: 0
	      },
	      {
	       x: -1,
	       y: 0
	      }
	     ]
	    ];
	    var RefinementTemplates = [
	     {
	      coding: [
	       {
	        x: 0,
	        y: -1
	       },
	       {
	        x: 1,
	        y: -1
	       },
	       {
	        x: -1,
	        y: 0
	       }
	      ],
	      reference: [
	       {
	        x: 0,
	        y: -1
	       },
	       {
	        x: 1,
	        y: -1
	       },
	       {
	        x: -1,
	        y: 0
	       },
	       {
	        x: 0,
	        y: 0
	       },
	       {
	        x: 1,
	        y: 0
	       },
	       {
	        x: -1,
	        y: 1
	       },
	       {
	        x: 0,
	        y: 1
	       },
	       {
	        x: 1,
	        y: 1
	       }
	      ]
	     },
	     {
	      coding: [
	       {
	        x: -1,
	        y: -1
	       },
	       {
	        x: 0,
	        y: -1
	       },
	       {
	        x: 1,
	        y: -1
	       },
	       {
	        x: -1,
	        y: 0
	       }
	      ],
	      reference: [
	       {
	        x: 0,
	        y: -1
	       },
	       {
	        x: -1,
	        y: 0
	       },
	       {
	        x: 0,
	        y: 0
	       },
	       {
	        x: 1,
	        y: 0
	       },
	       {
	        x: 0,
	        y: 1
	       },
	       {
	        x: 1,
	        y: 1
	       }
	      ]
	     }
	    ];
	    var ReusedContexts = [
	     0x9B25,
	     0x0795,
	     0x00E5,
	     0x0195
	    ];
	    var RefinementReusedContexts = [
	     0x0020,
	     0x0008
	    ];
	    function decodeBitmapTemplate0(width, height, decodingContext) {
	     var decoder = decodingContext.decoder;
	     var contexts = decodingContext.contextCache.getContexts('GB');
	     var contextLabel, i, j, pixel, row, row1, row2, bitmap = [];
	     var OLD_PIXEL_MASK = 0x7BF7;
	     for (i = 0; i < height; i++) {
	      row = bitmap[i] = new Uint8Array(width);
	      row1 = i < 1 ? row : bitmap[i - 1];
	      row2 = i < 2 ? row : bitmap[i - 2];
	      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;
	      for (j = 0; j < width; j++) {
	       row[j] = pixel = decoder.readBit(contexts, contextLabel);
	       contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;
	      }
	     }
	     return bitmap;
	    }
	    function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {
	     if (mmr) {
	      error('JBIG2 error: MMR encoding is not supported');
	     }
	     if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {
	      return decodeBitmapTemplate0(width, height, decodingContext);
	     }
	     var useskip = !!skip;
	     var template = CodingTemplates[templateIndex].concat(at);
	     template.sort(function (a, b) {
	      return a.y - b.y || a.x - b.x;
	     });
	     var templateLength = template.length;
	     var templateX = new Int8Array(templateLength);
	     var templateY = new Int8Array(templateLength);
	     var changingTemplateEntries = [];
	     var reuseMask = 0, minX = 0, maxX = 0, minY = 0;
	     var c, k;
	     for (k = 0; k < templateLength; k++) {
	      templateX[k] = template[k].x;
	      templateY[k] = template[k].y;
	      minX = Math.min(minX, template[k].x);
	      maxX = Math.max(maxX, template[k].x);
	      minY = Math.min(minY, template[k].y);
	      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {
	       reuseMask |= 1 << templateLength - 1 - k;
	      } else {
	       changingTemplateEntries.push(k);
	      }
	     }
	     var changingEntriesLength = changingTemplateEntries.length;
	     var changingTemplateX = new Int8Array(changingEntriesLength);
	     var changingTemplateY = new Int8Array(changingEntriesLength);
	     var changingTemplateBit = new Uint16Array(changingEntriesLength);
	     for (c = 0; c < changingEntriesLength; c++) {
	      k = changingTemplateEntries[c];
	      changingTemplateX[c] = template[k].x;
	      changingTemplateY[c] = template[k].y;
	      changingTemplateBit[c] = 1 << templateLength - 1 - k;
	     }
	     var sbb_left = -minX;
	     var sbb_top = -minY;
	     var sbb_right = width - maxX;
	     var pseudoPixelContext = ReusedContexts[templateIndex];
	     var row = new Uint8Array(width);
	     var bitmap = [];
	     var decoder = decodingContext.decoder;
	     var contexts = decodingContext.contextCache.getContexts('GB');
	     var ltp = 0, j, i0, j0, contextLabel = 0, bit, shift;
	     for (var i = 0; i < height; i++) {
	      if (prediction) {
	       var sltp = decoder.readBit(contexts, pseudoPixelContext);
	       ltp ^= sltp;
	       if (ltp) {
	        bitmap.push(row);
	        continue;
	       }
	      }
	      row = new Uint8Array(row);
	      bitmap.push(row);
	      for (j = 0; j < width; j++) {
	       if (useskip && skip[i][j]) {
	        row[j] = 0;
	        continue;
	       }
	       if (j >= sbb_left && j < sbb_right && i >= sbb_top) {
	        contextLabel = contextLabel << 1 & reuseMask;
	        for (k = 0; k < changingEntriesLength; k++) {
	         i0 = i + changingTemplateY[k];
	         j0 = j + changingTemplateX[k];
	         bit = bitmap[i0][j0];
	         if (bit) {
	          bit = changingTemplateBit[k];
	          contextLabel |= bit;
	         }
	        }
	       } else {
	        contextLabel = 0;
	        shift = templateLength - 1;
	        for (k = 0; k < templateLength; k++, shift--) {
	         j0 = j + templateX[k];
	         if (j0 >= 0 && j0 < width) {
	          i0 = i + templateY[k];
	          if (i0 >= 0) {
	           bit = bitmap[i0][j0];
	           if (bit) {
	            contextLabel |= bit << shift;
	           }
	          }
	         }
	        }
	       }
	       var pixel = decoder.readBit(contexts, contextLabel);
	       row[j] = pixel;
	      }
	     }
	     return bitmap;
	    }
	    function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {
	     var codingTemplate = RefinementTemplates[templateIndex].coding;
	     if (templateIndex === 0) {
	      codingTemplate = codingTemplate.concat([at[0]]);
	     }
	     var codingTemplateLength = codingTemplate.length;
	     var codingTemplateX = new Int32Array(codingTemplateLength);
	     var codingTemplateY = new Int32Array(codingTemplateLength);
	     var k;
	     for (k = 0; k < codingTemplateLength; k++) {
	      codingTemplateX[k] = codingTemplate[k].x;
	      codingTemplateY[k] = codingTemplate[k].y;
	     }
	     var referenceTemplate = RefinementTemplates[templateIndex].reference;
	     if (templateIndex === 0) {
	      referenceTemplate = referenceTemplate.concat([at[1]]);
	     }
	     var referenceTemplateLength = referenceTemplate.length;
	     var referenceTemplateX = new Int32Array(referenceTemplateLength);
	     var referenceTemplateY = new Int32Array(referenceTemplateLength);
	     for (k = 0; k < referenceTemplateLength; k++) {
	      referenceTemplateX[k] = referenceTemplate[k].x;
	      referenceTemplateY[k] = referenceTemplate[k].y;
	     }
	     var referenceWidth = referenceBitmap[0].length;
	     var referenceHeight = referenceBitmap.length;
	     var pseudoPixelContext = RefinementReusedContexts[templateIndex];
	     var bitmap = [];
	     var decoder = decodingContext.decoder;
	     var contexts = decodingContext.contextCache.getContexts('GR');
	     var ltp = 0;
	     for (var i = 0; i < height; i++) {
	      if (prediction) {
	       var sltp = decoder.readBit(contexts, pseudoPixelContext);
	       ltp ^= sltp;
	       if (ltp) {
	        error('JBIG2 error: prediction is not supported');
	       }
	      }
	      var row = new Uint8Array(width);
	      bitmap.push(row);
	      for (var j = 0; j < width; j++) {
	       var i0, j0;
	       var contextLabel = 0;
	       for (k = 0; k < codingTemplateLength; k++) {
	        i0 = i + codingTemplateY[k];
	        j0 = j + codingTemplateX[k];
	        if (i0 < 0 || j0 < 0 || j0 >= width) {
	         contextLabel <<= 1;
	        } else
	         {
	          contextLabel = contextLabel << 1 | bitmap[i0][j0];
	         }
	       }
	       for (k = 0; k < referenceTemplateLength; k++) {
	        i0 = i + referenceTemplateY[k] + offsetY;
	        j0 = j + referenceTemplateX[k] + offsetX;
	        if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {
	         contextLabel <<= 1;
	        } else
	         {
	          contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];
	         }
	       }
	       var pixel = decoder.readBit(contexts, contextLabel);
	       row[j] = pixel;
	      }
	     }
	     return bitmap;
	    }
	    function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {
	     if (huffman) {
	      error('JBIG2 error: huffman is not supported');
	     }
	     var newSymbols = [];
	     var currentHeight = 0;
	     var symbolCodeLength = log2(symbols.length + numberOfNewSymbols);
	     var decoder = decodingContext.decoder;
	     var contextCache = decodingContext.contextCache;
	     while (newSymbols.length < numberOfNewSymbols) {
	      var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);
	      currentHeight += deltaHeight;
	      var currentWidth = 0;
	      var totalWidth = 0;
	      while (true) {
	       var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);
	       if (deltaWidth === null) {
	        break;
	       }
	       currentWidth += deltaWidth;
	       totalWidth += currentWidth;
	       var bitmap;
	       if (refinement) {
	        var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);
	        if (numberOfInstances > 1) {
	         bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);
	        } else {
	         var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);
	         var rdx = decodeInteger(contextCache, 'IARDX', decoder);
	         var rdy = decodeInteger(contextCache, 'IARDY', decoder);
	         var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];
	         bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);
	        }
	       } else {
	        bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);
	       }
	       newSymbols.push(bitmap);
	      }
	     }
	     var exportedSymbols = [];
	     var flags = [], currentFlag = false;
	     var totalSymbolsLength = symbols.length + numberOfNewSymbols;
	     while (flags.length < totalSymbolsLength) {
	      var runLength = decodeInteger(contextCache, 'IAEX', decoder);
	      while (runLength--) {
	       flags.push(currentFlag);
	      }
	      currentFlag = !currentFlag;
	     }
	     for (var i = 0, ii = symbols.length; i < ii; i++) {
	      if (flags[i]) {
	       exportedSymbols.push(symbols[i]);
	      }
	     }
	     for (var j = 0; j < numberOfNewSymbols; i++, j++) {
	      if (flags[i]) {
	       exportedSymbols.push(newSymbols[j]);
	      }
	     }
	     return exportedSymbols;
	    }
	    function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {
	     if (huffman) {
	      error('JBIG2 error: huffman is not supported');
	     }
	     var bitmap = [];
	     var i, row;
	     for (i = 0; i < height; i++) {
	      row = new Uint8Array(width);
	      if (defaultPixelValue) {
	       for (var j = 0; j < width; j++) {
	        row[j] = defaultPixelValue;
	       }
	      }
	      bitmap.push(row);
	     }
	     var decoder = decodingContext.decoder;
	     var contextCache = decodingContext.contextCache;
	     var stripT = -decodeInteger(contextCache, 'IADT', decoder);
	     var firstS = 0;
	     i = 0;
	     while (i < numberOfSymbolInstances) {
	      var deltaT = decodeInteger(contextCache, 'IADT', decoder);
	      stripT += deltaT;
	      var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);
	      firstS += deltaFirstS;
	      var currentS = firstS;
	      do {
	       var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);
	       var t = stripSize * stripT + currentT;
	       var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);
	       var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);
	       var symbolBitmap = inputSymbols[symbolId];
	       var symbolWidth = symbolBitmap[0].length;
	       var symbolHeight = symbolBitmap.length;
	       if (applyRefinement) {
	        var rdw = decodeInteger(contextCache, 'IARDW', decoder);
	        var rdh = decodeInteger(contextCache, 'IARDH', decoder);
	        var rdx = decodeInteger(contextCache, 'IARDX', decoder);
	        var rdy = decodeInteger(contextCache, 'IARDY', decoder);
	        symbolWidth += rdw;
	        symbolHeight += rdh;
	        symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);
	       }
	       var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight);
	       var offsetS = currentS - (referenceCorner & 2 ? symbolWidth : 0);
	       var s2, t2, symbolRow;
	       if (transposed) {
	        for (s2 = 0; s2 < symbolHeight; s2++) {
	         row = bitmap[offsetS + s2];
	         if (!row) {
	          continue;
	         }
	         symbolRow = symbolBitmap[s2];
	         var maxWidth = Math.min(width - offsetT, symbolWidth);
	         switch (combinationOperator) {
	         case 0:
	          for (t2 = 0; t2 < maxWidth; t2++) {
	           row[offsetT + t2] |= symbolRow[t2];
	          }
	          break;
	         case 2:
	          for (t2 = 0; t2 < maxWidth; t2++) {
	           row[offsetT + t2] ^= symbolRow[t2];
	          }
	          break;
	         default:
	          error('JBIG2 error: operator ' + combinationOperator + ' is not supported');
	         }
	        }
	        currentS += symbolHeight - 1;
	       } else {
	        for (t2 = 0; t2 < symbolHeight; t2++) {
	         row = bitmap[offsetT + t2];
	         if (!row) {
	          continue;
	         }
	         symbolRow = symbolBitmap[t2];
	         switch (combinationOperator) {
	         case 0:
	          for (s2 = 0; s2 < symbolWidth; s2++) {
	           row[offsetS + s2] |= symbolRow[s2];
	          }
	          break;
	         case 2:
	          for (s2 = 0; s2 < symbolWidth; s2++) {
	           row[offsetS + s2] ^= symbolRow[s2];
	          }
	          break;
	         default:
	          error('JBIG2 error: operator ' + combinationOperator + ' is not supported');
	         }
	        }
	        currentS += symbolWidth - 1;
	       }
	       i++;
	       var deltaS = decodeInteger(contextCache, 'IADS', decoder);
	       if (deltaS === null) {
	        break;
	       }
	       currentS += deltaS + dsOffset;
	      } while (true);
	     }
	     return bitmap;
	    }
	    function readSegmentHeader(data, start) {
	     var segmentHeader = {};
	     segmentHeader.number = readUint32(data, start);
	     var flags = data[start + 4];
	     var segmentType = flags & 0x3F;
	     if (!SegmentTypes[segmentType]) {
	      error('JBIG2 error: invalid segment type: ' + segmentType);
	     }
	     segmentHeader.type = segmentType;
	     segmentHeader.typeName = SegmentTypes[segmentType];
	     segmentHeader.deferredNonRetain = !!(flags & 0x80);
	     var pageAssociationFieldSize = !!(flags & 0x40);
	     var referredFlags = data[start + 5];
	     var referredToCount = referredFlags >> 5 & 7;
	     var retainBits = [referredFlags & 31];
	     var position = start + 6;
	     if (referredFlags === 7) {
	      referredToCount = readUint32(data, position - 1) & 0x1FFFFFFF;
	      position += 3;
	      var bytes = referredToCount + 7 >> 3;
	      retainBits[0] = data[position++];
	      while (--bytes > 0) {
	       retainBits.push(data[position++]);
	      }
	     } else if (referredFlags === 5 || referredFlags === 6) {
	      error('JBIG2 error: invalid referred-to flags');
	     }
	     segmentHeader.retainBits = retainBits;
	     var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;
	     var referredTo = [];
	     var i, ii;
	     for (i = 0; i < referredToCount; i++) {
	      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? readUint16(data, position) : readUint32(data, position);
	      referredTo.push(number);
	      position += referredToSegmentNumberSize;
	     }
	     segmentHeader.referredTo = referredTo;
	     if (!pageAssociationFieldSize) {
	      segmentHeader.pageAssociation = data[position++];
	     } else {
	      segmentHeader.pageAssociation = readUint32(data, position);
	      position += 4;
	     }
	     segmentHeader.length = readUint32(data, position);
	     position += 4;
	     if (segmentHeader.length === 0xFFFFFFFF) {
	      if (segmentType === 38) {
	       var genericRegionInfo = readRegionSegmentInformation(data, position);
	       var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];
	       var genericRegionMmr = !!(genericRegionSegmentFlags & 1);
	       var searchPatternLength = 6;
	       var searchPattern = new Uint8Array(searchPatternLength);
	       if (!genericRegionMmr) {
	        searchPattern[0] = 0xFF;
	        searchPattern[1] = 0xAC;
	       }
	       searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;
	       searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;
	       searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;
	       searchPattern[5] = genericRegionInfo.height & 0xFF;
	       for (i = position, ii = data.length; i < ii; i++) {
	        var j = 0;
	        while (j < searchPatternLength && searchPattern[j] === data[i + j]) {
	         j++;
	        }
	        if (j === searchPatternLength) {
	         segmentHeader.length = i + searchPatternLength;
	         break;
	        }
	       }
	       if (segmentHeader.length === 0xFFFFFFFF) {
	        error('JBIG2 error: segment end was not found');
	       }
	      } else {
	       error('JBIG2 error: invalid unknown segment length');
	      }
	     }
	     segmentHeader.headerEnd = position;
	     return segmentHeader;
	    }
	    function readSegments(header, data, start, end) {
	     var segments = [];
	     var position = start;
	     while (position < end) {
	      var segmentHeader = readSegmentHeader(data, position);
	      position = segmentHeader.headerEnd;
	      var segment = {
	       header: segmentHeader,
	       data: data
	      };
	      if (!header.randomAccess) {
	       segment.start = position;
	       position += segmentHeader.length;
	       segment.end = position;
	      }
	      segments.push(segment);
	      if (segmentHeader.type === 51) {
	       break;
	      }
	     }
	     if (header.randomAccess) {
	      for (var i = 0, ii = segments.length; i < ii; i++) {
	       segments[i].start = position;
	       position += segments[i].header.length;
	       segments[i].end = position;
	      }
	     }
	     return segments;
	    }
	    function readRegionSegmentInformation(data, start) {
	     return {
	      width: readUint32(data, start),
	      height: readUint32(data, start + 4),
	      x: readUint32(data, start + 8),
	      y: readUint32(data, start + 12),
	      combinationOperator: data[start + 16] & 7
	     };
	    }
	    var RegionSegmentInformationFieldLength = 17;
	    function processSegment(segment, visitor) {
	     var header = segment.header;
	     var data = segment.data, position = segment.start, end = segment.end;
	     var args, at, i, atLength;
	     switch (header.type) {
	     case 0:
	      var dictionary = {};
	      var dictionaryFlags = readUint16(data, position);
	      dictionary.huffman = !!(dictionaryFlags & 1);
	      dictionary.refinement = !!(dictionaryFlags & 2);
	      dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;
	      dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;
	      dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;
	      dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;
	      dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);
	      dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);
	      dictionary.template = dictionaryFlags >> 10 & 3;
	      dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;
	      position += 2;
	      if (!dictionary.huffman) {
	       atLength = dictionary.template === 0 ? 4 : 1;
	       at = [];
	       for (i = 0; i < atLength; i++) {
	        at.push({
	         x: readInt8(data, position),
	         y: readInt8(data, position + 1)
	        });
	        position += 2;
	       }
	       dictionary.at = at;
	      }
	      if (dictionary.refinement && !dictionary.refinementTemplate) {
	       at = [];
	       for (i = 0; i < 2; i++) {
	        at.push({
	         x: readInt8(data, position),
	         y: readInt8(data, position + 1)
	        });
	        position += 2;
	       }
	       dictionary.refinementAt = at;
	      }
	      dictionary.numberOfExportedSymbols = readUint32(data, position);
	      position += 4;
	      dictionary.numberOfNewSymbols = readUint32(data, position);
	      position += 4;
	      args = [
	       dictionary,
	       header.number,
	       header.referredTo,
	       data,
	       position,
	       end
	      ];
	      break;
	     case 6:
	     case 7:
	      var textRegion = {};
	      textRegion.info = readRegionSegmentInformation(data, position);
	      position += RegionSegmentInformationFieldLength;
	      var textRegionSegmentFlags = readUint16(data, position);
	      position += 2;
	      textRegion.huffman = !!(textRegionSegmentFlags & 1);
	      textRegion.refinement = !!(textRegionSegmentFlags & 2);
	      textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);
	      textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;
	      textRegion.transposed = !!(textRegionSegmentFlags & 64);
	      textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;
	      textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;
	      textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;
	      textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;
	      if (textRegion.huffman) {
	       var textRegionHuffmanFlags = readUint16(data, position);
	       position += 2;
	       textRegion.huffmanFS = textRegionHuffmanFlags & 3;
	       textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;
	       textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;
	       textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;
	       textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;
	       textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;
	       textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;
	       textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);
	      }
	      if (textRegion.refinement && !textRegion.refinementTemplate) {
	       at = [];
	       for (i = 0; i < 2; i++) {
	        at.push({
	         x: readInt8(data, position),
	         y: readInt8(data, position + 1)
	        });
	        position += 2;
	       }
	       textRegion.refinementAt = at;
	      }
	      textRegion.numberOfSymbolInstances = readUint32(data, position);
	      position += 4;
	      if (textRegion.huffman) {
	       error('JBIG2 error: huffman is not supported');
	      }
	      args = [
	       textRegion,
	       header.referredTo,
	       data,
	       position,
	       end
	      ];
	      break;
	     case 38:
	     case 39:
	      var genericRegion = {};
	      genericRegion.info = readRegionSegmentInformation(data, position);
	      position += RegionSegmentInformationFieldLength;
	      var genericRegionSegmentFlags = data[position++];
	      genericRegion.mmr = !!(genericRegionSegmentFlags & 1);
	      genericRegion.template = genericRegionSegmentFlags >> 1 & 3;
	      genericRegion.prediction = !!(genericRegionSegmentFlags & 8);
	      if (!genericRegion.mmr) {
	       atLength = genericRegion.template === 0 ? 4 : 1;
	       at = [];
	       for (i = 0; i < atLength; i++) {
	        at.push({
	         x: readInt8(data, position),
	         y: readInt8(data, position + 1)
	        });
	        position += 2;
	       }
	       genericRegion.at = at;
	      }
	      args = [
	       genericRegion,
	       data,
	       position,
	       end
	      ];
	      break;
	     case 48:
	      var pageInfo = {
	       width: readUint32(data, position),
	       height: readUint32(data, position + 4),
	       resolutionX: readUint32(data, position + 8),
	       resolutionY: readUint32(data, position + 12)
	      };
	      if (pageInfo.height === 0xFFFFFFFF) {
	       delete pageInfo.height;
	      }
	      var pageSegmentFlags = data[position + 16];
	      var pageStripingInformation = readUint16(data, position + 17);
	      pageInfo.lossless = !!(pageSegmentFlags & 1);
	      pageInfo.refinement = !!(pageSegmentFlags & 2);
	      pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;
	      pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;
	      pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);
	      pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);
	      args = [pageInfo];
	      break;
	     case 49:
	      break;
	     case 50:
	      break;
	     case 51:
	      break;
	     case 62:
	      break;
	     default:
	      error('JBIG2 error: segment type ' + header.typeName + '(' + header.type + ') is not implemented');
	     }
	     var callbackName = 'on' + header.typeName;
	     if (callbackName in visitor) {
	      visitor[callbackName].apply(visitor, args);
	     }
	    }
	    function processSegments(segments, visitor) {
	     for (var i = 0, ii = segments.length; i < ii; i++) {
	      processSegment(segments[i], visitor);
	     }
	    }
	    function parseJbig2(data, start, end) {
	     var position = start;
	     if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {
	      error('JBIG2 error: invalid header');
	     }
	     var header = {};
	     position += 8;
	     var flags = data[position++];
	     header.randomAccess = !(flags & 1);
	     if (!(flags & 2)) {
	      header.numberOfPages = readUint32(data, position);
	      position += 4;
	     }
	     var segments = readSegments(header, data, position, end);
	     error('Not implemented');
	    }
	    function parseJbig2Chunks(chunks) {
	     var visitor = new SimpleSegmentVisitor();
	     for (var i = 0, ii = chunks.length; i < ii; i++) {
	      var chunk = chunks[i];
	      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);
	      processSegments(segments, visitor);
	     }
	     return visitor.buffer;
	    }
	    function SimpleSegmentVisitor() {
	    }
	    SimpleSegmentVisitor.prototype = {
	     onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {
	      this.currentPageInfo = info;
	      var rowSize = info.width + 7 >> 3;
	      var buffer = new Uint8Array(rowSize * info.height);
	      if (info.defaultPixelValue) {
	       for (var i = 0, ii = buffer.length; i < ii; i++) {
	        buffer[i] = 0xFF;
	       }
	      }
	      this.buffer = buffer;
	     },
	     drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {
	      var pageInfo = this.currentPageInfo;
	      var width = regionInfo.width, height = regionInfo.height;
	      var rowSize = pageInfo.width + 7 >> 3;
	      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;
	      var buffer = this.buffer;
	      var mask0 = 128 >> (regionInfo.x & 7);
	      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);
	      var i, j, mask, offset;
	      switch (combinationOperator) {
	      case 0:
	       for (i = 0; i < height; i++) {
	        mask = mask0;
	        offset = offset0;
	        for (j = 0; j < width; j++) {
	         if (bitmap[i][j]) {
	          buffer[offset] |= mask;
	         }
	         mask >>= 1;
	         if (!mask) {
	          mask = 128;
	          offset++;
	         }
	        }
	        offset0 += rowSize;
	       }
	       break;
	      case 2:
	       for (i = 0; i < height; i++) {
	        mask = mask0;
	        offset = offset0;
	        for (j = 0; j < width; j++) {
	         if (bitmap[i][j]) {
	          buffer[offset] ^= mask;
	         }
	         mask >>= 1;
	         if (!mask) {
	          mask = 128;
	          offset++;
	         }
	        }
	        offset0 += rowSize;
	       }
	       break;
	      default:
	       error('JBIG2 error: operator ' + combinationOperator + ' is not supported');
	      }
	     },
	     onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {
	      var regionInfo = region.info;
	      var decodingContext = new DecodingContext(data, start, end);
	      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);
	      this.drawBitmap(regionInfo, bitmap);
	     },
	     onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {
	      this.onImmediateGenericRegion.apply(this, arguments);
	     },
	     onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {
	      var huffmanTables;
	      if (dictionary.huffman) {
	       error('JBIG2 error: huffman is not supported');
	      }
	      var symbols = this.symbols;
	      if (!symbols) {
	       this.symbols = symbols = {};
	      }
	      var inputSymbols = [];
	      for (var i = 0, ii = referredSegments.length; i < ii; i++) {
	       inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);
	      }
	      var decodingContext = new DecodingContext(data, start, end);
	      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);
	     },
	     onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {
	      var regionInfo = region.info;
	      var huffmanTables;
	      var symbols = this.symbols;
	      var inputSymbols = [];
	      for (var i = 0, ii = referredSegments.length; i < ii; i++) {
	       inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);
	      }
	      var symbolCodeLength = log2(inputSymbols.length);
	      var decodingContext = new DecodingContext(data, start, end);
	      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);
	      this.drawBitmap(regionInfo, bitmap);
	     },
	     onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {
	      this.onImmediateTextRegion.apply(this, arguments);
	     }
	    };
	    function Jbig2Image() {
	    }
	    Jbig2Image.prototype = {
	     parseChunks: function Jbig2Image_parseChunks(chunks) {
	      return parseJbig2Chunks(chunks);
	     }
	    };
	    return Jbig2Image;
	   }();
	   exports.Jbig2Image = Jbig2Image;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreJpg = {}, root.pdfjsSharedUtil);
	  }(this, function (exports, sharedUtil) {
	   var error = sharedUtil.error;
	   var JpegImage = function JpegImageClosure() {
	    var dctZigZag = new Uint8Array([
	     0,
	     1,
	     8,
	     16,
	     9,
	     2,
	     3,
	     10,
	     17,
	     24,
	     32,
	     25,
	     18,
	     11,
	     4,
	     5,
	     12,
	     19,
	     26,
	     33,
	     40,
	     48,
	     41,
	     34,
	     27,
	     20,
	     13,
	     6,
	     7,
	     14,
	     21,
	     28,
	     35,
	     42,
	     49,
	     56,
	     57,
	     50,
	     43,
	     36,
	     29,
	     22,
	     15,
	     23,
	     30,
	     37,
	     44,
	     51,
	     58,
	     59,
	     52,
	     45,
	     38,
	     31,
	     39,
	     46,
	     53,
	     60,
	     61,
	     54,
	     47,
	     55,
	     62,
	     63
	    ]);
	    var dctCos1 = 4017;
	    var dctSin1 = 799;
	    var dctCos3 = 3406;
	    var dctSin3 = 2276;
	    var dctCos6 = 1567;
	    var dctSin6 = 3784;
	    var dctSqrt2 = 5793;
	    var dctSqrt1d2 = 2896;
	    function JpegImage() {
	     this.decodeTransform = null;
	     this.colorTransform = -1;
	    }
	    function buildHuffmanTable(codeLengths, values) {
	     var k = 0, code = [], i, j, length = 16;
	     while (length > 0 && !codeLengths[length - 1]) {
	      length--;
	     }
	     code.push({
	      children: [],
	      index: 0
	     });
	     var p = code[0], q;
	     for (i = 0; i < length; i++) {
	      for (j = 0; j < codeLengths[i]; j++) {
	       p = code.pop();
	       p.children[p.index] = values[k];
	       while (p.index > 0) {
	        p = code.pop();
	       }
	       p.index++;
	       code.push(p);
	       while (code.length <= i) {
	        code.push(q = {
	         children: [],
	         index: 0
	        });
	        p.children[p.index] = q.children;
	        p = q;
	       }
	       k++;
	      }
	      if (i + 1 < length) {
	       code.push(q = {
	        children: [],
	        index: 0
	       });
	       p.children[p.index] = q.children;
	       p = q;
	      }
	     }
	     return code[0].children;
	    }
	    function getBlockBufferOffset(component, row, col) {
	     return 64 * ((component.blocksPerLine + 1) * row + col);
	    }
	    function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {
	     var mcusPerLine = frame.mcusPerLine;
	     var progressive = frame.progressive;
	     var startOffset = offset, bitsData = 0, bitsCount = 0;
	     function readBit() {
	      if (bitsCount > 0) {
	       bitsCount--;
	       return bitsData >> bitsCount & 1;
	      }
	      bitsData = data[offset++];
	      if (bitsData === 0xFF) {
	       var nextByte = data[offset++];
	       if (nextByte) {
	        error('JPEG error: unexpected marker ' + (bitsData << 8 | nextByte).toString(16));
	       }
	      }
	      bitsCount = 7;
	      return bitsData >>> 7;
	     }
	     function decodeHuffman(tree) {
	      var node = tree;
	      while (true) {
	       node = node[readBit()];
	       if (typeof node === 'number') {
	        return node;
	       }
	       if (typeof node !== 'object') {
	        error('JPEG error: invalid huffman sequence');
	       }
	      }
	     }
	     function receive(length) {
	      var n = 0;
	      while (length > 0) {
	       n = n << 1 | readBit();
	       length--;
	      }
	      return n;
	     }
	     function receiveAndExtend(length) {
	      if (length === 1) {
	       return readBit() === 1 ? 1 : -1;
	      }
	      var n = receive(length);
	      if (n >= 1 << length - 1) {
	       return n;
	      }
	      return n + (-1 << length) + 1;
	     }
	     function decodeBaseline(component, offset) {
	      var t = decodeHuffman(component.huffmanTableDC);
	      var diff = t === 0 ? 0 : receiveAndExtend(t);
	      component.blockData[offset] = component.pred += diff;
	      var k = 1;
	      while (k < 64) {
	       var rs = decodeHuffman(component.huffmanTableAC);
	       var s = rs & 15, r = rs >> 4;
	       if (s === 0) {
	        if (r < 15) {
	         break;
	        }
	        k += 16;
	        continue;
	       }
	       k += r;
	       var z = dctZigZag[k];
	       component.blockData[offset + z] = receiveAndExtend(s);
	       k++;
	      }
	     }
	     function decodeDCFirst(component, offset) {
	      var t = decodeHuffman(component.huffmanTableDC);
	      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;
	      component.blockData[offset] = component.pred += diff;
	     }
	     function decodeDCSuccessive(component, offset) {
	      component.blockData[offset] |= readBit() << successive;
	     }
	     var eobrun = 0;
	     function decodeACFirst(component, offset) {
	      if (eobrun > 0) {
	       eobrun--;
	       return;
	      }
	      var k = spectralStart, e = spectralEnd;
	      while (k <= e) {
	       var rs = decodeHuffman(component.huffmanTableAC);
	       var s = rs & 15, r = rs >> 4;
	       if (s === 0) {
	        if (r < 15) {
	         eobrun = receive(r) + (1 << r) - 1;
	         break;
	        }
	        k += 16;
	        continue;
	       }
	       k += r;
	       var z = dctZigZag[k];
	       component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);
	       k++;
	      }
	     }
	     var successiveACState = 0, successiveACNextValue;
	     function decodeACSuccessive(component, offset) {
	      var k = spectralStart;
	      var e = spectralEnd;
	      var r = 0;
	      var s;
	      var rs;
	      while (k <= e) {
	       var z = dctZigZag[k];
	       switch (successiveACState) {
	       case 0:
	        rs = decodeHuffman(component.huffmanTableAC);
	        s = rs & 15;
	        r = rs >> 4;
	        if (s === 0) {
	         if (r < 15) {
	          eobrun = receive(r) + (1 << r);
	          successiveACState = 4;
	         } else {
	          r = 16;
	          successiveACState = 1;
	         }
	        } else {
	         if (s !== 1) {
	          error('JPEG error: invalid ACn encoding');
	         }
	         successiveACNextValue = receiveAndExtend(s);
	         successiveACState = r ? 2 : 3;
	        }
	        continue;
	       case 1:
	       case 2:
	        if (component.blockData[offset + z]) {
	         component.blockData[offset + z] += readBit() << successive;
	        } else {
	         r--;
	         if (r === 0) {
	          successiveACState = successiveACState === 2 ? 3 : 0;
	         }
	        }
	        break;
	       case 3:
	        if (component.blockData[offset + z]) {
	         component.blockData[offset + z] += readBit() << successive;
	        } else {
	         component.blockData[offset + z] = successiveACNextValue << successive;
	         successiveACState = 0;
	        }
	        break;
	       case 4:
	        if (component.blockData[offset + z]) {
	         component.blockData[offset + z] += readBit() << successive;
	        }
	        break;
	       }
	       k++;
	      }
	      if (successiveACState === 4) {
	       eobrun--;
	       if (eobrun === 0) {
	        successiveACState = 0;
	       }
	      }
	     }
	     function decodeMcu(component, decode, mcu, row, col) {
	      var mcuRow = mcu / mcusPerLine | 0;
	      var mcuCol = mcu % mcusPerLine;
	      var blockRow = mcuRow * component.v + row;
	      var blockCol = mcuCol * component.h + col;
	      var offset = getBlockBufferOffset(component, blockRow, blockCol);
	      decode(component, offset);
	     }
	     function decodeBlock(component, decode, mcu) {
	      var blockRow = mcu / component.blocksPerLine | 0;
	      var blockCol = mcu % component.blocksPerLine;
	      var offset = getBlockBufferOffset(component, blockRow, blockCol);
	      decode(component, offset);
	     }
	     var componentsLength = components.length;
	     var component, i, j, k, n;
	     var decodeFn;
	     if (progressive) {
	      if (spectralStart === 0) {
	       decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;
	      } else {
	       decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;
	      }
	     } else {
	      decodeFn = decodeBaseline;
	     }
	     var mcu = 0, marker;
	     var mcuExpected;
	     if (componentsLength === 1) {
	      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;
	     } else {
	      mcuExpected = mcusPerLine * frame.mcusPerColumn;
	     }
	     if (!resetInterval) {
	      resetInterval = mcuExpected;
	     }
	     var h, v;
	     while (mcu < mcuExpected) {
	      for (i = 0; i < componentsLength; i++) {
	       components[i].pred = 0;
	      }
	      eobrun = 0;
	      if (componentsLength === 1) {
	       component = components[0];
	       for (n = 0; n < resetInterval; n++) {
	        decodeBlock(component, decodeFn, mcu);
	        mcu++;
	       }
	      } else {
	       for (n = 0; n < resetInterval; n++) {
	        for (i = 0; i < componentsLength; i++) {
	         component = components[i];
	         h = component.h;
	         v = component.v;
	         for (j = 0; j < v; j++) {
	          for (k = 0; k < h; k++) {
	           decodeMcu(component, decodeFn, mcu, j, k);
	          }
	         }
	        }
	        mcu++;
	       }
	      }
	      bitsCount = 0;
	      marker = data[offset] << 8 | data[offset + 1];
	      while (data[offset] === 0x00 && offset < data.length - 1) {
	       offset++;
	       marker = data[offset] << 8 | data[offset + 1];
	      }
	      if (marker <= 0xFF00) {
	       error('JPEG error: marker was not found');
	      }
	      if (marker >= 0xFFD0 && marker <= 0xFFD7) {
	       offset += 2;
	      } else {
	       break;
	      }
	     }
	     return offset - startOffset;
	    }
	    function quantizeAndInverse(component, blockBufferOffset, p) {
	     var qt = component.quantizationTable, blockData = component.blockData;
	     var v0, v1, v2, v3, v4, v5, v6, v7;
	     var p0, p1, p2, p3, p4, p5, p6, p7;
	     var t;
	     if (!qt) {
	      error('JPEG error: missing required Quantization Table.');
	     }
	     for (var row = 0; row < 64; row += 8) {
	      p0 = blockData[blockBufferOffset + row];
	      p1 = blockData[blockBufferOffset + row + 1];
	      p2 = blockData[blockBufferOffset + row + 2];
	      p3 = blockData[blockBufferOffset + row + 3];
	      p4 = blockData[blockBufferOffset + row + 4];
	      p5 = blockData[blockBufferOffset + row + 5];
	      p6 = blockData[blockBufferOffset + row + 6];
	      p7 = blockData[blockBufferOffset + row + 7];
	      p0 *= qt[row];
	      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {
	       t = dctSqrt2 * p0 + 512 >> 10;
	       p[row] = t;
	       p[row + 1] = t;
	       p[row + 2] = t;
	       p[row + 3] = t;
	       p[row + 4] = t;
	       p[row + 5] = t;
	       p[row + 6] = t;
	       p[row + 7] = t;
	       continue;
	      }
	      p1 *= qt[row + 1];
	      p2 *= qt[row + 2];
	      p3 *= qt[row + 3];
	      p4 *= qt[row + 4];
	      p5 *= qt[row + 5];
	      p6 *= qt[row + 6];
	      p7 *= qt[row + 7];
	      v0 = dctSqrt2 * p0 + 128 >> 8;
	      v1 = dctSqrt2 * p4 + 128 >> 8;
	      v2 = p2;
	      v3 = p6;
	      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;
	      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;
	      v5 = p3 << 4;
	      v6 = p5 << 4;
	      v0 = v0 + v1 + 1 >> 1;
	      v1 = v0 - v1;
	      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;
	      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;
	      v3 = t;
	      v4 = v4 + v6 + 1 >> 1;
	      v6 = v4 - v6;
	      v7 = v7 + v5 + 1 >> 1;
	      v5 = v7 - v5;
	      v0 = v0 + v3 + 1 >> 1;
	      v3 = v0 - v3;
	      v1 = v1 + v2 + 1 >> 1;
	      v2 = v1 - v2;
	      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;
	      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;
	      v7 = t;
	      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;
	      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;
	      v6 = t;
	      p[row] = v0 + v7;
	      p[row + 7] = v0 - v7;
	      p[row + 1] = v1 + v6;
	      p[row + 6] = v1 - v6;
	      p[row + 2] = v2 + v5;
	      p[row + 5] = v2 - v5;
	      p[row + 3] = v3 + v4;
	      p[row + 4] = v3 - v4;
	     }
	     for (var col = 0; col < 8; ++col) {
	      p0 = p[col];
	      p1 = p[col + 8];
	      p2 = p[col + 16];
	      p3 = p[col + 24];
	      p4 = p[col + 32];
	      p5 = p[col + 40];
	      p6 = p[col + 48];
	      p7 = p[col + 56];
	      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {
	       t = dctSqrt2 * p0 + 8192 >> 14;
	       t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;
	       blockData[blockBufferOffset + col] = t;
	       blockData[blockBufferOffset + col + 8] = t;
	       blockData[blockBufferOffset + col + 16] = t;
	       blockData[blockBufferOffset + col + 24] = t;
	       blockData[blockBufferOffset + col + 32] = t;
	       blockData[blockBufferOffset + col + 40] = t;
	       blockData[blockBufferOffset + col + 48] = t;
	       blockData[blockBufferOffset + col + 56] = t;
	       continue;
	      }
	      v0 = dctSqrt2 * p0 + 2048 >> 12;
	      v1 = dctSqrt2 * p4 + 2048 >> 12;
	      v2 = p2;
	      v3 = p6;
	      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;
	      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;
	      v5 = p3;
	      v6 = p5;
	      v0 = (v0 + v1 + 1 >> 1) + 4112;
	      v1 = v0 - v1;
	      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;
	      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;
	      v3 = t;
	      v4 = v4 + v6 + 1 >> 1;
	      v6 = v4 - v6;
	      v7 = v7 + v5 + 1 >> 1;
	      v5 = v7 - v5;
	      v0 = v0 + v3 + 1 >> 1;
	      v3 = v0 - v3;
	      v1 = v1 + v2 + 1 >> 1;
	      v2 = v1 - v2;
	      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;
	      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;
	      v7 = t;
	      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;
	      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;
	      v6 = t;
	      p0 = v0 + v7;
	      p7 = v0 - v7;
	      p1 = v1 + v6;
	      p6 = v1 - v6;
	      p2 = v2 + v5;
	      p5 = v2 - v5;
	      p3 = v3 + v4;
	      p4 = v3 - v4;
	      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;
	      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;
	      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;
	      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;
	      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;
	      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;
	      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;
	      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;
	      blockData[blockBufferOffset + col] = p0;
	      blockData[blockBufferOffset + col + 8] = p1;
	      blockData[blockBufferOffset + col + 16] = p2;
	      blockData[blockBufferOffset + col + 24] = p3;
	      blockData[blockBufferOffset + col + 32] = p4;
	      blockData[blockBufferOffset + col + 40] = p5;
	      blockData[blockBufferOffset + col + 48] = p6;
	      blockData[blockBufferOffset + col + 56] = p7;
	     }
	    }
	    function buildComponentData(frame, component) {
	     var blocksPerLine = component.blocksPerLine;
	     var blocksPerColumn = component.blocksPerColumn;
	     var computationBuffer = new Int16Array(64);
	     for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {
	      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {
	       var offset = getBlockBufferOffset(component, blockRow, blockCol);
	       quantizeAndInverse(component, offset, computationBuffer);
	      }
	     }
	     return component.blockData;
	    }
	    function clamp0to255(a) {
	     return a <= 0 ? 0 : a >= 255 ? 255 : a;
	    }
	    JpegImage.prototype = {
	     parse: function parse(data) {
	      function readUint16() {
	       var value = data[offset] << 8 | data[offset + 1];
	       offset += 2;
	       return value;
	      }
	      function readDataBlock() {
	       var length = readUint16();
	       var array = data.subarray(offset, offset + length - 2);
	       offset += array.length;
	       return array;
	      }
	      function prepareComponents(frame) {
	       var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);
	       var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);
	       for (var i = 0; i < frame.components.length; i++) {
	        component = frame.components[i];
	        var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);
	        var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);
	        var blocksPerLineForMcu = mcusPerLine * component.h;
	        var blocksPerColumnForMcu = mcusPerColumn * component.v;
	        var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);
	        component.blockData = new Int16Array(blocksBufferSize);
	        component.blocksPerLine = blocksPerLine;
	        component.blocksPerColumn = blocksPerColumn;
	       }
	       frame.mcusPerLine = mcusPerLine;
	       frame.mcusPerColumn = mcusPerColumn;
	      }
	      var offset = 0;
	      var jfif = null;
	      var adobe = null;
	      var frame, resetInterval;
	      var quantizationTables = [];
	      var huffmanTablesAC = [], huffmanTablesDC = [];
	      var fileMarker = readUint16();
	      if (fileMarker !== 0xFFD8) {
	       error('JPEG error: SOI not found');
	      }
	      fileMarker = readUint16();
	      while (fileMarker !== 0xFFD9) {
	       var i, j, l;
	       switch (fileMarker) {
	       case 0xFFE0:
	       case 0xFFE1:
	       case 0xFFE2:
	       case 0xFFE3:
	       case 0xFFE4:
	       case 0xFFE5:
	       case 0xFFE6:
	       case 0xFFE7:
	       case 0xFFE8:
	       case 0xFFE9:
	       case 0xFFEA:
	       case 0xFFEB:
	       case 0xFFEC:
	       case 0xFFED:
	       case 0xFFEE:
	       case 0xFFEF:
	       case 0xFFFE:
	        var appData = readDataBlock();
	        if (fileMarker === 0xFFE0) {
	         if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {
	          jfif = {
	           version: {
	            major: appData[5],
	            minor: appData[6]
	           },
	           densityUnits: appData[7],
	           xDensity: appData[8] << 8 | appData[9],
	           yDensity: appData[10] << 8 | appData[11],
	           thumbWidth: appData[12],
	           thumbHeight: appData[13],
	           thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])
	          };
	         }
	        }
	        if (fileMarker === 0xFFEE) {
	         if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {
	          adobe = {
	           version: appData[5] << 8 | appData[6],
	           flags0: appData[7] << 8 | appData[8],
	           flags1: appData[9] << 8 | appData[10],
	           transformCode: appData[11]
	          };
	         }
	        }
	        break;
	       case 0xFFDB:
	        var quantizationTablesLength = readUint16();
	        var quantizationTablesEnd = quantizationTablesLength + offset - 2;
	        var z;
	        while (offset < quantizationTablesEnd) {
	         var quantizationTableSpec = data[offset++];
	         var tableData = new Uint16Array(64);
	         if (quantizationTableSpec >> 4 === 0) {
	          for (j = 0; j < 64; j++) {
	           z = dctZigZag[j];
	           tableData[z] = data[offset++];
	          }
	         } else if (quantizationTableSpec >> 4 === 1) {
	          for (j = 0; j < 64; j++) {
	           z = dctZigZag[j];
	           tableData[z] = readUint16();
	          }
	         } else {
	          error('JPEG error: DQT - invalid table spec');
	         }
	         quantizationTables[quantizationTableSpec & 15] = tableData;
	        }
	        break;
	       case 0xFFC0:
	       case 0xFFC1:
	       case 0xFFC2:
	        if (frame) {
	         error('JPEG error: Only single frame JPEGs supported');
	        }
	        readUint16();
	        frame = {};
	        frame.extended = fileMarker === 0xFFC1;
	        frame.progressive = fileMarker === 0xFFC2;
	        frame.precision = data[offset++];
	        frame.scanLines = readUint16();
	        frame.samplesPerLine = readUint16();
	        frame.components = [];
	        frame.componentIds = {};
	        var componentsCount = data[offset++], componentId;
	        var maxH = 0, maxV = 0;
	        for (i = 0; i < componentsCount; i++) {
	         componentId = data[offset];
	         var h = data[offset + 1] >> 4;
	         var v = data[offset + 1] & 15;
	         if (maxH < h) {
	          maxH = h;
	         }
	         if (maxV < v) {
	          maxV = v;
	         }
	         var qId = data[offset + 2];
	         l = frame.components.push({
	          h: h,
	          v: v,
	          quantizationId: qId,
	          quantizationTable: null
	         });
	         frame.componentIds[componentId] = l - 1;
	         offset += 3;
	        }
	        frame.maxH = maxH;
	        frame.maxV = maxV;
	        prepareComponents(frame);
	        break;
	       case 0xFFC4:
	        var huffmanLength = readUint16();
	        for (i = 2; i < huffmanLength;) {
	         var huffmanTableSpec = data[offset++];
	         var codeLengths = new Uint8Array(16);
	         var codeLengthSum = 0;
	         for (j = 0; j < 16; j++, offset++) {
	          codeLengthSum += codeLengths[j] = data[offset];
	         }
	         var huffmanValues = new Uint8Array(codeLengthSum);
	         for (j = 0; j < codeLengthSum; j++, offset++) {
	          huffmanValues[j] = data[offset];
	         }
	         i += 17 + codeLengthSum;
	         (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);
	        }
	        break;
	       case 0xFFDD:
	        readUint16();
	        resetInterval = readUint16();
	        break;
	       case 0xFFDA:
	        var scanLength = readUint16();
	        var selectorsCount = data[offset++];
	        var components = [], component;
	        for (i = 0; i < selectorsCount; i++) {
	         var componentIndex = frame.componentIds[data[offset++]];
	         component = frame.components[componentIndex];
	         var tableSpec = data[offset++];
	         component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];
	         component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];
	         components.push(component);
	        }
	        var spectralStart = data[offset++];
	        var spectralEnd = data[offset++];
	        var successiveApproximation = data[offset++];
	        var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);
	        offset += processed;
	        break;
	       case 0xFFFF:
	        if (data[offset] !== 0xFF) {
	         offset--;
	        }
	        break;
	       default:
	        if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {
	         offset -= 3;
	         break;
	        }
	        error('JPEG error: unknown marker ' + fileMarker.toString(16));
	       }
	       fileMarker = readUint16();
	      }
	      this.width = frame.samplesPerLine;
	      this.height = frame.scanLines;
	      this.jfif = jfif;
	      this.adobe = adobe;
	      this.components = [];
	      for (i = 0; i < frame.components.length; i++) {
	       component = frame.components[i];
	       var quantizationTable = quantizationTables[component.quantizationId];
	       if (quantizationTable) {
	        component.quantizationTable = quantizationTable;
	       }
	       this.components.push({
	        output: buildComponentData(frame, component),
	        scaleX: component.h / frame.maxH,
	        scaleY: component.v / frame.maxV,
	        blocksPerLine: component.blocksPerLine,
	        blocksPerColumn: component.blocksPerColumn
	       });
	      }
	      this.numComponents = this.components.length;
	     },
	     _getLinearizedBlockData: function getLinearizedBlockData(width, height) {
	      var scaleX = this.width / width, scaleY = this.height / height;
	      var component, componentScaleX, componentScaleY, blocksPerScanline;
	      var x, y, i, j, k;
	      var index;
	      var offset = 0;
	      var output;
	      var numComponents = this.components.length;
	      var dataLength = width * height * numComponents;
	      var data = new Uint8Array(dataLength);
	      var xScaleBlockOffset = new Uint32Array(width);
	      var mask3LSB = 0xfffffff8;
	      for (i = 0; i < numComponents; i++) {
	       component = this.components[i];
	       componentScaleX = component.scaleX * scaleX;
	       componentScaleY = component.scaleY * scaleY;
	       offset = i;
	       output = component.output;
	       blocksPerScanline = component.blocksPerLine + 1 << 3;
	       for (x = 0; x < width; x++) {
	        j = 0 | x * componentScaleX;
	        xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;
	       }
	       for (y = 0; y < height; y++) {
	        j = 0 | y * componentScaleY;
	        index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;
	        for (x = 0; x < width; x++) {
	         data[offset] = output[index + xScaleBlockOffset[x]];
	         offset += numComponents;
	        }
	       }
	      }
	      var transform = this.decodeTransform;
	      if (transform) {
	       for (i = 0; i < dataLength;) {
	        for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {
	         data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];
	        }
	       }
	      }
	      return data;
	     },
	     _isColorConversionNeeded: function isColorConversionNeeded() {
	      if (this.adobe && this.adobe.transformCode) {
	       return true;
	      } else if (this.numComponents === 3) {
	       if (!this.adobe && this.colorTransform === 0) {
	        return false;
	       }
	       return true;
	      }
	      if (!this.adobe && this.colorTransform === 1) {
	       return true;
	      }
	      return false;
	     },
	     _convertYccToRgb: function convertYccToRgb(data) {
	      var Y, Cb, Cr;
	      for (var i = 0, length = data.length; i < length; i += 3) {
	       Y = data[i];
	       Cb = data[i + 1];
	       Cr = data[i + 2];
	       data[i] = clamp0to255(Y - 179.456 + 1.402 * Cr);
	       data[i + 1] = clamp0to255(Y + 135.459 - 0.344 * Cb - 0.714 * Cr);
	       data[i + 2] = clamp0to255(Y - 226.816 + 1.772 * Cb);
	      }
	      return data;
	     },
	     _convertYcckToRgb: function convertYcckToRgb(data) {
	      var Y, Cb, Cr, k;
	      var offset = 0;
	      for (var i = 0, length = data.length; i < length; i += 4) {
	       Y = data[i];
	       Cb = data[i + 1];
	       Cr = data[i + 2];
	       k = data[i + 3];
	       var r = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);
	       var g = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);
	       var b = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);
	       data[offset++] = clamp0to255(r);
	       data[offset++] = clamp0to255(g);
	       data[offset++] = clamp0to255(b);
	      }
	      return data;
	     },
	     _convertYcckToCmyk: function convertYcckToCmyk(data) {
	      var Y, Cb, Cr;
	      for (var i = 0, length = data.length; i < length; i += 4) {
	       Y = data[i];
	       Cb = data[i + 1];
	       Cr = data[i + 2];
	       data[i] = clamp0to255(434.456 - Y - 1.402 * Cr);
	       data[i + 1] = clamp0to255(119.541 - Y + 0.344 * Cb + 0.714 * Cr);
	       data[i + 2] = clamp0to255(481.816 - Y - 1.772 * Cb);
	      }
	      return data;
	     },
	     _convertCmykToRgb: function convertCmykToRgb(data) {
	      var c, m, y, k;
	      var offset = 0;
	      var min = -255 * 255 * 255;
	      var scale = 1 / 255 / 255;
	      for (var i = 0, length = data.length; i < length; i += 4) {
	       c = data[i];
	       m = data[i + 1];
	       y = data[i + 2];
	       k = data[i + 3];
	       var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 72734.4411664936) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 1401.7366389350734) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 4465.541406466231) - k * (21.86122147463605 * k + 48317.86113160301);
	       var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 20220.756542821975) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 48691.05921601825) + y * (4.444339102852739 * y + 9.8632861493405 * k - 6341.191035517494) - k * (20.737325471181034 * k + 47890.15695978492);
	       var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 3616.812083916688) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 28620.90484698408) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 49363.43385999684) - k * (22.33816807309886 * k + 45932.16563550634);
	       data[offset++] = r >= 0 ? 255 : r <= min ? 0 : 255 + r * scale | 0;
	       data[offset++] = g >= 0 ? 255 : g <= min ? 0 : 255 + g * scale | 0;
	       data[offset++] = b >= 0 ? 255 : b <= min ? 0 : 255 + b * scale | 0;
	      }
	      return data;
	     },
	     getData: function getData(width, height, forceRGBoutput) {
	      if (this.numComponents > 4) {
	       error('JPEG error: Unsupported color mode');
	      }
	      var data = this._getLinearizedBlockData(width, height);
	      if (this.numComponents === 1 && forceRGBoutput) {
	       var dataLength = data.length;
	       var rgbData = new Uint8Array(dataLength * 3);
	       var offset = 0;
	       for (var i = 0; i < dataLength; i++) {
	        var grayColor = data[i];
	        rgbData[offset++] = grayColor;
	        rgbData[offset++] = grayColor;
	        rgbData[offset++] = grayColor;
	       }
	       return rgbData;
	      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {
	       return this._convertYccToRgb(data);
	      } else if (this.numComponents === 4) {
	       if (this._isColorConversionNeeded()) {
	        if (forceRGBoutput) {
	         return this._convertYcckToRgb(data);
	        }
	        return this._convertYcckToCmyk(data);
	       } else if (forceRGBoutput) {
	        return this._convertCmykToRgb(data);
	       }
	      }
	      return data;
	     }
	    };
	    return JpegImage;
	   }();
	   exports.JpegImage = JpegImage;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreJpx = {}, root.pdfjsSharedUtil, root.pdfjsCoreArithmeticDecoder);
	  }(this, function (exports, sharedUtil, coreArithmeticDecoder) {
	   var info = sharedUtil.info;
	   var warn = sharedUtil.warn;
	   var error = sharedUtil.error;
	   var log2 = sharedUtil.log2;
	   var readUint16 = sharedUtil.readUint16;
	   var readUint32 = sharedUtil.readUint32;
	   var ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;
	   var JpxImage = function JpxImageClosure() {
	    var SubbandsGainLog2 = {
	     'LL': 0,
	     'LH': 1,
	     'HL': 1,
	     'HH': 2
	    };
	    function JpxImage() {
	     this.failOnCorruptedImage = false;
	    }
	    JpxImage.prototype = {
	     parse: function JpxImage_parse(data) {
	      var head = readUint16(data, 0);
	      if (head === 0xFF4F) {
	       this.parseCodestream(data, 0, data.length);
	       return;
	      }
	      var position = 0, length = data.length;
	      while (position < length) {
	       var headerSize = 8;
	       var lbox = readUint32(data, position);
	       var tbox = readUint32(data, position + 4);
	       position += headerSize;
	       if (lbox === 1) {
	        lbox = readUint32(data, position) * 4294967296 + readUint32(data, position + 4);
	        position += 8;
	        headerSize += 8;
	       }
	       if (lbox === 0) {
	        lbox = length - position + headerSize;
	       }
	       if (lbox < headerSize) {
	        error('JPX Error: Invalid box field size');
	       }
	       var dataLength = lbox - headerSize;
	       var jumpDataLength = true;
	       switch (tbox) {
	       case 0x6A703268:
	        jumpDataLength = false;
	        break;
	       case 0x636F6C72:
	        var method = data[position];
	        if (method === 1) {
	         var colorspace = readUint32(data, position + 3);
	         switch (colorspace) {
	         case 16:
	         case 17:
	         case 18:
	          break;
	         default:
	          warn('Unknown colorspace ' + colorspace);
	          break;
	         }
	        } else if (method === 2) {
	         info('ICC profile not supported');
	        }
	        break;
	       case 0x6A703263:
	        this.parseCodestream(data, position, position + dataLength);
	        break;
	       case 0x6A502020:
	        if (0x0d0a870a !== readUint32(data, position)) {
	         warn('Invalid JP2 signature');
	        }
	        break;
	       case 0x6A501A1A:
	       case 0x66747970:
	       case 0x72726571:
	       case 0x72657320:
	       case 0x69686472:
	        break;
	       default:
	        var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);
	        warn('Unsupported header type ' + tbox + ' (' + headerType + ')');
	        break;
	       }
	       if (jumpDataLength) {
	        position += dataLength;
	       }
	      }
	     },
	     parseImageProperties: function JpxImage_parseImageProperties(stream) {
	      var newByte = stream.getByte();
	      while (newByte >= 0) {
	       var oldByte = newByte;
	       newByte = stream.getByte();
	       var code = oldByte << 8 | newByte;
	       if (code === 0xFF51) {
	        stream.skip(4);
	        var Xsiz = stream.getInt32() >>> 0;
	        var Ysiz = stream.getInt32() >>> 0;
	        var XOsiz = stream.getInt32() >>> 0;
	        var YOsiz = stream.getInt32() >>> 0;
	        stream.skip(16);
	        var Csiz = stream.getUint16();
	        this.width = Xsiz - XOsiz;
	        this.height = Ysiz - YOsiz;
	        this.componentsCount = Csiz;
	        this.bitsPerComponent = 8;
	        return;
	       }
	      }
	      error('JPX Error: No size marker found in JPX stream');
	     },
	     parseCodestream: function JpxImage_parseCodestream(data, start, end) {
	      var context = {};
	      var doNotRecover = false;
	      try {
	       var position = start;
	       while (position + 1 < end) {
	        var code = readUint16(data, position);
	        position += 2;
	        var length = 0, j, sqcd, spqcds, spqcdSize, scalarExpounded, tile;
	        switch (code) {
	        case 0xFF4F:
	         context.mainHeader = true;
	         break;
	        case 0xFFD9:
	         break;
	        case 0xFF51:
	         length = readUint16(data, position);
	         var siz = {};
	         siz.Xsiz = readUint32(data, position + 4);
	         siz.Ysiz = readUint32(data, position + 8);
	         siz.XOsiz = readUint32(data, position + 12);
	         siz.YOsiz = readUint32(data, position + 16);
	         siz.XTsiz = readUint32(data, position + 20);
	         siz.YTsiz = readUint32(data, position + 24);
	         siz.XTOsiz = readUint32(data, position + 28);
	         siz.YTOsiz = readUint32(data, position + 32);
	         var componentsCount = readUint16(data, position + 36);
	         siz.Csiz = componentsCount;
	         var components = [];
	         j = position + 38;
	         for (var i = 0; i < componentsCount; i++) {
	          var component = {
	           precision: (data[j] & 0x7F) + 1,
	           isSigned: !!(data[j] & 0x80),
	           XRsiz: data[j + 1],
	           YRsiz: data[j + 1]
	          };
	          calculateComponentDimensions(component, siz);
	          components.push(component);
	         }
	         context.SIZ = siz;
	         context.components = components;
	         calculateTileGrids(context, components);
	         context.QCC = [];
	         context.COC = [];
	         break;
	        case 0xFF5C:
	         length = readUint16(data, position);
	         var qcd = {};
	         j = position + 2;
	         sqcd = data[j++];
	         switch (sqcd & 0x1F) {
	         case 0:
	          spqcdSize = 8;
	          scalarExpounded = true;
	          break;
	         case 1:
	          spqcdSize = 16;
	          scalarExpounded = false;
	          break;
	         case 2:
	          spqcdSize = 16;
	          scalarExpounded = true;
	          break;
	         default:
	          throw new Error('Invalid SQcd value ' + sqcd);
	         }
	         qcd.noQuantization = spqcdSize === 8;
	         qcd.scalarExpounded = scalarExpounded;
	         qcd.guardBits = sqcd >> 5;
	         spqcds = [];
	         while (j < length + position) {
	          var spqcd = {};
	          if (spqcdSize === 8) {
	           spqcd.epsilon = data[j++] >> 3;
	           spqcd.mu = 0;
	          } else {
	           spqcd.epsilon = data[j] >> 3;
	           spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];
	           j += 2;
	          }
	          spqcds.push(spqcd);
	         }
	         qcd.SPqcds = spqcds;
	         if (context.mainHeader) {
	          context.QCD = qcd;
	         } else {
	          context.currentTile.QCD = qcd;
	          context.currentTile.QCC = [];
	         }
	         break;
	        case 0xFF5D:
	         length = readUint16(data, position);
	         var qcc = {};
	         j = position + 2;
	         var cqcc;
	         if (context.SIZ.Csiz < 257) {
	          cqcc = data[j++];
	         } else {
	          cqcc = readUint16(data, j);
	          j += 2;
	         }
	         sqcd = data[j++];
	         switch (sqcd & 0x1F) {
	         case 0:
	          spqcdSize = 8;
	          scalarExpounded = true;
	          break;
	         case 1:
	          spqcdSize = 16;
	          scalarExpounded = false;
	          break;
	         case 2:
	          spqcdSize = 16;
	          scalarExpounded = true;
	          break;
	         default:
	          throw new Error('Invalid SQcd value ' + sqcd);
	         }
	         qcc.noQuantization = spqcdSize === 8;
	         qcc.scalarExpounded = scalarExpounded;
	         qcc.guardBits = sqcd >> 5;
	         spqcds = [];
	         while (j < length + position) {
	          spqcd = {};
	          if (spqcdSize === 8) {
	           spqcd.epsilon = data[j++] >> 3;
	           spqcd.mu = 0;
	          } else {
	           spqcd.epsilon = data[j] >> 3;
	           spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];
	           j += 2;
	          }
	          spqcds.push(spqcd);
	         }
	         qcc.SPqcds = spqcds;
	         if (context.mainHeader) {
	          context.QCC[cqcc] = qcc;
	         } else {
	          context.currentTile.QCC[cqcc] = qcc;
	         }
	         break;
	        case 0xFF52:
	         length = readUint16(data, position);
	         var cod = {};
	         j = position + 2;
	         var scod = data[j++];
	         cod.entropyCoderWithCustomPrecincts = !!(scod & 1);
	         cod.sopMarkerUsed = !!(scod & 2);
	         cod.ephMarkerUsed = !!(scod & 4);
	         cod.progressionOrder = data[j++];
	         cod.layersCount = readUint16(data, j);
	         j += 2;
	         cod.multipleComponentTransform = data[j++];
	         cod.decompositionLevelsCount = data[j++];
	         cod.xcb = (data[j++] & 0xF) + 2;
	         cod.ycb = (data[j++] & 0xF) + 2;
	         var blockStyle = data[j++];
	         cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);
	         cod.resetContextProbabilities = !!(blockStyle & 2);
	         cod.terminationOnEachCodingPass = !!(blockStyle & 4);
	         cod.verticalyStripe = !!(blockStyle & 8);
	         cod.predictableTermination = !!(blockStyle & 16);
	         cod.segmentationSymbolUsed = !!(blockStyle & 32);
	         cod.reversibleTransformation = data[j++];
	         if (cod.entropyCoderWithCustomPrecincts) {
	          var precinctsSizes = [];
	          while (j < length + position) {
	           var precinctsSize = data[j++];
	           precinctsSizes.push({
	            PPx: precinctsSize & 0xF,
	            PPy: precinctsSize >> 4
	           });
	          }
	          cod.precinctsSizes = precinctsSizes;
	         }
	         var unsupported = [];
	         if (cod.selectiveArithmeticCodingBypass) {
	          unsupported.push('selectiveArithmeticCodingBypass');
	         }
	         if (cod.resetContextProbabilities) {
	          unsupported.push('resetContextProbabilities');
	         }
	         if (cod.terminationOnEachCodingPass) {
	          unsupported.push('terminationOnEachCodingPass');
	         }
	         if (cod.verticalyStripe) {
	          unsupported.push('verticalyStripe');
	         }
	         if (cod.predictableTermination) {
	          unsupported.push('predictableTermination');
	         }
	         if (unsupported.length > 0) {
	          doNotRecover = true;
	          throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');
	         }
	         if (context.mainHeader) {
	          context.COD = cod;
	         } else {
	          context.currentTile.COD = cod;
	          context.currentTile.COC = [];
	         }
	         break;
	        case 0xFF90:
	         length = readUint16(data, position);
	         tile = {};
	         tile.index = readUint16(data, position + 2);
	         tile.length = readUint32(data, position + 4);
	         tile.dataEnd = tile.length + position - 2;
	         tile.partIndex = data[position + 8];
	         tile.partsCount = data[position + 9];
	         context.mainHeader = false;
	         if (tile.partIndex === 0) {
	          tile.COD = context.COD;
	          tile.COC = context.COC.slice(0);
	          tile.QCD = context.QCD;
	          tile.QCC = context.QCC.slice(0);
	         }
	         context.currentTile = tile;
	         break;
	        case 0xFF93:
	         tile = context.currentTile;
	         if (tile.partIndex === 0) {
	          initializeTile(context, tile.index);
	          buildPackets(context);
	         }
	         length = tile.dataEnd - position;
	         parseTilePackets(context, data, position, length);
	         break;
	        case 0xFF55:
	        case 0xFF57:
	        case 0xFF58:
	        case 0xFF64:
	         length = readUint16(data, position);
	         break;
	        case 0xFF53:
	         throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');
	        default:
	         throw new Error('Unknown codestream code: ' + code.toString(16));
	        }
	        position += length;
	       }
	      } catch (e) {
	       if (doNotRecover || this.failOnCorruptedImage) {
	        error('JPX Error: ' + e.message);
	       } else {
	        warn('JPX: Trying to recover from: ' + e.message);
	       }
	      }
	      this.tiles = transformComponents(context);
	      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;
	      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;
	      this.componentsCount = context.SIZ.Csiz;
	     }
	    };
	    function calculateComponentDimensions(component, siz) {
	     component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);
	     component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);
	     component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);
	     component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);
	     component.width = component.x1 - component.x0;
	     component.height = component.y1 - component.y0;
	    }
	    function calculateTileGrids(context, components) {
	     var siz = context.SIZ;
	     var tile, tiles = [];
	     var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);
	     var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);
	     for (var q = 0; q < numYtiles; q++) {
	      for (var p = 0; p < numXtiles; p++) {
	       tile = {};
	       tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);
	       tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);
	       tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);
	       tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);
	       tile.width = tile.tx1 - tile.tx0;
	       tile.height = tile.ty1 - tile.ty0;
	       tile.components = [];
	       tiles.push(tile);
	      }
	     }
	     context.tiles = tiles;
	     var componentsCount = siz.Csiz;
	     for (var i = 0, ii = componentsCount; i < ii; i++) {
	      var component = components[i];
	      for (var j = 0, jj = tiles.length; j < jj; j++) {
	       var tileComponent = {};
	       tile = tiles[j];
	       tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);
	       tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);
	       tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);
	       tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);
	       tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;
	       tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;
	       tile.components[i] = tileComponent;
	      }
	     }
	    }
	    function getBlocksDimensions(context, component, r) {
	     var codOrCoc = component.codingStyleParameters;
	     var result = {};
	     if (!codOrCoc.entropyCoderWithCustomPrecincts) {
	      result.PPx = 15;
	      result.PPy = 15;
	     } else {
	      result.PPx = codOrCoc.precinctsSizes[r].PPx;
	      result.PPy = codOrCoc.precinctsSizes[r].PPy;
	     }
	     result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);
	     result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);
	     return result;
	    }
	    function buildPrecincts(context, resolution, dimensions) {
	     var precinctWidth = 1 << dimensions.PPx;
	     var precinctHeight = 1 << dimensions.PPy;
	     var isZeroRes = resolution.resLevel === 0;
	     var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);
	     var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);
	     var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;
	     var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;
	     var numprecincts = numprecinctswide * numprecinctshigh;
	     resolution.precinctParameters = {
	      precinctWidth: precinctWidth,
	      precinctHeight: precinctHeight,
	      numprecinctswide: numprecinctswide,
	      numprecinctshigh: numprecinctshigh,
	      numprecincts: numprecincts,
	      precinctWidthInSubband: precinctWidthInSubband,
	      precinctHeightInSubband: precinctHeightInSubband
	     };
	    }
	    function buildCodeblocks(context, subband, dimensions) {
	     var xcb_ = dimensions.xcb_;
	     var ycb_ = dimensions.ycb_;
	     var codeblockWidth = 1 << xcb_;
	     var codeblockHeight = 1 << ycb_;
	     var cbx0 = subband.tbx0 >> xcb_;
	     var cby0 = subband.tby0 >> ycb_;
	     var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;
	     var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;
	     var precinctParameters = subband.resolution.precinctParameters;
	     var codeblocks = [];
	     var precincts = [];
	     var i, j, codeblock, precinctNumber;
	     for (j = cby0; j < cby1; j++) {
	      for (i = cbx0; i < cbx1; i++) {
	       codeblock = {
	        cbx: i,
	        cby: j,
	        tbx0: codeblockWidth * i,
	        tby0: codeblockHeight * j,
	        tbx1: codeblockWidth * (i + 1),
	        tby1: codeblockHeight * (j + 1)
	       };
	       codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);
	       codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);
	       codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);
	       codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);
	       var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);
	       var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);
	       precinctNumber = pi + pj * precinctParameters.numprecinctswide;
	       codeblock.precinctNumber = precinctNumber;
	       codeblock.subbandType = subband.type;
	       codeblock.Lblock = 3;
	       if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {
	        continue;
	       }
	       codeblocks.push(codeblock);
	       var precinct = precincts[precinctNumber];
	       if (precinct !== undefined) {
	        if (i < precinct.cbxMin) {
	         precinct.cbxMin = i;
	        } else if (i > precinct.cbxMax) {
	         precinct.cbxMax = i;
	        }
	        if (j < precinct.cbyMin) {
	         precinct.cbxMin = j;
	        } else if (j > precinct.cbyMax) {
	         precinct.cbyMax = j;
	        }
	       } else {
	        precincts[precinctNumber] = precinct = {
	         cbxMin: i,
	         cbyMin: j,
	         cbxMax: i,
	         cbyMax: j
	        };
	       }
	       codeblock.precinct = precinct;
	      }
	     }
	     subband.codeblockParameters = {
	      codeblockWidth: xcb_,
	      codeblockHeight: ycb_,
	      numcodeblockwide: cbx1 - cbx0 + 1,
	      numcodeblockhigh: cby1 - cby0 + 1
	     };
	     subband.codeblocks = codeblocks;
	     subband.precincts = precincts;
	    }
	    function createPacket(resolution, precinctNumber, layerNumber) {
	     var precinctCodeblocks = [];
	     var subbands = resolution.subbands;
	     for (var i = 0, ii = subbands.length; i < ii; i++) {
	      var subband = subbands[i];
	      var codeblocks = subband.codeblocks;
	      for (var j = 0, jj = codeblocks.length; j < jj; j++) {
	       var codeblock = codeblocks[j];
	       if (codeblock.precinctNumber !== precinctNumber) {
	        continue;
	       }
	       precinctCodeblocks.push(codeblock);
	      }
	     }
	     return {
	      layerNumber: layerNumber,
	      codeblocks: precinctCodeblocks
	     };
	    }
	    function LayerResolutionComponentPositionIterator(context) {
	     var siz = context.SIZ;
	     var tileIndex = context.currentTile.index;
	     var tile = context.tiles[tileIndex];
	     var layersCount = tile.codingStyleDefaultParameters.layersCount;
	     var componentsCount = siz.Csiz;
	     var maxDecompositionLevelsCount = 0;
	     for (var q = 0; q < componentsCount; q++) {
	      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);
	     }
	     var l = 0, r = 0, i = 0, k = 0;
	     this.nextPacket = function JpxImage_nextPacket() {
	      for (; l < layersCount; l++) {
	       for (; r <= maxDecompositionLevelsCount; r++) {
	        for (; i < componentsCount; i++) {
	         var component = tile.components[i];
	         if (r > component.codingStyleParameters.decompositionLevelsCount) {
	          continue;
	         }
	         var resolution = component.resolutions[r];
	         var numprecincts = resolution.precinctParameters.numprecincts;
	         for (; k < numprecincts;) {
	          var packet = createPacket(resolution, k, l);
	          k++;
	          return packet;
	         }
	         k = 0;
	        }
	        i = 0;
	       }
	       r = 0;
	      }
	      error('JPX Error: Out of packets');
	     };
	    }
	    function ResolutionLayerComponentPositionIterator(context) {
	     var siz = context.SIZ;
	     var tileIndex = context.currentTile.index;
	     var tile = context.tiles[tileIndex];
	     var layersCount = tile.codingStyleDefaultParameters.layersCount;
	     var componentsCount = siz.Csiz;
	     var maxDecompositionLevelsCount = 0;
	     for (var q = 0; q < componentsCount; q++) {
	      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);
	     }
	     var r = 0, l = 0, i = 0, k = 0;
	     this.nextPacket = function JpxImage_nextPacket() {
	      for (; r <= maxDecompositionLevelsCount; r++) {
	       for (; l < layersCount; l++) {
	        for (; i < componentsCount; i++) {
	         var component = tile.components[i];
	         if (r > component.codingStyleParameters.decompositionLevelsCount) {
	          continue;
	         }
	         var resolution = component.resolutions[r];
	         var numprecincts = resolution.precinctParameters.numprecincts;
	         for (; k < numprecincts;) {
	          var packet = createPacket(resolution, k, l);
	          k++;
	          return packet;
	         }
	         k = 0;
	        }
	        i = 0;
	       }
	       l = 0;
	      }
	      error('JPX Error: Out of packets');
	     };
	    }
	    function ResolutionPositionComponentLayerIterator(context) {
	     var siz = context.SIZ;
	     var tileIndex = context.currentTile.index;
	     var tile = context.tiles[tileIndex];
	     var layersCount = tile.codingStyleDefaultParameters.layersCount;
	     var componentsCount = siz.Csiz;
	     var l, r, c, p;
	     var maxDecompositionLevelsCount = 0;
	     for (c = 0; c < componentsCount; c++) {
	      var component = tile.components[c];
	      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);
	     }
	     var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);
	     for (r = 0; r <= maxDecompositionLevelsCount; ++r) {
	      var maxNumPrecincts = 0;
	      for (c = 0; c < componentsCount; ++c) {
	       var resolutions = tile.components[c].resolutions;
	       if (r < resolutions.length) {
	        maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);
	       }
	      }
	      maxNumPrecinctsInLevel[r] = maxNumPrecincts;
	     }
	     l = 0;
	     r = 0;
	     c = 0;
	     p = 0;
	     this.nextPacket = function JpxImage_nextPacket() {
	      for (; r <= maxDecompositionLevelsCount; r++) {
	       for (; p < maxNumPrecinctsInLevel[r]; p++) {
	        for (; c < componentsCount; c++) {
	         var component = tile.components[c];
	         if (r > component.codingStyleParameters.decompositionLevelsCount) {
	          continue;
	         }
	         var resolution = component.resolutions[r];
	         var numprecincts = resolution.precinctParameters.numprecincts;
	         if (p >= numprecincts) {
	          continue;
	         }
	         for (; l < layersCount;) {
	          var packet = createPacket(resolution, p, l);
	          l++;
	          return packet;
	         }
	         l = 0;
	        }
	        c = 0;
	       }
	       p = 0;
	      }
	      error('JPX Error: Out of packets');
	     };
	    }
	    function PositionComponentResolutionLayerIterator(context) {
	     var siz = context.SIZ;
	     var tileIndex = context.currentTile.index;
	     var tile = context.tiles[tileIndex];
	     var layersCount = tile.codingStyleDefaultParameters.layersCount;
	     var componentsCount = siz.Csiz;
	     var precinctsSizes = getPrecinctSizesInImageScale(tile);
	     var precinctsIterationSizes = precinctsSizes;
	     var l = 0, r = 0, c = 0, px = 0, py = 0;
	     this.nextPacket = function JpxImage_nextPacket() {
	      for (; py < precinctsIterationSizes.maxNumHigh; py++) {
	       for (; px < precinctsIterationSizes.maxNumWide; px++) {
	        for (; c < componentsCount; c++) {
	         var component = tile.components[c];
	         var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;
	         for (; r <= decompositionLevelsCount; r++) {
	          var resolution = component.resolutions[r];
	          var sizeInImageScale = precinctsSizes.components[c].resolutions[r];
	          var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);
	          if (k === null) {
	           continue;
	          }
	          for (; l < layersCount;) {
	           var packet = createPacket(resolution, k, l);
	           l++;
	           return packet;
	          }
	          l = 0;
	         }
	         r = 0;
	        }
	        c = 0;
	       }
	       px = 0;
	      }
	      error('JPX Error: Out of packets');
	     };
	    }
	    function ComponentPositionResolutionLayerIterator(context) {
	     var siz = context.SIZ;
	     var tileIndex = context.currentTile.index;
	     var tile = context.tiles[tileIndex];
	     var layersCount = tile.codingStyleDefaultParameters.layersCount;
	     var componentsCount = siz.Csiz;
	     var precinctsSizes = getPrecinctSizesInImageScale(tile);
	     var l = 0, r = 0, c = 0, px = 0, py = 0;
	     this.nextPacket = function JpxImage_nextPacket() {
	      for (; c < componentsCount; ++c) {
	       var component = tile.components[c];
	       var precinctsIterationSizes = precinctsSizes.components[c];
	       var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;
	       for (; py < precinctsIterationSizes.maxNumHigh; py++) {
	        for (; px < precinctsIterationSizes.maxNumWide; px++) {
	         for (; r <= decompositionLevelsCount; r++) {
	          var resolution = component.resolutions[r];
	          var sizeInImageScale = precinctsIterationSizes.resolutions[r];
	          var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);
	          if (k === null) {
	           continue;
	          }
	          for (; l < layersCount;) {
	           var packet = createPacket(resolution, k, l);
	           l++;
	           return packet;
	          }
	          l = 0;
	         }
	         r = 0;
	        }
	        px = 0;
	       }
	       py = 0;
	      }
	      error('JPX Error: Out of packets');
	     };
	    }
	    function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {
	     var posX = pxIndex * precinctIterationSizes.minWidth;
	     var posY = pyIndex * precinctIterationSizes.minHeight;
	     if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {
	      return null;
	     }
	     var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;
	     return posX / sizeInImageScale.height + startPrecinctRowIndex;
	    }
	    function getPrecinctSizesInImageScale(tile) {
	     var componentsCount = tile.components.length;
	     var minWidth = Number.MAX_VALUE;
	     var minHeight = Number.MAX_VALUE;
	     var maxNumWide = 0;
	     var maxNumHigh = 0;
	     var sizePerComponent = new Array(componentsCount);
	     for (var c = 0; c < componentsCount; c++) {
	      var component = tile.components[c];
	      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;
	      var sizePerResolution = new Array(decompositionLevelsCount + 1);
	      var minWidthCurrentComponent = Number.MAX_VALUE;
	      var minHeightCurrentComponent = Number.MAX_VALUE;
	      var maxNumWideCurrentComponent = 0;
	      var maxNumHighCurrentComponent = 0;
	      var scale = 1;
	      for (var r = decompositionLevelsCount; r >= 0; --r) {
	       var resolution = component.resolutions[r];
	       var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;
	       var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;
	       minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);
	       minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);
	       maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);
	       maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);
	       sizePerResolution[r] = {
	        width: widthCurrentResolution,
	        height: heightCurrentResolution
	       };
	       scale <<= 1;
	      }
	      minWidth = Math.min(minWidth, minWidthCurrentComponent);
	      minHeight = Math.min(minHeight, minHeightCurrentComponent);
	      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);
	      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);
	      sizePerComponent[c] = {
	       resolutions: sizePerResolution,
	       minWidth: minWidthCurrentComponent,
	       minHeight: minHeightCurrentComponent,
	       maxNumWide: maxNumWideCurrentComponent,
	       maxNumHigh: maxNumHighCurrentComponent
	      };
	     }
	     return {
	      components: sizePerComponent,
	      minWidth: minWidth,
	      minHeight: minHeight,
	      maxNumWide: maxNumWide,
	      maxNumHigh: maxNumHigh
	     };
	    }
	    function buildPackets(context) {
	     var siz = context.SIZ;
	     var tileIndex = context.currentTile.index;
	     var tile = context.tiles[tileIndex];
	     var componentsCount = siz.Csiz;
	     for (var c = 0; c < componentsCount; c++) {
	      var component = tile.components[c];
	      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;
	      var resolutions = [];
	      var subbands = [];
	      for (var r = 0; r <= decompositionLevelsCount; r++) {
	       var blocksDimensions = getBlocksDimensions(context, component, r);
	       var resolution = {};
	       var scale = 1 << decompositionLevelsCount - r;
	       resolution.trx0 = Math.ceil(component.tcx0 / scale);
	       resolution.try0 = Math.ceil(component.tcy0 / scale);
	       resolution.trx1 = Math.ceil(component.tcx1 / scale);
	       resolution.try1 = Math.ceil(component.tcy1 / scale);
	       resolution.resLevel = r;
	       buildPrecincts(context, resolution, blocksDimensions);
	       resolutions.push(resolution);
	       var subband;
	       if (r === 0) {
	        subband = {};
	        subband.type = 'LL';
	        subband.tbx0 = Math.ceil(component.tcx0 / scale);
	        subband.tby0 = Math.ceil(component.tcy0 / scale);
	        subband.tbx1 = Math.ceil(component.tcx1 / scale);
	        subband.tby1 = Math.ceil(component.tcy1 / scale);
	        subband.resolution = resolution;
	        buildCodeblocks(context, subband, blocksDimensions);
	        subbands.push(subband);
	        resolution.subbands = [subband];
	       } else {
	        var bscale = 1 << decompositionLevelsCount - r + 1;
	        var resolutionSubbands = [];
	        subband = {};
	        subband.type = 'HL';
	        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);
	        subband.tby0 = Math.ceil(component.tcy0 / bscale);
	        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);
	        subband.tby1 = Math.ceil(component.tcy1 / bscale);
	        subband.resolution = resolution;
	        buildCodeblocks(context, subband, blocksDimensions);
	        subbands.push(subband);
	        resolutionSubbands.push(subband);
	        subband = {};
	        subband.type = 'LH';
	        subband.tbx0 = Math.ceil(component.tcx0 / bscale);
	        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);
	        subband.tbx1 = Math.ceil(component.tcx1 / bscale);
	        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);
	        subband.resolution = resolution;
	        buildCodeblocks(context, subband, blocksDimensions);
	        subbands.push(subband);
	        resolutionSubbands.push(subband);
	        subband = {};
	        subband.type = 'HH';
	        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);
	        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);
	        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);
	        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);
	        subband.resolution = resolution;
	        buildCodeblocks(context, subband, blocksDimensions);
	        subbands.push(subband);
	        resolutionSubbands.push(subband);
	        resolution.subbands = resolutionSubbands;
	       }
	      }
	      component.resolutions = resolutions;
	      component.subbands = subbands;
	     }
	     var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;
	     switch (progressionOrder) {
	     case 0:
	      tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);
	      break;
	     case 1:
	      tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);
	      break;
	     case 2:
	      tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);
	      break;
	     case 3:
	      tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);
	      break;
	     case 4:
	      tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);
	      break;
	     default:
	      error('JPX Error: Unsupported progression order ' + progressionOrder);
	     }
	    }
	    function parseTilePackets(context, data, offset, dataLength) {
	     var position = 0;
	     var buffer, bufferSize = 0, skipNextBit = false;
	     function readBits(count) {
	      while (bufferSize < count) {
	       var b = data[offset + position];
	       position++;
	       if (skipNextBit) {
	        buffer = buffer << 7 | b;
	        bufferSize += 7;
	        skipNextBit = false;
	       } else {
	        buffer = buffer << 8 | b;
	        bufferSize += 8;
	       }
	       if (b === 0xFF) {
	        skipNextBit = true;
	       }
	      }
	      bufferSize -= count;
	      return buffer >>> bufferSize & (1 << count) - 1;
	     }
	     function skipMarkerIfEqual(value) {
	      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {
	       skipBytes(1);
	       return true;
	      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {
	       skipBytes(2);
	       return true;
	      }
	      return false;
	     }
	     function skipBytes(count) {
	      position += count;
	     }
	     function alignToByte() {
	      bufferSize = 0;
	      if (skipNextBit) {
	       position++;
	       skipNextBit = false;
	      }
	     }
	     function readCodingpasses() {
	      if (readBits(1) === 0) {
	       return 1;
	      }
	      if (readBits(1) === 0) {
	       return 2;
	      }
	      var value = readBits(2);
	      if (value < 3) {
	       return value + 3;
	      }
	      value = readBits(5);
	      if (value < 31) {
	       return value + 6;
	      }
	      value = readBits(7);
	      return value + 37;
	     }
	     var tileIndex = context.currentTile.index;
	     var tile = context.tiles[tileIndex];
	     var sopMarkerUsed = context.COD.sopMarkerUsed;
	     var ephMarkerUsed = context.COD.ephMarkerUsed;
	     var packetsIterator = tile.packetsIterator;
	     while (position < dataLength) {
	      alignToByte();
	      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {
	       skipBytes(4);
	      }
	      var packet = packetsIterator.nextPacket();
	      if (!readBits(1)) {
	       continue;
	      }
	      var layerNumber = packet.layerNumber;
	      var queue = [], codeblock;
	      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {
	       codeblock = packet.codeblocks[i];
	       var precinct = codeblock.precinct;
	       var codeblockColumn = codeblock.cbx - precinct.cbxMin;
	       var codeblockRow = codeblock.cby - precinct.cbyMin;
	       var codeblockIncluded = false;
	       var firstTimeInclusion = false;
	       var valueReady;
	       if (codeblock['included'] !== undefined) {
	        codeblockIncluded = !!readBits(1);
	       } else {
	        precinct = codeblock.precinct;
	        var inclusionTree, zeroBitPlanesTree;
	        if (precinct['inclusionTree'] !== undefined) {
	         inclusionTree = precinct.inclusionTree;
	        } else {
	         var width = precinct.cbxMax - precinct.cbxMin + 1;
	         var height = precinct.cbyMax - precinct.cbyMin + 1;
	         inclusionTree = new InclusionTree(width, height, layerNumber);
	         zeroBitPlanesTree = new TagTree(width, height);
	         precinct.inclusionTree = inclusionTree;
	         precinct.zeroBitPlanesTree = zeroBitPlanesTree;
	        }
	        if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {
	         while (true) {
	          if (readBits(1)) {
	           valueReady = !inclusionTree.nextLevel();
	           if (valueReady) {
	            codeblock.included = true;
	            codeblockIncluded = firstTimeInclusion = true;
	            break;
	           }
	          } else {
	           inclusionTree.incrementValue(layerNumber);
	           break;
	          }
	         }
	        }
	       }
	       if (!codeblockIncluded) {
	        continue;
	       }
	       if (firstTimeInclusion) {
	        zeroBitPlanesTree = precinct.zeroBitPlanesTree;
	        zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);
	        while (true) {
	         if (readBits(1)) {
	          valueReady = !zeroBitPlanesTree.nextLevel();
	          if (valueReady) {
	           break;
	          }
	         } else {
	          zeroBitPlanesTree.incrementValue();
	         }
	        }
	        codeblock.zeroBitPlanes = zeroBitPlanesTree.value;
	       }
	       var codingpasses = readCodingpasses();
	       while (readBits(1)) {
	        codeblock.Lblock++;
	       }
	       var codingpassesLog2 = log2(codingpasses);
	       var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;
	       var codedDataLength = readBits(bits);
	       queue.push({
	        codeblock: codeblock,
	        codingpasses: codingpasses,
	        dataLength: codedDataLength
	       });
	      }
	      alignToByte();
	      if (ephMarkerUsed) {
	       skipMarkerIfEqual(0x92);
	      }
	      while (queue.length > 0) {
	       var packetItem = queue.shift();
	       codeblock = packetItem.codeblock;
	       if (codeblock['data'] === undefined) {
	        codeblock.data = [];
	       }
	       codeblock.data.push({
	        data: data,
	        start: offset + position,
	        end: offset + position + packetItem.dataLength,
	        codingpasses: packetItem.codingpasses
	       });
	       position += packetItem.dataLength;
	      }
	     }
	     return position;
	    }
	    function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {
	     var x0 = subband.tbx0;
	     var y0 = subband.tby0;
	     var width = subband.tbx1 - subband.tbx0;
	     var codeblocks = subband.codeblocks;
	     var right = subband.type.charAt(0) === 'H' ? 1 : 0;
	     var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;
	     for (var i = 0, ii = codeblocks.length; i < ii; ++i) {
	      var codeblock = codeblocks[i];
	      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;
	      var blockHeight = codeblock.tby1_ - codeblock.tby0_;
	      if (blockWidth === 0 || blockHeight === 0) {
	       continue;
	      }
	      if (codeblock['data'] === undefined) {
	       continue;
	      }
	      var bitModel, currentCodingpassType;
	      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);
	      currentCodingpassType = 2;
	      var data = codeblock.data, totalLength = 0, codingpasses = 0;
	      var j, jj, dataItem;
	      for (j = 0, jj = data.length; j < jj; j++) {
	       dataItem = data[j];
	       totalLength += dataItem.end - dataItem.start;
	       codingpasses += dataItem.codingpasses;
	      }
	      var encodedData = new Uint8Array(totalLength);
	      var position = 0;
	      for (j = 0, jj = data.length; j < jj; j++) {
	       dataItem = data[j];
	       var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);
	       encodedData.set(chunk, position);
	       position += chunk.length;
	      }
	      var decoder = new ArithmeticDecoder(encodedData, 0, totalLength);
	      bitModel.setDecoder(decoder);
	      for (j = 0; j < codingpasses; j++) {
	       switch (currentCodingpassType) {
	       case 0:
	        bitModel.runSignificancePropagationPass();
	        break;
	       case 1:
	        bitModel.runMagnitudeRefinementPass();
	        break;
	       case 2:
	        bitModel.runCleanupPass();
	        if (segmentationSymbolUsed) {
	         bitModel.checkSegmentationSymbol();
	        }
	        break;
	       }
	       currentCodingpassType = (currentCodingpassType + 1) % 3;
	      }
	      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;
	      var sign = bitModel.coefficentsSign;
	      var magnitude = bitModel.coefficentsMagnitude;
	      var bitsDecoded = bitModel.bitsDecoded;
	      var magnitudeCorrection = reversible ? 0 : 0.5;
	      var k, n, nb;
	      position = 0;
	      var interleave = subband.type !== 'LL';
	      for (j = 0; j < blockHeight; j++) {
	       var row = offset / width | 0;
	       var levelOffset = 2 * row * (levelWidth - width) + right + bottom;
	       for (k = 0; k < blockWidth; k++) {
	        n = magnitude[position];
	        if (n !== 0) {
	         n = (n + magnitudeCorrection) * delta;
	         if (sign[position] !== 0) {
	          n = -n;
	         }
	         nb = bitsDecoded[position];
	         var pos = interleave ? levelOffset + (offset << 1) : offset;
	         if (reversible && nb >= mb) {
	          coefficients[pos] = n;
	         } else {
	          coefficients[pos] = n * (1 << mb - nb);
	         }
	        }
	        offset++;
	        position++;
	       }
	       offset += width - blockWidth;
	      }
	     }
	    }
	    function transformTile(context, tile, c) {
	     var component = tile.components[c];
	     var codingStyleParameters = component.codingStyleParameters;
	     var quantizationParameters = component.quantizationParameters;
	     var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;
	     var spqcds = quantizationParameters.SPqcds;
	     var scalarExpounded = quantizationParameters.scalarExpounded;
	     var guardBits = quantizationParameters.guardBits;
	     var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;
	     var precision = context.components[c].precision;
	     var reversible = codingStyleParameters.reversibleTransformation;
	     var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();
	     var subbandCoefficients = [];
	     var b = 0;
	     for (var i = 0; i <= decompositionLevelsCount; i++) {
	      var resolution = component.resolutions[i];
	      var width = resolution.trx1 - resolution.trx0;
	      var height = resolution.try1 - resolution.try0;
	      var coefficients = new Float32Array(width * height);
	      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {
	       var mu, epsilon;
	       if (!scalarExpounded) {
	        mu = spqcds[0].mu;
	        epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);
	       } else {
	        mu = spqcds[b].mu;
	        epsilon = spqcds[b].epsilon;
	        b++;
	       }
	       var subband = resolution.subbands[j];
	       var gainLog2 = SubbandsGainLog2[subband.type];
	       var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);
	       var mb = guardBits + epsilon - 1;
	       copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);
	      }
	      subbandCoefficients.push({
	       width: width,
	       height: height,
	       items: coefficients
	      });
	     }
	     var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);
	     return {
	      left: component.tcx0,
	      top: component.tcy0,
	      width: result.width,
	      height: result.height,
	      items: result.items
	     };
	    }
	    function transformComponents(context) {
	     var siz = context.SIZ;
	     var components = context.components;
	     var componentsCount = siz.Csiz;
	     var resultImages = [];
	     for (var i = 0, ii = context.tiles.length; i < ii; i++) {
	      var tile = context.tiles[i];
	      var transformedTiles = [];
	      var c;
	      for (c = 0; c < componentsCount; c++) {
	       transformedTiles[c] = transformTile(context, tile, c);
	      }
	      var tile0 = transformedTiles[0];
	      var out = new Uint8Array(tile0.items.length * componentsCount);
	      var result = {
	       left: tile0.left,
	       top: tile0.top,
	       width: tile0.width,
	       height: tile0.height,
	       items: out
	      };
	      var shift, offset, max, min, maxK;
	      var pos = 0, j, jj, y0, y1, y2, r, g, b, k, val;
	      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {
	       var fourComponents = componentsCount === 4;
	       var y0items = transformedTiles[0].items;
	       var y1items = transformedTiles[1].items;
	       var y2items = transformedTiles[2].items;
	       var y3items = fourComponents ? transformedTiles[3].items : null;
	       shift = components[0].precision - 8;
	       offset = (128 << shift) + 0.5;
	       max = 255 * (1 << shift);
	       maxK = max * 0.5;
	       min = -maxK;
	       var component0 = tile.components[0];
	       var alpha01 = componentsCount - 3;
	       jj = y0items.length;
	       if (!component0.codingStyleParameters.reversibleTransformation) {
	        for (j = 0; j < jj; j++, pos += alpha01) {
	         y0 = y0items[j] + offset;
	         y1 = y1items[j];
	         y2 = y2items[j];
	         r = y0 + 1.402 * y2;
	         g = y0 - 0.34413 * y1 - 0.71414 * y2;
	         b = y0 + 1.772 * y1;
	         out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;
	         out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;
	         out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;
	        }
	       } else {
	        for (j = 0; j < jj; j++, pos += alpha01) {
	         y0 = y0items[j] + offset;
	         y1 = y1items[j];
	         y2 = y2items[j];
	         g = y0 - (y2 + y1 >> 2);
	         r = g + y2;
	         b = g + y1;
	         out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;
	         out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;
	         out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;
	        }
	       }
	       if (fourComponents) {
	        for (j = 0, pos = 3; j < jj; j++, pos += 4) {
	         k = y3items[j];
	         out[pos] = k <= min ? 0 : k >= maxK ? 255 : k + offset >> shift;
	        }
	       }
	      } else {
	       for (c = 0; c < componentsCount; c++) {
	        var items = transformedTiles[c].items;
	        shift = components[c].precision - 8;
	        offset = (128 << shift) + 0.5;
	        max = 127.5 * (1 << shift);
	        min = -max;
	        for (pos = c, j = 0, jj = items.length; j < jj; j++) {
	         val = items[j];
	         out[pos] = val <= min ? 0 : val >= max ? 255 : val + offset >> shift;
	         pos += componentsCount;
	        }
	       }
	      }
	      resultImages.push(result);
	     }
	     return resultImages;
	    }
	    function initializeTile(context, tileIndex) {
	     var siz = context.SIZ;
	     var componentsCount = siz.Csiz;
	     var tile = context.tiles[tileIndex];
	     for (var c = 0; c < componentsCount; c++) {
	      var component = tile.components[c];
	      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;
	      component.quantizationParameters = qcdOrQcc;
	      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;
	      component.codingStyleParameters = codOrCoc;
	     }
	     tile.codingStyleDefaultParameters = context.currentTile.COD;
	    }
	    var TagTree = function TagTreeClosure() {
	     function TagTree(width, height) {
	      var levelsLength = log2(Math.max(width, height)) + 1;
	      this.levels = [];
	      for (var i = 0; i < levelsLength; i++) {
	       var level = {
	        width: width,
	        height: height,
	        items: []
	       };
	       this.levels.push(level);
	       width = Math.ceil(width / 2);
	       height = Math.ceil(height / 2);
	      }
	     }
	     TagTree.prototype = {
	      reset: function TagTree_reset(i, j) {
	       var currentLevel = 0, value = 0, level;
	       while (currentLevel < this.levels.length) {
	        level = this.levels[currentLevel];
	        var index = i + j * level.width;
	        if (level.items[index] !== undefined) {
	         value = level.items[index];
	         break;
	        }
	        level.index = index;
	        i >>= 1;
	        j >>= 1;
	        currentLevel++;
	       }
	       currentLevel--;
	       level = this.levels[currentLevel];
	       level.items[level.index] = value;
	       this.currentLevel = currentLevel;
	       delete this.value;
	      },
	      incrementValue: function TagTree_incrementValue() {
	       var level = this.levels[this.currentLevel];
	       level.items[level.index]++;
	      },
	      nextLevel: function TagTree_nextLevel() {
	       var currentLevel = this.currentLevel;
	       var level = this.levels[currentLevel];
	       var value = level.items[level.index];
	       currentLevel--;
	       if (currentLevel < 0) {
	        this.value = value;
	        return false;
	       }
	       this.currentLevel = currentLevel;
	       level = this.levels[currentLevel];
	       level.items[level.index] = value;
	       return true;
	      }
	     };
	     return TagTree;
	    }();
	    var InclusionTree = function InclusionTreeClosure() {
	     function InclusionTree(width, height, defaultValue) {
	      var levelsLength = log2(Math.max(width, height)) + 1;
	      this.levels = [];
	      for (var i = 0; i < levelsLength; i++) {
	       var items = new Uint8Array(width * height);
	       for (var j = 0, jj = items.length; j < jj; j++) {
	        items[j] = defaultValue;
	       }
	       var level = {
	        width: width,
	        height: height,
	        items: items
	       };
	       this.levels.push(level);
	       width = Math.ceil(width / 2);
	       height = Math.ceil(height / 2);
	      }
	     }
	     InclusionTree.prototype = {
	      reset: function InclusionTree_reset(i, j, stopValue) {
	       var currentLevel = 0;
	       while (currentLevel < this.levels.length) {
	        var level = this.levels[currentLevel];
	        var index = i + j * level.width;
	        level.index = index;
	        var value = level.items[index];
	        if (value === 0xFF) {
	         break;
	        }
	        if (value > stopValue) {
	         this.currentLevel = currentLevel;
	         this.propagateValues();
	         return false;
	        }
	        i >>= 1;
	        j >>= 1;
	        currentLevel++;
	       }
	       this.currentLevel = currentLevel - 1;
	       return true;
	      },
	      incrementValue: function InclusionTree_incrementValue(stopValue) {
	       var level = this.levels[this.currentLevel];
	       level.items[level.index] = stopValue + 1;
	       this.propagateValues();
	      },
	      propagateValues: function InclusionTree_propagateValues() {
	       var levelIndex = this.currentLevel;
	       var level = this.levels[levelIndex];
	       var currentValue = level.items[level.index];
	       while (--levelIndex >= 0) {
	        level = this.levels[levelIndex];
	        level.items[level.index] = currentValue;
	       }
	      },
	      nextLevel: function InclusionTree_nextLevel() {
	       var currentLevel = this.currentLevel;
	       var level = this.levels[currentLevel];
	       var value = level.items[level.index];
	       level.items[level.index] = 0xFF;
	       currentLevel--;
	       if (currentLevel < 0) {
	        return false;
	       }
	       this.currentLevel = currentLevel;
	       level = this.levels[currentLevel];
	       level.items[level.index] = value;
	       return true;
	      }
	     };
	     return InclusionTree;
	    }();
	    var BitModel = function BitModelClosure() {
	     var UNIFORM_CONTEXT = 17;
	     var RUNLENGTH_CONTEXT = 18;
	     var LLAndLHContextsLabel = new Uint8Array([
	      0,
	      5,
	      8,
	      0,
	      3,
	      7,
	      8,
	      0,
	      4,
	      7,
	      8,
	      0,
	      0,
	      0,
	      0,
	      0,
	      1,
	      6,
	      8,
	      0,
	      3,
	      7,
	      8,
	      0,
	      4,
	      7,
	      8,
	      0,
	      0,
	      0,
	      0,
	      0,
	      2,
	      6,
	      8,
	      0,
	      3,
	      7,
	      8,
	      0,
	      4,
	      7,
	      8,
	      0,
	      0,
	      0,
	      0,
	      0,
	      2,
	      6,
	      8,
	      0,
	      3,
	      7,
	      8,
	      0,
	      4,
	      7,
	      8,
	      0,
	      0,
	      0,
	      0,
	      0,
	      2,
	      6,
	      8,
	      0,
	      3,
	      7,
	      8,
	      0,
	      4,
	      7,
	      8
	     ]);
	     var HLContextLabel = new Uint8Array([
	      0,
	      3,
	      4,
	      0,
	      5,
	      7,
	      7,
	      0,
	      8,
	      8,
	      8,
	      0,
	      0,
	      0,
	      0,
	      0,
	      1,
	      3,
	      4,
	      0,
	      6,
	      7,
	      7,
	      0,
	      8,
	      8,
	      8,
	      0,
	      0,
	      0,
	      0,
	      0,
	      2,
	      3,
	      4,
	      0,
	      6,
	      7,
	      7,
	      0,
	      8,
	      8,
	      8,
	      0,
	      0,
	      0,
	      0,
	      0,
	      2,
	      3,
	      4,
	      0,
	      6,
	      7,
	      7,
	      0,
	      8,
	      8,
	      8,
	      0,
	      0,
	      0,
	      0,
	      0,
	      2,
	      3,
	      4,
	      0,
	      6,
	      7,
	      7,
	      0,
	      8,
	      8,
	      8
	     ]);
	     var HHContextLabel = new Uint8Array([
	      0,
	      1,
	      2,
	      0,
	      1,
	      2,
	      2,
	      0,
	      2,
	      2,
	      2,
	      0,
	      0,
	      0,
	      0,
	      0,
	      3,
	      4,
	      5,
	      0,
	      4,
	      5,
	      5,
	      0,
	      5,
	      5,
	      5,
	      0,
	      0,
	      0,
	      0,
	      0,
	      6,
	      7,
	      7,
	      0,
	      7,
	      7,
	      7,
	      0,
	      7,
	      7,
	      7,
	      0,
	      0,
	      0,
	      0,
	      0,
	      8,
	      8,
	      8,
	      0,
	      8,
	      8,
	      8,
	      0,
	      8,
	      8,
	      8,
	      0,
	      0,
	      0,
	      0,
	      0,
	      8,
	      8,
	      8,
	      0,
	      8,
	      8,
	      8,
	      0,
	      8,
	      8,
	      8
	     ]);
	     function BitModel(width, height, subband, zeroBitPlanes, mb) {
	      this.width = width;
	      this.height = height;
	      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;
	      var coefficientCount = width * height;
	      this.neighborsSignificance = new Uint8Array(coefficientCount);
	      this.coefficentsSign = new Uint8Array(coefficientCount);
	      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);
	      this.processingFlags = new Uint8Array(coefficientCount);
	      var bitsDecoded = new Uint8Array(coefficientCount);
	      if (zeroBitPlanes !== 0) {
	       for (var i = 0; i < coefficientCount; i++) {
	        bitsDecoded[i] = zeroBitPlanes;
	       }
	      }
	      this.bitsDecoded = bitsDecoded;
	      this.reset();
	     }
	     BitModel.prototype = {
	      setDecoder: function BitModel_setDecoder(decoder) {
	       this.decoder = decoder;
	      },
	      reset: function BitModel_reset() {
	       this.contexts = new Int8Array(19);
	       this.contexts[0] = 4 << 1 | 0;
	       this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;
	       this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;
	      },
	      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {
	       var neighborsSignificance = this.neighborsSignificance;
	       var width = this.width, height = this.height;
	       var left = column > 0;
	       var right = column + 1 < width;
	       var i;
	       if (row > 0) {
	        i = index - width;
	        if (left) {
	         neighborsSignificance[i - 1] += 0x10;
	        }
	        if (right) {
	         neighborsSignificance[i + 1] += 0x10;
	        }
	        neighborsSignificance[i] += 0x04;
	       }
	       if (row + 1 < height) {
	        i = index + width;
	        if (left) {
	         neighborsSignificance[i - 1] += 0x10;
	        }
	        if (right) {
	         neighborsSignificance[i + 1] += 0x10;
	        }
	        neighborsSignificance[i] += 0x04;
	       }
	       if (left) {
	        neighborsSignificance[index - 1] += 0x01;
	       }
	       if (right) {
	        neighborsSignificance[index + 1] += 0x01;
	       }
	       neighborsSignificance[index] |= 0x80;
	      },
	      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {
	       var decoder = this.decoder;
	       var width = this.width, height = this.height;
	       var coefficentsMagnitude = this.coefficentsMagnitude;
	       var coefficentsSign = this.coefficentsSign;
	       var neighborsSignificance = this.neighborsSignificance;
	       var processingFlags = this.processingFlags;
	       var contexts = this.contexts;
	       var labels = this.contextLabelTable;
	       var bitsDecoded = this.bitsDecoded;
	       var processedInverseMask = ~1;
	       var processedMask = 1;
	       var firstMagnitudeBitMask = 2;
	       for (var i0 = 0; i0 < height; i0 += 4) {
	        for (var j = 0; j < width; j++) {
	         var index = i0 * width + j;
	         for (var i1 = 0; i1 < 4; i1++, index += width) {
	          var i = i0 + i1;
	          if (i >= height) {
	           break;
	          }
	          processingFlags[index] &= processedInverseMask;
	          if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {
	           continue;
	          }
	          var contextLabel = labels[neighborsSignificance[index]];
	          var decision = decoder.readBit(contexts, contextLabel);
	          if (decision) {
	           var sign = this.decodeSignBit(i, j, index);
	           coefficentsSign[index] = sign;
	           coefficentsMagnitude[index] = 1;
	           this.setNeighborsSignificance(i, j, index);
	           processingFlags[index] |= firstMagnitudeBitMask;
	          }
	          bitsDecoded[index]++;
	          processingFlags[index] |= processedMask;
	         }
	        }
	       }
	      },
	      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {
	       var width = this.width, height = this.height;
	       var coefficentsMagnitude = this.coefficentsMagnitude;
	       var coefficentsSign = this.coefficentsSign;
	       var contribution, sign0, sign1, significance1;
	       var contextLabel, decoded;
	       significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;
	       if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {
	        sign1 = coefficentsSign[index + 1];
	        if (significance1) {
	         sign0 = coefficentsSign[index - 1];
	         contribution = 1 - sign1 - sign0;
	        } else {
	         contribution = 1 - sign1 - sign1;
	        }
	       } else if (significance1) {
	        sign0 = coefficentsSign[index - 1];
	        contribution = 1 - sign0 - sign0;
	       } else {
	        contribution = 0;
	       }
	       var horizontalContribution = 3 * contribution;
	       significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;
	       if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {
	        sign1 = coefficentsSign[index + width];
	        if (significance1) {
	         sign0 = coefficentsSign[index - width];
	         contribution = 1 - sign1 - sign0 + horizontalContribution;
	        } else {
	         contribution = 1 - sign1 - sign1 + horizontalContribution;
	        }
	       } else if (significance1) {
	        sign0 = coefficentsSign[index - width];
	        contribution = 1 - sign0 - sign0 + horizontalContribution;
	       } else {
	        contribution = horizontalContribution;
	       }
	       if (contribution >= 0) {
	        contextLabel = 9 + contribution;
	        decoded = this.decoder.readBit(this.contexts, contextLabel);
	       } else {
	        contextLabel = 9 - contribution;
	        decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;
	       }
	       return decoded;
	      },
	      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {
	       var decoder = this.decoder;
	       var width = this.width, height = this.height;
	       var coefficentsMagnitude = this.coefficentsMagnitude;
	       var neighborsSignificance = this.neighborsSignificance;
	       var contexts = this.contexts;
	       var bitsDecoded = this.bitsDecoded;
	       var processingFlags = this.processingFlags;
	       var processedMask = 1;
	       var firstMagnitudeBitMask = 2;
	       var length = width * height;
	       var width4 = width * 4;
	       for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {
	        indexNext = Math.min(length, index0 + width4);
	        for (var j = 0; j < width; j++) {
	         for (var index = index0 + j; index < indexNext; index += width) {
	          if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {
	           continue;
	          }
	          var contextLabel = 16;
	          if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {
	           processingFlags[index] ^= firstMagnitudeBitMask;
	           var significance = neighborsSignificance[index] & 127;
	           contextLabel = significance === 0 ? 15 : 14;
	          }
	          var bit = decoder.readBit(contexts, contextLabel);
	          coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;
	          bitsDecoded[index]++;
	          processingFlags[index] |= processedMask;
	         }
	        }
	       }
	      },
	      runCleanupPass: function BitModel_runCleanupPass() {
	       var decoder = this.decoder;
	       var width = this.width, height = this.height;
	       var neighborsSignificance = this.neighborsSignificance;
	       var coefficentsMagnitude = this.coefficentsMagnitude;
	       var coefficentsSign = this.coefficentsSign;
	       var contexts = this.contexts;
	       var labels = this.contextLabelTable;
	       var bitsDecoded = this.bitsDecoded;
	       var processingFlags = this.processingFlags;
	       var processedMask = 1;
	       var firstMagnitudeBitMask = 2;
	       var oneRowDown = width;
	       var twoRowsDown = width * 2;
	       var threeRowsDown = width * 3;
	       var iNext;
	       for (var i0 = 0; i0 < height; i0 = iNext) {
	        iNext = Math.min(i0 + 4, height);
	        var indexBase = i0 * width;
	        var checkAllEmpty = i0 + 3 < height;
	        for (var j = 0; j < width; j++) {
	         var index0 = indexBase + j;
	         var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;
	         var i1 = 0, index = index0;
	         var i = i0, sign;
	         if (allEmpty) {
	          var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);
	          if (!hasSignificantCoefficent) {
	           bitsDecoded[index0]++;
	           bitsDecoded[index0 + oneRowDown]++;
	           bitsDecoded[index0 + twoRowsDown]++;
	           bitsDecoded[index0 + threeRowsDown]++;
	           continue;
	          }
	          i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);
	          if (i1 !== 0) {
	           i = i0 + i1;
	           index += i1 * width;
	          }
	          sign = this.decodeSignBit(i, j, index);
	          coefficentsSign[index] = sign;
	          coefficentsMagnitude[index] = 1;
	          this.setNeighborsSignificance(i, j, index);
	          processingFlags[index] |= firstMagnitudeBitMask;
	          index = index0;
	          for (var i2 = i0; i2 <= i; i2++, index += width) {
	           bitsDecoded[index]++;
	          }
	          i1++;
	         }
	         for (i = i0 + i1; i < iNext; i++, index += width) {
	          if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {
	           continue;
	          }
	          var contextLabel = labels[neighborsSignificance[index]];
	          var decision = decoder.readBit(contexts, contextLabel);
	          if (decision === 1) {
	           sign = this.decodeSignBit(i, j, index);
	           coefficentsSign[index] = sign;
	           coefficentsMagnitude[index] = 1;
	           this.setNeighborsSignificance(i, j, index);
	           processingFlags[index] |= firstMagnitudeBitMask;
	          }
	          bitsDecoded[index]++;
	         }
	        }
	       }
	      },
	      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {
	       var decoder = this.decoder;
	       var contexts = this.contexts;
	       var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);
	       if (symbol !== 0xA) {
	        error('JPX Error: Invalid segmentation symbol');
	       }
	      }
	     };
	     return BitModel;
	    }();
	    var Transform = function TransformClosure() {
	     function Transform() {
	     }
	     Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {
	      var ll = subbands[0];
	      for (var i = 1, ii = subbands.length; i < ii; i++) {
	       ll = this.iterate(ll, subbands[i], u0, v0);
	      }
	      return ll;
	     };
	     Transform.prototype.extend = function extend(buffer, offset, size) {
	      var i1 = offset - 1, j1 = offset + 1;
	      var i2 = offset + size - 2, j2 = offset + size;
	      buffer[i1--] = buffer[j1++];
	      buffer[j2++] = buffer[i2--];
	      buffer[i1--] = buffer[j1++];
	      buffer[j2++] = buffer[i2--];
	      buffer[i1--] = buffer[j1++];
	      buffer[j2++] = buffer[i2--];
	      buffer[i1] = buffer[j1];
	      buffer[j2] = buffer[i2];
	     };
	     Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {
	      var llWidth = ll.width, llHeight = ll.height, llItems = ll.items;
	      var width = hl_lh_hh.width;
	      var height = hl_lh_hh.height;
	      var items = hl_lh_hh.items;
	      var i, j, k, l, u, v;
	      for (k = 0, i = 0; i < llHeight; i++) {
	       l = i * 2 * width;
	       for (j = 0; j < llWidth; j++, k++, l += 2) {
	        items[l] = llItems[k];
	       }
	      }
	      llItems = ll.items = null;
	      var bufferPadding = 4;
	      var rowBuffer = new Float32Array(width + 2 * bufferPadding);
	      if (width === 1) {
	       if ((u0 & 1) !== 0) {
	        for (v = 0, k = 0; v < height; v++, k += width) {
	         items[k] *= 0.5;
	        }
	       }
	      } else {
	       for (v = 0, k = 0; v < height; v++, k += width) {
	        rowBuffer.set(items.subarray(k, k + width), bufferPadding);
	        this.extend(rowBuffer, bufferPadding, width);
	        this.filter(rowBuffer, bufferPadding, width);
	        items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);
	       }
	      }
	      var numBuffers = 16;
	      var colBuffers = [];
	      for (i = 0; i < numBuffers; i++) {
	       colBuffers.push(new Float32Array(height + 2 * bufferPadding));
	      }
	      var b, currentBuffer = 0;
	      ll = bufferPadding + height;
	      if (height === 1) {
	       if ((v0 & 1) !== 0) {
	        for (u = 0; u < width; u++) {
	         items[u] *= 0.5;
	        }
	       }
	      } else {
	       for (u = 0; u < width; u++) {
	        if (currentBuffer === 0) {
	         numBuffers = Math.min(width - u, numBuffers);
	         for (k = u, l = bufferPadding; l < ll; k += width, l++) {
	          for (b = 0; b < numBuffers; b++) {
	           colBuffers[b][l] = items[k + b];
	          }
	         }
	         currentBuffer = numBuffers;
	        }
	        currentBuffer--;
	        var buffer = colBuffers[currentBuffer];
	        this.extend(buffer, bufferPadding, height);
	        this.filter(buffer, bufferPadding, height);
	        if (currentBuffer === 0) {
	         k = u - numBuffers + 1;
	         for (l = bufferPadding; l < ll; k += width, l++) {
	          for (b = 0; b < numBuffers; b++) {
	           items[k + b] = colBuffers[b][l];
	          }
	         }
	        }
	       }
	      }
	      return {
	       width: width,
	       height: height,
	       items: items
	      };
	     };
	     return Transform;
	    }();
	    var IrreversibleTransform = function IrreversibleTransformClosure() {
	     function IrreversibleTransform() {
	      Transform.call(this);
	     }
	     IrreversibleTransform.prototype = Object.create(Transform.prototype);
	     IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {
	      var len = length >> 1;
	      offset = offset | 0;
	      var j, n, current, next;
	      var alpha = -1.586134342059924;
	      var beta = -0.052980118572961;
	      var gamma = 0.882911075530934;
	      var delta = 0.443506852043971;
	      var K = 1.230174104914001;
	      var K_ = 1 / K;
	      j = offset - 3;
	      for (n = len + 4; n--; j += 2) {
	       x[j] *= K_;
	      }
	      j = offset - 2;
	      current = delta * x[j - 1];
	      for (n = len + 3; n--; j += 2) {
	       next = delta * x[j + 1];
	       x[j] = K * x[j] - current - next;
	       if (n--) {
	        j += 2;
	        current = delta * x[j + 1];
	        x[j] = K * x[j] - current - next;
	       } else {
	        break;
	       }
	      }
	      j = offset - 1;
	      current = gamma * x[j - 1];
	      for (n = len + 2; n--; j += 2) {
	       next = gamma * x[j + 1];
	       x[j] -= current + next;
	       if (n--) {
	        j += 2;
	        current = gamma * x[j + 1];
	        x[j] -= current + next;
	       } else {
	        break;
	       }
	      }
	      j = offset;
	      current = beta * x[j - 1];
	      for (n = len + 1; n--; j += 2) {
	       next = beta * x[j + 1];
	       x[j] -= current + next;
	       if (n--) {
	        j += 2;
	        current = beta * x[j + 1];
	        x[j] -= current + next;
	       } else {
	        break;
	       }
	      }
	      if (len !== 0) {
	       j = offset + 1;
	       current = alpha * x[j - 1];
	       for (n = len; n--; j += 2) {
	        next = alpha * x[j + 1];
	        x[j] -= current + next;
	        if (n--) {
	         j += 2;
	         current = alpha * x[j + 1];
	         x[j] -= current + next;
	        } else {
	         break;
	        }
	       }
	      }
	     };
	     return IrreversibleTransform;
	    }();
	    var ReversibleTransform = function ReversibleTransformClosure() {
	     function ReversibleTransform() {
	      Transform.call(this);
	     }
	     ReversibleTransform.prototype = Object.create(Transform.prototype);
	     ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {
	      var len = length >> 1;
	      offset = offset | 0;
	      var j, n;
	      for (j = offset, n = len + 1; n--; j += 2) {
	       x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;
	      }
	      for (j = offset + 1, n = len; n--; j += 2) {
	       x[j] += x[j - 1] + x[j + 1] >> 1;
	      }
	     };
	     return ReversibleTransform;
	    }();
	    return JpxImage;
	   }();
	   exports.JpxImage = JpxImage;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreMetrics = {}, root.pdfjsSharedUtil);
	  }(this, function (exports, sharedUtil) {
	   var getLookupTableFactory = sharedUtil.getLookupTableFactory;
	   var getMetrics = getLookupTableFactory(function (t) {
	    t['Courier'] = 600;
	    t['Courier-Bold'] = 600;
	    t['Courier-BoldOblique'] = 600;
	    t['Courier-Oblique'] = 600;
	    t['Helvetica'] = getLookupTableFactory(function (t) {
	     t['space'] = 278;
	     t['exclam'] = 278;
	     t['quotedbl'] = 355;
	     t['numbersign'] = 556;
	     t['dollar'] = 556;
	     t['percent'] = 889;
	     t['ampersand'] = 667;
	     t['quoteright'] = 222;
	     t['parenleft'] = 333;
	     t['parenright'] = 333;
	     t['asterisk'] = 389;
	     t['plus'] = 584;
	     t['comma'] = 278;
	     t['hyphen'] = 333;
	     t['period'] = 278;
	     t['slash'] = 278;
	     t['zero'] = 556;
	     t['one'] = 556;
	     t['two'] = 556;
	     t['three'] = 556;
	     t['four'] = 556;
	     t['five'] = 556;
	     t['six'] = 556;
	     t['seven'] = 556;
	     t['eight'] = 556;
	     t['nine'] = 556;
	     t['colon'] = 278;
	     t['semicolon'] = 278;
	     t['less'] = 584;
	     t['equal'] = 584;
	     t['greater'] = 584;
	     t['question'] = 556;
	     t['at'] = 1015;
	     t['A'] = 667;
	     t['B'] = 667;
	     t['C'] = 722;
	     t['D'] = 722;
	     t['E'] = 667;
	     t['F'] = 611;
	     t['G'] = 778;
	     t['H'] = 722;
	     t['I'] = 278;
	     t['J'] = 500;
	     t['K'] = 667;
	     t['L'] = 556;
	     t['M'] = 833;
	     t['N'] = 722;
	     t['O'] = 778;
	     t['P'] = 667;
	     t['Q'] = 778;
	     t['R'] = 722;
	     t['S'] = 667;
	     t['T'] = 611;
	     t['U'] = 722;
	     t['V'] = 667;
	     t['W'] = 944;
	     t['X'] = 667;
	     t['Y'] = 667;
	     t['Z'] = 611;
	     t['bracketleft'] = 278;
	     t['backslash'] = 278;
	     t['bracketright'] = 278;
	     t['asciicircum'] = 469;
	     t['underscore'] = 556;
	     t['quoteleft'] = 222;
	     t['a'] = 556;
	     t['b'] = 556;
	     t['c'] = 500;
	     t['d'] = 556;
	     t['e'] = 556;
	     t['f'] = 278;
	     t['g'] = 556;
	     t['h'] = 556;
	     t['i'] = 222;
	     t['j'] = 222;
	     t['k'] = 500;
	     t['l'] = 222;
	     t['m'] = 833;
	     t['n'] = 556;
	     t['o'] = 556;
	     t['p'] = 556;
	     t['q'] = 556;
	     t['r'] = 333;
	     t['s'] = 500;
	     t['t'] = 278;
	     t['u'] = 556;
	     t['v'] = 500;
	     t['w'] = 722;
	     t['x'] = 500;
	     t['y'] = 500;
	     t['z'] = 500;
	     t['braceleft'] = 334;
	     t['bar'] = 260;
	     t['braceright'] = 334;
	     t['asciitilde'] = 584;
	     t['exclamdown'] = 333;
	     t['cent'] = 556;
	     t['sterling'] = 556;
	     t['fraction'] = 167;
	     t['yen'] = 556;
	     t['florin'] = 556;
	     t['section'] = 556;
	     t['currency'] = 556;
	     t['quotesingle'] = 191;
	     t['quotedblleft'] = 333;
	     t['guillemotleft'] = 556;
	     t['guilsinglleft'] = 333;
	     t['guilsinglright'] = 333;
	     t['fi'] = 500;
	     t['fl'] = 500;
	     t['endash'] = 556;
	     t['dagger'] = 556;
	     t['daggerdbl'] = 556;
	     t['periodcentered'] = 278;
	     t['paragraph'] = 537;
	     t['bullet'] = 350;
	     t['quotesinglbase'] = 222;
	     t['quotedblbase'] = 333;
	     t['quotedblright'] = 333;
	     t['guillemotright'] = 556;
	     t['ellipsis'] = 1000;
	     t['perthousand'] = 1000;
	     t['questiondown'] = 611;
	     t['grave'] = 333;
	     t['acute'] = 333;
	     t['circumflex'] = 333;
	     t['tilde'] = 333;
	     t['macron'] = 333;
	     t['breve'] = 333;
	     t['dotaccent'] = 333;
	     t['dieresis'] = 333;
	     t['ring'] = 333;
	     t['cedilla'] = 333;
	     t['hungarumlaut'] = 333;
	     t['ogonek'] = 333;
	     t['caron'] = 333;
	     t['emdash'] = 1000;
	     t['AE'] = 1000;
	     t['ordfeminine'] = 370;
	     t['Lslash'] = 556;
	     t['Oslash'] = 778;
	     t['OE'] = 1000;
	     t['ordmasculine'] = 365;
	     t['ae'] = 889;
	     t['dotlessi'] = 278;
	     t['lslash'] = 222;
	     t['oslash'] = 611;
	     t['oe'] = 944;
	     t['germandbls'] = 611;
	     t['Idieresis'] = 278;
	     t['eacute'] = 556;
	     t['abreve'] = 556;
	     t['uhungarumlaut'] = 556;
	     t['ecaron'] = 556;
	     t['Ydieresis'] = 667;
	     t['divide'] = 584;
	     t['Yacute'] = 667;
	     t['Acircumflex'] = 667;
	     t['aacute'] = 556;
	     t['Ucircumflex'] = 722;
	     t['yacute'] = 500;
	     t['scommaaccent'] = 500;
	     t['ecircumflex'] = 556;
	     t['Uring'] = 722;
	     t['Udieresis'] = 722;
	     t['aogonek'] = 556;
	     t['Uacute'] = 722;
	     t['uogonek'] = 556;
	     t['Edieresis'] = 667;
	     t['Dcroat'] = 722;
	     t['commaaccent'] = 250;
	     t['copyright'] = 737;
	     t['Emacron'] = 667;
	     t['ccaron'] = 500;
	     t['aring'] = 556;
	     t['Ncommaaccent'] = 722;
	     t['lacute'] = 222;
	     t['agrave'] = 556;
	     t['Tcommaaccent'] = 611;
	     t['Cacute'] = 722;
	     t['atilde'] = 556;
	     t['Edotaccent'] = 667;
	     t['scaron'] = 500;
	     t['scedilla'] = 500;
	     t['iacute'] = 278;
	     t['lozenge'] = 471;
	     t['Rcaron'] = 722;
	     t['Gcommaaccent'] = 778;
	     t['ucircumflex'] = 556;
	     t['acircumflex'] = 556;
	     t['Amacron'] = 667;
	     t['rcaron'] = 333;
	     t['ccedilla'] = 500;
	     t['Zdotaccent'] = 611;
	     t['Thorn'] = 667;
	     t['Omacron'] = 778;
	     t['Racute'] = 722;
	     t['Sacute'] = 667;
	     t['dcaron'] = 643;
	     t['Umacron'] = 722;
	     t['uring'] = 556;
	     t['threesuperior'] = 333;
	     t['Ograve'] = 778;
	     t['Agrave'] = 667;
	     t['Abreve'] = 667;
	     t['multiply'] = 584;
	     t['uacute'] = 556;
	     t['Tcaron'] = 611;
	     t['partialdiff'] = 476;
	     t['ydieresis'] = 500;
	     t['Nacute'] = 722;
	     t['icircumflex'] = 278;
	     t['Ecircumflex'] = 667;
	     t['adieresis'] = 556;
	     t['edieresis'] = 556;
	     t['cacute'] = 500;
	     t['nacute'] = 556;
	     t['umacron'] = 556;
	     t['Ncaron'] = 722;
	     t['Iacute'] = 278;
	     t['plusminus'] = 584;
	     t['brokenbar'] = 260;
	     t['registered'] = 737;
	     t['Gbreve'] = 778;
	     t['Idotaccent'] = 278;
	     t['summation'] = 600;
	     t['Egrave'] = 667;
	     t['racute'] = 333;
	     t['omacron'] = 556;
	     t['Zacute'] = 611;
	     t['Zcaron'] = 611;
	     t['greaterequal'] = 549;
	     t['Eth'] = 722;
	     t['Ccedilla'] = 722;
	     t['lcommaaccent'] = 222;
	     t['tcaron'] = 317;
	     t['eogonek'] = 556;
	     t['Uogonek'] = 722;
	     t['Aacute'] = 667;
	     t['Adieresis'] = 667;
	     t['egrave'] = 556;
	     t['zacute'] = 500;
	     t['iogonek'] = 222;
	     t['Oacute'] = 778;
	     t['oacute'] = 556;
	     t['amacron'] = 556;
	     t['sacute'] = 500;
	     t['idieresis'] = 278;
	     t['Ocircumflex'] = 778;
	     t['Ugrave'] = 722;
	     t['Delta'] = 612;
	     t['thorn'] = 556;
	     t['twosuperior'] = 333;
	     t['Odieresis'] = 778;
	     t['mu'] = 556;
	     t['igrave'] = 278;
	     t['ohungarumlaut'] = 556;
	     t['Eogonek'] = 667;
	     t['dcroat'] = 556;
	     t['threequarters'] = 834;
	     t['Scedilla'] = 667;
	     t['lcaron'] = 299;
	     t['Kcommaaccent'] = 667;
	     t['Lacute'] = 556;
	     t['trademark'] = 1000;
	     t['edotaccent'] = 556;
	     t['Igrave'] = 278;
	     t['Imacron'] = 278;
	     t['Lcaron'] = 556;
	     t['onehalf'] = 834;
	     t['lessequal'] = 549;
	     t['ocircumflex'] = 556;
	     t['ntilde'] = 556;
	     t['Uhungarumlaut'] = 722;
	     t['Eacute'] = 667;
	     t['emacron'] = 556;
	     t['gbreve'] = 556;
	     t['onequarter'] = 834;
	     t['Scaron'] = 667;
	     t['Scommaaccent'] = 667;
	     t['Ohungarumlaut'] = 778;
	     t['degree'] = 400;
	     t['ograve'] = 556;
	     t['Ccaron'] = 722;
	     t['ugrave'] = 556;
	     t['radical'] = 453;
	     t['Dcaron'] = 722;
	     t['rcommaaccent'] = 333;
	     t['Ntilde'] = 722;
	     t['otilde'] = 556;
	     t['Rcommaaccent'] = 722;
	     t['Lcommaaccent'] = 556;
	     t['Atilde'] = 667;
	     t['Aogonek'] = 667;
	     t['Aring'] = 667;
	     t['Otilde'] = 778;
	     t['zdotaccent'] = 500;
	     t['Ecaron'] = 667;
	     t['Iogonek'] = 278;
	     t['kcommaaccent'] = 500;
	     t['minus'] = 584;
	     t['Icircumflex'] = 278;
	     t['ncaron'] = 556;
	     t['tcommaaccent'] = 278;
	     t['logicalnot'] = 584;
	     t['odieresis'] = 556;
	     t['udieresis'] = 556;
	     t['notequal'] = 549;
	     t['gcommaaccent'] = 556;
	     t['eth'] = 556;
	     t['zcaron'] = 500;
	     t['ncommaaccent'] = 556;
	     t['onesuperior'] = 333;
	     t['imacron'] = 278;
	     t['Euro'] = 556;
	    });
	    t['Helvetica-Bold'] = getLookupTableFactory(function (t) {
	     t['space'] = 278;
	     t['exclam'] = 333;
	     t['quotedbl'] = 474;
	     t['numbersign'] = 556;
	     t['dollar'] = 556;
	     t['percent'] = 889;
	     t['ampersand'] = 722;
	     t['quoteright'] = 278;
	     t['parenleft'] = 333;
	     t['parenright'] = 333;
	     t['asterisk'] = 389;
	     t['plus'] = 584;
	     t['comma'] = 278;
	     t['hyphen'] = 333;
	     t['period'] = 278;
	     t['slash'] = 278;
	     t['zero'] = 556;
	     t['one'] = 556;
	     t['two'] = 556;
	     t['three'] = 556;
	     t['four'] = 556;
	     t['five'] = 556;
	     t['six'] = 556;
	     t['seven'] = 556;
	     t['eight'] = 556;
	     t['nine'] = 556;
	     t['colon'] = 333;
	     t['semicolon'] = 333;
	     t['less'] = 584;
	     t['equal'] = 584;
	     t['greater'] = 584;
	     t['question'] = 611;
	     t['at'] = 975;
	     t['A'] = 722;
	     t['B'] = 722;
	     t['C'] = 722;
	     t['D'] = 722;
	     t['E'] = 667;
	     t['F'] = 611;
	     t['G'] = 778;
	     t['H'] = 722;
	     t['I'] = 278;
	     t['J'] = 556;
	     t['K'] = 722;
	     t['L'] = 611;
	     t['M'] = 833;
	     t['N'] = 722;
	     t['O'] = 778;
	     t['P'] = 667;
	     t['Q'] = 778;
	     t['R'] = 722;
	     t['S'] = 667;
	     t['T'] = 611;
	     t['U'] = 722;
	     t['V'] = 667;
	     t['W'] = 944;
	     t['X'] = 667;
	     t['Y'] = 667;
	     t['Z'] = 611;
	     t['bracketleft'] = 333;
	     t['backslash'] = 278;
	     t['bracketright'] = 333;
	     t['asciicircum'] = 584;
	     t['underscore'] = 556;
	     t['quoteleft'] = 278;
	     t['a'] = 556;
	     t['b'] = 611;
	     t['c'] = 556;
	     t['d'] = 611;
	     t['e'] = 556;
	     t['f'] = 333;
	     t['g'] = 611;
	     t['h'] = 611;
	     t['i'] = 278;
	     t['j'] = 278;
	     t['k'] = 556;
	     t['l'] = 278;
	     t['m'] = 889;
	     t['n'] = 611;
	     t['o'] = 611;
	     t['p'] = 611;
	     t['q'] = 611;
	     t['r'] = 389;
	     t['s'] = 556;
	     t['t'] = 333;
	     t['u'] = 611;
	     t['v'] = 556;
	     t['w'] = 778;
	     t['x'] = 556;
	     t['y'] = 556;
	     t['z'] = 500;
	     t['braceleft'] = 389;
	     t['bar'] = 280;
	     t['braceright'] = 389;
	     t['asciitilde'] = 584;
	     t['exclamdown'] = 333;
	     t['cent'] = 556;
	     t['sterling'] = 556;
	     t['fraction'] = 167;
	     t['yen'] = 556;
	     t['florin'] = 556;
	     t['section'] = 556;
	     t['currency'] = 556;
	     t['quotesingle'] = 238;
	     t['quotedblleft'] = 500;
	     t['guillemotleft'] = 556;
	     t['guilsinglleft'] = 333;
	     t['guilsinglright'] = 333;
	     t['fi'] = 611;
	     t['fl'] = 611;
	     t['endash'] = 556;
	     t['dagger'] = 556;
	     t['daggerdbl'] = 556;
	     t['periodcentered'] = 278;
	     t['paragraph'] = 556;
	     t['bullet'] = 350;
	     t['quotesinglbase'] = 278;
	     t['quotedblbase'] = 500;
	     t['quotedblright'] = 500;
	     t['guillemotright'] = 556;
	     t['ellipsis'] = 1000;
	     t['perthousand'] = 1000;
	     t['questiondown'] = 611;
	     t['grave'] = 333;
	     t['acute'] = 333;
	     t['circumflex'] = 333;
	     t['tilde'] = 333;
	     t['macron'] = 333;
	     t['breve'] = 333;
	     t['dotaccent'] = 333;
	     t['dieresis'] = 333;
	     t['ring'] = 333;
	     t['cedilla'] = 333;
	     t['hungarumlaut'] = 333;
	     t['ogonek'] = 333;
	     t['caron'] = 333;
	     t['emdash'] = 1000;
	     t['AE'] = 1000;
	     t['ordfeminine'] = 370;
	     t['Lslash'] = 611;
	     t['Oslash'] = 778;
	     t['OE'] = 1000;
	     t['ordmasculine'] = 365;
	     t['ae'] = 889;
	     t['dotlessi'] = 278;
	     t['lslash'] = 278;
	     t['oslash'] = 611;
	     t['oe'] = 944;
	     t['germandbls'] = 611;
	     t['Idieresis'] = 278;
	     t['eacute'] = 556;
	     t['abreve'] = 556;
	     t['uhungarumlaut'] = 611;
	     t['ecaron'] = 556;
	     t['Ydieresis'] = 667;
	     t['divide'] = 584;
	     t['Yacute'] = 667;
	     t['Acircumflex'] = 722;
	     t['aacute'] = 556;
	     t['Ucircumflex'] = 722;
	     t['yacute'] = 556;
	     t['scommaaccent'] = 556;
	     t['ecircumflex'] = 556;
	     t['Uring'] = 722;
	     t['Udieresis'] = 722;
	     t['aogonek'] = 556;
	     t['Uacute'] = 722;
	     t['uogonek'] = 611;
	     t['Edieresis'] = 667;
	     t['Dcroat'] = 722;
	     t['commaaccent'] = 250;
	     t['copyright'] = 737;
	     t['Emacron'] = 667;
	     t['ccaron'] = 556;
	     t['aring'] = 556;
	     t['Ncommaaccent'] = 722;
	     t['lacute'] = 278;
	     t['agrave'] = 556;
	     t['Tcommaaccent'] = 611;
	     t['Cacute'] = 722;
	     t['atilde'] = 556;
	     t['Edotaccent'] = 667;
	     t['scaron'] = 556;
	     t['scedilla'] = 556;
	     t['iacute'] = 278;
	     t['lozenge'] = 494;
	     t['Rcaron'] = 722;
	     t['Gcommaaccent'] = 778;
	     t['ucircumflex'] = 611;
	     t['acircumflex'] = 556;
	     t['Amacron'] = 722;
	     t['rcaron'] = 389;
	     t['ccedilla'] = 556;
	     t['Zdotaccent'] = 611;
	     t['Thorn'] = 667;
	     t['Omacron'] = 778;
	     t['Racute'] = 722;
	     t['Sacute'] = 667;
	     t['dcaron'] = 743;
	     t['Umacron'] = 722;
	     t['uring'] = 611;
	     t['threesuperior'] = 333;
	     t['Ograve'] = 778;
	     t['Agrave'] = 722;
	     t['Abreve'] = 722;
	     t['multiply'] = 584;
	     t['uacute'] = 611;
	     t['Tcaron'] = 611;
	     t['partialdiff'] = 494;
	     t['ydieresis'] = 556;
	     t['Nacute'] = 722;
	     t['icircumflex'] = 278;
	     t['Ecircumflex'] = 667;
	     t['adieresis'] = 556;
	     t['edieresis'] = 556;
	     t['cacute'] = 556;
	     t['nacute'] = 611;
	     t['umacron'] = 611;
	     t['Ncaron'] = 722;
	     t['Iacute'] = 278;
	     t['plusminus'] = 584;
	     t['brokenbar'] = 280;
	     t['registered'] = 737;
	     t['Gbreve'] = 778;
	     t['Idotaccent'] = 278;
	     t['summation'] = 600;
	     t['Egrave'] = 667;
	     t['racute'] = 389;
	     t['omacron'] = 611;
	     t['Zacute'] = 611;
	     t['Zcaron'] = 611;
	     t['greaterequal'] = 549;
	     t['Eth'] = 722;
	     t['Ccedilla'] = 722;
	     t['lcommaaccent'] = 278;
	     t['tcaron'] = 389;
	     t['eogonek'] = 556;
	     t['Uogonek'] = 722;
	     t['Aacute'] = 722;
	     t['Adieresis'] = 722;
	     t['egrave'] = 556;
	     t['zacute'] = 500;
	     t['iogonek'] = 278;
	     t['Oacute'] = 778;
	     t['oacute'] = 611;
	     t['amacron'] = 556;
	     t['sacute'] = 556;
	     t['idieresis'] = 278;
	     t['Ocircumflex'] = 778;
	     t['Ugrave'] = 722;
	     t['Delta'] = 612;
	     t['thorn'] = 611;
	     t['twosuperior'] = 333;
	     t['Odieresis'] = 778;
	     t['mu'] = 611;
	     t['igrave'] = 278;
	     t['ohungarumlaut'] = 611;
	     t['Eogonek'] = 667;
	     t['dcroat'] = 611;
	     t['threequarters'] = 834;
	     t['Scedilla'] = 667;
	     t['lcaron'] = 400;
	     t['Kcommaaccent'] = 722;
	     t['Lacute'] = 611;
	     t['trademark'] = 1000;
	     t['edotaccent'] = 556;
	     t['Igrave'] = 278;
	     t['Imacron'] = 278;
	     t['Lcaron'] = 611;
	     t['onehalf'] = 834;
	     t['lessequal'] = 549;
	     t['ocircumflex'] = 611;
	     t['ntilde'] = 611;
	     t['Uhungarumlaut'] = 722;
	     t['Eacute'] = 667;
	     t['emacron'] = 556;
	     t['gbreve'] = 611;
	     t['onequarter'] = 834;
	     t['Scaron'] = 667;
	     t['Scommaaccent'] = 667;
	     t['Ohungarumlaut'] = 778;
	     t['degree'] = 400;
	     t['ograve'] = 611;
	     t['Ccaron'] = 722;
	     t['ugrave'] = 611;
	     t['radical'] = 549;
	     t['Dcaron'] = 722;
	     t['rcommaaccent'] = 389;
	     t['Ntilde'] = 722;
	     t['otilde'] = 611;
	     t['Rcommaaccent'] = 722;
	     t['Lcommaaccent'] = 611;
	     t['Atilde'] = 722;
	     t['Aogonek'] = 722;
	     t['Aring'] = 722;
	     t['Otilde'] = 778;
	     t['zdotaccent'] = 500;
	     t['Ecaron'] = 667;
	     t['Iogonek'] = 278;
	     t['kcommaaccent'] = 556;
	     t['minus'] = 584;
	     t['Icircumflex'] = 278;
	     t['ncaron'] = 611;
	     t['tcommaaccent'] = 333;
	     t['logicalnot'] = 584;
	     t['odieresis'] = 611;
	     t['udieresis'] = 611;
	     t['notequal'] = 549;
	     t['gcommaaccent'] = 611;
	     t['eth'] = 611;
	     t['zcaron'] = 500;
	     t['ncommaaccent'] = 611;
	     t['onesuperior'] = 333;
	     t['imacron'] = 278;
	     t['Euro'] = 556;
	    });
	    t['Helvetica-BoldOblique'] = getLookupTableFactory(function (t) {
	     t['space'] = 278;
	     t['exclam'] = 333;
	     t['quotedbl'] = 474;
	     t['numbersign'] = 556;
	     t['dollar'] = 556;
	     t['percent'] = 889;
	     t['ampersand'] = 722;
	     t['quoteright'] = 278;
	     t['parenleft'] = 333;
	     t['parenright'] = 333;
	     t['asterisk'] = 389;
	     t['plus'] = 584;
	     t['comma'] = 278;
	     t['hyphen'] = 333;
	     t['period'] = 278;
	     t['slash'] = 278;
	     t['zero'] = 556;
	     t['one'] = 556;
	     t['two'] = 556;
	     t['three'] = 556;
	     t['four'] = 556;
	     t['five'] = 556;
	     t['six'] = 556;
	     t['seven'] = 556;
	     t['eight'] = 556;
	     t['nine'] = 556;
	     t['colon'] = 333;
	     t['semicolon'] = 333;
	     t['less'] = 584;
	     t['equal'] = 584;
	     t['greater'] = 584;
	     t['question'] = 611;
	     t['at'] = 975;
	     t['A'] = 722;
	     t['B'] = 722;
	     t['C'] = 722;
	     t['D'] = 722;
	     t['E'] = 667;
	     t['F'] = 611;
	     t['G'] = 778;
	     t['H'] = 722;
	     t['I'] = 278;
	     t['J'] = 556;
	     t['K'] = 722;
	     t['L'] = 611;
	     t['M'] = 833;
	     t['N'] = 722;
	     t['O'] = 778;
	     t['P'] = 667;
	     t['Q'] = 778;
	     t['R'] = 722;
	     t['S'] = 667;
	     t['T'] = 611;
	     t['U'] = 722;
	     t['V'] = 667;
	     t['W'] = 944;
	     t['X'] = 667;
	     t['Y'] = 667;
	     t['Z'] = 611;
	     t['bracketleft'] = 333;
	     t['backslash'] = 278;
	     t['bracketright'] = 333;
	     t['asciicircum'] = 584;
	     t['underscore'] = 556;
	     t['quoteleft'] = 278;
	     t['a'] = 556;
	     t['b'] = 611;
	     t['c'] = 556;
	     t['d'] = 611;
	     t['e'] = 556;
	     t['f'] = 333;
	     t['g'] = 611;
	     t['h'] = 611;
	     t['i'] = 278;
	     t['j'] = 278;
	     t['k'] = 556;
	     t['l'] = 278;
	     t['m'] = 889;
	     t['n'] = 611;
	     t['o'] = 611;
	     t['p'] = 611;
	     t['q'] = 611;
	     t['r'] = 389;
	     t['s'] = 556;
	     t['t'] = 333;
	     t['u'] = 611;
	     t['v'] = 556;
	     t['w'] = 778;
	     t['x'] = 556;
	     t['y'] = 556;
	     t['z'] = 500;
	     t['braceleft'] = 389;
	     t['bar'] = 280;
	     t['braceright'] = 389;
	     t['asciitilde'] = 584;
	     t['exclamdown'] = 333;
	     t['cent'] = 556;
	     t['sterling'] = 556;
	     t['fraction'] = 167;
	     t['yen'] = 556;
	     t['florin'] = 556;
	     t['section'] = 556;
	     t['currency'] = 556;
	     t['quotesingle'] = 238;
	     t['quotedblleft'] = 500;
	     t['guillemotleft'] = 556;
	     t['guilsinglleft'] = 333;
	     t['guilsinglright'] = 333;
	     t['fi'] = 611;
	     t['fl'] = 611;
	     t['endash'] = 556;
	     t['dagger'] = 556;
	     t['daggerdbl'] = 556;
	     t['periodcentered'] = 278;
	     t['paragraph'] = 556;
	     t['bullet'] = 350;
	     t['quotesinglbase'] = 278;
	     t['quotedblbase'] = 500;
	     t['quotedblright'] = 500;
	     t['guillemotright'] = 556;
	     t['ellipsis'] = 1000;
	     t['perthousand'] = 1000;
	     t['questiondown'] = 611;
	     t['grave'] = 333;
	     t['acute'] = 333;
	     t['circumflex'] = 333;
	     t['tilde'] = 333;
	     t['macron'] = 333;
	     t['breve'] = 333;
	     t['dotaccent'] = 333;
	     t['dieresis'] = 333;
	     t['ring'] = 333;
	     t['cedilla'] = 333;
	     t['hungarumlaut'] = 333;
	     t['ogonek'] = 333;
	     t['caron'] = 333;
	     t['emdash'] = 1000;
	     t['AE'] = 1000;
	     t['ordfeminine'] = 370;
	     t['Lslash'] = 611;
	     t['Oslash'] = 778;
	     t['OE'] = 1000;
	     t['ordmasculine'] = 365;
	     t['ae'] = 889;
	     t['dotlessi'] = 278;
	     t['lslash'] = 278;
	     t['oslash'] = 611;
	     t['oe'] = 944;
	     t['germandbls'] = 611;
	     t['Idieresis'] = 278;
	     t['eacute'] = 556;
	     t['abreve'] = 556;
	     t['uhungarumlaut'] = 611;
	     t['ecaron'] = 556;
	     t['Ydieresis'] = 667;
	     t['divide'] = 584;
	     t['Yacute'] = 667;
	     t['Acircumflex'] = 722;
	     t['aacute'] = 556;
	     t['Ucircumflex'] = 722;
	     t['yacute'] = 556;
	     t['scommaaccent'] = 556;
	     t['ecircumflex'] = 556;
	     t['Uring'] = 722;
	     t['Udieresis'] = 722;
	     t['aogonek'] = 556;
	     t['Uacute'] = 722;
	     t['uogonek'] = 611;
	     t['Edieresis'] = 667;
	     t['Dcroat'] = 722;
	     t['commaaccent'] = 250;
	     t['copyright'] = 737;
	     t['Emacron'] = 667;
	     t['ccaron'] = 556;
	     t['aring'] = 556;
	     t['Ncommaaccent'] = 722;
	     t['lacute'] = 278;
	     t['agrave'] = 556;
	     t['Tcommaaccent'] = 611;
	     t['Cacute'] = 722;
	     t['atilde'] = 556;
	     t['Edotaccent'] = 667;
	     t['scaron'] = 556;
	     t['scedilla'] = 556;
	     t['iacute'] = 278;
	     t['lozenge'] = 494;
	     t['Rcaron'] = 722;
	     t['Gcommaaccent'] = 778;
	     t['ucircumflex'] = 611;
	     t['acircumflex'] = 556;
	     t['Amacron'] = 722;
	     t['rcaron'] = 389;
	     t['ccedilla'] = 556;
	     t['Zdotaccent'] = 611;
	     t['Thorn'] = 667;
	     t['Omacron'] = 778;
	     t['Racute'] = 722;
	     t['Sacute'] = 667;
	     t['dcaron'] = 743;
	     t['Umacron'] = 722;
	     t['uring'] = 611;
	     t['threesuperior'] = 333;
	     t['Ograve'] = 778;
	     t['Agrave'] = 722;
	     t['Abreve'] = 722;
	     t['multiply'] = 584;
	     t['uacute'] = 611;
	     t['Tcaron'] = 611;
	     t['partialdiff'] = 494;
	     t['ydieresis'] = 556;
	     t['Nacute'] = 722;
	     t['icircumflex'] = 278;
	     t['Ecircumflex'] = 667;
	     t['adieresis'] = 556;
	     t['edieresis'] = 556;
	     t['cacute'] = 556;
	     t['nacute'] = 611;
	     t['umacron'] = 611;
	     t['Ncaron'] = 722;
	     t['Iacute'] = 278;
	     t['plusminus'] = 584;
	     t['brokenbar'] = 280;
	     t['registered'] = 737;
	     t['Gbreve'] = 778;
	     t['Idotaccent'] = 278;
	     t['summation'] = 600;
	     t['Egrave'] = 667;
	     t['racute'] = 389;
	     t['omacron'] = 611;
	     t['Zacute'] = 611;
	     t['Zcaron'] = 611;
	     t['greaterequal'] = 549;
	     t['Eth'] = 722;
	     t['Ccedilla'] = 722;
	     t['lcommaaccent'] = 278;
	     t['tcaron'] = 389;
	     t['eogonek'] = 556;
	     t['Uogonek'] = 722;
	     t['Aacute'] = 722;
	     t['Adieresis'] = 722;
	     t['egrave'] = 556;
	     t['zacute'] = 500;
	     t['iogonek'] = 278;
	     t['Oacute'] = 778;
	     t['oacute'] = 611;
	     t['amacron'] = 556;
	     t['sacute'] = 556;
	     t['idieresis'] = 278;
	     t['Ocircumflex'] = 778;
	     t['Ugrave'] = 722;
	     t['Delta'] = 612;
	     t['thorn'] = 611;
	     t['twosuperior'] = 333;
	     t['Odieresis'] = 778;
	     t['mu'] = 611;
	     t['igrave'] = 278;
	     t['ohungarumlaut'] = 611;
	     t['Eogonek'] = 667;
	     t['dcroat'] = 611;
	     t['threequarters'] = 834;
	     t['Scedilla'] = 667;
	     t['lcaron'] = 400;
	     t['Kcommaaccent'] = 722;
	     t['Lacute'] = 611;
	     t['trademark'] = 1000;
	     t['edotaccent'] = 556;
	     t['Igrave'] = 278;
	     t['Imacron'] = 278;
	     t['Lcaron'] = 611;
	     t['onehalf'] = 834;
	     t['lessequal'] = 549;
	     t['ocircumflex'] = 611;
	     t['ntilde'] = 611;
	     t['Uhungarumlaut'] = 722;
	     t['Eacute'] = 667;
	     t['emacron'] = 556;
	     t['gbreve'] = 611;
	     t['onequarter'] = 834;
	     t['Scaron'] = 667;
	     t['Scommaaccent'] = 667;
	     t['Ohungarumlaut'] = 778;
	     t['degree'] = 400;
	     t['ograve'] = 611;
	     t['Ccaron'] = 722;
	     t['ugrave'] = 611;
	     t['radical'] = 549;
	     t['Dcaron'] = 722;
	     t['rcommaaccent'] = 389;
	     t['Ntilde'] = 722;
	     t['otilde'] = 611;
	     t['Rcommaaccent'] = 722;
	     t['Lcommaaccent'] = 611;
	     t['Atilde'] = 722;
	     t['Aogonek'] = 722;
	     t['Aring'] = 722;
	     t['Otilde'] = 778;
	     t['zdotaccent'] = 500;
	     t['Ecaron'] = 667;
	     t['Iogonek'] = 278;
	     t['kcommaaccent'] = 556;
	     t['minus'] = 584;
	     t['Icircumflex'] = 278;
	     t['ncaron'] = 611;
	     t['tcommaaccent'] = 333;
	     t['logicalnot'] = 584;
	     t['odieresis'] = 611;
	     t['udieresis'] = 611;
	     t['notequal'] = 549;
	     t['gcommaaccent'] = 611;
	     t['eth'] = 611;
	     t['zcaron'] = 500;
	     t['ncommaaccent'] = 611;
	     t['onesuperior'] = 333;
	     t['imacron'] = 278;
	     t['Euro'] = 556;
	    });
	    t['Helvetica-Oblique'] = getLookupTableFactory(function (t) {
	     t['space'] = 278;
	     t['exclam'] = 278;
	     t['quotedbl'] = 355;
	     t['numbersign'] = 556;
	     t['dollar'] = 556;
	     t['percent'] = 889;
	     t['ampersand'] = 667;
	     t['quoteright'] = 222;
	     t['parenleft'] = 333;
	     t['parenright'] = 333;
	     t['asterisk'] = 389;
	     t['plus'] = 584;
	     t['comma'] = 278;
	     t['hyphen'] = 333;
	     t['period'] = 278;
	     t['slash'] = 278;
	     t['zero'] = 556;
	     t['one'] = 556;
	     t['two'] = 556;
	     t['three'] = 556;
	     t['four'] = 556;
	     t['five'] = 556;
	     t['six'] = 556;
	     t['seven'] = 556;
	     t['eight'] = 556;
	     t['nine'] = 556;
	     t['colon'] = 278;
	     t['semicolon'] = 278;
	     t['less'] = 584;
	     t['equal'] = 584;
	     t['greater'] = 584;
	     t['question'] = 556;
	     t['at'] = 1015;
	     t['A'] = 667;
	     t['B'] = 667;
	     t['C'] = 722;
	     t['D'] = 722;
	     t['E'] = 667;
	     t['F'] = 611;
	     t['G'] = 778;
	     t['H'] = 722;
	     t['I'] = 278;
	     t['J'] = 500;
	     t['K'] = 667;
	     t['L'] = 556;
	     t['M'] = 833;
	     t['N'] = 722;
	     t['O'] = 778;
	     t['P'] = 667;
	     t['Q'] = 778;
	     t['R'] = 722;
	     t['S'] = 667;
	     t['T'] = 611;
	     t['U'] = 722;
	     t['V'] = 667;
	     t['W'] = 944;
	     t['X'] = 667;
	     t['Y'] = 667;
	     t['Z'] = 611;
	     t['bracketleft'] = 278;
	     t['backslash'] = 278;
	     t['bracketright'] = 278;
	     t['asciicircum'] = 469;
	     t['underscore'] = 556;
	     t['quoteleft'] = 222;
	     t['a'] = 556;
	     t['b'] = 556;
	     t['c'] = 500;
	     t['d'] = 556;
	     t['e'] = 556;
	     t['f'] = 278;
	     t['g'] = 556;
	     t['h'] = 556;
	     t['i'] = 222;
	     t['j'] = 222;
	     t['k'] = 500;
	     t['l'] = 222;
	     t['m'] = 833;
	     t['n'] = 556;
	     t['o'] = 556;
	     t['p'] = 556;
	     t['q'] = 556;
	     t['r'] = 333;
	     t['s'] = 500;
	     t['t'] = 278;
	     t['u'] = 556;
	     t['v'] = 500;
	     t['w'] = 722;
	     t['x'] = 500;
	     t['y'] = 500;
	     t['z'] = 500;
	     t['braceleft'] = 334;
	     t['bar'] = 260;
	     t['braceright'] = 334;
	     t['asciitilde'] = 584;
	     t['exclamdown'] = 333;
	     t['cent'] = 556;
	     t['sterling'] = 556;
	     t['fraction'] = 167;
	     t['yen'] = 556;
	     t['florin'] = 556;
	     t['section'] = 556;
	     t['currency'] = 556;
	     t['quotesingle'] = 191;
	     t['quotedblleft'] = 333;
	     t['guillemotleft'] = 556;
	     t['guilsinglleft'] = 333;
	     t['guilsinglright'] = 333;
	     t['fi'] = 500;
	     t['fl'] = 500;
	     t['endash'] = 556;
	     t['dagger'] = 556;
	     t['daggerdbl'] = 556;
	     t['periodcentered'] = 278;
	     t['paragraph'] = 537;
	     t['bullet'] = 350;
	     t['quotesinglbase'] = 222;
	     t['quotedblbase'] = 333;
	     t['quotedblright'] = 333;
	     t['guillemotright'] = 556;
	     t['ellipsis'] = 1000;
	     t['perthousand'] = 1000;
	     t['questiondown'] = 611;
	     t['grave'] = 333;
	     t['acute'] = 333;
	     t['circumflex'] = 333;
	     t['tilde'] = 333;
	     t['macron'] = 333;
	     t['breve'] = 333;
	     t['dotaccent'] = 333;
	     t['dieresis'] = 333;
	     t['ring'] = 333;
	     t['cedilla'] = 333;
	     t['hungarumlaut'] = 333;
	     t['ogonek'] = 333;
	     t['caron'] = 333;
	     t['emdash'] = 1000;
	     t['AE'] = 1000;
	     t['ordfeminine'] = 370;
	     t['Lslash'] = 556;
	     t['Oslash'] = 778;
	     t['OE'] = 1000;
	     t['ordmasculine'] = 365;
	     t['ae'] = 889;
	     t['dotlessi'] = 278;
	     t['lslash'] = 222;
	     t['oslash'] = 611;
	     t['oe'] = 944;
	     t['germandbls'] = 611;
	     t['Idieresis'] = 278;
	     t['eacute'] = 556;
	     t['abreve'] = 556;
	     t['uhungarumlaut'] = 556;
	     t['ecaron'] = 556;
	     t['Ydieresis'] = 667;
	     t['divide'] = 584;
	     t['Yacute'] = 667;
	     t['Acircumflex'] = 667;
	     t['aacute'] = 556;
	     t['Ucircumflex'] = 722;
	     t['yacute'] = 500;
	     t['scommaaccent'] = 500;
	     t['ecircumflex'] = 556;
	     t['Uring'] = 722;
	     t['Udieresis'] = 722;
	     t['aogonek'] = 556;
	     t['Uacute'] = 722;
	     t['uogonek'] = 556;
	     t['Edieresis'] = 667;
	     t['Dcroat'] = 722;
	     t['commaaccent'] = 250;
	     t['copyright'] = 737;
	     t['Emacron'] = 667;
	     t['ccaron'] = 500;
	     t['aring'] = 556;
	     t['Ncommaaccent'] = 722;
	     t['lacute'] = 222;
	     t['agrave'] = 556;
	     t['Tcommaaccent'] = 611;
	     t['Cacute'] = 722;
	     t['atilde'] = 556;
	     t['Edotaccent'] = 667;
	     t['scaron'] = 500;
	     t['scedilla'] = 500;
	     t['iacute'] = 278;
	     t['lozenge'] = 471;
	     t['Rcaron'] = 722;
	     t['Gcommaaccent'] = 778;
	     t['ucircumflex'] = 556;
	     t['acircumflex'] = 556;
	     t['Amacron'] = 667;
	     t['rcaron'] = 333;
	     t['ccedilla'] = 500;
	     t['Zdotaccent'] = 611;
	     t['Thorn'] = 667;
	     t['Omacron'] = 778;
	     t['Racute'] = 722;
	     t['Sacute'] = 667;
	     t['dcaron'] = 643;
	     t['Umacron'] = 722;
	     t['uring'] = 556;
	     t['threesuperior'] = 333;
	     t['Ograve'] = 778;
	     t['Agrave'] = 667;
	     t['Abreve'] = 667;
	     t['multiply'] = 584;
	     t['uacute'] = 556;
	     t['Tcaron'] = 611;
	     t['partialdiff'] = 476;
	     t['ydieresis'] = 500;
	     t['Nacute'] = 722;
	     t['icircumflex'] = 278;
	     t['Ecircumflex'] = 667;
	     t['adieresis'] = 556;
	     t['edieresis'] = 556;
	     t['cacute'] = 500;
	     t['nacute'] = 556;
	     t['umacron'] = 556;
	     t['Ncaron'] = 722;
	     t['Iacute'] = 278;
	     t['plusminus'] = 584;
	     t['brokenbar'] = 260;
	     t['registered'] = 737;
	     t['Gbreve'] = 778;
	     t['Idotaccent'] = 278;
	     t['summation'] = 600;
	     t['Egrave'] = 667;
	     t['racute'] = 333;
	     t['omacron'] = 556;
	     t['Zacute'] = 611;
	     t['Zcaron'] = 611;
	     t['greaterequal'] = 549;
	     t['Eth'] = 722;
	     t['Ccedilla'] = 722;
	     t['lcommaaccent'] = 222;
	     t['tcaron'] = 317;
	     t['eogonek'] = 556;
	     t['Uogonek'] = 722;
	     t['Aacute'] = 667;
	     t['Adieresis'] = 667;
	     t['egrave'] = 556;
	     t['zacute'] = 500;
	     t['iogonek'] = 222;
	     t['Oacute'] = 778;
	     t['oacute'] = 556;
	     t['amacron'] = 556;
	     t['sacute'] = 500;
	     t['idieresis'] = 278;
	     t['Ocircumflex'] = 778;
	     t['Ugrave'] = 722;
	     t['Delta'] = 612;
	     t['thorn'] = 556;
	     t['twosuperior'] = 333;
	     t['Odieresis'] = 778;
	     t['mu'] = 556;
	     t['igrave'] = 278;
	     t['ohungarumlaut'] = 556;
	     t['Eogonek'] = 667;
	     t['dcroat'] = 556;
	     t['threequarters'] = 834;
	     t['Scedilla'] = 667;
	     t['lcaron'] = 299;
	     t['Kcommaaccent'] = 667;
	     t['Lacute'] = 556;
	     t['trademark'] = 1000;
	     t['edotaccent'] = 556;
	     t['Igrave'] = 278;
	     t['Imacron'] = 278;
	     t['Lcaron'] = 556;
	     t['onehalf'] = 834;
	     t['lessequal'] = 549;
	     t['ocircumflex'] = 556;
	     t['ntilde'] = 556;
	     t['Uhungarumlaut'] = 722;
	     t['Eacute'] = 667;
	     t['emacron'] = 556;
	     t['gbreve'] = 556;
	     t['onequarter'] = 834;
	     t['Scaron'] = 667;
	     t['Scommaaccent'] = 667;
	     t['Ohungarumlaut'] = 778;
	     t['degree'] = 400;
	     t['ograve'] = 556;
	     t['Ccaron'] = 722;
	     t['ugrave'] = 556;
	     t['radical'] = 453;
	     t['Dcaron'] = 722;
	     t['rcommaaccent'] = 333;
	     t['Ntilde'] = 722;
	     t['otilde'] = 556;
	     t['Rcommaaccent'] = 722;
	     t['Lcommaaccent'] = 556;
	     t['Atilde'] = 667;
	     t['Aogonek'] = 667;
	     t['Aring'] = 667;
	     t['Otilde'] = 778;
	     t['zdotaccent'] = 500;
	     t['Ecaron'] = 667;
	     t['Iogonek'] = 278;
	     t['kcommaaccent'] = 500;
	     t['minus'] = 584;
	     t['Icircumflex'] = 278;
	     t['ncaron'] = 556;
	     t['tcommaaccent'] = 278;
	     t['logicalnot'] = 584;
	     t['odieresis'] = 556;
	     t['udieresis'] = 556;
	     t['notequal'] = 549;
	     t['gcommaaccent'] = 556;
	     t['eth'] = 556;
	     t['zcaron'] = 500;
	     t['ncommaaccent'] = 556;
	     t['onesuperior'] = 333;
	     t['imacron'] = 278;
	     t['Euro'] = 556;
	    });
	    t['Symbol'] = getLookupTableFactory(function (t) {
	     t['space'] = 250;
	     t['exclam'] = 333;
	     t['universal'] = 713;
	     t['numbersign'] = 500;
	     t['existential'] = 549;
	     t['percent'] = 833;
	     t['ampersand'] = 778;
	     t['suchthat'] = 439;
	     t['parenleft'] = 333;
	     t['parenright'] = 333;
	     t['asteriskmath'] = 500;
	     t['plus'] = 549;
	     t['comma'] = 250;
	     t['minus'] = 549;
	     t['period'] = 250;
	     t['slash'] = 278;
	     t['zero'] = 500;
	     t['one'] = 500;
	     t['two'] = 500;
	     t['three'] = 500;
	     t['four'] = 500;
	     t['five'] = 500;
	     t['six'] = 500;
	     t['seven'] = 500;
	     t['eight'] = 500;
	     t['nine'] = 500;
	     t['colon'] = 278;
	     t['semicolon'] = 278;
	     t['less'] = 549;
	     t['equal'] = 549;
	     t['greater'] = 549;
	     t['question'] = 444;
	     t['congruent'] = 549;
	     t['Alpha'] = 722;
	     t['Beta'] = 667;
	     t['Chi'] = 722;
	     t['Delta'] = 612;
	     t['Epsilon'] = 611;
	     t['Phi'] = 763;
	     t['Gamma'] = 603;
	     t['Eta'] = 722;
	     t['Iota'] = 333;
	     t['theta1'] = 631;
	     t['Kappa'] = 722;
	     t['Lambda'] = 686;
	     t['Mu'] = 889;
	     t['Nu'] = 722;
	     t['Omicron'] = 722;
	     t['Pi'] = 768;
	     t['Theta'] = 741;
	     t['Rho'] = 556;
	     t['Sigma'] = 592;
	     t['Tau'] = 611;
	     t['Upsilon'] = 690;
	     t['sigma1'] = 439;
	     t['Omega'] = 768;
	     t['Xi'] = 645;
	     t['Psi'] = 795;
	     t['Zeta'] = 611;
	     t['bracketleft'] = 333;
	     t['therefore'] = 863;
	     t['bracketright'] = 333;
	     t['perpendicular'] = 658;
	     t['underscore'] = 500;
	     t['radicalex'] = 500;
	     t['alpha'] = 631;
	     t['beta'] = 549;
	     t['chi'] = 549;
	     t['delta'] = 494;
	     t['epsilon'] = 439;
	     t['phi'] = 521;
	     t['gamma'] = 411;
	     t['eta'] = 603;
	     t['iota'] = 329;
	     t['phi1'] = 603;
	     t['kappa'] = 549;
	     t['lambda'] = 549;
	     t['mu'] = 576;
	     t['nu'] = 521;
	     t['omicron'] = 549;
	     t['pi'] = 549;
	     t['theta'] = 521;
	     t['rho'] = 549;
	     t['sigma'] = 603;
	     t['tau'] = 439;
	     t['upsilon'] = 576;
	     t['omega1'] = 713;
	     t['omega'] = 686;
	     t['xi'] = 493;
	     t['psi'] = 686;
	     t['zeta'] = 494;
	     t['braceleft'] = 480;
	     t['bar'] = 200;
	     t['braceright'] = 480;
	     t['similar'] = 549;
	     t['Euro'] = 750;
	     t['Upsilon1'] = 620;
	     t['minute'] = 247;
	     t['lessequal'] = 549;
	     t['fraction'] = 167;
	     t['infinity'] = 713;
	     t['florin'] = 500;
	     t['club'] = 753;
	     t['diamond'] = 753;
	     t['heart'] = 753;
	     t['spade'] = 753;
	     t['arrowboth'] = 1042;
	     t['arrowleft'] = 987;
	     t['arrowup'] = 603;
	     t['arrowright'] = 987;
	     t['arrowdown'] = 603;
	     t['degree'] = 400;
	     t['plusminus'] = 549;
	     t['second'] = 411;
	     t['greaterequal'] = 549;
	     t['multiply'] = 549;
	     t['proportional'] = 713;
	     t['partialdiff'] = 494;
	     t['bullet'] = 460;
	     t['divide'] = 549;
	     t['notequal'] = 549;
	     t['equivalence'] = 549;
	     t['approxequal'] = 549;
	     t['ellipsis'] = 1000;
	     t['arrowvertex'] = 603;
	     t['arrowhorizex'] = 1000;
	     t['carriagereturn'] = 658;
	     t['aleph'] = 823;
	     t['Ifraktur'] = 686;
	     t['Rfraktur'] = 795;
	     t['weierstrass'] = 987;
	     t['circlemultiply'] = 768;
	     t['circleplus'] = 768;
	     t['emptyset'] = 823;
	     t['intersection'] = 768;
	     t['union'] = 768;
	     t['propersuperset'] = 713;
	     t['reflexsuperset'] = 713;
	     t['notsubset'] = 713;
	     t['propersubset'] = 713;
	     t['reflexsubset'] = 713;
	     t['element'] = 713;
	     t['notelement'] = 713;
	     t['angle'] = 768;
	     t['gradient'] = 713;
	     t['registerserif'] = 790;
	     t['copyrightserif'] = 790;
	     t['trademarkserif'] = 890;
	     t['product'] = 823;
	     t['radical'] = 549;
	     t['dotmath'] = 250;
	     t['logicalnot'] = 713;
	     t['logicaland'] = 603;
	     t['logicalor'] = 603;
	     t['arrowdblboth'] = 1042;
	     t['arrowdblleft'] = 987;
	     t['arrowdblup'] = 603;
	     t['arrowdblright'] = 987;
	     t['arrowdbldown'] = 603;
	     t['lozenge'] = 494;
	     t['angleleft'] = 329;
	     t['registersans'] = 790;
	     t['copyrightsans'] = 790;
	     t['trademarksans'] = 786;
	     t['summation'] = 713;
	     t['parenlefttp'] = 384;
	     t['parenleftex'] = 384;
	     t['parenleftbt'] = 384;
	     t['bracketlefttp'] = 384;
	     t['bracketleftex'] = 384;
	     t['bracketleftbt'] = 384;
	     t['bracelefttp'] = 494;
	     t['braceleftmid'] = 494;
	     t['braceleftbt'] = 494;
	     t['braceex'] = 494;
	     t['angleright'] = 329;
	     t['integral'] = 274;
	     t['integraltp'] = 686;
	     t['integralex'] = 686;
	     t['integralbt'] = 686;
	     t['parenrighttp'] = 384;
	     t['parenrightex'] = 384;
	     t['parenrightbt'] = 384;
	     t['bracketrighttp'] = 384;
	     t['bracketrightex'] = 384;
	     t['bracketrightbt'] = 384;
	     t['bracerighttp'] = 494;
	     t['bracerightmid'] = 494;
	     t['bracerightbt'] = 494;
	     t['apple'] = 790;
	    });
	    t['Times-Roman'] = getLookupTableFactory(function (t) {
	     t['space'] = 250;
	     t['exclam'] = 333;
	     t['quotedbl'] = 408;
	     t['numbersign'] = 500;
	     t['dollar'] = 500;
	     t['percent'] = 833;
	     t['ampersand'] = 778;
	     t['quoteright'] = 333;
	     t['parenleft'] = 333;
	     t['parenright'] = 333;
	     t['asterisk'] = 500;
	     t['plus'] = 564;
	     t['comma'] = 250;
	     t['hyphen'] = 333;
	     t['period'] = 250;
	     t['slash'] = 278;
	     t['zero'] = 500;
	     t['one'] = 500;
	     t['two'] = 500;
	     t['three'] = 500;
	     t['four'] = 500;
	     t['five'] = 500;
	     t['six'] = 500;
	     t['seven'] = 500;
	     t['eight'] = 500;
	     t['nine'] = 500;
	     t['colon'] = 278;
	     t['semicolon'] = 278;
	     t['less'] = 564;
	     t['equal'] = 564;
	     t['greater'] = 564;
	     t['question'] = 444;
	     t['at'] = 921;
	     t['A'] = 722;
	     t['B'] = 667;
	     t['C'] = 667;
	     t['D'] = 722;
	     t['E'] = 611;
	     t['F'] = 556;
	     t['G'] = 722;
	     t['H'] = 722;
	     t['I'] = 333;
	     t['J'] = 389;
	     t['K'] = 722;
	     t['L'] = 611;
	     t['M'] = 889;
	     t['N'] = 722;
	     t['O'] = 722;
	     t['P'] = 556;
	     t['Q'] = 722;
	     t['R'] = 667;
	     t['S'] = 556;
	     t['T'] = 611;
	     t['U'] = 722;
	     t['V'] = 722;
	     t['W'] = 944;
	     t['X'] = 722;
	     t['Y'] = 722;
	     t['Z'] = 611;
	     t['bracketleft'] = 333;
	     t['backslash'] = 278;
	     t['bracketright'] = 333;
	     t['asciicircum'] = 469;
	     t['underscore'] = 500;
	     t['quoteleft'] = 333;
	     t['a'] = 444;
	     t['b'] = 500;
	     t['c'] = 444;
	     t['d'] = 500;
	     t['e'] = 444;
	     t['f'] = 333;
	     t['g'] = 500;
	     t['h'] = 500;
	     t['i'] = 278;
	     t['j'] = 278;
	     t['k'] = 500;
	     t['l'] = 278;
	     t['m'] = 778;
	     t['n'] = 500;
	     t['o'] = 500;
	     t['p'] = 500;
	     t['q'] = 500;
	     t['r'] = 333;
	     t['s'] = 389;
	     t['t'] = 278;
	     t['u'] = 500;
	     t['v'] = 500;
	     t['w'] = 722;
	     t['x'] = 500;
	     t['y'] = 500;
	     t['z'] = 444;
	     t['braceleft'] = 480;
	     t['bar'] = 200;
	     t['braceright'] = 480;
	     t['asciitilde'] = 541;
	     t['exclamdown'] = 333;
	     t['cent'] = 500;
	     t['sterling'] = 500;
	     t['fraction'] = 167;
	     t['yen'] = 500;
	     t['florin'] = 500;
	     t['section'] = 500;
	     t['currency'] = 500;
	     t['quotesingle'] = 180;
	     t['quotedblleft'] = 444;
	     t['guillemotleft'] = 500;
	     t['guilsinglleft'] = 333;
	     t['guilsinglright'] = 333;
	     t['fi'] = 556;
	     t['fl'] = 556;
	     t['endash'] = 500;
	     t['dagger'] = 500;
	     t['daggerdbl'] = 500;
	     t['periodcentered'] = 250;
	     t['paragraph'] = 453;
	     t['bullet'] = 350;
	     t['quotesinglbase'] = 333;
	     t['quotedblbase'] = 444;
	     t['quotedblright'] = 444;
	     t['guillemotright'] = 500;
	     t['ellipsis'] = 1000;
	     t['perthousand'] = 1000;
	     t['questiondown'] = 444;
	     t['grave'] = 333;
	     t['acute'] = 333;
	     t['circumflex'] = 333;
	     t['tilde'] = 333;
	     t['macron'] = 333;
	     t['breve'] = 333;
	     t['dotaccent'] = 333;
	     t['dieresis'] = 333;
	     t['ring'] = 333;
	     t['cedilla'] = 333;
	     t['hungarumlaut'] = 333;
	     t['ogonek'] = 333;
	     t['caron'] = 333;
	     t['emdash'] = 1000;
	     t['AE'] = 889;
	     t['ordfeminine'] = 276;
	     t['Lslash'] = 611;
	     t['Oslash'] = 722;
	     t['OE'] = 889;
	     t['ordmasculine'] = 310;
	     t['ae'] = 667;
	     t['dotlessi'] = 278;
	     t['lslash'] = 278;
	     t['oslash'] = 500;
	     t['oe'] = 722;
	     t['germandbls'] = 500;
	     t['Idieresis'] = 333;
	     t['eacute'] = 444;
	     t['abreve'] = 444;
	     t['uhungarumlaut'] = 500;
	     t['ecaron'] = 444;
	     t['Ydieresis'] = 722;
	     t['divide'] = 564;
	     t['Yacute'] = 722;
	     t['Acircumflex'] = 722;
	     t['aacute'] = 444;
	     t['Ucircumflex'] = 722;
	     t['yacute'] = 500;
	     t['scommaaccent'] = 389;
	     t['ecircumflex'] = 444;
	     t['Uring'] = 722;
	     t['Udieresis'] = 722;
	     t['aogonek'] = 444;
	     t['Uacute'] = 722;
	     t['uogonek'] = 500;
	     t['Edieresis'] = 611;
	     t['Dcroat'] = 722;
	     t['commaaccent'] = 250;
	     t['copyright'] = 760;
	     t['Emacron'] = 611;
	     t['ccaron'] = 444;
	     t['aring'] = 444;
	     t['Ncommaaccent'] = 722;
	     t['lacute'] = 278;
	     t['agrave'] = 444;
	     t['Tcommaaccent'] = 611;
	     t['Cacute'] = 667;
	     t['atilde'] = 444;
	     t['Edotaccent'] = 611;
	     t['scaron'] = 389;
	     t['scedilla'] = 389;
	     t['iacute'] = 278;
	     t['lozenge'] = 471;
	     t['Rcaron'] = 667;
	     t['Gcommaaccent'] = 722;
	     t['ucircumflex'] = 500;
	     t['acircumflex'] = 444;
	     t['Amacron'] = 722;
	     t['rcaron'] = 333;
	     t['ccedilla'] = 444;
	     t['Zdotaccent'] = 611;
	     t['Thorn'] = 556;
	     t['Omacron'] = 722;
	     t['Racute'] = 667;
	     t['Sacute'] = 556;
	     t['dcaron'] = 588;
	     t['Umacron'] = 722;
	     t['uring'] = 500;
	     t['threesuperior'] = 300;
	     t['Ograve'] = 722;
	     t['Agrave'] = 722;
	     t['Abreve'] = 722;
	     t['multiply'] = 564;
	     t['uacute'] = 500;
	     t['Tcaron'] = 611;
	     t['partialdiff'] = 476;
	     t['ydieresis'] = 500;
	     t['Nacute'] = 722;
	     t['icircumflex'] = 278;
	     t['Ecircumflex'] = 611;
	     t['adieresis'] = 444;
	     t['edieresis'] = 444;
	     t['cacute'] = 444;
	     t['nacute'] = 500;
	     t['umacron'] = 500;
	     t['Ncaron'] = 722;
	     t['Iacute'] = 333;
	     t['plusminus'] = 564;
	     t['brokenbar'] = 200;
	     t['registered'] = 760;
	     t['Gbreve'] = 722;
	     t['Idotaccent'] = 333;
	     t['summation'] = 600;
	     t['Egrave'] = 611;
	     t['racute'] = 333;
	     t['omacron'] = 500;
	     t['Zacute'] = 611;
	     t['Zcaron'] = 611;
	     t['greaterequal'] = 549;
	     t['Eth'] = 722;
	     t['Ccedilla'] = 667;
	     t['lcommaaccent'] = 278;
	     t['tcaron'] = 326;
	     t['eogonek'] = 444;
	     t['Uogonek'] = 722;
	     t['Aacute'] = 722;
	     t['Adieresis'] = 722;
	     t['egrave'] = 444;
	     t['zacute'] = 444;
	     t['iogonek'] = 278;
	     t['Oacute'] = 722;
	     t['oacute'] = 500;
	     t['amacron'] = 444;
	     t['sacute'] = 389;
	     t['idieresis'] = 278;
	     t['Ocircumflex'] = 722;
	     t['Ugrave'] = 722;
	     t['Delta'] = 612;
	     t['thorn'] = 500;
	     t['twosuperior'] = 300;
	     t['Odieresis'] = 722;
	     t['mu'] = 500;
	     t['igrave'] = 278;
	     t['ohungarumlaut'] = 500;
	     t['Eogonek'] = 611;
	     t['dcroat'] = 500;
	     t['threequarters'] = 750;
	     t['Scedilla'] = 556;
	     t['lcaron'] = 344;
	     t['Kcommaaccent'] = 722;
	     t['Lacute'] = 611;
	     t['trademark'] = 980;
	     t['edotaccent'] = 444;
	     t['Igrave'] = 333;
	     t['Imacron'] = 333;
	     t['Lcaron'] = 611;
	     t['onehalf'] = 750;
	     t['lessequal'] = 549;
	     t['ocircumflex'] = 500;
	     t['ntilde'] = 500;
	     t['Uhungarumlaut'] = 722;
	     t['Eacute'] = 611;
	     t['emacron'] = 444;
	     t['gbreve'] = 500;
	     t['onequarter'] = 750;
	     t['Scaron'] = 556;
	     t['Scommaaccent'] = 556;
	     t['Ohungarumlaut'] = 722;
	     t['degree'] = 400;
	     t['ograve'] = 500;
	     t['Ccaron'] = 667;
	     t['ugrave'] = 500;
	     t['radical'] = 453;
	     t['Dcaron'] = 722;
	     t['rcommaaccent'] = 333;
	     t['Ntilde'] = 722;
	     t['otilde'] = 500;
	     t['Rcommaaccent'] = 667;
	     t['Lcommaaccent'] = 611;
	     t['Atilde'] = 722;
	     t['Aogonek'] = 722;
	     t['Aring'] = 722;
	     t['Otilde'] = 722;
	     t['zdotaccent'] = 444;
	     t['Ecaron'] = 611;
	     t['Iogonek'] = 333;
	     t['kcommaaccent'] = 500;
	     t['minus'] = 564;
	     t['Icircumflex'] = 333;
	     t['ncaron'] = 500;
	     t['tcommaaccent'] = 278;
	     t['logicalnot'] = 564;
	     t['odieresis'] = 500;
	     t['udieresis'] = 500;
	     t['notequal'] = 549;
	     t['gcommaaccent'] = 500;
	     t['eth'] = 500;
	     t['zcaron'] = 444;
	     t['ncommaaccent'] = 500;
	     t['onesuperior'] = 300;
	     t['imacron'] = 278;
	     t['Euro'] = 500;
	    });
	    t['Times-Bold'] = getLookupTableFactory(function (t) {
	     t['space'] = 250;
	     t['exclam'] = 333;
	     t['quotedbl'] = 555;
	     t['numbersign'] = 500;
	     t['dollar'] = 500;
	     t['percent'] = 1000;
	     t['ampersand'] = 833;
	     t['quoteright'] = 333;
	     t['parenleft'] = 333;
	     t['parenright'] = 333;
	     t['asterisk'] = 500;
	     t['plus'] = 570;
	     t['comma'] = 250;
	     t['hyphen'] = 333;
	     t['period'] = 250;
	     t['slash'] = 278;
	     t['zero'] = 500;
	     t['one'] = 500;
	     t['two'] = 500;
	     t['three'] = 500;
	     t['four'] = 500;
	     t['five'] = 500;
	     t['six'] = 500;
	     t['seven'] = 500;
	     t['eight'] = 500;
	     t['nine'] = 500;
	     t['colon'] = 333;
	     t['semicolon'] = 333;
	     t['less'] = 570;
	     t['equal'] = 570;
	     t['greater'] = 570;
	     t['question'] = 500;
	     t['at'] = 930;
	     t['A'] = 722;
	     t['B'] = 667;
	     t['C'] = 722;
	     t['D'] = 722;
	     t['E'] = 667;
	     t['F'] = 611;
	     t['G'] = 778;
	     t['H'] = 778;
	     t['I'] = 389;
	     t['J'] = 500;
	     t['K'] = 778;
	     t['L'] = 667;
	     t['M'] = 944;
	     t['N'] = 722;
	     t['O'] = 778;
	     t['P'] = 611;
	     t['Q'] = 778;
	     t['R'] = 722;
	     t['S'] = 556;
	     t['T'] = 667;
	     t['U'] = 722;
	     t['V'] = 722;
	     t['W'] = 1000;
	     t['X'] = 722;
	     t['Y'] = 722;
	     t['Z'] = 667;
	     t['bracketleft'] = 333;
	     t['backslash'] = 278;
	     t['bracketright'] = 333;
	     t['asciicircum'] = 581;
	     t['underscore'] = 500;
	     t['quoteleft'] = 333;
	     t['a'] = 500;
	     t['b'] = 556;
	     t['c'] = 444;
	     t['d'] = 556;
	     t['e'] = 444;
	     t['f'] = 333;
	     t['g'] = 500;
	     t['h'] = 556;
	     t['i'] = 278;
	     t['j'] = 333;
	     t['k'] = 556;
	     t['l'] = 278;
	     t['m'] = 833;
	     t['n'] = 556;
	     t['o'] = 500;
	     t['p'] = 556;
	     t['q'] = 556;
	     t['r'] = 444;
	     t['s'] = 389;
	     t['t'] = 333;
	     t['u'] = 556;
	     t['v'] = 500;
	     t['w'] = 722;
	     t['x'] = 500;
	     t['y'] = 500;
	     t['z'] = 444;
	     t['braceleft'] = 394;
	     t['bar'] = 220;
	     t['braceright'] = 394;
	     t['asciitilde'] = 520;
	     t['exclamdown'] = 333;
	     t['cent'] = 500;
	     t['sterling'] = 500;
	     t['fraction'] = 167;
	     t['yen'] = 500;
	     t['florin'] = 500;
	     t['section'] = 500;
	     t['currency'] = 500;
	     t['quotesingle'] = 278;
	     t['quotedblleft'] = 500;
	     t['guillemotleft'] = 500;
	     t['guilsinglleft'] = 333;
	     t['guilsinglright'] = 333;
	     t['fi'] = 556;
	     t['fl'] = 556;
	     t['endash'] = 500;
	     t['dagger'] = 500;
	     t['daggerdbl'] = 500;
	     t['periodcentered'] = 250;
	     t['paragraph'] = 540;
	     t['bullet'] = 350;
	     t['quotesinglbase'] = 333;
	     t['quotedblbase'] = 500;
	     t['quotedblright'] = 500;
	     t['guillemotright'] = 500;
	     t['ellipsis'] = 1000;
	     t['perthousand'] = 1000;
	     t['questiondown'] = 500;
	     t['grave'] = 333;
	     t['acute'] = 333;
	     t['circumflex'] = 333;
	     t['tilde'] = 333;
	     t['macron'] = 333;
	     t['breve'] = 333;
	     t['dotaccent'] = 333;
	     t['dieresis'] = 333;
	     t['ring'] = 333;
	     t['cedilla'] = 333;
	     t['hungarumlaut'] = 333;
	     t['ogonek'] = 333;
	     t['caron'] = 333;
	     t['emdash'] = 1000;
	     t['AE'] = 1000;
	     t['ordfeminine'] = 300;
	     t['Lslash'] = 667;
	     t['Oslash'] = 778;
	     t['OE'] = 1000;
	     t['ordmasculine'] = 330;
	     t['ae'] = 722;
	     t['dotlessi'] = 278;
	     t['lslash'] = 278;
	     t['oslash'] = 500;
	     t['oe'] = 722;
	     t['germandbls'] = 556;
	     t['Idieresis'] = 389;
	     t['eacute'] = 444;
	     t['abreve'] = 500;
	     t['uhungarumlaut'] = 556;
	     t['ecaron'] = 444;
	     t['Ydieresis'] = 722;
	     t['divide'] = 570;
	     t['Yacute'] = 722;
	     t['Acircumflex'] = 722;
	     t['aacute'] = 500;
	     t['Ucircumflex'] = 722;
	     t['yacute'] = 500;
	     t['scommaaccent'] = 389;
	     t['ecircumflex'] = 444;
	     t['Uring'] = 722;
	     t['Udieresis'] = 722;
	     t['aogonek'] = 500;
	     t['Uacute'] = 722;
	     t['uogonek'] = 556;
	     t['Edieresis'] = 667;
	     t['Dcroat'] = 722;
	     t['commaaccent'] = 250;
	     t['copyright'] = 747;
	     t['Emacron'] = 667;
	     t['ccaron'] = 444;
	     t['aring'] = 500;
	     t['Ncommaaccent'] = 722;
	     t['lacute'] = 278;
	     t['agrave'] = 500;
	     t['Tcommaaccent'] = 667;
	     t['Cacute'] = 722;
	     t['atilde'] = 500;
	     t['Edotaccent'] = 667;
	     t['scaron'] = 389;
	     t['scedilla'] = 389;
	     t['iacute'] = 278;
	     t['lozenge'] = 494;
	     t['Rcaron'] = 722;
	     t['Gcommaaccent'] = 778;
	     t['ucircumflex'] = 556;
	     t['acircumflex'] = 500;
	     t['Amacron'] = 722;
	     t['rcaron'] = 444;
	     t['ccedilla'] = 444;
	     t['Zdotaccent'] = 667;
	     t['Thorn'] = 611;
	     t['Omacron'] = 778;
	     t['Racute'] = 722;
	     t['Sacute'] = 556;
	     t['dcaron'] = 672;
	     t['Umacron'] = 722;
	     t['uring'] = 556;
	     t['threesuperior'] = 300;
	     t['Ograve'] = 778;
	     t['Agrave'] = 722;
	     t['Abreve'] = 722;
	     t['multiply'] = 570;
	     t['uacute'] = 556;
	     t['Tcaron'] = 667;
	     t['partialdiff'] = 494;
	     t['ydieresis'] = 500;
	     t['Nacute'] = 722;
	     t['icircumflex'] = 278;
	     t['Ecircumflex'] = 667;
	     t['adieresis'] = 500;
	     t['edieresis'] = 444;
	     t['cacute'] = 444;
	     t['nacute'] = 556;
	     t['umacron'] = 556;
	     t['Ncaron'] = 722;
	     t['Iacute'] = 389;
	     t['plusminus'] = 570;
	     t['brokenbar'] = 220;
	     t['registered'] = 747;
	     t['Gbreve'] = 778;
	     t['Idotaccent'] = 389;
	     t['summation'] = 600;
	     t['Egrave'] = 667;
	     t['racute'] = 444;
	     t['omacron'] = 500;
	     t['Zacute'] = 667;
	     t['Zcaron'] = 667;
	     t['greaterequal'] = 549;
	     t['Eth'] = 722;
	     t['Ccedilla'] = 722;
	     t['lcommaaccent'] = 278;
	     t['tcaron'] = 416;
	     t['eogonek'] = 444;
	     t['Uogonek'] = 722;
	     t['Aacute'] = 722;
	     t['Adieresis'] = 722;
	     t['egrave'] = 444;
	     t['zacute'] = 444;
	     t['iogonek'] = 278;
	     t['Oacute'] = 778;
	     t['oacute'] = 500;
	     t['amacron'] = 500;
	     t['sacute'] = 389;
	     t['idieresis'] = 278;
	     t['Ocircumflex'] = 778;
	     t['Ugrave'] = 722;
	     t['Delta'] = 612;
	     t['thorn'] = 556;
	     t['twosuperior'] = 300;
	     t['Odieresis'] = 778;
	     t['mu'] = 556;
	     t['igrave'] = 278;
	     t['ohungarumlaut'] = 500;
	     t['Eogonek'] = 667;
	     t['dcroat'] = 556;
	     t['threequarters'] = 750;
	     t['Scedilla'] = 556;
	     t['lcaron'] = 394;
	     t['Kcommaaccent'] = 778;
	     t['Lacute'] = 667;
	     t['trademark'] = 1000;
	     t['edotaccent'] = 444;
	     t['Igrave'] = 389;
	     t['Imacron'] = 389;
	     t['Lcaron'] = 667;
	     t['onehalf'] = 750;
	     t['lessequal'] = 549;
	     t['ocircumflex'] = 500;
	     t['ntilde'] = 556;
	     t['Uhungarumlaut'] = 722;
	     t['Eacute'] = 667;
	     t['emacron'] = 444;
	     t['gbreve'] = 500;
	     t['onequarter'] = 750;
	     t['Scaron'] = 556;
	     t['Scommaaccent'] = 556;
	     t['Ohungarumlaut'] = 778;
	     t['degree'] = 400;
	     t['ograve'] = 500;
	     t['Ccaron'] = 722;
	     t['ugrave'] = 556;
	     t['radical'] = 549;
	     t['Dcaron'] = 722;
	     t['rcommaaccent'] = 444;
	     t['Ntilde'] = 722;
	     t['otilde'] = 500;
	     t['Rcommaaccent'] = 722;
	     t['Lcommaaccent'] = 667;
	     t['Atilde'] = 722;
	     t['Aogonek'] = 722;
	     t['Aring'] = 722;
	     t['Otilde'] = 778;
	     t['zdotaccent'] = 444;
	     t['Ecaron'] = 667;
	     t['Iogonek'] = 389;
	     t['kcommaaccent'] = 556;
	     t['minus'] = 570;
	     t['Icircumflex'] = 389;
	     t['ncaron'] = 556;
	     t['tcommaaccent'] = 333;
	     t['logicalnot'] = 570;
	     t['odieresis'] = 500;
	     t['udieresis'] = 556;
	     t['notequal'] = 549;
	     t['gcommaaccent'] = 500;
	     t['eth'] = 500;
	     t['zcaron'] = 444;
	     t['ncommaaccent'] = 556;
	     t['onesuperior'] = 300;
	     t['imacron'] = 278;
	     t['Euro'] = 500;
	    });
	    t['Times-BoldItalic'] = getLookupTableFactory(function (t) {
	     t['space'] = 250;
	     t['exclam'] = 389;
	     t['quotedbl'] = 555;
	     t['numbersign'] = 500;
	     t['dollar'] = 500;
	     t['percent'] = 833;
	     t['ampersand'] = 778;
	     t['quoteright'] = 333;
	     t['parenleft'] = 333;
	     t['parenright'] = 333;
	     t['asterisk'] = 500;
	     t['plus'] = 570;
	     t['comma'] = 250;
	     t['hyphen'] = 333;
	     t['period'] = 250;
	     t['slash'] = 278;
	     t['zero'] = 500;
	     t['one'] = 500;
	     t['two'] = 500;
	     t['three'] = 500;
	     t['four'] = 500;
	     t['five'] = 500;
	     t['six'] = 500;
	     t['seven'] = 500;
	     t['eight'] = 500;
	     t['nine'] = 500;
	     t['colon'] = 333;
	     t['semicolon'] = 333;
	     t['less'] = 570;
	     t['equal'] = 570;
	     t['greater'] = 570;
	     t['question'] = 500;
	     t['at'] = 832;
	     t['A'] = 667;
	     t['B'] = 667;
	     t['C'] = 667;
	     t['D'] = 722;
	     t['E'] = 667;
	     t['F'] = 667;
	     t['G'] = 722;
	     t['H'] = 778;
	     t['I'] = 389;
	     t['J'] = 500;
	     t['K'] = 667;
	     t['L'] = 611;
	     t['M'] = 889;
	     t['N'] = 722;
	     t['O'] = 722;
	     t['P'] = 611;
	     t['Q'] = 722;
	     t['R'] = 667;
	     t['S'] = 556;
	     t['T'] = 611;
	     t['U'] = 722;
	     t['V'] = 667;
	     t['W'] = 889;
	     t['X'] = 667;
	     t['Y'] = 611;
	     t['Z'] = 611;
	     t['bracketleft'] = 333;
	     t['backslash'] = 278;
	     t['bracketright'] = 333;
	     t['asciicircum'] = 570;
	     t['underscore'] = 500;
	     t['quoteleft'] = 333;
	     t['a'] = 500;
	     t['b'] = 500;
	     t['c'] = 444;
	     t['d'] = 500;
	     t['e'] = 444;
	     t['f'] = 333;
	     t['g'] = 500;
	     t['h'] = 556;
	     t['i'] = 278;
	     t['j'] = 278;
	     t['k'] = 500;
	     t['l'] = 278;
	     t['m'] = 778;
	     t['n'] = 556;
	     t['o'] = 500;
	     t['p'] = 500;
	     t['q'] = 500;
	     t['r'] = 389;
	     t['s'] = 389;
	     t['t'] = 278;
	     t['u'] = 556;
	     t['v'] = 444;
	     t['w'] = 667;
	     t['x'] = 500;
	     t['y'] = 444;
	     t['z'] = 389;
	     t['braceleft'] = 348;
	     t['bar'] = 220;
	     t['braceright'] = 348;
	     t['asciitilde'] = 570;
	     t['exclamdown'] = 389;
	     t['cent'] = 500;
	     t['sterling'] = 500;
	     t['fraction'] = 167;
	     t['yen'] = 500;
	     t['florin'] = 500;
	     t['section'] = 500;
	     t['currency'] = 500;
	     t['quotesingle'] = 278;
	     t['quotedblleft'] = 500;
	     t['guillemotleft'] = 500;
	     t['guilsinglleft'] = 333;
	     t['guilsinglright'] = 333;
	     t['fi'] = 556;
	     t['fl'] = 556;
	     t['endash'] = 500;
	     t['dagger'] = 500;
	     t['daggerdbl'] = 500;
	     t['periodcentered'] = 250;
	     t['paragraph'] = 500;
	     t['bullet'] = 350;
	     t['quotesinglbase'] = 333;
	     t['quotedblbase'] = 500;
	     t['quotedblright'] = 500;
	     t['guillemotright'] = 500;
	     t['ellipsis'] = 1000;
	     t['perthousand'] = 1000;
	     t['questiondown'] = 500;
	     t['grave'] = 333;
	     t['acute'] = 333;
	     t['circumflex'] = 333;
	     t['tilde'] = 333;
	     t['macron'] = 333;
	     t['breve'] = 333;
	     t['dotaccent'] = 333;
	     t['dieresis'] = 333;
	     t['ring'] = 333;
	     t['cedilla'] = 333;
	     t['hungarumlaut'] = 333;
	     t['ogonek'] = 333;
	     t['caron'] = 333;
	     t['emdash'] = 1000;
	     t['AE'] = 944;
	     t['ordfeminine'] = 266;
	     t['Lslash'] = 611;
	     t['Oslash'] = 722;
	     t['OE'] = 944;
	     t['ordmasculine'] = 300;
	     t['ae'] = 722;
	     t['dotlessi'] = 278;
	     t['lslash'] = 278;
	     t['oslash'] = 500;
	     t['oe'] = 722;
	     t['germandbls'] = 500;
	     t['Idieresis'] = 389;
	     t['eacute'] = 444;
	     t['abreve'] = 500;
	     t['uhungarumlaut'] = 556;
	     t['ecaron'] = 444;
	     t['Ydieresis'] = 611;
	     t['divide'] = 570;
	     t['Yacute'] = 611;
	     t['Acircumflex'] = 667;
	     t['aacute'] = 500;
	     t['Ucircumflex'] = 722;
	     t['yacute'] = 444;
	     t['scommaaccent'] = 389;
	     t['ecircumflex'] = 444;
	     t['Uring'] = 722;
	     t['Udieresis'] = 722;
	     t['aogonek'] = 500;
	     t['Uacute'] = 722;
	     t['uogonek'] = 556;
	     t['Edieresis'] = 667;
	     t['Dcroat'] = 722;
	     t['commaaccent'] = 250;
	     t['copyright'] = 747;
	     t['Emacron'] = 667;
	     t['ccaron'] = 444;
	     t['aring'] = 500;
	     t['Ncommaaccent'] = 722;
	     t['lacute'] = 278;
	     t['agrave'] = 500;
	     t['Tcommaaccent'] = 611;
	     t['Cacute'] = 667;
	     t['atilde'] = 500;
	     t['Edotaccent'] = 667;
	     t['scaron'] = 389;
	     t['scedilla'] = 389;
	     t['iacute'] = 278;
	     t['lozenge'] = 494;
	     t['Rcaron'] = 667;
	     t['Gcommaaccent'] = 722;
	     t['ucircumflex'] = 556;
	     t['acircumflex'] = 500;
	     t['Amacron'] = 667;
	     t['rcaron'] = 389;
	     t['ccedilla'] = 444;
	     t['Zdotaccent'] = 611;
	     t['Thorn'] = 611;
	     t['Omacron'] = 722;
	     t['Racute'] = 667;
	     t['Sacute'] = 556;
	     t['dcaron'] = 608;
	     t['Umacron'] = 722;
	     t['uring'] = 556;
	     t['threesuperior'] = 300;
	     t['Ograve'] = 722;
	     t['Agrave'] = 667;
	     t['Abreve'] = 667;
	     t['multiply'] = 570;
	     t['uacute'] = 556;
	     t['Tcaron'] = 611;
	     t['partialdiff'] = 494;
	     t['ydieresis'] = 444;
	     t['Nacute'] = 722;
	     t['icircumflex'] = 278;
	     t['Ecircumflex'] = 667;
	     t['adieresis'] = 500;
	     t['edieresis'] = 444;
	     t['cacute'] = 444;
	     t['nacute'] = 556;
	     t['umacron'] = 556;
	     t['Ncaron'] = 722;
	     t['Iacute'] = 389;
	     t['plusminus'] = 570;
	     t['brokenbar'] = 220;
	     t['registered'] = 747;
	     t['Gbreve'] = 722;
	     t['Idotaccent'] = 389;
	     t['summation'] = 600;
	     t['Egrave'] = 667;
	     t['racute'] = 389;
	     t['omacron'] = 500;
	     t['Zacute'] = 611;
	     t['Zcaron'] = 611;
	     t['greaterequal'] = 549;
	     t['Eth'] = 722;
	     t['Ccedilla'] = 667;
	     t['lcommaaccent'] = 278;
	     t['tcaron'] = 366;
	     t['eogonek'] = 444;
	     t['Uogonek'] = 722;
	     t['Aacute'] = 667;
	     t['Adieresis'] = 667;
	     t['egrave'] = 444;
	     t['zacute'] = 389;
	     t['iogonek'] = 278;
	     t['Oacute'] = 722;
	     t['oacute'] = 500;
	     t['amacron'] = 500;
	     t['sacute'] = 389;
	     t['idieresis'] = 278;
	     t['Ocircumflex'] = 722;
	     t['Ugrave'] = 722;
	     t['Delta'] = 612;
	     t['thorn'] = 500;
	     t['twosuperior'] = 300;
	     t['Odieresis'] = 722;
	     t['mu'] = 576;
	     t['igrave'] = 278;
	     t['ohungarumlaut'] = 500;
	     t['Eogonek'] = 667;
	     t['dcroat'] = 500;
	     t['threequarters'] = 750;
	     t['Scedilla'] = 556;
	     t['lcaron'] = 382;
	     t['Kcommaaccent'] = 667;
	     t['Lacute'] = 611;
	     t['trademark'] = 1000;
	     t['edotaccent'] = 444;
	     t['Igrave'] = 389;
	     t['Imacron'] = 389;
	     t['Lcaron'] = 611;
	     t['onehalf'] = 750;
	     t['lessequal'] = 549;
	     t['ocircumflex'] = 500;
	     t['ntilde'] = 556;
	     t['Uhungarumlaut'] = 722;
	     t['Eacute'] = 667;
	     t['emacron'] = 444;
	     t['gbreve'] = 500;
	     t['onequarter'] = 750;
	     t['Scaron'] = 556;
	     t['Scommaaccent'] = 556;
	     t['Ohungarumlaut'] = 722;
	     t['degree'] = 400;
	     t['ograve'] = 500;
	     t['Ccaron'] = 667;
	     t['ugrave'] = 556;
	     t['radical'] = 549;
	     t['Dcaron'] = 722;
	     t['rcommaaccent'] = 389;
	     t['Ntilde'] = 722;
	     t['otilde'] = 500;
	     t['Rcommaaccent'] = 667;
	     t['Lcommaaccent'] = 611;
	     t['Atilde'] = 667;
	     t['Aogonek'] = 667;
	     t['Aring'] = 667;
	     t['Otilde'] = 722;
	     t['zdotaccent'] = 389;
	     t['Ecaron'] = 667;
	     t['Iogonek'] = 389;
	     t['kcommaaccent'] = 500;
	     t['minus'] = 606;
	     t['Icircumflex'] = 389;
	     t['ncaron'] = 556;
	     t['tcommaaccent'] = 278;
	     t['logicalnot'] = 606;
	     t['odieresis'] = 500;
	     t['udieresis'] = 556;
	     t['notequal'] = 549;
	     t['gcommaaccent'] = 500;
	     t['eth'] = 500;
	     t['zcaron'] = 389;
	     t['ncommaaccent'] = 556;
	     t['onesuperior'] = 300;
	     t['imacron'] = 278;
	     t['Euro'] = 500;
	    });
	    t['Times-Italic'] = getLookupTableFactory(function (t) {
	     t['space'] = 250;
	     t['exclam'] = 333;
	     t['quotedbl'] = 420;
	     t['numbersign'] = 500;
	     t['dollar'] = 500;
	     t['percent'] = 833;
	     t['ampersand'] = 778;
	     t['quoteright'] = 333;
	     t['parenleft'] = 333;
	     t['parenright'] = 333;
	     t['asterisk'] = 500;
	     t['plus'] = 675;
	     t['comma'] = 250;
	     t['hyphen'] = 333;
	     t['period'] = 250;
	     t['slash'] = 278;
	     t['zero'] = 500;
	     t['one'] = 500;
	     t['two'] = 500;
	     t['three'] = 500;
	     t['four'] = 500;
	     t['five'] = 500;
	     t['six'] = 500;
	     t['seven'] = 500;
	     t['eight'] = 500;
	     t['nine'] = 500;
	     t['colon'] = 333;
	     t['semicolon'] = 333;
	     t['less'] = 675;
	     t['equal'] = 675;
	     t['greater'] = 675;
	     t['question'] = 500;
	     t['at'] = 920;
	     t['A'] = 611;
	     t['B'] = 611;
	     t['C'] = 667;
	     t['D'] = 722;
	     t['E'] = 611;
	     t['F'] = 611;
	     t['G'] = 722;
	     t['H'] = 722;
	     t['I'] = 333;
	     t['J'] = 444;
	     t['K'] = 667;
	     t['L'] = 556;
	     t['M'] = 833;
	     t['N'] = 667;
	     t['O'] = 722;
	     t['P'] = 611;
	     t['Q'] = 722;
	     t['R'] = 611;
	     t['S'] = 500;
	     t['T'] = 556;
	     t['U'] = 722;
	     t['V'] = 611;
	     t['W'] = 833;
	     t['X'] = 611;
	     t['Y'] = 556;
	     t['Z'] = 556;
	     t['bracketleft'] = 389;
	     t['backslash'] = 278;
	     t['bracketright'] = 389;
	     t['asciicircum'] = 422;
	     t['underscore'] = 500;
	     t['quoteleft'] = 333;
	     t['a'] = 500;
	     t['b'] = 500;
	     t['c'] = 444;
	     t['d'] = 500;
	     t['e'] = 444;
	     t['f'] = 278;
	     t['g'] = 500;
	     t['h'] = 500;
	     t['i'] = 278;
	     t['j'] = 278;
	     t['k'] = 444;
	     t['l'] = 278;
	     t['m'] = 722;
	     t['n'] = 500;
	     t['o'] = 500;
	     t['p'] = 500;
	     t['q'] = 500;
	     t['r'] = 389;
	     t['s'] = 389;
	     t['t'] = 278;
	     t['u'] = 500;
	     t['v'] = 444;
	     t['w'] = 667;
	     t['x'] = 444;
	     t['y'] = 444;
	     t['z'] = 389;
	     t['braceleft'] = 400;
	     t['bar'] = 275;
	     t['braceright'] = 400;
	     t['asciitilde'] = 541;
	     t['exclamdown'] = 389;
	     t['cent'] = 500;
	     t['sterling'] = 500;
	     t['fraction'] = 167;
	     t['yen'] = 500;
	     t['florin'] = 500;
	     t['section'] = 500;
	     t['currency'] = 500;
	     t['quotesingle'] = 214;
	     t['quotedblleft'] = 556;
	     t['guillemotleft'] = 500;
	     t['guilsinglleft'] = 333;
	     t['guilsinglright'] = 333;
	     t['fi'] = 500;
	     t['fl'] = 500;
	     t['endash'] = 500;
	     t['dagger'] = 500;
	     t['daggerdbl'] = 500;
	     t['periodcentered'] = 250;
	     t['paragraph'] = 523;
	     t['bullet'] = 350;
	     t['quotesinglbase'] = 333;
	     t['quotedblbase'] = 556;
	     t['quotedblright'] = 556;
	     t['guillemotright'] = 500;
	     t['ellipsis'] = 889;
	     t['perthousand'] = 1000;
	     t['questiondown'] = 500;
	     t['grave'] = 333;
	     t['acute'] = 333;
	     t['circumflex'] = 333;
	     t['tilde'] = 333;
	     t['macron'] = 333;
	     t['breve'] = 333;
	     t['dotaccent'] = 333;
	     t['dieresis'] = 333;
	     t['ring'] = 333;
	     t['cedilla'] = 333;
	     t['hungarumlaut'] = 333;
	     t['ogonek'] = 333;
	     t['caron'] = 333;
	     t['emdash'] = 889;
	     t['AE'] = 889;
	     t['ordfeminine'] = 276;
	     t['Lslash'] = 556;
	     t['Oslash'] = 722;
	     t['OE'] = 944;
	     t['ordmasculine'] = 310;
	     t['ae'] = 667;
	     t['dotlessi'] = 278;
	     t['lslash'] = 278;
	     t['oslash'] = 500;
	     t['oe'] = 667;
	     t['germandbls'] = 500;
	     t['Idieresis'] = 333;
	     t['eacute'] = 444;
	     t['abreve'] = 500;
	     t['uhungarumlaut'] = 500;
	     t['ecaron'] = 444;
	     t['Ydieresis'] = 556;
	     t['divide'] = 675;
	     t['Yacute'] = 556;
	     t['Acircumflex'] = 611;
	     t['aacute'] = 500;
	     t['Ucircumflex'] = 722;
	     t['yacute'] = 444;
	     t['scommaaccent'] = 389;
	     t['ecircumflex'] = 444;
	     t['Uring'] = 722;
	     t['Udieresis'] = 722;
	     t['aogonek'] = 500;
	     t['Uacute'] = 722;
	     t['uogonek'] = 500;
	     t['Edieresis'] = 611;
	     t['Dcroat'] = 722;
	     t['commaaccent'] = 250;
	     t['copyright'] = 760;
	     t['Emacron'] = 611;
	     t['ccaron'] = 444;
	     t['aring'] = 500;
	     t['Ncommaaccent'] = 667;
	     t['lacute'] = 278;
	     t['agrave'] = 500;
	     t['Tcommaaccent'] = 556;
	     t['Cacute'] = 667;
	     t['atilde'] = 500;
	     t['Edotaccent'] = 611;
	     t['scaron'] = 389;
	     t['scedilla'] = 389;
	     t['iacute'] = 278;
	     t['lozenge'] = 471;
	     t['Rcaron'] = 611;
	     t['Gcommaaccent'] = 722;
	     t['ucircumflex'] = 500;
	     t['acircumflex'] = 500;
	     t['Amacron'] = 611;
	     t['rcaron'] = 389;
	     t['ccedilla'] = 444;
	     t['Zdotaccent'] = 556;
	     t['Thorn'] = 611;
	     t['Omacron'] = 722;
	     t['Racute'] = 611;
	     t['Sacute'] = 500;
	     t['dcaron'] = 544;
	     t['Umacron'] = 722;
	     t['uring'] = 500;
	     t['threesuperior'] = 300;
	     t['Ograve'] = 722;
	     t['Agrave'] = 611;
	     t['Abreve'] = 611;
	     t['multiply'] = 675;
	     t['uacute'] = 500;
	     t['Tcaron'] = 556;
	     t['partialdiff'] = 476;
	     t['ydieresis'] = 444;
	     t['Nacute'] = 667;
	     t['icircumflex'] = 278;
	     t['Ecircumflex'] = 611;
	     t['adieresis'] = 500;
	     t['edieresis'] = 444;
	     t['cacute'] = 444;
	     t['nacute'] = 500;
	     t['umacron'] = 500;
	     t['Ncaron'] = 667;
	     t['Iacute'] = 333;
	     t['plusminus'] = 675;
	     t['brokenbar'] = 275;
	     t['registered'] = 760;
	     t['Gbreve'] = 722;
	     t['Idotaccent'] = 333;
	     t['summation'] = 600;
	     t['Egrave'] = 611;
	     t['racute'] = 389;
	     t['omacron'] = 500;
	     t['Zacute'] = 556;
	     t['Zcaron'] = 556;
	     t['greaterequal'] = 549;
	     t['Eth'] = 722;
	     t['Ccedilla'] = 667;
	     t['lcommaaccent'] = 278;
	     t['tcaron'] = 300;
	     t['eogonek'] = 444;
	     t['Uogonek'] = 722;
	     t['Aacute'] = 611;
	     t['Adieresis'] = 611;
	     t['egrave'] = 444;
	     t['zacute'] = 389;
	     t['iogonek'] = 278;
	     t['Oacute'] = 722;
	     t['oacute'] = 500;
	     t['amacron'] = 500;
	     t['sacute'] = 389;
	     t['idieresis'] = 278;
	     t['Ocircumflex'] = 722;
	     t['Ugrave'] = 722;
	     t['Delta'] = 612;
	     t['thorn'] = 500;
	     t['twosuperior'] = 300;
	     t['Odieresis'] = 722;
	     t['mu'] = 500;
	     t['igrave'] = 278;
	     t['ohungarumlaut'] = 500;
	     t['Eogonek'] = 611;
	     t['dcroat'] = 500;
	     t['threequarters'] = 750;
	     t['Scedilla'] = 500;
	     t['lcaron'] = 300;
	     t['Kcommaaccent'] = 667;
	     t['Lacute'] = 556;
	     t['trademark'] = 980;
	     t['edotaccent'] = 444;
	     t['Igrave'] = 333;
	     t['Imacron'] = 333;
	     t['Lcaron'] = 611;
	     t['onehalf'] = 750;
	     t['lessequal'] = 549;
	     t['ocircumflex'] = 500;
	     t['ntilde'] = 500;
	     t['Uhungarumlaut'] = 722;
	     t['Eacute'] = 611;
	     t['emacron'] = 444;
	     t['gbreve'] = 500;
	     t['onequarter'] = 750;
	     t['Scaron'] = 500;
	     t['Scommaaccent'] = 500;
	     t['Ohungarumlaut'] = 722;
	     t['degree'] = 400;
	     t['ograve'] = 500;
	     t['Ccaron'] = 667;
	     t['ugrave'] = 500;
	     t['radical'] = 453;
	     t['Dcaron'] = 722;
	     t['rcommaaccent'] = 389;
	     t['Ntilde'] = 667;
	     t['otilde'] = 500;
	     t['Rcommaaccent'] = 611;
	     t['Lcommaaccent'] = 556;
	     t['Atilde'] = 611;
	     t['Aogonek'] = 611;
	     t['Aring'] = 611;
	     t['Otilde'] = 722;
	     t['zdotaccent'] = 389;
	     t['Ecaron'] = 611;
	     t['Iogonek'] = 333;
	     t['kcommaaccent'] = 444;
	     t['minus'] = 675;
	     t['Icircumflex'] = 333;
	     t['ncaron'] = 500;
	     t['tcommaaccent'] = 278;
	     t['logicalnot'] = 675;
	     t['odieresis'] = 500;
	     t['udieresis'] = 500;
	     t['notequal'] = 549;
	     t['gcommaaccent'] = 500;
	     t['eth'] = 500;
	     t['zcaron'] = 389;
	     t['ncommaaccent'] = 500;
	     t['onesuperior'] = 300;
	     t['imacron'] = 278;
	     t['Euro'] = 500;
	    });
	    t['ZapfDingbats'] = getLookupTableFactory(function (t) {
	     t['space'] = 278;
	     t['a1'] = 974;
	     t['a2'] = 961;
	     t['a202'] = 974;
	     t['a3'] = 980;
	     t['a4'] = 719;
	     t['a5'] = 789;
	     t['a119'] = 790;
	     t['a118'] = 791;
	     t['a117'] = 690;
	     t['a11'] = 960;
	     t['a12'] = 939;
	     t['a13'] = 549;
	     t['a14'] = 855;
	     t['a15'] = 911;
	     t['a16'] = 933;
	     t['a105'] = 911;
	     t['a17'] = 945;
	     t['a18'] = 974;
	     t['a19'] = 755;
	     t['a20'] = 846;
	     t['a21'] = 762;
	     t['a22'] = 761;
	     t['a23'] = 571;
	     t['a24'] = 677;
	     t['a25'] = 763;
	     t['a26'] = 760;
	     t['a27'] = 759;
	     t['a28'] = 754;
	     t['a6'] = 494;
	     t['a7'] = 552;
	     t['a8'] = 537;
	     t['a9'] = 577;
	     t['a10'] = 692;
	     t['a29'] = 786;
	     t['a30'] = 788;
	     t['a31'] = 788;
	     t['a32'] = 790;
	     t['a33'] = 793;
	     t['a34'] = 794;
	     t['a35'] = 816;
	     t['a36'] = 823;
	     t['a37'] = 789;
	     t['a38'] = 841;
	     t['a39'] = 823;
	     t['a40'] = 833;
	     t['a41'] = 816;
	     t['a42'] = 831;
	     t['a43'] = 923;
	     t['a44'] = 744;
	     t['a45'] = 723;
	     t['a46'] = 749;
	     t['a47'] = 790;
	     t['a48'] = 792;
	     t['a49'] = 695;
	     t['a50'] = 776;
	     t['a51'] = 768;
	     t['a52'] = 792;
	     t['a53'] = 759;
	     t['a54'] = 707;
	     t['a55'] = 708;
	     t['a56'] = 682;
	     t['a57'] = 701;
	     t['a58'] = 826;
	     t['a59'] = 815;
	     t['a60'] = 789;
	     t['a61'] = 789;
	     t['a62'] = 707;
	     t['a63'] = 687;
	     t['a64'] = 696;
	     t['a65'] = 689;
	     t['a66'] = 786;
	     t['a67'] = 787;
	     t['a68'] = 713;
	     t['a69'] = 791;
	     t['a70'] = 785;
	     t['a71'] = 791;
	     t['a72'] = 873;
	     t['a73'] = 761;
	     t['a74'] = 762;
	     t['a203'] = 762;
	     t['a75'] = 759;
	     t['a204'] = 759;
	     t['a76'] = 892;
	     t['a77'] = 892;
	     t['a78'] = 788;
	     t['a79'] = 784;
	     t['a81'] = 438;
	     t['a82'] = 138;
	     t['a83'] = 277;
	     t['a84'] = 415;
	     t['a97'] = 392;
	     t['a98'] = 392;
	     t['a99'] = 668;
	     t['a100'] = 668;
	     t['a89'] = 390;
	     t['a90'] = 390;
	     t['a93'] = 317;
	     t['a94'] = 317;
	     t['a91'] = 276;
	     t['a92'] = 276;
	     t['a205'] = 509;
	     t['a85'] = 509;
	     t['a206'] = 410;
	     t['a86'] = 410;
	     t['a87'] = 234;
	     t['a88'] = 234;
	     t['a95'] = 334;
	     t['a96'] = 334;
	     t['a101'] = 732;
	     t['a102'] = 544;
	     t['a103'] = 544;
	     t['a104'] = 910;
	     t['a106'] = 667;
	     t['a107'] = 760;
	     t['a108'] = 760;
	     t['a112'] = 776;
	     t['a111'] = 595;
	     t['a110'] = 694;
	     t['a109'] = 626;
	     t['a120'] = 788;
	     t['a121'] = 788;
	     t['a122'] = 788;
	     t['a123'] = 788;
	     t['a124'] = 788;
	     t['a125'] = 788;
	     t['a126'] = 788;
	     t['a127'] = 788;
	     t['a128'] = 788;
	     t['a129'] = 788;
	     t['a130'] = 788;
	     t['a131'] = 788;
	     t['a132'] = 788;
	     t['a133'] = 788;
	     t['a134'] = 788;
	     t['a135'] = 788;
	     t['a136'] = 788;
	     t['a137'] = 788;
	     t['a138'] = 788;
	     t['a139'] = 788;
	     t['a140'] = 788;
	     t['a141'] = 788;
	     t['a142'] = 788;
	     t['a143'] = 788;
	     t['a144'] = 788;
	     t['a145'] = 788;
	     t['a146'] = 788;
	     t['a147'] = 788;
	     t['a148'] = 788;
	     t['a149'] = 788;
	     t['a150'] = 788;
	     t['a151'] = 788;
	     t['a152'] = 788;
	     t['a153'] = 788;
	     t['a154'] = 788;
	     t['a155'] = 788;
	     t['a156'] = 788;
	     t['a157'] = 788;
	     t['a158'] = 788;
	     t['a159'] = 788;
	     t['a160'] = 894;
	     t['a161'] = 838;
	     t['a163'] = 1016;
	     t['a164'] = 458;
	     t['a196'] = 748;
	     t['a165'] = 924;
	     t['a192'] = 748;
	     t['a166'] = 918;
	     t['a167'] = 927;
	     t['a168'] = 928;
	     t['a169'] = 928;
	     t['a170'] = 834;
	     t['a171'] = 873;
	     t['a172'] = 828;
	     t['a173'] = 924;
	     t['a162'] = 924;
	     t['a174'] = 917;
	     t['a175'] = 930;
	     t['a176'] = 931;
	     t['a177'] = 463;
	     t['a178'] = 883;
	     t['a179'] = 836;
	     t['a193'] = 836;
	     t['a180'] = 867;
	     t['a199'] = 867;
	     t['a181'] = 696;
	     t['a200'] = 696;
	     t['a182'] = 874;
	     t['a201'] = 874;
	     t['a183'] = 760;
	     t['a184'] = 946;
	     t['a197'] = 771;
	     t['a185'] = 865;
	     t['a194'] = 771;
	     t['a198'] = 888;
	     t['a186'] = 967;
	     t['a195'] = 888;
	     t['a187'] = 831;
	     t['a188'] = 873;
	     t['a189'] = 927;
	     t['a190'] = 970;
	     t['a191'] = 918;
	    });
	   });
	   exports.getMetrics = getMetrics;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreMurmurHash3 = {}, root.pdfjsSharedUtil);
	  }(this, function (exports, sharedUtil) {
	   var Uint32ArrayView = sharedUtil.Uint32ArrayView;
	   var MurmurHash3_64 = function MurmurHash3_64Closure(seed) {
	    var MASK_HIGH = 0xffff0000;
	    var MASK_LOW = 0xffff;
	    function MurmurHash3_64(seed) {
	     var SEED = 0xc3d2e1f0;
	     this.h1 = seed ? seed & 0xffffffff : SEED;
	     this.h2 = seed ? seed & 0xffffffff : SEED;
	    }
	    var alwaysUseUint32ArrayView = false;
	    try {
	     new Uint32Array(new Uint8Array(5).buffer, 0, 1);
	    } catch (e) {
	     alwaysUseUint32ArrayView = true;
	    }
	    MurmurHash3_64.prototype = {
	     update: function MurmurHash3_64_update(input) {
	      var useUint32ArrayView = alwaysUseUint32ArrayView;
	      var i;
	      if (typeof input === 'string') {
	       var data = new Uint8Array(input.length * 2);
	       var length = 0;
	       for (i = 0; i < input.length; i++) {
	        var code = input.charCodeAt(i);
	        if (code <= 0xff) {
	         data[length++] = code;
	        } else {
	         data[length++] = code >>> 8;
	         data[length++] = code & 0xff;
	        }
	       }
	      } else if (input instanceof Uint8Array) {
	       data = input;
	       length = data.length;
	      } else if (typeof input === 'object' && 'length' in input) {
	       data = input;
	       length = data.length;
	       useUint32ArrayView = true;
	      } else {
	       throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');
	      }
	      var blockCounts = length >> 2;
	      var tailLength = length - blockCounts * 4;
	      var dataUint32 = useUint32ArrayView ? new Uint32ArrayView(data, blockCounts) : new Uint32Array(data.buffer, 0, blockCounts);
	      var k1 = 0;
	      var k2 = 0;
	      var h1 = this.h1;
	      var h2 = this.h2;
	      var C1 = 0xcc9e2d51;
	      var C2 = 0x1b873593;
	      var C1_LOW = C1 & MASK_LOW;
	      var C2_LOW = C2 & MASK_LOW;
	      for (i = 0; i < blockCounts; i++) {
	       if (i & 1) {
	        k1 = dataUint32[i];
	        k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;
	        k1 = k1 << 15 | k1 >>> 17;
	        k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;
	        h1 ^= k1;
	        h1 = h1 << 13 | h1 >>> 19;
	        h1 = h1 * 5 + 0xe6546b64;
	       } else {
	        k2 = dataUint32[i];
	        k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;
	        k2 = k2 << 15 | k2 >>> 17;
	        k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;
	        h2 ^= k2;
	        h2 = h2 << 13 | h2 >>> 19;
	        h2 = h2 * 5 + 0xe6546b64;
	       }
	      }
	      k1 = 0;
	      switch (tailLength) {
	      case 3:
	       k1 ^= data[blockCounts * 4 + 2] << 16;
	      case 2:
	       k1 ^= data[blockCounts * 4 + 1] << 8;
	      case 1:
	       k1 ^= data[blockCounts * 4];
	       k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;
	       k1 = k1 << 15 | k1 >>> 17;
	       k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;
	       if (blockCounts & 1) {
	        h1 ^= k1;
	       } else {
	        h2 ^= k1;
	       }
	      }
	      this.h1 = h1;
	      this.h2 = h2;
	      return this;
	     },
	     hexdigest: function MurmurHash3_64_hexdigest() {
	      var h1 = this.h1;
	      var h2 = this.h2;
	      h1 ^= h2 >>> 1;
	      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;
	      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;
	      h1 ^= h2 >>> 1;
	      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;
	      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;
	      h1 ^= h2 >>> 1;
	      for (var i = 0, arr = [
	         h1,
	         h2
	        ], str = ''; i < arr.length; i++) {
	       var hex = (arr[i] >>> 0).toString(16);
	       while (hex.length < 8) {
	        hex = '0' + hex;
	       }
	       str += hex;
	      }
	      return str;
	     }
	    };
	    return MurmurHash3_64;
	   }();
	   exports.MurmurHash3_64 = MurmurHash3_64;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCorePrimitives = {}, root.pdfjsSharedUtil);
	  }(this, function (exports, sharedUtil) {
	   var isArray = sharedUtil.isArray;
	   var EOF = {};
	   var Name = function NameClosure() {
	    function Name(name) {
	     this.name = name;
	    }
	    Name.prototype = {};
	    var nameCache = Object.create(null);
	    Name.get = function Name_get(name) {
	     var nameValue = nameCache[name];
	     return nameValue ? nameValue : nameCache[name] = new Name(name);
	    };
	    return Name;
	   }();
	   var Cmd = function CmdClosure() {
	    function Cmd(cmd) {
	     this.cmd = cmd;
	    }
	    Cmd.prototype = {};
	    var cmdCache = Object.create(null);
	    Cmd.get = function Cmd_get(cmd) {
	     var cmdValue = cmdCache[cmd];
	     return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);
	    };
	    return Cmd;
	   }();
	   var Dict = function DictClosure() {
	    var nonSerializable = function nonSerializableClosure() {
	     return nonSerializable;
	    };
	    function Dict(xref) {
	     this.map = Object.create(null);
	     this.xref = xref;
	     this.objId = null;
	     this.suppressEncryption = false;
	     this.__nonSerializable__ = nonSerializable;
	    }
	    Dict.prototype = {
	     assignXref: function Dict_assignXref(newXref) {
	      this.xref = newXref;
	     },
	     get: function Dict_get(key1, key2, key3) {
	      var value;
	      var xref = this.xref, suppressEncryption = this.suppressEncryption;
	      if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {
	       return xref ? xref.fetchIfRef(value, suppressEncryption) : value;
	      }
	      if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {
	       return xref ? xref.fetchIfRef(value, suppressEncryption) : value;
	      }
	      value = this.map[key3] || null;
	      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;
	     },
	     getAsync: function Dict_getAsync(key1, key2, key3) {
	      var value;
	      var xref = this.xref, suppressEncryption = this.suppressEncryption;
	      if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {
	       if (xref) {
	        return xref.fetchIfRefAsync(value, suppressEncryption);
	       }
	       return Promise.resolve(value);
	      }
	      if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {
	       if (xref) {
	        return xref.fetchIfRefAsync(value, suppressEncryption);
	       }
	       return Promise.resolve(value);
	      }
	      value = this.map[key3] || null;
	      if (xref) {
	       return xref.fetchIfRefAsync(value, suppressEncryption);
	      }
	      return Promise.resolve(value);
	     },
	     getArray: function Dict_getArray(key1, key2, key3) {
	      var value = this.get(key1, key2, key3);
	      var xref = this.xref, suppressEncryption = this.suppressEncryption;
	      if (!isArray(value) || !xref) {
	       return value;
	      }
	      value = value.slice();
	      for (var i = 0, ii = value.length; i < ii; i++) {
	       if (!isRef(value[i])) {
	        continue;
	       }
	       value[i] = xref.fetch(value[i], suppressEncryption);
	      }
	      return value;
	     },
	     getRaw: function Dict_getRaw(key) {
	      return this.map[key];
	     },
	     getKeys: function Dict_getKeys() {
	      return Object.keys(this.map);
	     },
	     set: function Dict_set(key, value) {
	      this.map[key] = value;
	     },
	     has: function Dict_has(key) {
	      return key in this.map;
	     },
	     forEach: function Dict_forEach(callback) {
	      for (var key in this.map) {
	       callback(key, this.get(key));
	      }
	     }
	    };
	    Dict.empty = new Dict(null);
	    Dict.merge = function Dict_merge(xref, dictArray) {
	     var mergedDict = new Dict(xref);
	     for (var i = 0, ii = dictArray.length; i < ii; i++) {
	      var dict = dictArray[i];
	      if (!isDict(dict)) {
	       continue;
	      }
	      for (var keyName in dict.map) {
	       if (mergedDict.map[keyName]) {
	        continue;
	       }
	       mergedDict.map[keyName] = dict.map[keyName];
	      }
	     }
	     return mergedDict;
	    };
	    return Dict;
	   }();
	   var Ref = function RefClosure() {
	    function Ref(num, gen) {
	     this.num = num;
	     this.gen = gen;
	    }
	    Ref.prototype = {
	     toString: function Ref_toString() {
	      var str = this.num + 'R';
	      if (this.gen !== 0) {
	       str += this.gen;
	      }
	      return str;
	     }
	    };
	    return Ref;
	   }();
	   var RefSet = function RefSetClosure() {
	    function RefSet() {
	     this.dict = Object.create(null);
	    }
	    RefSet.prototype = {
	     has: function RefSet_has(ref) {
	      return ref.toString() in this.dict;
	     },
	     put: function RefSet_put(ref) {
	      this.dict[ref.toString()] = true;
	     },
	     remove: function RefSet_remove(ref) {
	      delete this.dict[ref.toString()];
	     }
	    };
	    return RefSet;
	   }();
	   var RefSetCache = function RefSetCacheClosure() {
	    function RefSetCache() {
	     this.dict = Object.create(null);
	    }
	    RefSetCache.prototype = {
	     get: function RefSetCache_get(ref) {
	      return this.dict[ref.toString()];
	     },
	     has: function RefSetCache_has(ref) {
	      return ref.toString() in this.dict;
	     },
	     put: function RefSetCache_put(ref, obj) {
	      this.dict[ref.toString()] = obj;
	     },
	     putAlias: function RefSetCache_putAlias(ref, aliasRef) {
	      this.dict[ref.toString()] = this.get(aliasRef);
	     },
	     forEach: function RefSetCache_forEach(fn, thisArg) {
	      for (var i in this.dict) {
	       fn.call(thisArg, this.dict[i]);
	      }
	     },
	     clear: function RefSetCache_clear() {
	      this.dict = Object.create(null);
	     }
	    };
	    return RefSetCache;
	   }();
	   function isEOF(v) {
	    return v === EOF;
	   }
	   function isName(v, name) {
	    return v instanceof Name && (name === undefined || v.name === name);
	   }
	   function isCmd(v, cmd) {
	    return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);
	   }
	   function isDict(v, type) {
	    return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));
	   }
	   function isRef(v) {
	    return v instanceof Ref;
	   }
	   function isRefsEqual(v1, v2) {
	    return v1.num === v2.num && v1.gen === v2.gen;
	   }
	   function isStream(v) {
	    return typeof v === 'object' && v !== null && v.getBytes !== undefined;
	   }
	   exports.EOF = EOF;
	   exports.Cmd = Cmd;
	   exports.Dict = Dict;
	   exports.Name = Name;
	   exports.Ref = Ref;
	   exports.RefSet = RefSet;
	   exports.RefSetCache = RefSetCache;
	   exports.isEOF = isEOF;
	   exports.isCmd = isCmd;
	   exports.isDict = isDict;
	   exports.isName = isName;
	   exports.isRef = isRef;
	   exports.isRefsEqual = isRefsEqual;
	   exports.isStream = isStream;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreStandardFonts = {}, root.pdfjsSharedUtil);
	  }(this, function (exports, sharedUtil) {
	   var getLookupTableFactory = sharedUtil.getLookupTableFactory;
	   var getStdFontMap = getLookupTableFactory(function (t) {
	    t['ArialNarrow'] = 'Helvetica';
	    t['ArialNarrow-Bold'] = 'Helvetica-Bold';
	    t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';
	    t['ArialNarrow-Italic'] = 'Helvetica-Oblique';
	    t['ArialBlack'] = 'Helvetica';
	    t['ArialBlack-Bold'] = 'Helvetica-Bold';
	    t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';
	    t['ArialBlack-Italic'] = 'Helvetica-Oblique';
	    t['Arial-Black'] = 'Helvetica';
	    t['Arial-Black-Bold'] = 'Helvetica-Bold';
	    t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';
	    t['Arial-Black-Italic'] = 'Helvetica-Oblique';
	    t['Arial'] = 'Helvetica';
	    t['Arial-Bold'] = 'Helvetica-Bold';
	    t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';
	    t['Arial-Italic'] = 'Helvetica-Oblique';
	    t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';
	    t['Arial-BoldMT'] = 'Helvetica-Bold';
	    t['Arial-ItalicMT'] = 'Helvetica-Oblique';
	    t['ArialMT'] = 'Helvetica';
	    t['Courier-Bold'] = 'Courier-Bold';
	    t['Courier-BoldItalic'] = 'Courier-BoldOblique';
	    t['Courier-Italic'] = 'Courier-Oblique';
	    t['CourierNew'] = 'Courier';
	    t['CourierNew-Bold'] = 'Courier-Bold';
	    t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';
	    t['CourierNew-Italic'] = 'Courier-Oblique';
	    t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';
	    t['CourierNewPS-BoldMT'] = 'Courier-Bold';
	    t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';
	    t['CourierNewPSMT'] = 'Courier';
	    t['Helvetica'] = 'Helvetica';
	    t['Helvetica-Bold'] = 'Helvetica-Bold';
	    t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';
	    t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';
	    t['Helvetica-Italic'] = 'Helvetica-Oblique';
	    t['Helvetica-Oblique'] = 'Helvetica-Oblique';
	    t['Symbol-Bold'] = 'Symbol';
	    t['Symbol-BoldItalic'] = 'Symbol';
	    t['Symbol-Italic'] = 'Symbol';
	    t['TimesNewRoman'] = 'Times-Roman';
	    t['TimesNewRoman-Bold'] = 'Times-Bold';
	    t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';
	    t['TimesNewRoman-Italic'] = 'Times-Italic';
	    t['TimesNewRomanPS'] = 'Times-Roman';
	    t['TimesNewRomanPS-Bold'] = 'Times-Bold';
	    t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';
	    t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';
	    t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';
	    t['TimesNewRomanPS-Italic'] = 'Times-Italic';
	    t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';
	    t['TimesNewRomanPSMT'] = 'Times-Roman';
	    t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';
	    t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';
	    t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';
	   });
	   var getNonStdFontMap = getLookupTableFactory(function (t) {
	    t['CenturyGothic'] = 'Helvetica';
	    t['CenturyGothic-Bold'] = 'Helvetica-Bold';
	    t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';
	    t['CenturyGothic-Italic'] = 'Helvetica-Oblique';
	    t['ComicSansMS'] = 'Comic Sans MS';
	    t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';
	    t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';
	    t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';
	    t['LucidaConsole'] = 'Courier';
	    t['LucidaConsole-Bold'] = 'Courier-Bold';
	    t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';
	    t['LucidaConsole-Italic'] = 'Courier-Oblique';
	    t['MS-Gothic'] = 'MS Gothic';
	    t['MS-Gothic-Bold'] = 'MS Gothic-Bold';
	    t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';
	    t['MS-Gothic-Italic'] = 'MS Gothic-Italic';
	    t['MS-Mincho'] = 'MS Mincho';
	    t['MS-Mincho-Bold'] = 'MS Mincho-Bold';
	    t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';
	    t['MS-Mincho-Italic'] = 'MS Mincho-Italic';
	    t['MS-PGothic'] = 'MS PGothic';
	    t['MS-PGothic-Bold'] = 'MS PGothic-Bold';
	    t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';
	    t['MS-PGothic-Italic'] = 'MS PGothic-Italic';
	    t['MS-PMincho'] = 'MS PMincho';
	    t['MS-PMincho-Bold'] = 'MS PMincho-Bold';
	    t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';
	    t['MS-PMincho-Italic'] = 'MS PMincho-Italic';
	    t['NuptialScript'] = 'Times-Italic';
	    t['Wingdings'] = 'ZapfDingbats';
	   });
	   var getSerifFonts = getLookupTableFactory(function (t) {
	    t['Adobe Jenson'] = true;
	    t['Adobe Text'] = true;
	    t['Albertus'] = true;
	    t['Aldus'] = true;
	    t['Alexandria'] = true;
	    t['Algerian'] = true;
	    t['American Typewriter'] = true;
	    t['Antiqua'] = true;
	    t['Apex'] = true;
	    t['Arno'] = true;
	    t['Aster'] = true;
	    t['Aurora'] = true;
	    t['Baskerville'] = true;
	    t['Bell'] = true;
	    t['Bembo'] = true;
	    t['Bembo Schoolbook'] = true;
	    t['Benguiat'] = true;
	    t['Berkeley Old Style'] = true;
	    t['Bernhard Modern'] = true;
	    t['Berthold City'] = true;
	    t['Bodoni'] = true;
	    t['Bauer Bodoni'] = true;
	    t['Book Antiqua'] = true;
	    t['Bookman'] = true;
	    t['Bordeaux Roman'] = true;
	    t['Californian FB'] = true;
	    t['Calisto'] = true;
	    t['Calvert'] = true;
	    t['Capitals'] = true;
	    t['Cambria'] = true;
	    t['Cartier'] = true;
	    t['Caslon'] = true;
	    t['Catull'] = true;
	    t['Centaur'] = true;
	    t['Century Old Style'] = true;
	    t['Century Schoolbook'] = true;
	    t['Chaparral'] = true;
	    t['Charis SIL'] = true;
	    t['Cheltenham'] = true;
	    t['Cholla Slab'] = true;
	    t['Clarendon'] = true;
	    t['Clearface'] = true;
	    t['Cochin'] = true;
	    t['Colonna'] = true;
	    t['Computer Modern'] = true;
	    t['Concrete Roman'] = true;
	    t['Constantia'] = true;
	    t['Cooper Black'] = true;
	    t['Corona'] = true;
	    t['Ecotype'] = true;
	    t['Egyptienne'] = true;
	    t['Elephant'] = true;
	    t['Excelsior'] = true;
	    t['Fairfield'] = true;
	    t['FF Scala'] = true;
	    t['Folkard'] = true;
	    t['Footlight'] = true;
	    t['FreeSerif'] = true;
	    t['Friz Quadrata'] = true;
	    t['Garamond'] = true;
	    t['Gentium'] = true;
	    t['Georgia'] = true;
	    t['Gloucester'] = true;
	    t['Goudy Old Style'] = true;
	    t['Goudy Schoolbook'] = true;
	    t['Goudy Pro Font'] = true;
	    t['Granjon'] = true;
	    t['Guardian Egyptian'] = true;
	    t['Heather'] = true;
	    t['Hercules'] = true;
	    t['High Tower Text'] = true;
	    t['Hiroshige'] = true;
	    t['Hoefler Text'] = true;
	    t['Humana Serif'] = true;
	    t['Imprint'] = true;
	    t['Ionic No. 5'] = true;
	    t['Janson'] = true;
	    t['Joanna'] = true;
	    t['Korinna'] = true;
	    t['Lexicon'] = true;
	    t['Liberation Serif'] = true;
	    t['Linux Libertine'] = true;
	    t['Literaturnaya'] = true;
	    t['Lucida'] = true;
	    t['Lucida Bright'] = true;
	    t['Melior'] = true;
	    t['Memphis'] = true;
	    t['Miller'] = true;
	    t['Minion'] = true;
	    t['Modern'] = true;
	    t['Mona Lisa'] = true;
	    t['Mrs Eaves'] = true;
	    t['MS Serif'] = true;
	    t['Museo Slab'] = true;
	    t['New York'] = true;
	    t['Nimbus Roman'] = true;
	    t['NPS Rawlinson Roadway'] = true;
	    t['NuptialScript'] = true;
	    t['Palatino'] = true;
	    t['Perpetua'] = true;
	    t['Plantin'] = true;
	    t['Plantin Schoolbook'] = true;
	    t['Playbill'] = true;
	    t['Poor Richard'] = true;
	    t['Rawlinson Roadway'] = true;
	    t['Renault'] = true;
	    t['Requiem'] = true;
	    t['Rockwell'] = true;
	    t['Roman'] = true;
	    t['Rotis Serif'] = true;
	    t['Sabon'] = true;
	    t['Scala'] = true;
	    t['Seagull'] = true;
	    t['Sistina'] = true;
	    t['Souvenir'] = true;
	    t['STIX'] = true;
	    t['Stone Informal'] = true;
	    t['Stone Serif'] = true;
	    t['Sylfaen'] = true;
	    t['Times'] = true;
	    t['Trajan'] = true;
	    t['Trinité'] = true;
	    t['Trump Mediaeval'] = true;
	    t['Utopia'] = true;
	    t['Vale Type'] = true;
	    t['Bitstream Vera'] = true;
	    t['Vera Serif'] = true;
	    t['Versailles'] = true;
	    t['Wanted'] = true;
	    t['Weiss'] = true;
	    t['Wide Latin'] = true;
	    t['Windsor'] = true;
	    t['XITS'] = true;
	   });
	   var getSymbolsFonts = getLookupTableFactory(function (t) {
	    t['Dingbats'] = true;
	    t['Symbol'] = true;
	    t['ZapfDingbats'] = true;
	   });
	   var getGlyphMapForStandardFonts = getLookupTableFactory(function (t) {
	    t[2] = 10;
	    t[3] = 32;
	    t[4] = 33;
	    t[5] = 34;
	    t[6] = 35;
	    t[7] = 36;
	    t[8] = 37;
	    t[9] = 38;
	    t[10] = 39;
	    t[11] = 40;
	    t[12] = 41;
	    t[13] = 42;
	    t[14] = 43;
	    t[15] = 44;
	    t[16] = 45;
	    t[17] = 46;
	    t[18] = 47;
	    t[19] = 48;
	    t[20] = 49;
	    t[21] = 50;
	    t[22] = 51;
	    t[23] = 52;
	    t[24] = 53;
	    t[25] = 54;
	    t[26] = 55;
	    t[27] = 56;
	    t[28] = 57;
	    t[29] = 58;
	    t[30] = 894;
	    t[31] = 60;
	    t[32] = 61;
	    t[33] = 62;
	    t[34] = 63;
	    t[35] = 64;
	    t[36] = 65;
	    t[37] = 66;
	    t[38] = 67;
	    t[39] = 68;
	    t[40] = 69;
	    t[41] = 70;
	    t[42] = 71;
	    t[43] = 72;
	    t[44] = 73;
	    t[45] = 74;
	    t[46] = 75;
	    t[47] = 76;
	    t[48] = 77;
	    t[49] = 78;
	    t[50] = 79;
	    t[51] = 80;
	    t[52] = 81;
	    t[53] = 82;
	    t[54] = 83;
	    t[55] = 84;
	    t[56] = 85;
	    t[57] = 86;
	    t[58] = 87;
	    t[59] = 88;
	    t[60] = 89;
	    t[61] = 90;
	    t[62] = 91;
	    t[63] = 92;
	    t[64] = 93;
	    t[65] = 94;
	    t[66] = 95;
	    t[67] = 96;
	    t[68] = 97;
	    t[69] = 98;
	    t[70] = 99;
	    t[71] = 100;
	    t[72] = 101;
	    t[73] = 102;
	    t[74] = 103;
	    t[75] = 104;
	    t[76] = 105;
	    t[77] = 106;
	    t[78] = 107;
	    t[79] = 108;
	    t[80] = 109;
	    t[81] = 110;
	    t[82] = 111;
	    t[83] = 112;
	    t[84] = 113;
	    t[85] = 114;
	    t[86] = 115;
	    t[87] = 116;
	    t[88] = 117;
	    t[89] = 118;
	    t[90] = 119;
	    t[91] = 120;
	    t[92] = 121;
	    t[93] = 122;
	    t[94] = 123;
	    t[95] = 124;
	    t[96] = 125;
	    t[97] = 126;
	    t[98] = 196;
	    t[99] = 197;
	    t[100] = 199;
	    t[101] = 201;
	    t[102] = 209;
	    t[103] = 214;
	    t[104] = 220;
	    t[105] = 225;
	    t[106] = 224;
	    t[107] = 226;
	    t[108] = 228;
	    t[109] = 227;
	    t[110] = 229;
	    t[111] = 231;
	    t[112] = 233;
	    t[113] = 232;
	    t[114] = 234;
	    t[115] = 235;
	    t[116] = 237;
	    t[117] = 236;
	    t[118] = 238;
	    t[119] = 239;
	    t[120] = 241;
	    t[121] = 243;
	    t[122] = 242;
	    t[123] = 244;
	    t[124] = 246;
	    t[125] = 245;
	    t[126] = 250;
	    t[127] = 249;
	    t[128] = 251;
	    t[129] = 252;
	    t[130] = 8224;
	    t[131] = 176;
	    t[132] = 162;
	    t[133] = 163;
	    t[134] = 167;
	    t[135] = 8226;
	    t[136] = 182;
	    t[137] = 223;
	    t[138] = 174;
	    t[139] = 169;
	    t[140] = 8482;
	    t[141] = 180;
	    t[142] = 168;
	    t[143] = 8800;
	    t[144] = 198;
	    t[145] = 216;
	    t[146] = 8734;
	    t[147] = 177;
	    t[148] = 8804;
	    t[149] = 8805;
	    t[150] = 165;
	    t[151] = 181;
	    t[152] = 8706;
	    t[153] = 8721;
	    t[154] = 8719;
	    t[156] = 8747;
	    t[157] = 170;
	    t[158] = 186;
	    t[159] = 8486;
	    t[160] = 230;
	    t[161] = 248;
	    t[162] = 191;
	    t[163] = 161;
	    t[164] = 172;
	    t[165] = 8730;
	    t[166] = 402;
	    t[167] = 8776;
	    t[168] = 8710;
	    t[169] = 171;
	    t[170] = 187;
	    t[171] = 8230;
	    t[210] = 218;
	    t[223] = 711;
	    t[224] = 321;
	    t[225] = 322;
	    t[227] = 353;
	    t[229] = 382;
	    t[234] = 253;
	    t[252] = 263;
	    t[253] = 268;
	    t[254] = 269;
	    t[258] = 258;
	    t[260] = 260;
	    t[261] = 261;
	    t[265] = 280;
	    t[266] = 281;
	    t[268] = 283;
	    t[269] = 313;
	    t[275] = 323;
	    t[276] = 324;
	    t[278] = 328;
	    t[284] = 345;
	    t[285] = 346;
	    t[286] = 347;
	    t[292] = 367;
	    t[295] = 377;
	    t[296] = 378;
	    t[298] = 380;
	    t[305] = 963;
	    t[306] = 964;
	    t[307] = 966;
	    t[308] = 8215;
	    t[309] = 8252;
	    t[310] = 8319;
	    t[311] = 8359;
	    t[312] = 8592;
	    t[313] = 8593;
	    t[337] = 9552;
	    t[493] = 1039;
	    t[494] = 1040;
	    t[705] = 1524;
	    t[706] = 8362;
	    t[710] = 64288;
	    t[711] = 64298;
	    t[759] = 1617;
	    t[761] = 1776;
	    t[763] = 1778;
	    t[775] = 1652;
	    t[777] = 1764;
	    t[778] = 1780;
	    t[779] = 1781;
	    t[780] = 1782;
	    t[782] = 771;
	    t[783] = 64726;
	    t[786] = 8363;
	    t[788] = 8532;
	    t[790] = 768;
	    t[791] = 769;
	    t[792] = 768;
	    t[795] = 803;
	    t[797] = 64336;
	    t[798] = 64337;
	    t[799] = 64342;
	    t[800] = 64343;
	    t[801] = 64344;
	    t[802] = 64345;
	    t[803] = 64362;
	    t[804] = 64363;
	    t[805] = 64364;
	    t[2424] = 7821;
	    t[2425] = 7822;
	    t[2426] = 7823;
	    t[2427] = 7824;
	    t[2428] = 7825;
	    t[2429] = 7826;
	    t[2430] = 7827;
	    t[2433] = 7682;
	    t[2678] = 8045;
	    t[2679] = 8046;
	    t[2830] = 1552;
	    t[2838] = 686;
	    t[2840] = 751;
	    t[2842] = 753;
	    t[2843] = 754;
	    t[2844] = 755;
	    t[2846] = 757;
	    t[2856] = 767;
	    t[2857] = 848;
	    t[2858] = 849;
	    t[2862] = 853;
	    t[2863] = 854;
	    t[2864] = 855;
	    t[2865] = 861;
	    t[2866] = 862;
	    t[2906] = 7460;
	    t[2908] = 7462;
	    t[2909] = 7463;
	    t[2910] = 7464;
	    t[2912] = 7466;
	    t[2913] = 7467;
	    t[2914] = 7468;
	    t[2916] = 7470;
	    t[2917] = 7471;
	    t[2918] = 7472;
	    t[2920] = 7474;
	    t[2921] = 7475;
	    t[2922] = 7476;
	    t[2924] = 7478;
	    t[2925] = 7479;
	    t[2926] = 7480;
	    t[2928] = 7482;
	    t[2929] = 7483;
	    t[2930] = 7484;
	    t[2932] = 7486;
	    t[2933] = 7487;
	    t[2934] = 7488;
	    t[2936] = 7490;
	    t[2937] = 7491;
	    t[2938] = 7492;
	    t[2940] = 7494;
	    t[2941] = 7495;
	    t[2942] = 7496;
	    t[2944] = 7498;
	    t[2946] = 7500;
	    t[2948] = 7502;
	    t[2950] = 7504;
	    t[2951] = 7505;
	    t[2952] = 7506;
	    t[2954] = 7508;
	    t[2955] = 7509;
	    t[2956] = 7510;
	    t[2958] = 7512;
	    t[2959] = 7513;
	    t[2960] = 7514;
	    t[2962] = 7516;
	    t[2963] = 7517;
	    t[2964] = 7518;
	    t[2966] = 7520;
	    t[2967] = 7521;
	    t[2968] = 7522;
	    t[2970] = 7524;
	    t[2971] = 7525;
	    t[2972] = 7526;
	    t[2974] = 7528;
	    t[2975] = 7529;
	    t[2976] = 7530;
	    t[2978] = 1537;
	    t[2979] = 1538;
	    t[2980] = 1539;
	    t[2982] = 1549;
	    t[2983] = 1551;
	    t[2984] = 1552;
	    t[2986] = 1554;
	    t[2987] = 1555;
	    t[2988] = 1556;
	    t[2990] = 1623;
	    t[2991] = 1624;
	    t[2995] = 1775;
	    t[2999] = 1791;
	    t[3002] = 64290;
	    t[3003] = 64291;
	    t[3004] = 64292;
	    t[3006] = 64294;
	    t[3007] = 64295;
	    t[3008] = 64296;
	    t[3011] = 1900;
	    t[3014] = 8223;
	    t[3015] = 8244;
	    t[3017] = 7532;
	    t[3018] = 7533;
	    t[3019] = 7534;
	    t[3075] = 7590;
	    t[3076] = 7591;
	    t[3079] = 7594;
	    t[3080] = 7595;
	    t[3083] = 7598;
	    t[3084] = 7599;
	    t[3087] = 7602;
	    t[3088] = 7603;
	    t[3091] = 7606;
	    t[3092] = 7607;
	    t[3095] = 7610;
	    t[3096] = 7611;
	    t[3099] = 7614;
	    t[3100] = 7615;
	    t[3103] = 7618;
	    t[3104] = 7619;
	    t[3107] = 8337;
	    t[3108] = 8338;
	    t[3116] = 1884;
	    t[3119] = 1885;
	    t[3120] = 1885;
	    t[3123] = 1886;
	    t[3124] = 1886;
	    t[3127] = 1887;
	    t[3128] = 1887;
	    t[3131] = 1888;
	    t[3132] = 1888;
	    t[3135] = 1889;
	    t[3136] = 1889;
	    t[3139] = 1890;
	    t[3140] = 1890;
	    t[3143] = 1891;
	    t[3144] = 1891;
	    t[3147] = 1892;
	    t[3148] = 1892;
	    t[3153] = 580;
	    t[3154] = 581;
	    t[3157] = 584;
	    t[3158] = 585;
	    t[3161] = 588;
	    t[3162] = 589;
	    t[3165] = 891;
	    t[3166] = 892;
	    t[3169] = 1274;
	    t[3170] = 1275;
	    t[3173] = 1278;
	    t[3174] = 1279;
	    t[3181] = 7622;
	    t[3182] = 7623;
	    t[3282] = 11799;
	    t[3316] = 578;
	    t[3379] = 42785;
	    t[3393] = 1159;
	    t[3416] = 8377;
	   });
	   var getSupplementalGlyphMapForArialBlack = getLookupTableFactory(function (t) {
	    t[227] = 322;
	    t[264] = 261;
	    t[291] = 346;
	   });
	   exports.getStdFontMap = getStdFontMap;
	   exports.getNonStdFontMap = getNonStdFontMap;
	   exports.getSerifFonts = getSerifFonts;
	   exports.getSymbolsFonts = getSymbolsFonts;
	   exports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;
	   exports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreUnicode = {}, root.pdfjsSharedUtil);
	  }(this, function (exports, sharedUtil) {
	   var getLookupTableFactory = sharedUtil.getLookupTableFactory;
	   var getSpecialPUASymbols = getLookupTableFactory(function (t) {
	    t[63721] = 0x00A9;
	    t[63193] = 0x00A9;
	    t[63720] = 0x00AE;
	    t[63194] = 0x00AE;
	    t[63722] = 0x2122;
	    t[63195] = 0x2122;
	    t[63729] = 0x23A7;
	    t[63730] = 0x23A8;
	    t[63731] = 0x23A9;
	    t[63740] = 0x23AB;
	    t[63741] = 0x23AC;
	    t[63742] = 0x23AD;
	    t[63726] = 0x23A1;
	    t[63727] = 0x23A2;
	    t[63728] = 0x23A3;
	    t[63737] = 0x23A4;
	    t[63738] = 0x23A5;
	    t[63739] = 0x23A6;
	    t[63723] = 0x239B;
	    t[63724] = 0x239C;
	    t[63725] = 0x239D;
	    t[63734] = 0x239E;
	    t[63735] = 0x239F;
	    t[63736] = 0x23A0;
	   });
	   function mapSpecialUnicodeValues(code) {
	    if (code >= 0xFFF0 && code <= 0xFFFF) {
	     return 0;
	    } else if (code >= 0xF600 && code <= 0xF8FF) {
	     return getSpecialPUASymbols()[code] || code;
	    }
	    return code;
	   }
	   function getUnicodeForGlyph(name, glyphsUnicodeMap) {
	    var unicode = glyphsUnicodeMap[name];
	    if (unicode !== undefined) {
	     return unicode;
	    }
	    if (!name) {
	     return -1;
	    }
	    if (name[0] === 'u') {
	     var nameLen = name.length, hexStr;
	     if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {
	      hexStr = name.substr(3);
	     } else if (nameLen >= 5 && nameLen <= 7) {
	      hexStr = name.substr(1);
	     } else {
	      return -1;
	     }
	     if (hexStr === hexStr.toUpperCase()) {
	      unicode = parseInt(hexStr, 16);
	      if (unicode >= 0) {
	       return unicode;
	      }
	     }
	    }
	    return -1;
	   }
	   var UnicodeRanges = [
	    {
	     'begin': 0x0000,
	     'end': 0x007F
	    },
	    {
	     'begin': 0x0080,
	     'end': 0x00FF
	    },
	    {
	     'begin': 0x0100,
	     'end': 0x017F
	    },
	    {
	     'begin': 0x0180,
	     'end': 0x024F
	    },
	    {
	     'begin': 0x0250,
	     'end': 0x02AF
	    },
	    {
	     'begin': 0x02B0,
	     'end': 0x02FF
	    },
	    {
	     'begin': 0x0300,
	     'end': 0x036F
	    },
	    {
	     'begin': 0x0370,
	     'end': 0x03FF
	    },
	    {
	     'begin': 0x2C80,
	     'end': 0x2CFF
	    },
	    {
	     'begin': 0x0400,
	     'end': 0x04FF
	    },
	    {
	     'begin': 0x0530,
	     'end': 0x058F
	    },
	    {
	     'begin': 0x0590,
	     'end': 0x05FF
	    },
	    {
	     'begin': 0xA500,
	     'end': 0xA63F
	    },
	    {
	     'begin': 0x0600,
	     'end': 0x06FF
	    },
	    {
	     'begin': 0x07C0,
	     'end': 0x07FF
	    },
	    {
	     'begin': 0x0900,
	     'end': 0x097F
	    },
	    {
	     'begin': 0x0980,
	     'end': 0x09FF
	    },
	    {
	     'begin': 0x0A00,
	     'end': 0x0A7F
	    },
	    {
	     'begin': 0x0A80,
	     'end': 0x0AFF
	    },
	    {
	     'begin': 0x0B00,
	     'end': 0x0B7F
	    },
	    {
	     'begin': 0x0B80,
	     'end': 0x0BFF
	    },
	    {
	     'begin': 0x0C00,
	     'end': 0x0C7F
	    },
	    {
	     'begin': 0x0C80,
	     'end': 0x0CFF
	    },
	    {
	     'begin': 0x0D00,
	     'end': 0x0D7F
	    },
	    {
	     'begin': 0x0E00,
	     'end': 0x0E7F
	    },
	    {
	     'begin': 0x0E80,
	     'end': 0x0EFF
	    },
	    {
	     'begin': 0x10A0,
	     'end': 0x10FF
	    },
	    {
	     'begin': 0x1B00,
	     'end': 0x1B7F
	    },
	    {
	     'begin': 0x1100,
	     'end': 0x11FF
	    },
	    {
	     'begin': 0x1E00,
	     'end': 0x1EFF
	    },
	    {
	     'begin': 0x1F00,
	     'end': 0x1FFF
	    },
	    {
	     'begin': 0x2000,
	     'end': 0x206F
	    },
	    {
	     'begin': 0x2070,
	     'end': 0x209F
	    },
	    {
	     'begin': 0x20A0,
	     'end': 0x20CF
	    },
	    {
	     'begin': 0x20D0,
	     'end': 0x20FF
	    },
	    {
	     'begin': 0x2100,
	     'end': 0x214F
	    },
	    {
	     'begin': 0x2150,
	     'end': 0x218F
	    },
	    {
	     'begin': 0x2190,
	     'end': 0x21FF
	    },
	    {
	     'begin': 0x2200,
	     'end': 0x22FF
	    },
	    {
	     'begin': 0x2300,
	     'end': 0x23FF
	    },
	    {
	     'begin': 0x2400,
	     'end': 0x243F
	    },
	    {
	     'begin': 0x2440,
	     'end': 0x245F
	    },
	    {
	     'begin': 0x2460,
	     'end': 0x24FF
	    },
	    {
	     'begin': 0x2500,
	     'end': 0x257F
	    },
	    {
	     'begin': 0x2580,
	     'end': 0x259F
	    },
	    {
	     'begin': 0x25A0,
	     'end': 0x25FF
	    },
	    {
	     'begin': 0x2600,
	     'end': 0x26FF
	    },
	    {
	     'begin': 0x2700,
	     'end': 0x27BF
	    },
	    {
	     'begin': 0x3000,
	     'end': 0x303F
	    },
	    {
	     'begin': 0x3040,
	     'end': 0x309F
	    },
	    {
	     'begin': 0x30A0,
	     'end': 0x30FF
	    },
	    {
	     'begin': 0x3100,
	     'end': 0x312F
	    },
	    {
	     'begin': 0x3130,
	     'end': 0x318F
	    },
	    {
	     'begin': 0xA840,
	     'end': 0xA87F
	    },
	    {
	     'begin': 0x3200,
	     'end': 0x32FF
	    },
	    {
	     'begin': 0x3300,
	     'end': 0x33FF
	    },
	    {
	     'begin': 0xAC00,
	     'end': 0xD7AF
	    },
	    {
	     'begin': 0xD800,
	     'end': 0xDFFF
	    },
	    {
	     'begin': 0x10900,
	     'end': 0x1091F
	    },
	    {
	     'begin': 0x4E00,
	     'end': 0x9FFF
	    },
	    {
	     'begin': 0xE000,
	     'end': 0xF8FF
	    },
	    {
	     'begin': 0x31C0,
	     'end': 0x31EF
	    },
	    {
	     'begin': 0xFB00,
	     'end': 0xFB4F
	    },
	    {
	     'begin': 0xFB50,
	     'end': 0xFDFF
	    },
	    {
	     'begin': 0xFE20,
	     'end': 0xFE2F
	    },
	    {
	     'begin': 0xFE10,
	     'end': 0xFE1F
	    },
	    {
	     'begin': 0xFE50,
	     'end': 0xFE6F
	    },
	    {
	     'begin': 0xFE70,
	     'end': 0xFEFF
	    },
	    {
	     'begin': 0xFF00,
	     'end': 0xFFEF
	    },
	    {
	     'begin': 0xFFF0,
	     'end': 0xFFFF
	    },
	    {
	     'begin': 0x0F00,
	     'end': 0x0FFF
	    },
	    {
	     'begin': 0x0700,
	     'end': 0x074F
	    },
	    {
	     'begin': 0x0780,
	     'end': 0x07BF
	    },
	    {
	     'begin': 0x0D80,
	     'end': 0x0DFF
	    },
	    {
	     'begin': 0x1000,
	     'end': 0x109F
	    },
	    {
	     'begin': 0x1200,
	     'end': 0x137F
	    },
	    {
	     'begin': 0x13A0,
	     'end': 0x13FF
	    },
	    {
	     'begin': 0x1400,
	     'end': 0x167F
	    },
	    {
	     'begin': 0x1680,
	     'end': 0x169F
	    },
	    {
	     'begin': 0x16A0,
	     'end': 0x16FF
	    },
	    {
	     'begin': 0x1780,
	     'end': 0x17FF
	    },
	    {
	     'begin': 0x1800,
	     'end': 0x18AF
	    },
	    {
	     'begin': 0x2800,
	     'end': 0x28FF
	    },
	    {
	     'begin': 0xA000,
	     'end': 0xA48F
	    },
	    {
	     'begin': 0x1700,
	     'end': 0x171F
	    },
	    {
	     'begin': 0x10300,
	     'end': 0x1032F
	    },
	    {
	     'begin': 0x10330,
	     'end': 0x1034F
	    },
	    {
	     'begin': 0x10400,
	     'end': 0x1044F
	    },
	    {
	     'begin': 0x1D000,
	     'end': 0x1D0FF
	    },
	    {
	     'begin': 0x1D400,
	     'end': 0x1D7FF
	    },
	    {
	     'begin': 0xFF000,
	     'end': 0xFFFFD
	    },
	    {
	     'begin': 0xFE00,
	     'end': 0xFE0F
	    },
	    {
	     'begin': 0xE0000,
	     'end': 0xE007F
	    },
	    {
	     'begin': 0x1900,
	     'end': 0x194F
	    },
	    {
	     'begin': 0x1950,
	     'end': 0x197F
	    },
	    {
	     'begin': 0x1980,
	     'end': 0x19DF
	    },
	    {
	     'begin': 0x1A00,
	     'end': 0x1A1F
	    },
	    {
	     'begin': 0x2C00,
	     'end': 0x2C5F
	    },
	    {
	     'begin': 0x2D30,
	     'end': 0x2D7F
	    },
	    {
	     'begin': 0x4DC0,
	     'end': 0x4DFF
	    },
	    {
	     'begin': 0xA800,
	     'end': 0xA82F
	    },
	    {
	     'begin': 0x10000,
	     'end': 0x1007F
	    },
	    {
	     'begin': 0x10140,
	     'end': 0x1018F
	    },
	    {
	     'begin': 0x10380,
	     'end': 0x1039F
	    },
	    {
	     'begin': 0x103A0,
	     'end': 0x103DF
	    },
	    {
	     'begin': 0x10450,
	     'end': 0x1047F
	    },
	    {
	     'begin': 0x10480,
	     'end': 0x104AF
	    },
	    {
	     'begin': 0x10800,
	     'end': 0x1083F
	    },
	    {
	     'begin': 0x10A00,
	     'end': 0x10A5F
	    },
	    {
	     'begin': 0x1D300,
	     'end': 0x1D35F
	    },
	    {
	     'begin': 0x12000,
	     'end': 0x123FF
	    },
	    {
	     'begin': 0x1D360,
	     'end': 0x1D37F
	    },
	    {
	     'begin': 0x1B80,
	     'end': 0x1BBF
	    },
	    {
	     'begin': 0x1C00,
	     'end': 0x1C4F
	    },
	    {
	     'begin': 0x1C50,
	     'end': 0x1C7F
	    },
	    {
	     'begin': 0xA880,
	     'end': 0xA8DF
	    },
	    {
	     'begin': 0xA900,
	     'end': 0xA92F
	    },
	    {
	     'begin': 0xA930,
	     'end': 0xA95F
	    },
	    {
	     'begin': 0xAA00,
	     'end': 0xAA5F
	    },
	    {
	     'begin': 0x10190,
	     'end': 0x101CF
	    },
	    {
	     'begin': 0x101D0,
	     'end': 0x101FF
	    },
	    {
	     'begin': 0x102A0,
	     'end': 0x102DF
	    },
	    {
	     'begin': 0x1F030,
	     'end': 0x1F09F
	    }
	   ];
	   function getUnicodeRangeFor(value) {
	    for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {
	     var range = UnicodeRanges[i];
	     if (value >= range.begin && value < range.end) {
	      return i;
	     }
	    }
	    return -1;
	   }
	   function isRTLRangeFor(value) {
	    var range = UnicodeRanges[13];
	    if (value >= range.begin && value < range.end) {
	     return true;
	    }
	    range = UnicodeRanges[11];
	    if (value >= range.begin && value < range.end) {
	     return true;
	    }
	    return false;
	   }
	   var getNormalizedUnicodes = getLookupTableFactory(function (t) {
	    t['\u00A8'] = '\u0020\u0308';
	    t['\u00AF'] = '\u0020\u0304';
	    t['\u00B4'] = '\u0020\u0301';
	    t['\u00B5'] = '\u03BC';
	    t['\u00B8'] = '\u0020\u0327';
	    t['\u0132'] = '\u0049\u004A';
	    t['\u0133'] = '\u0069\u006A';
	    t['\u013F'] = '\u004C\u00B7';
	    t['\u0140'] = '\u006C\u00B7';
	    t['\u0149'] = '\u02BC\u006E';
	    t['\u017F'] = '\u0073';
	    t['\u01C4'] = '\u0044\u017D';
	    t['\u01C5'] = '\u0044\u017E';
	    t['\u01C6'] = '\u0064\u017E';
	    t['\u01C7'] = '\u004C\u004A';
	    t['\u01C8'] = '\u004C\u006A';
	    t['\u01C9'] = '\u006C\u006A';
	    t['\u01CA'] = '\u004E\u004A';
	    t['\u01CB'] = '\u004E\u006A';
	    t['\u01CC'] = '\u006E\u006A';
	    t['\u01F1'] = '\u0044\u005A';
	    t['\u01F2'] = '\u0044\u007A';
	    t['\u01F3'] = '\u0064\u007A';
	    t['\u02D8'] = '\u0020\u0306';
	    t['\u02D9'] = '\u0020\u0307';
	    t['\u02DA'] = '\u0020\u030A';
	    t['\u02DB'] = '\u0020\u0328';
	    t['\u02DC'] = '\u0020\u0303';
	    t['\u02DD'] = '\u0020\u030B';
	    t['\u037A'] = '\u0020\u0345';
	    t['\u0384'] = '\u0020\u0301';
	    t['\u03D0'] = '\u03B2';
	    t['\u03D1'] = '\u03B8';
	    t['\u03D2'] = '\u03A5';
	    t['\u03D5'] = '\u03C6';
	    t['\u03D6'] = '\u03C0';
	    t['\u03F0'] = '\u03BA';
	    t['\u03F1'] = '\u03C1';
	    t['\u03F2'] = '\u03C2';
	    t['\u03F4'] = '\u0398';
	    t['\u03F5'] = '\u03B5';
	    t['\u03F9'] = '\u03A3';
	    t['\u0587'] = '\u0565\u0582';
	    t['\u0675'] = '\u0627\u0674';
	    t['\u0676'] = '\u0648\u0674';
	    t['\u0677'] = '\u06C7\u0674';
	    t['\u0678'] = '\u064A\u0674';
	    t['\u0E33'] = '\u0E4D\u0E32';
	    t['\u0EB3'] = '\u0ECD\u0EB2';
	    t['\u0EDC'] = '\u0EAB\u0E99';
	    t['\u0EDD'] = '\u0EAB\u0EA1';
	    t['\u0F77'] = '\u0FB2\u0F81';
	    t['\u0F79'] = '\u0FB3\u0F81';
	    t['\u1E9A'] = '\u0061\u02BE';
	    t['\u1FBD'] = '\u0020\u0313';
	    t['\u1FBF'] = '\u0020\u0313';
	    t['\u1FC0'] = '\u0020\u0342';
	    t['\u1FFE'] = '\u0020\u0314';
	    t['\u2002'] = '\u0020';
	    t['\u2003'] = '\u0020';
	    t['\u2004'] = '\u0020';
	    t['\u2005'] = '\u0020';
	    t['\u2006'] = '\u0020';
	    t['\u2008'] = '\u0020';
	    t['\u2009'] = '\u0020';
	    t['\u200A'] = '\u0020';
	    t['\u2017'] = '\u0020\u0333';
	    t['\u2024'] = '\u002E';
	    t['\u2025'] = '\u002E\u002E';
	    t['\u2026'] = '\u002E\u002E\u002E';
	    t['\u2033'] = '\u2032\u2032';
	    t['\u2034'] = '\u2032\u2032\u2032';
	    t['\u2036'] = '\u2035\u2035';
	    t['\u2037'] = '\u2035\u2035\u2035';
	    t['\u203C'] = '\u0021\u0021';
	    t['\u203E'] = '\u0020\u0305';
	    t['\u2047'] = '\u003F\u003F';
	    t['\u2048'] = '\u003F\u0021';
	    t['\u2049'] = '\u0021\u003F';
	    t['\u2057'] = '\u2032\u2032\u2032\u2032';
	    t['\u205F'] = '\u0020';
	    t['\u20A8'] = '\u0052\u0073';
	    t['\u2100'] = '\u0061\u002F\u0063';
	    t['\u2101'] = '\u0061\u002F\u0073';
	    t['\u2103'] = '\u00B0\u0043';
	    t['\u2105'] = '\u0063\u002F\u006F';
	    t['\u2106'] = '\u0063\u002F\u0075';
	    t['\u2107'] = '\u0190';
	    t['\u2109'] = '\u00B0\u0046';
	    t['\u2116'] = '\u004E\u006F';
	    t['\u2121'] = '\u0054\u0045\u004C';
	    t['\u2135'] = '\u05D0';
	    t['\u2136'] = '\u05D1';
	    t['\u2137'] = '\u05D2';
	    t['\u2138'] = '\u05D3';
	    t['\u213B'] = '\u0046\u0041\u0058';
	    t['\u2160'] = '\u0049';
	    t['\u2161'] = '\u0049\u0049';
	    t['\u2162'] = '\u0049\u0049\u0049';
	    t['\u2163'] = '\u0049\u0056';
	    t['\u2164'] = '\u0056';
	    t['\u2165'] = '\u0056\u0049';
	    t['\u2166'] = '\u0056\u0049\u0049';
	    t['\u2167'] = '\u0056\u0049\u0049\u0049';
	    t['\u2168'] = '\u0049\u0058';
	    t['\u2169'] = '\u0058';
	    t['\u216A'] = '\u0058\u0049';
	    t['\u216B'] = '\u0058\u0049\u0049';
	    t['\u216C'] = '\u004C';
	    t['\u216D'] = '\u0043';
	    t['\u216E'] = '\u0044';
	    t['\u216F'] = '\u004D';
	    t['\u2170'] = '\u0069';
	    t['\u2171'] = '\u0069\u0069';
	    t['\u2172'] = '\u0069\u0069\u0069';
	    t['\u2173'] = '\u0069\u0076';
	    t['\u2174'] = '\u0076';
	    t['\u2175'] = '\u0076\u0069';
	    t['\u2176'] = '\u0076\u0069\u0069';
	    t['\u2177'] = '\u0076\u0069\u0069\u0069';
	    t['\u2178'] = '\u0069\u0078';
	    t['\u2179'] = '\u0078';
	    t['\u217A'] = '\u0078\u0069';
	    t['\u217B'] = '\u0078\u0069\u0069';
	    t['\u217C'] = '\u006C';
	    t['\u217D'] = '\u0063';
	    t['\u217E'] = '\u0064';
	    t['\u217F'] = '\u006D';
	    t['\u222C'] = '\u222B\u222B';
	    t['\u222D'] = '\u222B\u222B\u222B';
	    t['\u222F'] = '\u222E\u222E';
	    t['\u2230'] = '\u222E\u222E\u222E';
	    t['\u2474'] = '\u0028\u0031\u0029';
	    t['\u2475'] = '\u0028\u0032\u0029';
	    t['\u2476'] = '\u0028\u0033\u0029';
	    t['\u2477'] = '\u0028\u0034\u0029';
	    t['\u2478'] = '\u0028\u0035\u0029';
	    t['\u2479'] = '\u0028\u0036\u0029';
	    t['\u247A'] = '\u0028\u0037\u0029';
	    t['\u247B'] = '\u0028\u0038\u0029';
	    t['\u247C'] = '\u0028\u0039\u0029';
	    t['\u247D'] = '\u0028\u0031\u0030\u0029';
	    t['\u247E'] = '\u0028\u0031\u0031\u0029';
	    t['\u247F'] = '\u0028\u0031\u0032\u0029';
	    t['\u2480'] = '\u0028\u0031\u0033\u0029';
	    t['\u2481'] = '\u0028\u0031\u0034\u0029';
	    t['\u2482'] = '\u0028\u0031\u0035\u0029';
	    t['\u2483'] = '\u0028\u0031\u0036\u0029';
	    t['\u2484'] = '\u0028\u0031\u0037\u0029';
	    t['\u2485'] = '\u0028\u0031\u0038\u0029';
	    t['\u2486'] = '\u0028\u0031\u0039\u0029';
	    t['\u2487'] = '\u0028\u0032\u0030\u0029';
	    t['\u2488'] = '\u0031\u002E';
	    t['\u2489'] = '\u0032\u002E';
	    t['\u248A'] = '\u0033\u002E';
	    t['\u248B'] = '\u0034\u002E';
	    t['\u248C'] = '\u0035\u002E';
	    t['\u248D'] = '\u0036\u002E';
	    t['\u248E'] = '\u0037\u002E';
	    t['\u248F'] = '\u0038\u002E';
	    t['\u2490'] = '\u0039\u002E';
	    t['\u2491'] = '\u0031\u0030\u002E';
	    t['\u2492'] = '\u0031\u0031\u002E';
	    t['\u2493'] = '\u0031\u0032\u002E';
	    t['\u2494'] = '\u0031\u0033\u002E';
	    t['\u2495'] = '\u0031\u0034\u002E';
	    t['\u2496'] = '\u0031\u0035\u002E';
	    t['\u2497'] = '\u0031\u0036\u002E';
	    t['\u2498'] = '\u0031\u0037\u002E';
	    t['\u2499'] = '\u0031\u0038\u002E';
	    t['\u249A'] = '\u0031\u0039\u002E';
	    t['\u249B'] = '\u0032\u0030\u002E';
	    t['\u249C'] = '\u0028\u0061\u0029';
	    t['\u249D'] = '\u0028\u0062\u0029';
	    t['\u249E'] = '\u0028\u0063\u0029';
	    t['\u249F'] = '\u0028\u0064\u0029';
	    t['\u24A0'] = '\u0028\u0065\u0029';
	    t['\u24A1'] = '\u0028\u0066\u0029';
	    t['\u24A2'] = '\u0028\u0067\u0029';
	    t['\u24A3'] = '\u0028\u0068\u0029';
	    t['\u24A4'] = '\u0028\u0069\u0029';
	    t['\u24A5'] = '\u0028\u006A\u0029';
	    t['\u24A6'] = '\u0028\u006B\u0029';
	    t['\u24A7'] = '\u0028\u006C\u0029';
	    t['\u24A8'] = '\u0028\u006D\u0029';
	    t['\u24A9'] = '\u0028\u006E\u0029';
	    t['\u24AA'] = '\u0028\u006F\u0029';
	    t['\u24AB'] = '\u0028\u0070\u0029';
	    t['\u24AC'] = '\u0028\u0071\u0029';
	    t['\u24AD'] = '\u0028\u0072\u0029';
	    t['\u24AE'] = '\u0028\u0073\u0029';
	    t['\u24AF'] = '\u0028\u0074\u0029';
	    t['\u24B0'] = '\u0028\u0075\u0029';
	    t['\u24B1'] = '\u0028\u0076\u0029';
	    t['\u24B2'] = '\u0028\u0077\u0029';
	    t['\u24B3'] = '\u0028\u0078\u0029';
	    t['\u24B4'] = '\u0028\u0079\u0029';
	    t['\u24B5'] = '\u0028\u007A\u0029';
	    t['\u2A0C'] = '\u222B\u222B\u222B\u222B';
	    t['\u2A74'] = '\u003A\u003A\u003D';
	    t['\u2A75'] = '\u003D\u003D';
	    t['\u2A76'] = '\u003D\u003D\u003D';
	    t['\u2E9F'] = '\u6BCD';
	    t['\u2EF3'] = '\u9F9F';
	    t['\u2F00'] = '\u4E00';
	    t['\u2F01'] = '\u4E28';
	    t['\u2F02'] = '\u4E36';
	    t['\u2F03'] = '\u4E3F';
	    t['\u2F04'] = '\u4E59';
	    t['\u2F05'] = '\u4E85';
	    t['\u2F06'] = '\u4E8C';
	    t['\u2F07'] = '\u4EA0';
	    t['\u2F08'] = '\u4EBA';
	    t['\u2F09'] = '\u513F';
	    t['\u2F0A'] = '\u5165';
	    t['\u2F0B'] = '\u516B';
	    t['\u2F0C'] = '\u5182';
	    t['\u2F0D'] = '\u5196';
	    t['\u2F0E'] = '\u51AB';
	    t['\u2F0F'] = '\u51E0';
	    t['\u2F10'] = '\u51F5';
	    t['\u2F11'] = '\u5200';
	    t['\u2F12'] = '\u529B';
	    t['\u2F13'] = '\u52F9';
	    t['\u2F14'] = '\u5315';
	    t['\u2F15'] = '\u531A';
	    t['\u2F16'] = '\u5338';
	    t['\u2F17'] = '\u5341';
	    t['\u2F18'] = '\u535C';
	    t['\u2F19'] = '\u5369';
	    t['\u2F1A'] = '\u5382';
	    t['\u2F1B'] = '\u53B6';
	    t['\u2F1C'] = '\u53C8';
	    t['\u2F1D'] = '\u53E3';
	    t['\u2F1E'] = '\u56D7';
	    t['\u2F1F'] = '\u571F';
	    t['\u2F20'] = '\u58EB';
	    t['\u2F21'] = '\u5902';
	    t['\u2F22'] = '\u590A';
	    t['\u2F23'] = '\u5915';
	    t['\u2F24'] = '\u5927';
	    t['\u2F25'] = '\u5973';
	    t['\u2F26'] = '\u5B50';
	    t['\u2F27'] = '\u5B80';
	    t['\u2F28'] = '\u5BF8';
	    t['\u2F29'] = '\u5C0F';
	    t['\u2F2A'] = '\u5C22';
	    t['\u2F2B'] = '\u5C38';
	    t['\u2F2C'] = '\u5C6E';
	    t['\u2F2D'] = '\u5C71';
	    t['\u2F2E'] = '\u5DDB';
	    t['\u2F2F'] = '\u5DE5';
	    t['\u2F30'] = '\u5DF1';
	    t['\u2F31'] = '\u5DFE';
	    t['\u2F32'] = '\u5E72';
	    t['\u2F33'] = '\u5E7A';
	    t['\u2F34'] = '\u5E7F';
	    t['\u2F35'] = '\u5EF4';
	    t['\u2F36'] = '\u5EFE';
	    t['\u2F37'] = '\u5F0B';
	    t['\u2F38'] = '\u5F13';
	    t['\u2F39'] = '\u5F50';
	    t['\u2F3A'] = '\u5F61';
	    t['\u2F3B'] = '\u5F73';
	    t['\u2F3C'] = '\u5FC3';
	    t['\u2F3D'] = '\u6208';
	    t['\u2F3E'] = '\u6236';
	    t['\u2F3F'] = '\u624B';
	    t['\u2F40'] = '\u652F';
	    t['\u2F41'] = '\u6534';
	    t['\u2F42'] = '\u6587';
	    t['\u2F43'] = '\u6597';
	    t['\u2F44'] = '\u65A4';
	    t['\u2F45'] = '\u65B9';
	    t['\u2F46'] = '\u65E0';
	    t['\u2F47'] = '\u65E5';
	    t['\u2F48'] = '\u66F0';
	    t['\u2F49'] = '\u6708';
	    t['\u2F4A'] = '\u6728';
	    t['\u2F4B'] = '\u6B20';
	    t['\u2F4C'] = '\u6B62';
	    t['\u2F4D'] = '\u6B79';
	    t['\u2F4E'] = '\u6BB3';
	    t['\u2F4F'] = '\u6BCB';
	    t['\u2F50'] = '\u6BD4';
	    t['\u2F51'] = '\u6BDB';
	    t['\u2F52'] = '\u6C0F';
	    t['\u2F53'] = '\u6C14';
	    t['\u2F54'] = '\u6C34';
	    t['\u2F55'] = '\u706B';
	    t['\u2F56'] = '\u722A';
	    t['\u2F57'] = '\u7236';
	    t['\u2F58'] = '\u723B';
	    t['\u2F59'] = '\u723F';
	    t['\u2F5A'] = '\u7247';
	    t['\u2F5B'] = '\u7259';
	    t['\u2F5C'] = '\u725B';
	    t['\u2F5D'] = '\u72AC';
	    t['\u2F5E'] = '\u7384';
	    t['\u2F5F'] = '\u7389';
	    t['\u2F60'] = '\u74DC';
	    t['\u2F61'] = '\u74E6';
	    t['\u2F62'] = '\u7518';
	    t['\u2F63'] = '\u751F';
	    t['\u2F64'] = '\u7528';
	    t['\u2F65'] = '\u7530';
	    t['\u2F66'] = '\u758B';
	    t['\u2F67'] = '\u7592';
	    t['\u2F68'] = '\u7676';
	    t['\u2F69'] = '\u767D';
	    t['\u2F6A'] = '\u76AE';
	    t['\u2F6B'] = '\u76BF';
	    t['\u2F6C'] = '\u76EE';
	    t['\u2F6D'] = '\u77DB';
	    t['\u2F6E'] = '\u77E2';
	    t['\u2F6F'] = '\u77F3';
	    t['\u2F70'] = '\u793A';
	    t['\u2F71'] = '\u79B8';
	    t['\u2F72'] = '\u79BE';
	    t['\u2F73'] = '\u7A74';
	    t['\u2F74'] = '\u7ACB';
	    t['\u2F75'] = '\u7AF9';
	    t['\u2F76'] = '\u7C73';
	    t['\u2F77'] = '\u7CF8';
	    t['\u2F78'] = '\u7F36';
	    t['\u2F79'] = '\u7F51';
	    t['\u2F7A'] = '\u7F8A';
	    t['\u2F7B'] = '\u7FBD';
	    t['\u2F7C'] = '\u8001';
	    t['\u2F7D'] = '\u800C';
	    t['\u2F7E'] = '\u8012';
	    t['\u2F7F'] = '\u8033';
	    t['\u2F80'] = '\u807F';
	    t['\u2F81'] = '\u8089';
	    t['\u2F82'] = '\u81E3';
	    t['\u2F83'] = '\u81EA';
	    t['\u2F84'] = '\u81F3';
	    t['\u2F85'] = '\u81FC';
	    t['\u2F86'] = '\u820C';
	    t['\u2F87'] = '\u821B';
	    t['\u2F88'] = '\u821F';
	    t['\u2F89'] = '\u826E';
	    t['\u2F8A'] = '\u8272';
	    t['\u2F8B'] = '\u8278';
	    t['\u2F8C'] = '\u864D';
	    t['\u2F8D'] = '\u866B';
	    t['\u2F8E'] = '\u8840';
	    t['\u2F8F'] = '\u884C';
	    t['\u2F90'] = '\u8863';
	    t['\u2F91'] = '\u897E';
	    t['\u2F92'] = '\u898B';
	    t['\u2F93'] = '\u89D2';
	    t['\u2F94'] = '\u8A00';
	    t['\u2F95'] = '\u8C37';
	    t['\u2F96'] = '\u8C46';
	    t['\u2F97'] = '\u8C55';
	    t['\u2F98'] = '\u8C78';
	    t['\u2F99'] = '\u8C9D';
	    t['\u2F9A'] = '\u8D64';
	    t['\u2F9B'] = '\u8D70';
	    t['\u2F9C'] = '\u8DB3';
	    t['\u2F9D'] = '\u8EAB';
	    t['\u2F9E'] = '\u8ECA';
	    t['\u2F9F'] = '\u8F9B';
	    t['\u2FA0'] = '\u8FB0';
	    t['\u2FA1'] = '\u8FB5';
	    t['\u2FA2'] = '\u9091';
	    t['\u2FA3'] = '\u9149';
	    t['\u2FA4'] = '\u91C6';
	    t['\u2FA5'] = '\u91CC';
	    t['\u2FA6'] = '\u91D1';
	    t['\u2FA7'] = '\u9577';
	    t['\u2FA8'] = '\u9580';
	    t['\u2FA9'] = '\u961C';
	    t['\u2FAA'] = '\u96B6';
	    t['\u2FAB'] = '\u96B9';
	    t['\u2FAC'] = '\u96E8';
	    t['\u2FAD'] = '\u9751';
	    t['\u2FAE'] = '\u975E';
	    t['\u2FAF'] = '\u9762';
	    t['\u2FB0'] = '\u9769';
	    t['\u2FB1'] = '\u97CB';
	    t['\u2FB2'] = '\u97ED';
	    t['\u2FB3'] = '\u97F3';
	    t['\u2FB4'] = '\u9801';
	    t['\u2FB5'] = '\u98A8';
	    t['\u2FB6'] = '\u98DB';
	    t['\u2FB7'] = '\u98DF';
	    t['\u2FB8'] = '\u9996';
	    t['\u2FB9'] = '\u9999';
	    t['\u2FBA'] = '\u99AC';
	    t['\u2FBB'] = '\u9AA8';
	    t['\u2FBC'] = '\u9AD8';
	    t['\u2FBD'] = '\u9ADF';
	    t['\u2FBE'] = '\u9B25';
	    t['\u2FBF'] = '\u9B2F';
	    t['\u2FC0'] = '\u9B32';
	    t['\u2FC1'] = '\u9B3C';
	    t['\u2FC2'] = '\u9B5A';
	    t['\u2FC3'] = '\u9CE5';
	    t['\u2FC4'] = '\u9E75';
	    t['\u2FC5'] = '\u9E7F';
	    t['\u2FC6'] = '\u9EA5';
	    t['\u2FC7'] = '\u9EBB';
	    t['\u2FC8'] = '\u9EC3';
	    t['\u2FC9'] = '\u9ECD';
	    t['\u2FCA'] = '\u9ED1';
	    t['\u2FCB'] = '\u9EF9';
	    t['\u2FCC'] = '\u9EFD';
	    t['\u2FCD'] = '\u9F0E';
	    t['\u2FCE'] = '\u9F13';
	    t['\u2FCF'] = '\u9F20';
	    t['\u2FD0'] = '\u9F3B';
	    t['\u2FD1'] = '\u9F4A';
	    t['\u2FD2'] = '\u9F52';
	    t['\u2FD3'] = '\u9F8D';
	    t['\u2FD4'] = '\u9F9C';
	    t['\u2FD5'] = '\u9FA0';
	    t['\u3036'] = '\u3012';
	    t['\u3038'] = '\u5341';
	    t['\u3039'] = '\u5344';
	    t['\u303A'] = '\u5345';
	    t['\u309B'] = '\u0020\u3099';
	    t['\u309C'] = '\u0020\u309A';
	    t['\u3131'] = '\u1100';
	    t['\u3132'] = '\u1101';
	    t['\u3133'] = '\u11AA';
	    t['\u3134'] = '\u1102';
	    t['\u3135'] = '\u11AC';
	    t['\u3136'] = '\u11AD';
	    t['\u3137'] = '\u1103';
	    t['\u3138'] = '\u1104';
	    t['\u3139'] = '\u1105';
	    t['\u313A'] = '\u11B0';
	    t['\u313B'] = '\u11B1';
	    t['\u313C'] = '\u11B2';
	    t['\u313D'] = '\u11B3';
	    t['\u313E'] = '\u11B4';
	    t['\u313F'] = '\u11B5';
	    t['\u3140'] = '\u111A';
	    t['\u3141'] = '\u1106';
	    t['\u3142'] = '\u1107';
	    t['\u3143'] = '\u1108';
	    t['\u3144'] = '\u1121';
	    t['\u3145'] = '\u1109';
	    t['\u3146'] = '\u110A';
	    t['\u3147'] = '\u110B';
	    t['\u3148'] = '\u110C';
	    t['\u3149'] = '\u110D';
	    t['\u314A'] = '\u110E';
	    t['\u314B'] = '\u110F';
	    t['\u314C'] = '\u1110';
	    t['\u314D'] = '\u1111';
	    t['\u314E'] = '\u1112';
	    t['\u314F'] = '\u1161';
	    t['\u3150'] = '\u1162';
	    t['\u3151'] = '\u1163';
	    t['\u3152'] = '\u1164';
	    t['\u3153'] = '\u1165';
	    t['\u3154'] = '\u1166';
	    t['\u3155'] = '\u1167';
	    t['\u3156'] = '\u1168';
	    t['\u3157'] = '\u1169';
	    t['\u3158'] = '\u116A';
	    t['\u3159'] = '\u116B';
	    t['\u315A'] = '\u116C';
	    t['\u315B'] = '\u116D';
	    t['\u315C'] = '\u116E';
	    t['\u315D'] = '\u116F';
	    t['\u315E'] = '\u1170';
	    t['\u315F'] = '\u1171';
	    t['\u3160'] = '\u1172';
	    t['\u3161'] = '\u1173';
	    t['\u3162'] = '\u1174';
	    t['\u3163'] = '\u1175';
	    t['\u3164'] = '\u1160';
	    t['\u3165'] = '\u1114';
	    t['\u3166'] = '\u1115';
	    t['\u3167'] = '\u11C7';
	    t['\u3168'] = '\u11C8';
	    t['\u3169'] = '\u11CC';
	    t['\u316A'] = '\u11CE';
	    t['\u316B'] = '\u11D3';
	    t['\u316C'] = '\u11D7';
	    t['\u316D'] = '\u11D9';
	    t['\u316E'] = '\u111C';
	    t['\u316F'] = '\u11DD';
	    t['\u3170'] = '\u11DF';
	    t['\u3171'] = '\u111D';
	    t['\u3172'] = '\u111E';
	    t['\u3173'] = '\u1120';
	    t['\u3174'] = '\u1122';
	    t['\u3175'] = '\u1123';
	    t['\u3176'] = '\u1127';
	    t['\u3177'] = '\u1129';
	    t['\u3178'] = '\u112B';
	    t['\u3179'] = '\u112C';
	    t['\u317A'] = '\u112D';
	    t['\u317B'] = '\u112E';
	    t['\u317C'] = '\u112F';
	    t['\u317D'] = '\u1132';
	    t['\u317E'] = '\u1136';
	    t['\u317F'] = '\u1140';
	    t['\u3180'] = '\u1147';
	    t['\u3181'] = '\u114C';
	    t['\u3182'] = '\u11F1';
	    t['\u3183'] = '\u11F2';
	    t['\u3184'] = '\u1157';
	    t['\u3185'] = '\u1158';
	    t['\u3186'] = '\u1159';
	    t['\u3187'] = '\u1184';
	    t['\u3188'] = '\u1185';
	    t['\u3189'] = '\u1188';
	    t['\u318A'] = '\u1191';
	    t['\u318B'] = '\u1192';
	    t['\u318C'] = '\u1194';
	    t['\u318D'] = '\u119E';
	    t['\u318E'] = '\u11A1';
	    t['\u3200'] = '\u0028\u1100\u0029';
	    t['\u3201'] = '\u0028\u1102\u0029';
	    t['\u3202'] = '\u0028\u1103\u0029';
	    t['\u3203'] = '\u0028\u1105\u0029';
	    t['\u3204'] = '\u0028\u1106\u0029';
	    t['\u3205'] = '\u0028\u1107\u0029';
	    t['\u3206'] = '\u0028\u1109\u0029';
	    t['\u3207'] = '\u0028\u110B\u0029';
	    t['\u3208'] = '\u0028\u110C\u0029';
	    t['\u3209'] = '\u0028\u110E\u0029';
	    t['\u320A'] = '\u0028\u110F\u0029';
	    t['\u320B'] = '\u0028\u1110\u0029';
	    t['\u320C'] = '\u0028\u1111\u0029';
	    t['\u320D'] = '\u0028\u1112\u0029';
	    t['\u320E'] = '\u0028\u1100\u1161\u0029';
	    t['\u320F'] = '\u0028\u1102\u1161\u0029';
	    t['\u3210'] = '\u0028\u1103\u1161\u0029';
	    t['\u3211'] = '\u0028\u1105\u1161\u0029';
	    t['\u3212'] = '\u0028\u1106\u1161\u0029';
	    t['\u3213'] = '\u0028\u1107\u1161\u0029';
	    t['\u3214'] = '\u0028\u1109\u1161\u0029';
	    t['\u3215'] = '\u0028\u110B\u1161\u0029';
	    t['\u3216'] = '\u0028\u110C\u1161\u0029';
	    t['\u3217'] = '\u0028\u110E\u1161\u0029';
	    t['\u3218'] = '\u0028\u110F\u1161\u0029';
	    t['\u3219'] = '\u0028\u1110\u1161\u0029';
	    t['\u321A'] = '\u0028\u1111\u1161\u0029';
	    t['\u321B'] = '\u0028\u1112\u1161\u0029';
	    t['\u321C'] = '\u0028\u110C\u116E\u0029';
	    t['\u321D'] = '\u0028\u110B\u1169\u110C\u1165\u11AB\u0029';
	    t['\u321E'] = '\u0028\u110B\u1169\u1112\u116E\u0029';
	    t['\u3220'] = '\u0028\u4E00\u0029';
	    t['\u3221'] = '\u0028\u4E8C\u0029';
	    t['\u3222'] = '\u0028\u4E09\u0029';
	    t['\u3223'] = '\u0028\u56DB\u0029';
	    t['\u3224'] = '\u0028\u4E94\u0029';
	    t['\u3225'] = '\u0028\u516D\u0029';
	    t['\u3226'] = '\u0028\u4E03\u0029';
	    t['\u3227'] = '\u0028\u516B\u0029';
	    t['\u3228'] = '\u0028\u4E5D\u0029';
	    t['\u3229'] = '\u0028\u5341\u0029';
	    t['\u322A'] = '\u0028\u6708\u0029';
	    t['\u322B'] = '\u0028\u706B\u0029';
	    t['\u322C'] = '\u0028\u6C34\u0029';
	    t['\u322D'] = '\u0028\u6728\u0029';
	    t['\u322E'] = '\u0028\u91D1\u0029';
	    t['\u322F'] = '\u0028\u571F\u0029';
	    t['\u3230'] = '\u0028\u65E5\u0029';
	    t['\u3231'] = '\u0028\u682A\u0029';
	    t['\u3232'] = '\u0028\u6709\u0029';
	    t['\u3233'] = '\u0028\u793E\u0029';
	    t['\u3234'] = '\u0028\u540D\u0029';
	    t['\u3235'] = '\u0028\u7279\u0029';
	    t['\u3236'] = '\u0028\u8CA1\u0029';
	    t['\u3237'] = '\u0028\u795D\u0029';
	    t['\u3238'] = '\u0028\u52B4\u0029';
	    t['\u3239'] = '\u0028\u4EE3\u0029';
	    t['\u323A'] = '\u0028\u547C\u0029';
	    t['\u323B'] = '\u0028\u5B66\u0029';
	    t['\u323C'] = '\u0028\u76E3\u0029';
	    t['\u323D'] = '\u0028\u4F01\u0029';
	    t['\u323E'] = '\u0028\u8CC7\u0029';
	    t['\u323F'] = '\u0028\u5354\u0029';
	    t['\u3240'] = '\u0028\u796D\u0029';
	    t['\u3241'] = '\u0028\u4F11\u0029';
	    t['\u3242'] = '\u0028\u81EA\u0029';
	    t['\u3243'] = '\u0028\u81F3\u0029';
	    t['\u32C0'] = '\u0031\u6708';
	    t['\u32C1'] = '\u0032\u6708';
	    t['\u32C2'] = '\u0033\u6708';
	    t['\u32C3'] = '\u0034\u6708';
	    t['\u32C4'] = '\u0035\u6708';
	    t['\u32C5'] = '\u0036\u6708';
	    t['\u32C6'] = '\u0037\u6708';
	    t['\u32C7'] = '\u0038\u6708';
	    t['\u32C8'] = '\u0039\u6708';
	    t['\u32C9'] = '\u0031\u0030\u6708';
	    t['\u32CA'] = '\u0031\u0031\u6708';
	    t['\u32CB'] = '\u0031\u0032\u6708';
	    t['\u3358'] = '\u0030\u70B9';
	    t['\u3359'] = '\u0031\u70B9';
	    t['\u335A'] = '\u0032\u70B9';
	    t['\u335B'] = '\u0033\u70B9';
	    t['\u335C'] = '\u0034\u70B9';
	    t['\u335D'] = '\u0035\u70B9';
	    t['\u335E'] = '\u0036\u70B9';
	    t['\u335F'] = '\u0037\u70B9';
	    t['\u3360'] = '\u0038\u70B9';
	    t['\u3361'] = '\u0039\u70B9';
	    t['\u3362'] = '\u0031\u0030\u70B9';
	    t['\u3363'] = '\u0031\u0031\u70B9';
	    t['\u3364'] = '\u0031\u0032\u70B9';
	    t['\u3365'] = '\u0031\u0033\u70B9';
	    t['\u3366'] = '\u0031\u0034\u70B9';
	    t['\u3367'] = '\u0031\u0035\u70B9';
	    t['\u3368'] = '\u0031\u0036\u70B9';
	    t['\u3369'] = '\u0031\u0037\u70B9';
	    t['\u336A'] = '\u0031\u0038\u70B9';
	    t['\u336B'] = '\u0031\u0039\u70B9';
	    t['\u336C'] = '\u0032\u0030\u70B9';
	    t['\u336D'] = '\u0032\u0031\u70B9';
	    t['\u336E'] = '\u0032\u0032\u70B9';
	    t['\u336F'] = '\u0032\u0033\u70B9';
	    t['\u3370'] = '\u0032\u0034\u70B9';
	    t['\u33E0'] = '\u0031\u65E5';
	    t['\u33E1'] = '\u0032\u65E5';
	    t['\u33E2'] = '\u0033\u65E5';
	    t['\u33E3'] = '\u0034\u65E5';
	    t['\u33E4'] = '\u0035\u65E5';
	    t['\u33E5'] = '\u0036\u65E5';
	    t['\u33E6'] = '\u0037\u65E5';
	    t['\u33E7'] = '\u0038\u65E5';
	    t['\u33E8'] = '\u0039\u65E5';
	    t['\u33E9'] = '\u0031\u0030\u65E5';
	    t['\u33EA'] = '\u0031\u0031\u65E5';
	    t['\u33EB'] = '\u0031\u0032\u65E5';
	    t['\u33EC'] = '\u0031\u0033\u65E5';
	    t['\u33ED'] = '\u0031\u0034\u65E5';
	    t['\u33EE'] = '\u0031\u0035\u65E5';
	    t['\u33EF'] = '\u0031\u0036\u65E5';
	    t['\u33F0'] = '\u0031\u0037\u65E5';
	    t['\u33F1'] = '\u0031\u0038\u65E5';
	    t['\u33F2'] = '\u0031\u0039\u65E5';
	    t['\u33F3'] = '\u0032\u0030\u65E5';
	    t['\u33F4'] = '\u0032\u0031\u65E5';
	    t['\u33F5'] = '\u0032\u0032\u65E5';
	    t['\u33F6'] = '\u0032\u0033\u65E5';
	    t['\u33F7'] = '\u0032\u0034\u65E5';
	    t['\u33F8'] = '\u0032\u0035\u65E5';
	    t['\u33F9'] = '\u0032\u0036\u65E5';
	    t['\u33FA'] = '\u0032\u0037\u65E5';
	    t['\u33FB'] = '\u0032\u0038\u65E5';
	    t['\u33FC'] = '\u0032\u0039\u65E5';
	    t['\u33FD'] = '\u0033\u0030\u65E5';
	    t['\u33FE'] = '\u0033\u0031\u65E5';
	    t['\uFB00'] = '\u0066\u0066';
	    t['\uFB01'] = '\u0066\u0069';
	    t['\uFB02'] = '\u0066\u006C';
	    t['\uFB03'] = '\u0066\u0066\u0069';
	    t['\uFB04'] = '\u0066\u0066\u006C';
	    t['\uFB05'] = '\u017F\u0074';
	    t['\uFB06'] = '\u0073\u0074';
	    t['\uFB13'] = '\u0574\u0576';
	    t['\uFB14'] = '\u0574\u0565';
	    t['\uFB15'] = '\u0574\u056B';
	    t['\uFB16'] = '\u057E\u0576';
	    t['\uFB17'] = '\u0574\u056D';
	    t['\uFB4F'] = '\u05D0\u05DC';
	    t['\uFB50'] = '\u0671';
	    t['\uFB51'] = '\u0671';
	    t['\uFB52'] = '\u067B';
	    t['\uFB53'] = '\u067B';
	    t['\uFB54'] = '\u067B';
	    t['\uFB55'] = '\u067B';
	    t['\uFB56'] = '\u067E';
	    t['\uFB57'] = '\u067E';
	    t['\uFB58'] = '\u067E';
	    t['\uFB59'] = '\u067E';
	    t['\uFB5A'] = '\u0680';
	    t['\uFB5B'] = '\u0680';
	    t['\uFB5C'] = '\u0680';
	    t['\uFB5D'] = '\u0680';
	    t['\uFB5E'] = '\u067A';
	    t['\uFB5F'] = '\u067A';
	    t['\uFB60'] = '\u067A';
	    t['\uFB61'] = '\u067A';
	    t['\uFB62'] = '\u067F';
	    t['\uFB63'] = '\u067F';
	    t['\uFB64'] = '\u067F';
	    t['\uFB65'] = '\u067F';
	    t['\uFB66'] = '\u0679';
	    t['\uFB67'] = '\u0679';
	    t['\uFB68'] = '\u0679';
	    t['\uFB69'] = '\u0679';
	    t['\uFB6A'] = '\u06A4';
	    t['\uFB6B'] = '\u06A4';
	    t['\uFB6C'] = '\u06A4';
	    t['\uFB6D'] = '\u06A4';
	    t['\uFB6E'] = '\u06A6';
	    t['\uFB6F'] = '\u06A6';
	    t['\uFB70'] = '\u06A6';
	    t['\uFB71'] = '\u06A6';
	    t['\uFB72'] = '\u0684';
	    t['\uFB73'] = '\u0684';
	    t['\uFB74'] = '\u0684';
	    t['\uFB75'] = '\u0684';
	    t['\uFB76'] = '\u0683';
	    t['\uFB77'] = '\u0683';
	    t['\uFB78'] = '\u0683';
	    t['\uFB79'] = '\u0683';
	    t['\uFB7A'] = '\u0686';
	    t['\uFB7B'] = '\u0686';
	    t['\uFB7C'] = '\u0686';
	    t['\uFB7D'] = '\u0686';
	    t['\uFB7E'] = '\u0687';
	    t['\uFB7F'] = '\u0687';
	    t['\uFB80'] = '\u0687';
	    t['\uFB81'] = '\u0687';
	    t['\uFB82'] = '\u068D';
	    t['\uFB83'] = '\u068D';
	    t['\uFB84'] = '\u068C';
	    t['\uFB85'] = '\u068C';
	    t['\uFB86'] = '\u068E';
	    t['\uFB87'] = '\u068E';
	    t['\uFB88'] = '\u0688';
	    t['\uFB89'] = '\u0688';
	    t['\uFB8A'] = '\u0698';
	    t['\uFB8B'] = '\u0698';
	    t['\uFB8C'] = '\u0691';
	    t['\uFB8D'] = '\u0691';
	    t['\uFB8E'] = '\u06A9';
	    t['\uFB8F'] = '\u06A9';
	    t['\uFB90'] = '\u06A9';
	    t['\uFB91'] = '\u06A9';
	    t['\uFB92'] = '\u06AF';
	    t['\uFB93'] = '\u06AF';
	    t['\uFB94'] = '\u06AF';
	    t['\uFB95'] = '\u06AF';
	    t['\uFB96'] = '\u06B3';
	    t['\uFB97'] = '\u06B3';
	    t['\uFB98'] = '\u06B3';
	    t['\uFB99'] = '\u06B3';
	    t['\uFB9A'] = '\u06B1';
	    t['\uFB9B'] = '\u06B1';
	    t['\uFB9C'] = '\u06B1';
	    t['\uFB9D'] = '\u06B1';
	    t['\uFB9E'] = '\u06BA';
	    t['\uFB9F'] = '\u06BA';
	    t['\uFBA0'] = '\u06BB';
	    t['\uFBA1'] = '\u06BB';
	    t['\uFBA2'] = '\u06BB';
	    t['\uFBA3'] = '\u06BB';
	    t['\uFBA4'] = '\u06C0';
	    t['\uFBA5'] = '\u06C0';
	    t['\uFBA6'] = '\u06C1';
	    t['\uFBA7'] = '\u06C1';
	    t['\uFBA8'] = '\u06C1';
	    t['\uFBA9'] = '\u06C1';
	    t['\uFBAA'] = '\u06BE';
	    t['\uFBAB'] = '\u06BE';
	    t['\uFBAC'] = '\u06BE';
	    t['\uFBAD'] = '\u06BE';
	    t['\uFBAE'] = '\u06D2';
	    t['\uFBAF'] = '\u06D2';
	    t['\uFBB0'] = '\u06D3';
	    t['\uFBB1'] = '\u06D3';
	    t['\uFBD3'] = '\u06AD';
	    t['\uFBD4'] = '\u06AD';
	    t['\uFBD5'] = '\u06AD';
	    t['\uFBD6'] = '\u06AD';
	    t['\uFBD7'] = '\u06C7';
	    t['\uFBD8'] = '\u06C7';
	    t['\uFBD9'] = '\u06C6';
	    t['\uFBDA'] = '\u06C6';
	    t['\uFBDB'] = '\u06C8';
	    t['\uFBDC'] = '\u06C8';
	    t['\uFBDD'] = '\u0677';
	    t['\uFBDE'] = '\u06CB';
	    t['\uFBDF'] = '\u06CB';
	    t['\uFBE0'] = '\u06C5';
	    t['\uFBE1'] = '\u06C5';
	    t['\uFBE2'] = '\u06C9';
	    t['\uFBE3'] = '\u06C9';
	    t['\uFBE4'] = '\u06D0';
	    t['\uFBE5'] = '\u06D0';
	    t['\uFBE6'] = '\u06D0';
	    t['\uFBE7'] = '\u06D0';
	    t['\uFBE8'] = '\u0649';
	    t['\uFBE9'] = '\u0649';
	    t['\uFBEA'] = '\u0626\u0627';
	    t['\uFBEB'] = '\u0626\u0627';
	    t['\uFBEC'] = '\u0626\u06D5';
	    t['\uFBED'] = '\u0626\u06D5';
	    t['\uFBEE'] = '\u0626\u0648';
	    t['\uFBEF'] = '\u0626\u0648';
	    t['\uFBF0'] = '\u0626\u06C7';
	    t['\uFBF1'] = '\u0626\u06C7';
	    t['\uFBF2'] = '\u0626\u06C6';
	    t['\uFBF3'] = '\u0626\u06C6';
	    t['\uFBF4'] = '\u0626\u06C8';
	    t['\uFBF5'] = '\u0626\u06C8';
	    t['\uFBF6'] = '\u0626\u06D0';
	    t['\uFBF7'] = '\u0626\u06D0';
	    t['\uFBF8'] = '\u0626\u06D0';
	    t['\uFBF9'] = '\u0626\u0649';
	    t['\uFBFA'] = '\u0626\u0649';
	    t['\uFBFB'] = '\u0626\u0649';
	    t['\uFBFC'] = '\u06CC';
	    t['\uFBFD'] = '\u06CC';
	    t['\uFBFE'] = '\u06CC';
	    t['\uFBFF'] = '\u06CC';
	    t['\uFC00'] = '\u0626\u062C';
	    t['\uFC01'] = '\u0626\u062D';
	    t['\uFC02'] = '\u0626\u0645';
	    t['\uFC03'] = '\u0626\u0649';
	    t['\uFC04'] = '\u0626\u064A';
	    t['\uFC05'] = '\u0628\u062C';
	    t['\uFC06'] = '\u0628\u062D';
	    t['\uFC07'] = '\u0628\u062E';
	    t['\uFC08'] = '\u0628\u0645';
	    t['\uFC09'] = '\u0628\u0649';
	    t['\uFC0A'] = '\u0628\u064A';
	    t['\uFC0B'] = '\u062A\u062C';
	    t['\uFC0C'] = '\u062A\u062D';
	    t['\uFC0D'] = '\u062A\u062E';
	    t['\uFC0E'] = '\u062A\u0645';
	    t['\uFC0F'] = '\u062A\u0649';
	    t['\uFC10'] = '\u062A\u064A';
	    t['\uFC11'] = '\u062B\u062C';
	    t['\uFC12'] = '\u062B\u0645';
	    t['\uFC13'] = '\u062B\u0649';
	    t['\uFC14'] = '\u062B\u064A';
	    t['\uFC15'] = '\u062C\u062D';
	    t['\uFC16'] = '\u062C\u0645';
	    t['\uFC17'] = '\u062D\u062C';
	    t['\uFC18'] = '\u062D\u0645';
	    t['\uFC19'] = '\u062E\u062C';
	    t['\uFC1A'] = '\u062E\u062D';
	    t['\uFC1B'] = '\u062E\u0645';
	    t['\uFC1C'] = '\u0633\u062C';
	    t['\uFC1D'] = '\u0633\u062D';
	    t['\uFC1E'] = '\u0633\u062E';
	    t['\uFC1F'] = '\u0633\u0645';
	    t['\uFC20'] = '\u0635\u062D';
	    t['\uFC21'] = '\u0635\u0645';
	    t['\uFC22'] = '\u0636\u062C';
	    t['\uFC23'] = '\u0636\u062D';
	    t['\uFC24'] = '\u0636\u062E';
	    t['\uFC25'] = '\u0636\u0645';
	    t['\uFC26'] = '\u0637\u062D';
	    t['\uFC27'] = '\u0637\u0645';
	    t['\uFC28'] = '\u0638\u0645';
	    t['\uFC29'] = '\u0639\u062C';
	    t['\uFC2A'] = '\u0639\u0645';
	    t['\uFC2B'] = '\u063A\u062C';
	    t['\uFC2C'] = '\u063A\u0645';
	    t['\uFC2D'] = '\u0641\u062C';
	    t['\uFC2E'] = '\u0641\u062D';
	    t['\uFC2F'] = '\u0641\u062E';
	    t['\uFC30'] = '\u0641\u0645';
	    t['\uFC31'] = '\u0641\u0649';
	    t['\uFC32'] = '\u0641\u064A';
	    t['\uFC33'] = '\u0642\u062D';
	    t['\uFC34'] = '\u0642\u0645';
	    t['\uFC35'] = '\u0642\u0649';
	    t['\uFC36'] = '\u0642\u064A';
	    t['\uFC37'] = '\u0643\u0627';
	    t['\uFC38'] = '\u0643\u062C';
	    t['\uFC39'] = '\u0643\u062D';
	    t['\uFC3A'] = '\u0643\u062E';
	    t['\uFC3B'] = '\u0643\u0644';
	    t['\uFC3C'] = '\u0643\u0645';
	    t['\uFC3D'] = '\u0643\u0649';
	    t['\uFC3E'] = '\u0643\u064A';
	    t['\uFC3F'] = '\u0644\u062C';
	    t['\uFC40'] = '\u0644\u062D';
	    t['\uFC41'] = '\u0644\u062E';
	    t['\uFC42'] = '\u0644\u0645';
	    t['\uFC43'] = '\u0644\u0649';
	    t['\uFC44'] = '\u0644\u064A';
	    t['\uFC45'] = '\u0645\u062C';
	    t['\uFC46'] = '\u0645\u062D';
	    t['\uFC47'] = '\u0645\u062E';
	    t['\uFC48'] = '\u0645\u0645';
	    t['\uFC49'] = '\u0645\u0649';
	    t['\uFC4A'] = '\u0645\u064A';
	    t['\uFC4B'] = '\u0646\u062C';
	    t['\uFC4C'] = '\u0646\u062D';
	    t['\uFC4D'] = '\u0646\u062E';
	    t['\uFC4E'] = '\u0646\u0645';
	    t['\uFC4F'] = '\u0646\u0649';
	    t['\uFC50'] = '\u0646\u064A';
	    t['\uFC51'] = '\u0647\u062C';
	    t['\uFC52'] = '\u0647\u0645';
	    t['\uFC53'] = '\u0647\u0649';
	    t['\uFC54'] = '\u0647\u064A';
	    t['\uFC55'] = '\u064A\u062C';
	    t['\uFC56'] = '\u064A\u062D';
	    t['\uFC57'] = '\u064A\u062E';
	    t['\uFC58'] = '\u064A\u0645';
	    t['\uFC59'] = '\u064A\u0649';
	    t['\uFC5A'] = '\u064A\u064A';
	    t['\uFC5B'] = '\u0630\u0670';
	    t['\uFC5C'] = '\u0631\u0670';
	    t['\uFC5D'] = '\u0649\u0670';
	    t['\uFC5E'] = '\u0020\u064C\u0651';
	    t['\uFC5F'] = '\u0020\u064D\u0651';
	    t['\uFC60'] = '\u0020\u064E\u0651';
	    t['\uFC61'] = '\u0020\u064F\u0651';
	    t['\uFC62'] = '\u0020\u0650\u0651';
	    t['\uFC63'] = '\u0020\u0651\u0670';
	    t['\uFC64'] = '\u0626\u0631';
	    t['\uFC65'] = '\u0626\u0632';
	    t['\uFC66'] = '\u0626\u0645';
	    t['\uFC67'] = '\u0626\u0646';
	    t['\uFC68'] = '\u0626\u0649';
	    t['\uFC69'] = '\u0626\u064A';
	    t['\uFC6A'] = '\u0628\u0631';
	    t['\uFC6B'] = '\u0628\u0632';
	    t['\uFC6C'] = '\u0628\u0645';
	    t['\uFC6D'] = '\u0628\u0646';
	    t['\uFC6E'] = '\u0628\u0649';
	    t['\uFC6F'] = '\u0628\u064A';
	    t['\uFC70'] = '\u062A\u0631';
	    t['\uFC71'] = '\u062A\u0632';
	    t['\uFC72'] = '\u062A\u0645';
	    t['\uFC73'] = '\u062A\u0646';
	    t['\uFC74'] = '\u062A\u0649';
	    t['\uFC75'] = '\u062A\u064A';
	    t['\uFC76'] = '\u062B\u0631';
	    t['\uFC77'] = '\u062B\u0632';
	    t['\uFC78'] = '\u062B\u0645';
	    t['\uFC79'] = '\u062B\u0646';
	    t['\uFC7A'] = '\u062B\u0649';
	    t['\uFC7B'] = '\u062B\u064A';
	    t['\uFC7C'] = '\u0641\u0649';
	    t['\uFC7D'] = '\u0641\u064A';
	    t['\uFC7E'] = '\u0642\u0649';
	    t['\uFC7F'] = '\u0642\u064A';
	    t['\uFC80'] = '\u0643\u0627';
	    t['\uFC81'] = '\u0643\u0644';
	    t['\uFC82'] = '\u0643\u0645';
	    t['\uFC83'] = '\u0643\u0649';
	    t['\uFC84'] = '\u0643\u064A';
	    t['\uFC85'] = '\u0644\u0645';
	    t['\uFC86'] = '\u0644\u0649';
	    t['\uFC87'] = '\u0644\u064A';
	    t['\uFC88'] = '\u0645\u0627';
	    t['\uFC89'] = '\u0645\u0645';
	    t['\uFC8A'] = '\u0646\u0631';
	    t['\uFC8B'] = '\u0646\u0632';
	    t['\uFC8C'] = '\u0646\u0645';
	    t['\uFC8D'] = '\u0646\u0646';
	    t['\uFC8E'] = '\u0646\u0649';
	    t['\uFC8F'] = '\u0646\u064A';
	    t['\uFC90'] = '\u0649\u0670';
	    t['\uFC91'] = '\u064A\u0631';
	    t['\uFC92'] = '\u064A\u0632';
	    t['\uFC93'] = '\u064A\u0645';
	    t['\uFC94'] = '\u064A\u0646';
	    t['\uFC95'] = '\u064A\u0649';
	    t['\uFC96'] = '\u064A\u064A';
	    t['\uFC97'] = '\u0626\u062C';
	    t['\uFC98'] = '\u0626\u062D';
	    t['\uFC99'] = '\u0626\u062E';
	    t['\uFC9A'] = '\u0626\u0645';
	    t['\uFC9B'] = '\u0626\u0647';
	    t['\uFC9C'] = '\u0628\u062C';
	    t['\uFC9D'] = '\u0628\u062D';
	    t['\uFC9E'] = '\u0628\u062E';
	    t['\uFC9F'] = '\u0628\u0645';
	    t['\uFCA0'] = '\u0628\u0647';
	    t['\uFCA1'] = '\u062A\u062C';
	    t['\uFCA2'] = '\u062A\u062D';
	    t['\uFCA3'] = '\u062A\u062E';
	    t['\uFCA4'] = '\u062A\u0645';
	    t['\uFCA5'] = '\u062A\u0647';
	    t['\uFCA6'] = '\u062B\u0645';
	    t['\uFCA7'] = '\u062C\u062D';
	    t['\uFCA8'] = '\u062C\u0645';
	    t['\uFCA9'] = '\u062D\u062C';
	    t['\uFCAA'] = '\u062D\u0645';
	    t['\uFCAB'] = '\u062E\u062C';
	    t['\uFCAC'] = '\u062E\u0645';
	    t['\uFCAD'] = '\u0633\u062C';
	    t['\uFCAE'] = '\u0633\u062D';
	    t['\uFCAF'] = '\u0633\u062E';
	    t['\uFCB0'] = '\u0633\u0645';
	    t['\uFCB1'] = '\u0635\u062D';
	    t['\uFCB2'] = '\u0635\u062E';
	    t['\uFCB3'] = '\u0635\u0645';
	    t['\uFCB4'] = '\u0636\u062C';
	    t['\uFCB5'] = '\u0636\u062D';
	    t['\uFCB6'] = '\u0636\u062E';
	    t['\uFCB7'] = '\u0636\u0645';
	    t['\uFCB8'] = '\u0637\u062D';
	    t['\uFCB9'] = '\u0638\u0645';
	    t['\uFCBA'] = '\u0639\u062C';
	    t['\uFCBB'] = '\u0639\u0645';
	    t['\uFCBC'] = '\u063A\u062C';
	    t['\uFCBD'] = '\u063A\u0645';
	    t['\uFCBE'] = '\u0641\u062C';
	    t['\uFCBF'] = '\u0641\u062D';
	    t['\uFCC0'] = '\u0641\u062E';
	    t['\uFCC1'] = '\u0641\u0645';
	    t['\uFCC2'] = '\u0642\u062D';
	    t['\uFCC3'] = '\u0642\u0645';
	    t['\uFCC4'] = '\u0643\u062C';
	    t['\uFCC5'] = '\u0643\u062D';
	    t['\uFCC6'] = '\u0643\u062E';
	    t['\uFCC7'] = '\u0643\u0644';
	    t['\uFCC8'] = '\u0643\u0645';
	    t['\uFCC9'] = '\u0644\u062C';
	    t['\uFCCA'] = '\u0644\u062D';
	    t['\uFCCB'] = '\u0644\u062E';
	    t['\uFCCC'] = '\u0644\u0645';
	    t['\uFCCD'] = '\u0644\u0647';
	    t['\uFCCE'] = '\u0645\u062C';
	    t['\uFCCF'] = '\u0645\u062D';
	    t['\uFCD0'] = '\u0645\u062E';
	    t['\uFCD1'] = '\u0645\u0645';
	    t['\uFCD2'] = '\u0646\u062C';
	    t['\uFCD3'] = '\u0646\u062D';
	    t['\uFCD4'] = '\u0646\u062E';
	    t['\uFCD5'] = '\u0646\u0645';
	    t['\uFCD6'] = '\u0646\u0647';
	    t['\uFCD7'] = '\u0647\u062C';
	    t['\uFCD8'] = '\u0647\u0645';
	    t['\uFCD9'] = '\u0647\u0670';
	    t['\uFCDA'] = '\u064A\u062C';
	    t['\uFCDB'] = '\u064A\u062D';
	    t['\uFCDC'] = '\u064A\u062E';
	    t['\uFCDD'] = '\u064A\u0645';
	    t['\uFCDE'] = '\u064A\u0647';
	    t['\uFCDF'] = '\u0626\u0645';
	    t['\uFCE0'] = '\u0626\u0647';
	    t['\uFCE1'] = '\u0628\u0645';
	    t['\uFCE2'] = '\u0628\u0647';
	    t['\uFCE3'] = '\u062A\u0645';
	    t['\uFCE4'] = '\u062A\u0647';
	    t['\uFCE5'] = '\u062B\u0645';
	    t['\uFCE6'] = '\u062B\u0647';
	    t['\uFCE7'] = '\u0633\u0645';
	    t['\uFCE8'] = '\u0633\u0647';
	    t['\uFCE9'] = '\u0634\u0645';
	    t['\uFCEA'] = '\u0634\u0647';
	    t['\uFCEB'] = '\u0643\u0644';
	    t['\uFCEC'] = '\u0643\u0645';
	    t['\uFCED'] = '\u0644\u0645';
	    t['\uFCEE'] = '\u0646\u0645';
	    t['\uFCEF'] = '\u0646\u0647';
	    t['\uFCF0'] = '\u064A\u0645';
	    t['\uFCF1'] = '\u064A\u0647';
	    t['\uFCF2'] = '\u0640\u064E\u0651';
	    t['\uFCF3'] = '\u0640\u064F\u0651';
	    t['\uFCF4'] = '\u0640\u0650\u0651';
	    t['\uFCF5'] = '\u0637\u0649';
	    t['\uFCF6'] = '\u0637\u064A';
	    t['\uFCF7'] = '\u0639\u0649';
	    t['\uFCF8'] = '\u0639\u064A';
	    t['\uFCF9'] = '\u063A\u0649';
	    t['\uFCFA'] = '\u063A\u064A';
	    t['\uFCFB'] = '\u0633\u0649';
	    t['\uFCFC'] = '\u0633\u064A';
	    t['\uFCFD'] = '\u0634\u0649';
	    t['\uFCFE'] = '\u0634\u064A';
	    t['\uFCFF'] = '\u062D\u0649';
	    t['\uFD00'] = '\u062D\u064A';
	    t['\uFD01'] = '\u062C\u0649';
	    t['\uFD02'] = '\u062C\u064A';
	    t['\uFD03'] = '\u062E\u0649';
	    t['\uFD04'] = '\u062E\u064A';
	    t['\uFD05'] = '\u0635\u0649';
	    t['\uFD06'] = '\u0635\u064A';
	    t['\uFD07'] = '\u0636\u0649';
	    t['\uFD08'] = '\u0636\u064A';
	    t['\uFD09'] = '\u0634\u062C';
	    t['\uFD0A'] = '\u0634\u062D';
	    t['\uFD0B'] = '\u0634\u062E';
	    t['\uFD0C'] = '\u0634\u0645';
	    t['\uFD0D'] = '\u0634\u0631';
	    t['\uFD0E'] = '\u0633\u0631';
	    t['\uFD0F'] = '\u0635\u0631';
	    t['\uFD10'] = '\u0636\u0631';
	    t['\uFD11'] = '\u0637\u0649';
	    t['\uFD12'] = '\u0637\u064A';
	    t['\uFD13'] = '\u0639\u0649';
	    t['\uFD14'] = '\u0639\u064A';
	    t['\uFD15'] = '\u063A\u0649';
	    t['\uFD16'] = '\u063A\u064A';
	    t['\uFD17'] = '\u0633\u0649';
	    t['\uFD18'] = '\u0633\u064A';
	    t['\uFD19'] = '\u0634\u0649';
	    t['\uFD1A'] = '\u0634\u064A';
	    t['\uFD1B'] = '\u062D\u0649';
	    t['\uFD1C'] = '\u062D\u064A';
	    t['\uFD1D'] = '\u062C\u0649';
	    t['\uFD1E'] = '\u062C\u064A';
	    t['\uFD1F'] = '\u062E\u0649';
	    t['\uFD20'] = '\u062E\u064A';
	    t['\uFD21'] = '\u0635\u0649';
	    t['\uFD22'] = '\u0635\u064A';
	    t['\uFD23'] = '\u0636\u0649';
	    t['\uFD24'] = '\u0636\u064A';
	    t['\uFD25'] = '\u0634\u062C';
	    t['\uFD26'] = '\u0634\u062D';
	    t['\uFD27'] = '\u0634\u062E';
	    t['\uFD28'] = '\u0634\u0645';
	    t['\uFD29'] = '\u0634\u0631';
	    t['\uFD2A'] = '\u0633\u0631';
	    t['\uFD2B'] = '\u0635\u0631';
	    t['\uFD2C'] = '\u0636\u0631';
	    t['\uFD2D'] = '\u0634\u062C';
	    t['\uFD2E'] = '\u0634\u062D';
	    t['\uFD2F'] = '\u0634\u062E';
	    t['\uFD30'] = '\u0634\u0645';
	    t['\uFD31'] = '\u0633\u0647';
	    t['\uFD32'] = '\u0634\u0647';
	    t['\uFD33'] = '\u0637\u0645';
	    t['\uFD34'] = '\u0633\u062C';
	    t['\uFD35'] = '\u0633\u062D';
	    t['\uFD36'] = '\u0633\u062E';
	    t['\uFD37'] = '\u0634\u062C';
	    t['\uFD38'] = '\u0634\u062D';
	    t['\uFD39'] = '\u0634\u062E';
	    t['\uFD3A'] = '\u0637\u0645';
	    t['\uFD3B'] = '\u0638\u0645';
	    t['\uFD3C'] = '\u0627\u064B';
	    t['\uFD3D'] = '\u0627\u064B';
	    t['\uFD50'] = '\u062A\u062C\u0645';
	    t['\uFD51'] = '\u062A\u062D\u062C';
	    t['\uFD52'] = '\u062A\u062D\u062C';
	    t['\uFD53'] = '\u062A\u062D\u0645';
	    t['\uFD54'] = '\u062A\u062E\u0645';
	    t['\uFD55'] = '\u062A\u0645\u062C';
	    t['\uFD56'] = '\u062A\u0645\u062D';
	    t['\uFD57'] = '\u062A\u0645\u062E';
	    t['\uFD58'] = '\u062C\u0645\u062D';
	    t['\uFD59'] = '\u062C\u0645\u062D';
	    t['\uFD5A'] = '\u062D\u0645\u064A';
	    t['\uFD5B'] = '\u062D\u0645\u0649';
	    t['\uFD5C'] = '\u0633\u062D\u062C';
	    t['\uFD5D'] = '\u0633\u062C\u062D';
	    t['\uFD5E'] = '\u0633\u062C\u0649';
	    t['\uFD5F'] = '\u0633\u0645\u062D';
	    t['\uFD60'] = '\u0633\u0645\u062D';
	    t['\uFD61'] = '\u0633\u0645\u062C';
	    t['\uFD62'] = '\u0633\u0645\u0645';
	    t['\uFD63'] = '\u0633\u0645\u0645';
	    t['\uFD64'] = '\u0635\u062D\u062D';
	    t['\uFD65'] = '\u0635\u062D\u062D';
	    t['\uFD66'] = '\u0635\u0645\u0645';
	    t['\uFD67'] = '\u0634\u062D\u0645';
	    t['\uFD68'] = '\u0634\u062D\u0645';
	    t['\uFD69'] = '\u0634\u062C\u064A';
	    t['\uFD6A'] = '\u0634\u0645\u062E';
	    t['\uFD6B'] = '\u0634\u0645\u062E';
	    t['\uFD6C'] = '\u0634\u0645\u0645';
	    t['\uFD6D'] = '\u0634\u0645\u0645';
	    t['\uFD6E'] = '\u0636\u062D\u0649';
	    t['\uFD6F'] = '\u0636\u062E\u0645';
	    t['\uFD70'] = '\u0636\u062E\u0645';
	    t['\uFD71'] = '\u0637\u0645\u062D';
	    t['\uFD72'] = '\u0637\u0645\u062D';
	    t['\uFD73'] = '\u0637\u0645\u0645';
	    t['\uFD74'] = '\u0637\u0645\u064A';
	    t['\uFD75'] = '\u0639\u062C\u0645';
	    t['\uFD76'] = '\u0639\u0645\u0645';
	    t['\uFD77'] = '\u0639\u0645\u0645';
	    t['\uFD78'] = '\u0639\u0645\u0649';
	    t['\uFD79'] = '\u063A\u0645\u0645';
	    t['\uFD7A'] = '\u063A\u0645\u064A';
	    t['\uFD7B'] = '\u063A\u0645\u0649';
	    t['\uFD7C'] = '\u0641\u062E\u0645';
	    t['\uFD7D'] = '\u0641\u062E\u0645';
	    t['\uFD7E'] = '\u0642\u0645\u062D';
	    t['\uFD7F'] = '\u0642\u0645\u0645';
	    t['\uFD80'] = '\u0644\u062D\u0645';
	    t['\uFD81'] = '\u0644\u062D\u064A';
	    t['\uFD82'] = '\u0644\u062D\u0649';
	    t['\uFD83'] = '\u0644\u062C\u062C';
	    t['\uFD84'] = '\u0644\u062C\u062C';
	    t['\uFD85'] = '\u0644\u062E\u0645';
	    t['\uFD86'] = '\u0644\u062E\u0645';
	    t['\uFD87'] = '\u0644\u0645\u062D';
	    t['\uFD88'] = '\u0644\u0645\u062D';
	    t['\uFD89'] = '\u0645\u062D\u062C';
	    t['\uFD8A'] = '\u0645\u062D\u0645';
	    t['\uFD8B'] = '\u0645\u062D\u064A';
	    t['\uFD8C'] = '\u0645\u062C\u062D';
	    t['\uFD8D'] = '\u0645\u062C\u0645';
	    t['\uFD8E'] = '\u0645\u062E\u062C';
	    t['\uFD8F'] = '\u0645\u062E\u0645';
	    t['\uFD92'] = '\u0645\u062C\u062E';
	    t['\uFD93'] = '\u0647\u0645\u062C';
	    t['\uFD94'] = '\u0647\u0645\u0645';
	    t['\uFD95'] = '\u0646\u062D\u0645';
	    t['\uFD96'] = '\u0646\u062D\u0649';
	    t['\uFD97'] = '\u0646\u062C\u0645';
	    t['\uFD98'] = '\u0646\u062C\u0645';
	    t['\uFD99'] = '\u0646\u062C\u0649';
	    t['\uFD9A'] = '\u0646\u0645\u064A';
	    t['\uFD9B'] = '\u0646\u0645\u0649';
	    t['\uFD9C'] = '\u064A\u0645\u0645';
	    t['\uFD9D'] = '\u064A\u0645\u0645';
	    t['\uFD9E'] = '\u0628\u062E\u064A';
	    t['\uFD9F'] = '\u062A\u062C\u064A';
	    t['\uFDA0'] = '\u062A\u062C\u0649';
	    t['\uFDA1'] = '\u062A\u062E\u064A';
	    t['\uFDA2'] = '\u062A\u062E\u0649';
	    t['\uFDA3'] = '\u062A\u0645\u064A';
	    t['\uFDA4'] = '\u062A\u0645\u0649';
	    t['\uFDA5'] = '\u062C\u0645\u064A';
	    t['\uFDA6'] = '\u062C\u062D\u0649';
	    t['\uFDA7'] = '\u062C\u0645\u0649';
	    t['\uFDA8'] = '\u0633\u062E\u0649';
	    t['\uFDA9'] = '\u0635\u062D\u064A';
	    t['\uFDAA'] = '\u0634\u062D\u064A';
	    t['\uFDAB'] = '\u0636\u062D\u064A';
	    t['\uFDAC'] = '\u0644\u062C\u064A';
	    t['\uFDAD'] = '\u0644\u0645\u064A';
	    t['\uFDAE'] = '\u064A\u062D\u064A';
	    t['\uFDAF'] = '\u064A\u062C\u064A';
	    t['\uFDB0'] = '\u064A\u0645\u064A';
	    t['\uFDB1'] = '\u0645\u0645\u064A';
	    t['\uFDB2'] = '\u0642\u0645\u064A';
	    t['\uFDB3'] = '\u0646\u062D\u064A';
	    t['\uFDB4'] = '\u0642\u0645\u062D';
	    t['\uFDB5'] = '\u0644\u062D\u0645';
	    t['\uFDB6'] = '\u0639\u0645\u064A';
	    t['\uFDB7'] = '\u0643\u0645\u064A';
	    t['\uFDB8'] = '\u0646\u062C\u062D';
	    t['\uFDB9'] = '\u0645\u062E\u064A';
	    t['\uFDBA'] = '\u0644\u062C\u0645';
	    t['\uFDBB'] = '\u0643\u0645\u0645';
	    t['\uFDBC'] = '\u0644\u062C\u0645';
	    t['\uFDBD'] = '\u0646\u062C\u062D';
	    t['\uFDBE'] = '\u062C\u062D\u064A';
	    t['\uFDBF'] = '\u062D\u062C\u064A';
	    t['\uFDC0'] = '\u0645\u062C\u064A';
	    t['\uFDC1'] = '\u0641\u0645\u064A';
	    t['\uFDC2'] = '\u0628\u062D\u064A';
	    t['\uFDC3'] = '\u0643\u0645\u0645';
	    t['\uFDC4'] = '\u0639\u062C\u0645';
	    t['\uFDC5'] = '\u0635\u0645\u0645';
	    t['\uFDC6'] = '\u0633\u062E\u064A';
	    t['\uFDC7'] = '\u0646\u062C\u064A';
	    t['\uFE49'] = '\u203E';
	    t['\uFE4A'] = '\u203E';
	    t['\uFE4B'] = '\u203E';
	    t['\uFE4C'] = '\u203E';
	    t['\uFE4D'] = '\u005F';
	    t['\uFE4E'] = '\u005F';
	    t['\uFE4F'] = '\u005F';
	    t['\uFE80'] = '\u0621';
	    t['\uFE81'] = '\u0622';
	    t['\uFE82'] = '\u0622';
	    t['\uFE83'] = '\u0623';
	    t['\uFE84'] = '\u0623';
	    t['\uFE85'] = '\u0624';
	    t['\uFE86'] = '\u0624';
	    t['\uFE87'] = '\u0625';
	    t['\uFE88'] = '\u0625';
	    t['\uFE89'] = '\u0626';
	    t['\uFE8A'] = '\u0626';
	    t['\uFE8B'] = '\u0626';
	    t['\uFE8C'] = '\u0626';
	    t['\uFE8D'] = '\u0627';
	    t['\uFE8E'] = '\u0627';
	    t['\uFE8F'] = '\u0628';
	    t['\uFE90'] = '\u0628';
	    t['\uFE91'] = '\u0628';
	    t['\uFE92'] = '\u0628';
	    t['\uFE93'] = '\u0629';
	    t['\uFE94'] = '\u0629';
	    t['\uFE95'] = '\u062A';
	    t['\uFE96'] = '\u062A';
	    t['\uFE97'] = '\u062A';
	    t['\uFE98'] = '\u062A';
	    t['\uFE99'] = '\u062B';
	    t['\uFE9A'] = '\u062B';
	    t['\uFE9B'] = '\u062B';
	    t['\uFE9C'] = '\u062B';
	    t['\uFE9D'] = '\u062C';
	    t['\uFE9E'] = '\u062C';
	    t['\uFE9F'] = '\u062C';
	    t['\uFEA0'] = '\u062C';
	    t['\uFEA1'] = '\u062D';
	    t['\uFEA2'] = '\u062D';
	    t['\uFEA3'] = '\u062D';
	    t['\uFEA4'] = '\u062D';
	    t['\uFEA5'] = '\u062E';
	    t['\uFEA6'] = '\u062E';
	    t['\uFEA7'] = '\u062E';
	    t['\uFEA8'] = '\u062E';
	    t['\uFEA9'] = '\u062F';
	    t['\uFEAA'] = '\u062F';
	    t['\uFEAB'] = '\u0630';
	    t['\uFEAC'] = '\u0630';
	    t['\uFEAD'] = '\u0631';
	    t['\uFEAE'] = '\u0631';
	    t['\uFEAF'] = '\u0632';
	    t['\uFEB0'] = '\u0632';
	    t['\uFEB1'] = '\u0633';
	    t['\uFEB2'] = '\u0633';
	    t['\uFEB3'] = '\u0633';
	    t['\uFEB4'] = '\u0633';
	    t['\uFEB5'] = '\u0634';
	    t['\uFEB6'] = '\u0634';
	    t['\uFEB7'] = '\u0634';
	    t['\uFEB8'] = '\u0634';
	    t['\uFEB9'] = '\u0635';
	    t['\uFEBA'] = '\u0635';
	    t['\uFEBB'] = '\u0635';
	    t['\uFEBC'] = '\u0635';
	    t['\uFEBD'] = '\u0636';
	    t['\uFEBE'] = '\u0636';
	    t['\uFEBF'] = '\u0636';
	    t['\uFEC0'] = '\u0636';
	    t['\uFEC1'] = '\u0637';
	    t['\uFEC2'] = '\u0637';
	    t['\uFEC3'] = '\u0637';
	    t['\uFEC4'] = '\u0637';
	    t['\uFEC5'] = '\u0638';
	    t['\uFEC6'] = '\u0638';
	    t['\uFEC7'] = '\u0638';
	    t['\uFEC8'] = '\u0638';
	    t['\uFEC9'] = '\u0639';
	    t['\uFECA'] = '\u0639';
	    t['\uFECB'] = '\u0639';
	    t['\uFECC'] = '\u0639';
	    t['\uFECD'] = '\u063A';
	    t['\uFECE'] = '\u063A';
	    t['\uFECF'] = '\u063A';
	    t['\uFED0'] = '\u063A';
	    t['\uFED1'] = '\u0641';
	    t['\uFED2'] = '\u0641';
	    t['\uFED3'] = '\u0641';
	    t['\uFED4'] = '\u0641';
	    t['\uFED5'] = '\u0642';
	    t['\uFED6'] = '\u0642';
	    t['\uFED7'] = '\u0642';
	    t['\uFED8'] = '\u0642';
	    t['\uFED9'] = '\u0643';
	    t['\uFEDA'] = '\u0643';
	    t['\uFEDB'] = '\u0643';
	    t['\uFEDC'] = '\u0643';
	    t['\uFEDD'] = '\u0644';
	    t['\uFEDE'] = '\u0644';
	    t['\uFEDF'] = '\u0644';
	    t['\uFEE0'] = '\u0644';
	    t['\uFEE1'] = '\u0645';
	    t['\uFEE2'] = '\u0645';
	    t['\uFEE3'] = '\u0645';
	    t['\uFEE4'] = '\u0645';
	    t['\uFEE5'] = '\u0646';
	    t['\uFEE6'] = '\u0646';
	    t['\uFEE7'] = '\u0646';
	    t['\uFEE8'] = '\u0646';
	    t['\uFEE9'] = '\u0647';
	    t['\uFEEA'] = '\u0647';
	    t['\uFEEB'] = '\u0647';
	    t['\uFEEC'] = '\u0647';
	    t['\uFEED'] = '\u0648';
	    t['\uFEEE'] = '\u0648';
	    t['\uFEEF'] = '\u0649';
	    t['\uFEF0'] = '\u0649';
	    t['\uFEF1'] = '\u064A';
	    t['\uFEF2'] = '\u064A';
	    t['\uFEF3'] = '\u064A';
	    t['\uFEF4'] = '\u064A';
	    t['\uFEF5'] = '\u0644\u0622';
	    t['\uFEF6'] = '\u0644\u0622';
	    t['\uFEF7'] = '\u0644\u0623';
	    t['\uFEF8'] = '\u0644\u0623';
	    t['\uFEF9'] = '\u0644\u0625';
	    t['\uFEFA'] = '\u0644\u0625';
	    t['\uFEFB'] = '\u0644\u0627';
	    t['\uFEFC'] = '\u0644\u0627';
	   });
	   function reverseIfRtl(chars) {
	    var charsLength = chars.length;
	    if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {
	     return chars;
	    }
	    var s = '';
	    for (var ii = charsLength - 1; ii >= 0; ii--) {
	     s += chars[ii];
	    }
	    return s;
	   }
	   exports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;
	   exports.reverseIfRtl = reverseIfRtl;
	   exports.getUnicodeRangeFor = getUnicodeRangeFor;
	   exports.getNormalizedUnicodes = getNormalizedUnicodes;
	   exports.getUnicodeForGlyph = getUnicodeForGlyph;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsDisplayDOMUtils = {}, root.pdfjsSharedUtil);
	  }(this, function (exports, sharedUtil) {
	   var removeNullCharacters = sharedUtil.removeNullCharacters;
	   var warn = sharedUtil.warn;
	   var deprecated = sharedUtil.deprecated;
	   var createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;
	   var DEFAULT_LINK_REL = 'noopener noreferrer nofollow';
	   var CustomStyle = function CustomStyleClosure() {
	    var prefixes = [
	     'ms',
	     'Moz',
	     'Webkit',
	     'O'
	    ];
	    var _cache = Object.create(null);
	    function CustomStyle() {
	    }
	    CustomStyle.getProp = function get(propName, element) {
	     if (arguments.length === 1 && typeof _cache[propName] === 'string') {
	      return _cache[propName];
	     }
	     element = element || document.documentElement;
	     var style = element.style, prefixed, uPropName;
	     if (typeof style[propName] === 'string') {
	      return _cache[propName] = propName;
	     }
	     uPropName = propName.charAt(0).toUpperCase() + propName.slice(1);
	     for (var i = 0, l = prefixes.length; i < l; i++) {
	      prefixed = prefixes[i] + uPropName;
	      if (typeof style[prefixed] === 'string') {
	       return _cache[propName] = prefixed;
	      }
	     }
	     return _cache[propName] = 'undefined';
	    };
	    CustomStyle.setProp = function set(propName, element, str) {
	     var prop = this.getProp(propName);
	     if (prop !== 'undefined') {
	      element.style[prop] = str;
	     }
	    };
	    return CustomStyle;
	   }();
	   var hasCanvasTypedArrays;
	   hasCanvasTypedArrays = function hasCanvasTypedArrays() {
	    var canvas = document.createElement('canvas');
	    canvas.width = canvas.height = 1;
	    var ctx = canvas.getContext('2d');
	    var imageData = ctx.createImageData(1, 1);
	    return typeof imageData.data.buffer !== 'undefined';
	   };
	   var LinkTarget = {
	    NONE: 0,
	    SELF: 1,
	    BLANK: 2,
	    PARENT: 3,
	    TOP: 4
	   };
	   var LinkTargetStringMap = [
	    '',
	    '_self',
	    '_blank',
	    '_parent',
	    '_top'
	   ];
	   function addLinkAttributes(link, params) {
	    var url = params && params.url;
	    link.href = link.title = url ? removeNullCharacters(url) : '';
	    if (url) {
	     var target = params.target;
	     if (typeof target === 'undefined') {
	      target = getDefaultSetting('externalLinkTarget');
	     }
	     link.target = LinkTargetStringMap[target];
	     var rel = params.rel;
	     if (typeof rel === 'undefined') {
	      rel = getDefaultSetting('externalLinkRel');
	     }
	     link.rel = rel;
	    }
	   }
	   function getFilenameFromUrl(url) {
	    var anchor = url.indexOf('#');
	    var query = url.indexOf('?');
	    var end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);
	    return url.substring(url.lastIndexOf('/', end) + 1, end);
	   }
	   function getDefaultSetting(id) {
	    var globalSettings = sharedUtil.globalScope.PDFJS;
	    switch (id) {
	    case 'pdfBug':
	     return globalSettings ? globalSettings.pdfBug : false;
	    case 'disableAutoFetch':
	     return globalSettings ? globalSettings.disableAutoFetch : false;
	    case 'disableStream':
	     return globalSettings ? globalSettings.disableStream : false;
	    case 'disableRange':
	     return globalSettings ? globalSettings.disableRange : false;
	    case 'disableFontFace':
	     return globalSettings ? globalSettings.disableFontFace : false;
	    case 'disableCreateObjectURL':
	     return globalSettings ? globalSettings.disableCreateObjectURL : false;
	    case 'disableWebGL':
	     return globalSettings ? globalSettings.disableWebGL : true;
	    case 'cMapUrl':
	     return globalSettings ? globalSettings.cMapUrl : null;
	    case 'cMapPacked':
	     return globalSettings ? globalSettings.cMapPacked : false;
	    case 'postMessageTransfers':
	     return globalSettings ? globalSettings.postMessageTransfers : true;
	    case 'workerSrc':
	     return globalSettings ? globalSettings.workerSrc : null;
	    case 'disableWorker':
	     return globalSettings ? globalSettings.disableWorker : false;
	    case 'maxImageSize':
	     return globalSettings ? globalSettings.maxImageSize : -1;
	    case 'imageResourcesPath':
	     return globalSettings ? globalSettings.imageResourcesPath : '';
	    case 'isEvalSupported':
	     return globalSettings ? globalSettings.isEvalSupported : true;
	    case 'externalLinkTarget':
	     if (!globalSettings) {
	      return LinkTarget.NONE;
	     }
	     switch (globalSettings.externalLinkTarget) {
	     case LinkTarget.NONE:
	     case LinkTarget.SELF:
	     case LinkTarget.BLANK:
	     case LinkTarget.PARENT:
	     case LinkTarget.TOP:
	      return globalSettings.externalLinkTarget;
	     }
	     warn('PDFJS.externalLinkTarget is invalid: ' + globalSettings.externalLinkTarget);
	     globalSettings.externalLinkTarget = LinkTarget.NONE;
	     return LinkTarget.NONE;
	    case 'externalLinkRel':
	     return globalSettings ? globalSettings.externalLinkRel : DEFAULT_LINK_REL;
	    case 'enableStats':
	     return !!(globalSettings && globalSettings.enableStats);
	    default:
	     throw new Error('Unknown default setting: ' + id);
	    }
	   }
	   function isExternalLinkTargetSet() {
	    var externalLinkTarget = getDefaultSetting('externalLinkTarget');
	    switch (externalLinkTarget) {
	    case LinkTarget.NONE:
	     return false;
	    case LinkTarget.SELF:
	    case LinkTarget.BLANK:
	    case LinkTarget.PARENT:
	    case LinkTarget.TOP:
	     return true;
	    }
	   }
	   function isValidUrl(url, allowRelative) {
	    deprecated('isValidUrl(), please use createValidAbsoluteUrl() instead.');
	    var baseUrl = allowRelative ? 'http://example.com' : null;
	    return createValidAbsoluteUrl(url, baseUrl) !== null;
	   }
	   exports.CustomStyle = CustomStyle;
	   exports.addLinkAttributes = addLinkAttributes;
	   exports.isExternalLinkTargetSet = isExternalLinkTargetSet;
	   exports.isValidUrl = isValidUrl;
	   exports.getFilenameFromUrl = getFilenameFromUrl;
	   exports.LinkTarget = LinkTarget;
	   exports.hasCanvasTypedArrays = hasCanvasTypedArrays;
	   exports.getDefaultSetting = getDefaultSetting;
	   exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsDisplayFontLoader = {}, root.pdfjsSharedUtil);
	  }(this, function (exports, sharedUtil) {
	   var assert = sharedUtil.assert;
	   var bytesToString = sharedUtil.bytesToString;
	   var string32 = sharedUtil.string32;
	   var shadow = sharedUtil.shadow;
	   var warn = sharedUtil.warn;
	   function FontLoader(docId) {
	    this.docId = docId;
	    this.styleElement = null;
	    this.nativeFontFaces = [];
	    this.loadTestFontId = 0;
	    this.loadingContext = {
	     requests: [],
	     nextRequestId: 0
	    };
	   }
	   FontLoader.prototype = {
	    insertRule: function fontLoaderInsertRule(rule) {
	     var styleElement = this.styleElement;
	     if (!styleElement) {
	      styleElement = this.styleElement = document.createElement('style');
	      styleElement.id = 'PDFJS_FONT_STYLE_TAG_' + this.docId;
	      document.documentElement.getElementsByTagName('head')[0].appendChild(styleElement);
	     }
	     var styleSheet = styleElement.sheet;
	     styleSheet.insertRule(rule, styleSheet.cssRules.length);
	    },
	    clear: function fontLoaderClear() {
	     var styleElement = this.styleElement;
	     if (styleElement) {
	      styleElement.parentNode.removeChild(styleElement);
	      styleElement = this.styleElement = null;
	     }
	     this.nativeFontFaces.forEach(function (nativeFontFace) {
	      document.fonts.delete(nativeFontFace);
	     });
	     this.nativeFontFaces.length = 0;
	    }
	   };
	   var getLoadTestFont = function () {
	    return atob('T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQ' + 'AABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwA' + 'AAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbm' + 'FtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAA' + 'AADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6A' + 'ABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAA' + 'MQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAA' + 'AAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAA' + 'AAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQ' + 'AAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMA' + 'AQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAA' + 'EAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAA' + 'AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA' + 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' + 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' + 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' + 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAA' + 'AAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgc' + 'A/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWF' + 'hYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQA' + 'AAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAg' + 'ABAAAAAAAAAAAD6AAAAAAAAA==');
	   };
	   Object.defineProperty(FontLoader.prototype, 'loadTestFont', {
	    get: function () {
	     return shadow(this, 'loadTestFont', getLoadTestFont());
	    },
	    configurable: true
	   });
	   FontLoader.prototype.addNativeFontFace = function fontLoader_addNativeFontFace(nativeFontFace) {
	    this.nativeFontFaces.push(nativeFontFace);
	    document.fonts.add(nativeFontFace);
	   };
	   FontLoader.prototype.bind = function fontLoaderBind(fonts, callback) {
	    var rules = [];
	    var fontsToLoad = [];
	    var fontLoadPromises = [];
	    var getNativeFontPromise = function (nativeFontFace) {
	     return nativeFontFace.loaded.catch(function (e) {
	      warn('Failed to load font "' + nativeFontFace.family + '": ' + e);
	     });
	    };
	    var isFontLoadingAPISupported = FontLoader.isFontLoadingAPISupported && !FontLoader.isSyncFontLoadingSupported;
	    for (var i = 0, ii = fonts.length; i < ii; i++) {
	     var font = fonts[i];
	     if (font.attached || font.loading === false) {
	      continue;
	     }
	     font.attached = true;
	     if (isFontLoadingAPISupported) {
	      var nativeFontFace = font.createNativeFontFace();
	      if (nativeFontFace) {
	       this.addNativeFontFace(nativeFontFace);
	       fontLoadPromises.push(getNativeFontPromise(nativeFontFace));
	      }
	     } else {
	      var rule = font.createFontFaceRule();
	      if (rule) {
	       this.insertRule(rule);
	       rules.push(rule);
	       fontsToLoad.push(font);
	      }
	     }
	    }
	    var request = this.queueLoadingCallback(callback);
	    if (isFontLoadingAPISupported) {
	     Promise.all(fontLoadPromises).then(function () {
	      request.complete();
	     });
	    } else if (rules.length > 0 && !FontLoader.isSyncFontLoadingSupported) {
	     this.prepareFontLoadEvent(rules, fontsToLoad, request);
	    } else {
	     request.complete();
	    }
	   };
	   FontLoader.prototype.queueLoadingCallback = function FontLoader_queueLoadingCallback(callback) {
	    function LoadLoader_completeRequest() {
	     assert(!request.end, 'completeRequest() cannot be called twice');
	     request.end = Date.now();
	     while (context.requests.length > 0 && context.requests[0].end) {
	      var otherRequest = context.requests.shift();
	      setTimeout(otherRequest.callback, 0);
	     }
	    }
	    var context = this.loadingContext;
	    var requestId = 'pdfjs-font-loading-' + context.nextRequestId++;
	    var request = {
	     id: requestId,
	     complete: LoadLoader_completeRequest,
	     callback: callback,
	     started: Date.now()
	    };
	    context.requests.push(request);
	    return request;
	   };
	   FontLoader.prototype.prepareFontLoadEvent = function fontLoaderPrepareFontLoadEvent(rules, fonts, request) {
	    function int32(data, offset) {
	     return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;
	    }
	    function spliceString(s, offset, remove, insert) {
	     var chunk1 = s.substr(0, offset);
	     var chunk2 = s.substr(offset + remove);
	     return chunk1 + insert + chunk2;
	    }
	    var i, ii;
	    var canvas = document.createElement('canvas');
	    canvas.width = 1;
	    canvas.height = 1;
	    var ctx = canvas.getContext('2d');
	    var called = 0;
	    function isFontReady(name, callback) {
	     called++;
	     if (called > 30) {
	      warn('Load test font never loaded.');
	      callback();
	      return;
	     }
	     ctx.font = '30px ' + name;
	     ctx.fillText('.', 0, 20);
	     var imageData = ctx.getImageData(0, 0, 1, 1);
	     if (imageData.data[3] > 0) {
	      callback();
	      return;
	     }
	     setTimeout(isFontReady.bind(null, name, callback));
	    }
	    var loadTestFontId = 'lt' + Date.now() + this.loadTestFontId++;
	    var data = this.loadTestFont;
	    var COMMENT_OFFSET = 976;
	    data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);
	    var CFF_CHECKSUM_OFFSET = 16;
	    var XXXX_VALUE = 0x58585858;
	    var checksum = int32(data, CFF_CHECKSUM_OFFSET);
	    for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {
	     checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;
	    }
	    if (i < loadTestFontId.length) {
	     checksum = checksum - XXXX_VALUE + int32(loadTestFontId + 'XXX', i) | 0;
	    }
	    data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));
	    var url = 'url(data:font/opentype;base64,' + btoa(data) + ');';
	    var rule = '@font-face { font-family:"' + loadTestFontId + '";src:' + url + '}';
	    this.insertRule(rule);
	    var names = [];
	    for (i = 0, ii = fonts.length; i < ii; i++) {
	     names.push(fonts[i].loadedName);
	    }
	    names.push(loadTestFontId);
	    var div = document.createElement('div');
	    div.setAttribute('style', 'visibility: hidden;' + 'width: 10px; height: 10px;' + 'position: absolute; top: 0px; left: 0px;');
	    for (i = 0, ii = names.length; i < ii; ++i) {
	     var span = document.createElement('span');
	     span.textContent = 'Hi';
	     span.style.fontFamily = names[i];
	     div.appendChild(span);
	    }
	    document.body.appendChild(div);
	    isFontReady(loadTestFontId, function () {
	     document.body.removeChild(div);
	     request.complete();
	    });
	   };
	   FontLoader.isFontLoadingAPISupported = typeof document !== 'undefined' && !!document.fonts;
	   var isSyncFontLoadingSupported = function isSyncFontLoadingSupported() {
	    if (typeof navigator === 'undefined') {
	     return true;
	    }
	    var supported = false;
	    var m = /Mozilla\/5.0.*?rv:(\d+).*? Gecko/.exec(navigator.userAgent);
	    if (m && m[1] >= 14) {
	     supported = true;
	    }
	    return supported;
	   };
	   Object.defineProperty(FontLoader, 'isSyncFontLoadingSupported', {
	    get: function () {
	     return shadow(FontLoader, 'isSyncFontLoadingSupported', isSyncFontLoadingSupported());
	    },
	    enumerable: true,
	    configurable: true
	   });
	   var IsEvalSupportedCached = {
	    get value() {
	     return shadow(this, 'value', sharedUtil.isEvalSupported());
	    }
	   };
	   var FontFaceObject = function FontFaceObjectClosure() {
	    function FontFaceObject(translatedData, options) {
	     this.compiledGlyphs = Object.create(null);
	     for (var i in translatedData) {
	      this[i] = translatedData[i];
	     }
	     this.options = options;
	    }
	    FontFaceObject.prototype = {
	     createNativeFontFace: function FontFaceObject_createNativeFontFace() {
	      if (!this.data) {
	       return null;
	      }
	      if (this.options.disableFontFace) {
	       this.disableFontFace = true;
	       return null;
	      }
	      var nativeFontFace = new FontFace(this.loadedName, this.data, {});
	      if (this.options.fontRegistry) {
	       this.options.fontRegistry.registerFont(this);
	      }
	      return nativeFontFace;
	     },
	     createFontFaceRule: function FontFaceObject_createFontFaceRule() {
	      if (!this.data) {
	       return null;
	      }
	      if (this.options.disableFontFace) {
	       this.disableFontFace = true;
	       return null;
	      }
	      var data = bytesToString(new Uint8Array(this.data));
	      var fontName = this.loadedName;
	      var url = 'url(data:' + this.mimetype + ';base64,' + btoa(data) + ');';
	      var rule = '@font-face { font-family:"' + fontName + '";src:' + url + '}';
	      if (this.options.fontRegistry) {
	       this.options.fontRegistry.registerFont(this, url);
	      }
	      return rule;
	     },
	     getPathGenerator: function FontFaceObject_getPathGenerator(objs, character) {
	      if (!(character in this.compiledGlyphs)) {
	       var cmds = objs.get(this.loadedName + '_path_' + character);
	       var current, i, len;
	       if (this.options.isEvalSupported && IsEvalSupportedCached.value) {
	        var args, js = '';
	        for (i = 0, len = cmds.length; i < len; i++) {
	         current = cmds[i];
	         if (current.args !== undefined) {
	          args = current.args.join(',');
	         } else {
	          args = '';
	         }
	         js += 'c.' + current.cmd + '(' + args + ');\n';
	        }
	        this.compiledGlyphs[character] = new Function('c', 'size', js);
	       } else {
	        this.compiledGlyphs[character] = function (c, size) {
	         for (i = 0, len = cmds.length; i < len; i++) {
	          current = cmds[i];
	          if (current.cmd === 'scale') {
	           current.args = [
	            size,
	            -size
	           ];
	          }
	          c[current.cmd].apply(c, current.args);
	         }
	        };
	       }
	      }
	      return this.compiledGlyphs[character];
	     }
	    };
	    return FontFaceObject;
	   }();
	   exports.FontFaceObject = FontFaceObject;
	   exports.FontLoader = FontLoader;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsDisplayMetadata = {}, root.pdfjsSharedUtil);
	  }(this, function (exports, sharedUtil) {
	   var error = sharedUtil.error;
	   function fixMetadata(meta) {
	    return meta.replace(/>\\376\\377([^<]+)/g, function (all, codes) {
	     var bytes = codes.replace(/\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {
	      return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);
	     });
	     var chars = '';
	     for (var i = 0; i < bytes.length; i += 2) {
	      var code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);
	      chars += code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38 ? String.fromCharCode(code) : '&#x' + (0x10000 + code).toString(16).substring(1) + ';';
	     }
	     return '>' + chars;
	    });
	   }
	   function Metadata(meta) {
	    if (typeof meta === 'string') {
	     meta = fixMetadata(meta);
	     var parser = new DOMParser();
	     meta = parser.parseFromString(meta, 'application/xml');
	    } else if (!(meta instanceof Document)) {
	     error('Metadata: Invalid metadata object');
	    }
	    this.metaDocument = meta;
	    this.metadata = Object.create(null);
	    this.parse();
	   }
	   Metadata.prototype = {
	    parse: function Metadata_parse() {
	     var doc = this.metaDocument;
	     var rdf = doc.documentElement;
	     if (rdf.nodeName.toLowerCase() !== 'rdf:rdf') {
	      rdf = rdf.firstChild;
	      while (rdf && rdf.nodeName.toLowerCase() !== 'rdf:rdf') {
	       rdf = rdf.nextSibling;
	      }
	     }
	     var nodeName = rdf ? rdf.nodeName.toLowerCase() : null;
	     if (!rdf || nodeName !== 'rdf:rdf' || !rdf.hasChildNodes()) {
	      return;
	     }
	     var children = rdf.childNodes, desc, entry, name, i, ii, length, iLength;
	     for (i = 0, length = children.length; i < length; i++) {
	      desc = children[i];
	      if (desc.nodeName.toLowerCase() !== 'rdf:description') {
	       continue;
	      }
	      for (ii = 0, iLength = desc.childNodes.length; ii < iLength; ii++) {
	       if (desc.childNodes[ii].nodeName.toLowerCase() !== '#text') {
	        entry = desc.childNodes[ii];
	        name = entry.nodeName.toLowerCase();
	        this.metadata[name] = entry.textContent.trim();
	       }
	      }
	     }
	    },
	    get: function Metadata_get(name) {
	     return this.metadata[name] || null;
	    },
	    has: function Metadata_has(name) {
	     return typeof this.metadata[name] !== 'undefined';
	    }
	   };
	   exports.Metadata = Metadata;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsDisplaySVG = {}, root.pdfjsSharedUtil);
	  }(this, function (exports, sharedUtil) {
	   var FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;
	   var IDENTITY_MATRIX = sharedUtil.IDENTITY_MATRIX;
	   var ImageKind = sharedUtil.ImageKind;
	   var OPS = sharedUtil.OPS;
	   var Util = sharedUtil.Util;
	   var isNum = sharedUtil.isNum;
	   var isArray = sharedUtil.isArray;
	   var warn = sharedUtil.warn;
	   var createObjectURL = sharedUtil.createObjectURL;
	   var SVG_DEFAULTS = {
	    fontStyle: 'normal',
	    fontWeight: 'normal',
	    fillColor: '#000000'
	   };
	   var convertImgDataToPng = function convertImgDataToPngClosure() {
	    var PNG_HEADER = new Uint8Array([
	     0x89,
	     0x50,
	     0x4e,
	     0x47,
	     0x0d,
	     0x0a,
	     0x1a,
	     0x0a
	    ]);
	    var CHUNK_WRAPPER_SIZE = 12;
	    var crcTable = new Int32Array(256);
	    for (var i = 0; i < 256; i++) {
	     var c = i;
	     for (var h = 0; h < 8; h++) {
	      if (c & 1) {
	       c = 0xedB88320 ^ c >> 1 & 0x7fffffff;
	      } else {
	       c = c >> 1 & 0x7fffffff;
	      }
	     }
	     crcTable[i] = c;
	    }
	    function crc32(data, start, end) {
	     var crc = -1;
	     for (var i = start; i < end; i++) {
	      var a = (crc ^ data[i]) & 0xff;
	      var b = crcTable[a];
	      crc = crc >>> 8 ^ b;
	     }
	     return crc ^ -1;
	    }
	    function writePngChunk(type, body, data, offset) {
	     var p = offset;
	     var len = body.length;
	     data[p] = len >> 24 & 0xff;
	     data[p + 1] = len >> 16 & 0xff;
	     data[p + 2] = len >> 8 & 0xff;
	     data[p + 3] = len & 0xff;
	     p += 4;
	     data[p] = type.charCodeAt(0) & 0xff;
	     data[p + 1] = type.charCodeAt(1) & 0xff;
	     data[p + 2] = type.charCodeAt(2) & 0xff;
	     data[p + 3] = type.charCodeAt(3) & 0xff;
	     p += 4;
	     data.set(body, p);
	     p += body.length;
	     var crc = crc32(data, offset + 4, p);
	     data[p] = crc >> 24 & 0xff;
	     data[p + 1] = crc >> 16 & 0xff;
	     data[p + 2] = crc >> 8 & 0xff;
	     data[p + 3] = crc & 0xff;
	    }
	    function adler32(data, start, end) {
	     var a = 1;
	     var b = 0;
	     for (var i = start; i < end; ++i) {
	      a = (a + (data[i] & 0xff)) % 65521;
	      b = (b + a) % 65521;
	     }
	     return b << 16 | a;
	    }
	    function encode(imgData, kind, forceDataSchema) {
	     var width = imgData.width;
	     var height = imgData.height;
	     var bitDepth, colorType, lineSize;
	     var bytes = imgData.data;
	     switch (kind) {
	     case ImageKind.GRAYSCALE_1BPP:
	      colorType = 0;
	      bitDepth = 1;
	      lineSize = width + 7 >> 3;
	      break;
	     case ImageKind.RGB_24BPP:
	      colorType = 2;
	      bitDepth = 8;
	      lineSize = width * 3;
	      break;
	     case ImageKind.RGBA_32BPP:
	      colorType = 6;
	      bitDepth = 8;
	      lineSize = width * 4;
	      break;
	     default:
	      throw new Error('invalid format');
	     }
	     var literals = new Uint8Array((1 + lineSize) * height);
	     var offsetLiterals = 0, offsetBytes = 0;
	     var y, i;
	     for (y = 0; y < height; ++y) {
	      literals[offsetLiterals++] = 0;
	      literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);
	      offsetBytes += lineSize;
	      offsetLiterals += lineSize;
	     }
	     if (kind === ImageKind.GRAYSCALE_1BPP) {
	      offsetLiterals = 0;
	      for (y = 0; y < height; y++) {
	       offsetLiterals++;
	       for (i = 0; i < lineSize; i++) {
	        literals[offsetLiterals++] ^= 0xFF;
	       }
	      }
	     }
	     var ihdr = new Uint8Array([
	      width >> 24 & 0xff,
	      width >> 16 & 0xff,
	      width >> 8 & 0xff,
	      width & 0xff,
	      height >> 24 & 0xff,
	      height >> 16 & 0xff,
	      height >> 8 & 0xff,
	      height & 0xff,
	      bitDepth,
	      colorType,
	      0x00,
	      0x00,
	      0x00
	     ]);
	     var len = literals.length;
	     var maxBlockLength = 0xFFFF;
	     var deflateBlocks = Math.ceil(len / maxBlockLength);
	     var idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);
	     var pi = 0;
	     idat[pi++] = 0x78;
	     idat[pi++] = 0x9c;
	     var pos = 0;
	     while (len > maxBlockLength) {
	      idat[pi++] = 0x00;
	      idat[pi++] = 0xff;
	      idat[pi++] = 0xff;
	      idat[pi++] = 0x00;
	      idat[pi++] = 0x00;
	      idat.set(literals.subarray(pos, pos + maxBlockLength), pi);
	      pi += maxBlockLength;
	      pos += maxBlockLength;
	      len -= maxBlockLength;
	     }
	     idat[pi++] = 0x01;
	     idat[pi++] = len & 0xff;
	     idat[pi++] = len >> 8 & 0xff;
	     idat[pi++] = ~len & 0xffff & 0xff;
	     idat[pi++] = (~len & 0xffff) >> 8 & 0xff;
	     idat.set(literals.subarray(pos), pi);
	     pi += literals.length - pos;
	     var adler = adler32(literals, 0, literals.length);
	     idat[pi++] = adler >> 24 & 0xff;
	     idat[pi++] = adler >> 16 & 0xff;
	     idat[pi++] = adler >> 8 & 0xff;
	     idat[pi++] = adler & 0xff;
	     var pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;
	     var data = new Uint8Array(pngLength);
	     var offset = 0;
	     data.set(PNG_HEADER, offset);
	     offset += PNG_HEADER.length;
	     writePngChunk('IHDR', ihdr, data, offset);
	     offset += CHUNK_WRAPPER_SIZE + ihdr.length;
	     writePngChunk('IDATA', idat, data, offset);
	     offset += CHUNK_WRAPPER_SIZE + idat.length;
	     writePngChunk('IEND', new Uint8Array(0), data, offset);
	     return createObjectURL(data, 'image/png', forceDataSchema);
	    }
	    return function convertImgDataToPng(imgData, forceDataSchema) {
	     var kind = imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;
	     return encode(imgData, kind, forceDataSchema);
	    };
	   }();
	   var SVGExtraState = function SVGExtraStateClosure() {
	    function SVGExtraState() {
	     this.fontSizeScale = 1;
	     this.fontWeight = SVG_DEFAULTS.fontWeight;
	     this.fontSize = 0;
	     this.textMatrix = IDENTITY_MATRIX;
	     this.fontMatrix = FONT_IDENTITY_MATRIX;
	     this.leading = 0;
	     this.x = 0;
	     this.y = 0;
	     this.lineX = 0;
	     this.lineY = 0;
	     this.charSpacing = 0;
	     this.wordSpacing = 0;
	     this.textHScale = 1;
	     this.textRise = 0;
	     this.fillColor = SVG_DEFAULTS.fillColor;
	     this.strokeColor = '#000000';
	     this.fillAlpha = 1;
	     this.strokeAlpha = 1;
	     this.lineWidth = 1;
	     this.lineJoin = '';
	     this.lineCap = '';
	     this.miterLimit = 0;
	     this.dashArray = [];
	     this.dashPhase = 0;
	     this.dependencies = [];
	     this.activeClipUrl = null;
	     this.clipGroup = null;
	     this.maskId = '';
	    }
	    SVGExtraState.prototype = {
	     clone: function SVGExtraState_clone() {
	      return Object.create(this);
	     },
	     setCurrentPoint: function SVGExtraState_setCurrentPoint(x, y) {
	      this.x = x;
	      this.y = y;
	     }
	    };
	    return SVGExtraState;
	   }();
	   var SVGGraphics = function SVGGraphicsClosure() {
	    function opListToTree(opList) {
	     var opTree = [];
	     var tmp = [];
	     var opListLen = opList.length;
	     for (var x = 0; x < opListLen; x++) {
	      if (opList[x].fn === 'save') {
	       opTree.push({
	        'fnId': 92,
	        'fn': 'group',
	        'items': []
	       });
	       tmp.push(opTree);
	       opTree = opTree[opTree.length - 1].items;
	       continue;
	      }
	      if (opList[x].fn === 'restore') {
	       opTree = tmp.pop();
	      } else {
	       opTree.push(opList[x]);
	      }
	     }
	     return opTree;
	    }
	    function pf(value) {
	     if (value === (value | 0)) {
	      return value.toString();
	     }
	     var s = value.toFixed(10);
	     var i = s.length - 1;
	     if (s[i] !== '0') {
	      return s;
	     }
	     do {
	      i--;
	     } while (s[i] === '0');
	     return s.substr(0, s[i] === '.' ? i : i + 1);
	    }
	    function pm(m) {
	     if (m[4] === 0 && m[5] === 0) {
	      if (m[1] === 0 && m[2] === 0) {
	       if (m[0] === 1 && m[3] === 1) {
	        return '';
	       }
	       return 'scale(' + pf(m[0]) + ' ' + pf(m[3]) + ')';
	      }
	      if (m[0] === m[3] && m[1] === -m[2]) {
	       var a = Math.acos(m[0]) * 180 / Math.PI;
	       return 'rotate(' + pf(a) + ')';
	      }
	     } else {
	      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {
	       return 'translate(' + pf(m[4]) + ' ' + pf(m[5]) + ')';
	      }
	     }
	     return 'matrix(' + pf(m[0]) + ' ' + pf(m[1]) + ' ' + pf(m[2]) + ' ' + pf(m[3]) + ' ' + pf(m[4]) + ' ' + pf(m[5]) + ')';
	    }
	    function SVGGraphics(commonObjs, objs, forceDataSchema) {
	     this.current = new SVGExtraState();
	     this.transformMatrix = IDENTITY_MATRIX;
	     this.transformStack = [];
	     this.extraStack = [];
	     this.commonObjs = commonObjs;
	     this.objs = objs;
	     this.pendingEOFill = false;
	     this.embedFonts = false;
	     this.embeddedFonts = Object.create(null);
	     this.cssStyle = null;
	     this.forceDataSchema = !!forceDataSchema;
	    }
	    var NS = 'http://www.w3.org/2000/svg';
	    var XML_NS = 'http://www.w3.org/XML/1998/namespace';
	    var XLINK_NS = 'http://www.w3.org/1999/xlink';
	    var LINE_CAP_STYLES = [
	     'butt',
	     'round',
	     'square'
	    ];
	    var LINE_JOIN_STYLES = [
	     'miter',
	     'round',
	     'bevel'
	    ];
	    var clipCount = 0;
	    var maskCount = 0;
	    SVGGraphics.prototype = {
	     save: function SVGGraphics_save() {
	      this.transformStack.push(this.transformMatrix);
	      var old = this.current;
	      this.extraStack.push(old);
	      this.current = old.clone();
	     },
	     restore: function SVGGraphics_restore() {
	      this.transformMatrix = this.transformStack.pop();
	      this.current = this.extraStack.pop();
	      this.tgrp = null;
	     },
	     group: function SVGGraphics_group(items) {
	      this.save();
	      this.executeOpTree(items);
	      this.restore();
	     },
	     loadDependencies: function SVGGraphics_loadDependencies(operatorList) {
	      var fnArray = operatorList.fnArray;
	      var fnArrayLen = fnArray.length;
	      var argsArray = operatorList.argsArray;
	      var self = this;
	      for (var i = 0; i < fnArrayLen; i++) {
	       if (OPS.dependency === fnArray[i]) {
	        var deps = argsArray[i];
	        for (var n = 0, nn = deps.length; n < nn; n++) {
	         var obj = deps[n];
	         var common = obj.substring(0, 2) === 'g_';
	         var promise;
	         if (common) {
	          promise = new Promise(function (resolve) {
	           self.commonObjs.get(obj, resolve);
	          });
	         } else {
	          promise = new Promise(function (resolve) {
	           self.objs.get(obj, resolve);
	          });
	         }
	         this.current.dependencies.push(promise);
	        }
	       }
	      }
	      return Promise.all(this.current.dependencies);
	     },
	     transform: function SVGGraphics_transform(a, b, c, d, e, f) {
	      var transformMatrix = [
	       a,
	       b,
	       c,
	       d,
	       e,
	       f
	      ];
	      this.transformMatrix = Util.transform(this.transformMatrix, transformMatrix);
	      this.tgrp = null;
	     },
	     getSVG: function SVGGraphics_getSVG(operatorList, viewport) {
	      this.viewport = viewport;
	      var svgElement = this._initialize(viewport);
	      return this.loadDependencies(operatorList).then(function () {
	       this.transformMatrix = IDENTITY_MATRIX;
	       var opTree = this.convertOpList(operatorList);
	       this.executeOpTree(opTree);
	       return svgElement;
	      }.bind(this));
	     },
	     convertOpList: function SVGGraphics_convertOpList(operatorList) {
	      var argsArray = operatorList.argsArray;
	      var fnArray = operatorList.fnArray;
	      var fnArrayLen = fnArray.length;
	      var REVOPS = [];
	      var opList = [];
	      for (var op in OPS) {
	       REVOPS[OPS[op]] = op;
	      }
	      for (var x = 0; x < fnArrayLen; x++) {
	       var fnId = fnArray[x];
	       opList.push({
	        'fnId': fnId,
	        'fn': REVOPS[fnId],
	        'args': argsArray[x]
	       });
	      }
	      return opListToTree(opList);
	     },
	     executeOpTree: function SVGGraphics_executeOpTree(opTree) {
	      var opTreeLen = opTree.length;
	      for (var x = 0; x < opTreeLen; x++) {
	       var fn = opTree[x].fn;
	       var fnId = opTree[x].fnId;
	       var args = opTree[x].args;
	       switch (fnId | 0) {
	       case OPS.beginText:
	        this.beginText();
	        break;
	       case OPS.setLeading:
	        this.setLeading(args);
	        break;
	       case OPS.setLeadingMoveText:
	        this.setLeadingMoveText(args[0], args[1]);
	        break;
	       case OPS.setFont:
	        this.setFont(args);
	        break;
	       case OPS.showText:
	        this.showText(args[0]);
	        break;
	       case OPS.showSpacedText:
	        this.showText(args[0]);
	        break;
	       case OPS.endText:
	        this.endText();
	        break;
	       case OPS.moveText:
	        this.moveText(args[0], args[1]);
	        break;
	       case OPS.setCharSpacing:
	        this.setCharSpacing(args[0]);
	        break;
	       case OPS.setWordSpacing:
	        this.setWordSpacing(args[0]);
	        break;
	       case OPS.setHScale:
	        this.setHScale(args[0]);
	        break;
	       case OPS.setTextMatrix:
	        this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);
	        break;
	       case OPS.setLineWidth:
	        this.setLineWidth(args[0]);
	        break;
	       case OPS.setLineJoin:
	        this.setLineJoin(args[0]);
	        break;
	       case OPS.setLineCap:
	        this.setLineCap(args[0]);
	        break;
	       case OPS.setMiterLimit:
	        this.setMiterLimit(args[0]);
	        break;
	       case OPS.setFillRGBColor:
	        this.setFillRGBColor(args[0], args[1], args[2]);
	        break;
	       case OPS.setStrokeRGBColor:
	        this.setStrokeRGBColor(args[0], args[1], args[2]);
	        break;
	       case OPS.setDash:
	        this.setDash(args[0], args[1]);
	        break;
	       case OPS.setGState:
	        this.setGState(args[0]);
	        break;
	       case OPS.fill:
	        this.fill();
	        break;
	       case OPS.eoFill:
	        this.eoFill();
	        break;
	       case OPS.stroke:
	        this.stroke();
	        break;
	       case OPS.fillStroke:
	        this.fillStroke();
	        break;
	       case OPS.eoFillStroke:
	        this.eoFillStroke();
	        break;
	       case OPS.clip:
	        this.clip('nonzero');
	        break;
	       case OPS.eoClip:
	        this.clip('evenodd');
	        break;
	       case OPS.paintSolidColorImageMask:
	        this.paintSolidColorImageMask();
	        break;
	       case OPS.paintJpegXObject:
	        this.paintJpegXObject(args[0], args[1], args[2]);
	        break;
	       case OPS.paintImageXObject:
	        this.paintImageXObject(args[0]);
	        break;
	       case OPS.paintInlineImageXObject:
	        this.paintInlineImageXObject(args[0]);
	        break;
	       case OPS.paintImageMaskXObject:
	        this.paintImageMaskXObject(args[0]);
	        break;
	       case OPS.paintFormXObjectBegin:
	        this.paintFormXObjectBegin(args[0], args[1]);
	        break;
	       case OPS.paintFormXObjectEnd:
	        this.paintFormXObjectEnd();
	        break;
	       case OPS.closePath:
	        this.closePath();
	        break;
	       case OPS.closeStroke:
	        this.closeStroke();
	        break;
	       case OPS.closeFillStroke:
	        this.closeFillStroke();
	        break;
	       case OPS.nextLine:
	        this.nextLine();
	        break;
	       case OPS.transform:
	        this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);
	        break;
	       case OPS.constructPath:
	        this.constructPath(args[0], args[1]);
	        break;
	       case OPS.endPath:
	        this.endPath();
	        break;
	       case 92:
	        this.group(opTree[x].items);
	        break;
	       default:
	        warn('Unimplemented operator ' + fn);
	        break;
	       }
	      }
	     },
	     setWordSpacing: function SVGGraphics_setWordSpacing(wordSpacing) {
	      this.current.wordSpacing = wordSpacing;
	     },
	     setCharSpacing: function SVGGraphics_setCharSpacing(charSpacing) {
	      this.current.charSpacing = charSpacing;
	     },
	     nextLine: function SVGGraphics_nextLine() {
	      this.moveText(0, this.current.leading);
	     },
	     setTextMatrix: function SVGGraphics_setTextMatrix(a, b, c, d, e, f) {
	      var current = this.current;
	      this.current.textMatrix = this.current.lineMatrix = [
	       a,
	       b,
	       c,
	       d,
	       e,
	       f
	      ];
	      this.current.x = this.current.lineX = 0;
	      this.current.y = this.current.lineY = 0;
	      current.xcoords = [];
	      current.tspan = document.createElementNS(NS, 'svg:tspan');
	      current.tspan.setAttributeNS(null, 'font-family', current.fontFamily);
	      current.tspan.setAttributeNS(null, 'font-size', pf(current.fontSize) + 'px');
	      current.tspan.setAttributeNS(null, 'y', pf(-current.y));
	      current.txtElement = document.createElementNS(NS, 'svg:text');
	      current.txtElement.appendChild(current.tspan);
	     },
	     beginText: function SVGGraphics_beginText() {
	      this.current.x = this.current.lineX = 0;
	      this.current.y = this.current.lineY = 0;
	      this.current.textMatrix = IDENTITY_MATRIX;
	      this.current.lineMatrix = IDENTITY_MATRIX;
	      this.current.tspan = document.createElementNS(NS, 'svg:tspan');
	      this.current.txtElement = document.createElementNS(NS, 'svg:text');
	      this.current.txtgrp = document.createElementNS(NS, 'svg:g');
	      this.current.xcoords = [];
	     },
	     moveText: function SVGGraphics_moveText(x, y) {
	      var current = this.current;
	      this.current.x = this.current.lineX += x;
	      this.current.y = this.current.lineY += y;
	      current.xcoords = [];
	      current.tspan = document.createElementNS(NS, 'svg:tspan');
	      current.tspan.setAttributeNS(null, 'font-family', current.fontFamily);
	      current.tspan.setAttributeNS(null, 'font-size', pf(current.fontSize) + 'px');
	      current.tspan.setAttributeNS(null, 'y', pf(-current.y));
	     },
	     showText: function SVGGraphics_showText(glyphs) {
	      var current = this.current;
	      var font = current.font;
	      var fontSize = current.fontSize;
	      if (fontSize === 0) {
	       return;
	      }
	      var charSpacing = current.charSpacing;
	      var wordSpacing = current.wordSpacing;
	      var fontDirection = current.fontDirection;
	      var textHScale = current.textHScale * fontDirection;
	      var glyphsLength = glyphs.length;
	      var vertical = font.vertical;
	      var widthAdvanceScale = fontSize * current.fontMatrix[0];
	      var x = 0, i;
	      for (i = 0; i < glyphsLength; ++i) {
	       var glyph = glyphs[i];
	       if (glyph === null) {
	        x += fontDirection * wordSpacing;
	        continue;
	       } else if (isNum(glyph)) {
	        x += -glyph * fontSize * 0.001;
	        continue;
	       }
	       current.xcoords.push(current.x + x * textHScale);
	       var width = glyph.width;
	       var character = glyph.fontChar;
	       var charWidth = width * widthAdvanceScale + charSpacing * fontDirection;
	       x += charWidth;
	       current.tspan.textContent += character;
	      }
	      if (vertical) {
	       current.y -= x * textHScale;
	      } else {
	       current.x += x * textHScale;
	      }
	      current.tspan.setAttributeNS(null, 'x', current.xcoords.map(pf).join(' '));
	      current.tspan.setAttributeNS(null, 'y', pf(-current.y));
	      current.tspan.setAttributeNS(null, 'font-family', current.fontFamily);
	      current.tspan.setAttributeNS(null, 'font-size', pf(current.fontSize) + 'px');
	      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {
	       current.tspan.setAttributeNS(null, 'font-style', current.fontStyle);
	      }
	      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {
	       current.tspan.setAttributeNS(null, 'font-weight', current.fontWeight);
	      }
	      if (current.fillColor !== SVG_DEFAULTS.fillColor) {
	       current.tspan.setAttributeNS(null, 'fill', current.fillColor);
	      }
	      current.txtElement.setAttributeNS(null, 'transform', pm(current.textMatrix) + ' scale(1, -1)');
	      current.txtElement.setAttributeNS(XML_NS, 'xml:space', 'preserve');
	      current.txtElement.appendChild(current.tspan);
	      current.txtgrp.appendChild(current.txtElement);
	      this._ensureTransformGroup().appendChild(current.txtElement);
	     },
	     setLeadingMoveText: function SVGGraphics_setLeadingMoveText(x, y) {
	      this.setLeading(-y);
	      this.moveText(x, y);
	     },
	     addFontStyle: function SVGGraphics_addFontStyle(fontObj) {
	      if (!this.cssStyle) {
	       this.cssStyle = document.createElementNS(NS, 'svg:style');
	       this.cssStyle.setAttributeNS(null, 'type', 'text/css');
	       this.defs.appendChild(this.cssStyle);
	      }
	      var url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema);
	      this.cssStyle.textContent += '@font-face { font-family: "' + fontObj.loadedName + '";' + ' src: url(' + url + '); }\n';
	     },
	     setFont: function SVGGraphics_setFont(details) {
	      var current = this.current;
	      var fontObj = this.commonObjs.get(details[0]);
	      var size = details[1];
	      this.current.font = fontObj;
	      if (this.embedFonts && fontObj.data && !this.embeddedFonts[fontObj.loadedName]) {
	       this.addFontStyle(fontObj);
	       this.embeddedFonts[fontObj.loadedName] = fontObj;
	      }
	      current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : FONT_IDENTITY_MATRIX;
	      var bold = fontObj.black ? fontObj.bold ? 'bolder' : 'bold' : fontObj.bold ? 'bold' : 'normal';
	      var italic = fontObj.italic ? 'italic' : 'normal';
	      if (size < 0) {
	       size = -size;
	       current.fontDirection = -1;
	      } else {
	       current.fontDirection = 1;
	      }
	      current.fontSize = size;
	      current.fontFamily = fontObj.loadedName;
	      current.fontWeight = bold;
	      current.fontStyle = italic;
	      current.tspan = document.createElementNS(NS, 'svg:tspan');
	      current.tspan.setAttributeNS(null, 'y', pf(-current.y));
	      current.xcoords = [];
	     },
	     endText: function SVGGraphics_endText() {
	     },
	     setLineWidth: function SVGGraphics_setLineWidth(width) {
	      this.current.lineWidth = width;
	     },
	     setLineCap: function SVGGraphics_setLineCap(style) {
	      this.current.lineCap = LINE_CAP_STYLES[style];
	     },
	     setLineJoin: function SVGGraphics_setLineJoin(style) {
	      this.current.lineJoin = LINE_JOIN_STYLES[style];
	     },
	     setMiterLimit: function SVGGraphics_setMiterLimit(limit) {
	      this.current.miterLimit = limit;
	     },
	     setStrokeRGBColor: function SVGGraphics_setStrokeRGBColor(r, g, b) {
	      var color = Util.makeCssRgb(r, g, b);
	      this.current.strokeColor = color;
	     },
	     setFillRGBColor: function SVGGraphics_setFillRGBColor(r, g, b) {
	      var color = Util.makeCssRgb(r, g, b);
	      this.current.fillColor = color;
	      this.current.tspan = document.createElementNS(NS, 'svg:tspan');
	      this.current.xcoords = [];
	     },
	     setDash: function SVGGraphics_setDash(dashArray, dashPhase) {
	      this.current.dashArray = dashArray;
	      this.current.dashPhase = dashPhase;
	     },
	     constructPath: function SVGGraphics_constructPath(ops, args) {
	      var current = this.current;
	      var x = current.x, y = current.y;
	      current.path = document.createElementNS(NS, 'svg:path');
	      var d = [];
	      var opLength = ops.length;
	      for (var i = 0, j = 0; i < opLength; i++) {
	       switch (ops[i] | 0) {
	       case OPS.rectangle:
	        x = args[j++];
	        y = args[j++];
	        var width = args[j++];
	        var height = args[j++];
	        var xw = x + width;
	        var yh = y + height;
	        d.push('M', pf(x), pf(y), 'L', pf(xw), pf(y), 'L', pf(xw), pf(yh), 'L', pf(x), pf(yh), 'Z');
	        break;
	       case OPS.moveTo:
	        x = args[j++];
	        y = args[j++];
	        d.push('M', pf(x), pf(y));
	        break;
	       case OPS.lineTo:
	        x = args[j++];
	        y = args[j++];
	        d.push('L', pf(x), pf(y));
	        break;
	       case OPS.curveTo:
	        x = args[j + 4];
	        y = args[j + 5];
	        d.push('C', pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));
	        j += 6;
	        break;
	       case OPS.curveTo2:
	        x = args[j + 2];
	        y = args[j + 3];
	        d.push('C', pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));
	        j += 4;
	        break;
	       case OPS.curveTo3:
	        x = args[j + 2];
	        y = args[j + 3];
	        d.push('C', pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));
	        j += 4;
	        break;
	       case OPS.closePath:
	        d.push('Z');
	        break;
	       }
	      }
	      current.path.setAttributeNS(null, 'd', d.join(' '));
	      current.path.setAttributeNS(null, 'stroke-miterlimit', pf(current.miterLimit));
	      current.path.setAttributeNS(null, 'stroke-linecap', current.lineCap);
	      current.path.setAttributeNS(null, 'stroke-linejoin', current.lineJoin);
	      current.path.setAttributeNS(null, 'stroke-width', pf(current.lineWidth) + 'px');
	      current.path.setAttributeNS(null, 'stroke-dasharray', current.dashArray.map(pf).join(' '));
	      current.path.setAttributeNS(null, 'stroke-dashoffset', pf(current.dashPhase) + 'px');
	      current.path.setAttributeNS(null, 'fill', 'none');
	      this._ensureTransformGroup().appendChild(current.path);
	      current.element = current.path;
	      current.setCurrentPoint(x, y);
	     },
	     endPath: function SVGGraphics_endPath() {
	     },
	     clip: function SVGGraphics_clip(type) {
	      var current = this.current;
	      var clipId = 'clippath' + clipCount;
	      clipCount++;
	      var clipPath = document.createElementNS(NS, 'svg:clipPath');
	      clipPath.setAttributeNS(null, 'id', clipId);
	      clipPath.setAttributeNS(null, 'transform', pm(this.transformMatrix));
	      var clipElement = current.element.cloneNode();
	      if (type === 'evenodd') {
	       clipElement.setAttributeNS(null, 'clip-rule', 'evenodd');
	      } else {
	       clipElement.setAttributeNS(null, 'clip-rule', 'nonzero');
	      }
	      clipPath.appendChild(clipElement);
	      this.defs.appendChild(clipPath);
	      if (current.activeClipUrl) {
	       current.clipGroup = null;
	       this.extraStack.forEach(function (prev) {
	        prev.clipGroup = null;
	       });
	      }
	      current.activeClipUrl = 'url(#' + clipId + ')';
	      this.tgrp = null;
	     },
	     closePath: function SVGGraphics_closePath() {
	      var current = this.current;
	      var d = current.path.getAttributeNS(null, 'd');
	      d += 'Z';
	      current.path.setAttributeNS(null, 'd', d);
	     },
	     setLeading: function SVGGraphics_setLeading(leading) {
	      this.current.leading = -leading;
	     },
	     setTextRise: function SVGGraphics_setTextRise(textRise) {
	      this.current.textRise = textRise;
	     },
	     setHScale: function SVGGraphics_setHScale(scale) {
	      this.current.textHScale = scale / 100;
	     },
	     setGState: function SVGGraphics_setGState(states) {
	      for (var i = 0, ii = states.length; i < ii; i++) {
	       var state = states[i];
	       var key = state[0];
	       var value = state[1];
	       switch (key) {
	       case 'LW':
	        this.setLineWidth(value);
	        break;
	       case 'LC':
	        this.setLineCap(value);
	        break;
	       case 'LJ':
	        this.setLineJoin(value);
	        break;
	       case 'ML':
	        this.setMiterLimit(value);
	        break;
	       case 'D':
	        this.setDash(value[0], value[1]);
	        break;
	       case 'Font':
	        this.setFont(value);
	        break;
	       default:
	        warn('Unimplemented graphic state ' + key);
	        break;
	       }
	      }
	     },
	     fill: function SVGGraphics_fill() {
	      var current = this.current;
	      current.element.setAttributeNS(null, 'fill', current.fillColor);
	     },
	     stroke: function SVGGraphics_stroke() {
	      var current = this.current;
	      current.element.setAttributeNS(null, 'stroke', current.strokeColor);
	      current.element.setAttributeNS(null, 'fill', 'none');
	     },
	     eoFill: function SVGGraphics_eoFill() {
	      var current = this.current;
	      current.element.setAttributeNS(null, 'fill', current.fillColor);
	      current.element.setAttributeNS(null, 'fill-rule', 'evenodd');
	     },
	     fillStroke: function SVGGraphics_fillStroke() {
	      this.stroke();
	      this.fill();
	     },
	     eoFillStroke: function SVGGraphics_eoFillStroke() {
	      this.current.element.setAttributeNS(null, 'fill-rule', 'evenodd');
	      this.fillStroke();
	     },
	     closeStroke: function SVGGraphics_closeStroke() {
	      this.closePath();
	      this.stroke();
	     },
	     closeFillStroke: function SVGGraphics_closeFillStroke() {
	      this.closePath();
	      this.fillStroke();
	     },
	     paintSolidColorImageMask: function SVGGraphics_paintSolidColorImageMask() {
	      var current = this.current;
	      var rect = document.createElementNS(NS, 'svg:rect');
	      rect.setAttributeNS(null, 'x', '0');
	      rect.setAttributeNS(null, 'y', '0');
	      rect.setAttributeNS(null, 'width', '1px');
	      rect.setAttributeNS(null, 'height', '1px');
	      rect.setAttributeNS(null, 'fill', current.fillColor);
	      this._ensureTransformGroup().appendChild(rect);
	     },
	     paintJpegXObject: function SVGGraphics_paintJpegXObject(objId, w, h) {
	      var imgObj = this.objs.get(objId);
	      var imgEl = document.createElementNS(NS, 'svg:image');
	      imgEl.setAttributeNS(XLINK_NS, 'xlink:href', imgObj.src);
	      imgEl.setAttributeNS(null, 'width', imgObj.width + 'px');
	      imgEl.setAttributeNS(null, 'height', imgObj.height + 'px');
	      imgEl.setAttributeNS(null, 'x', '0');
	      imgEl.setAttributeNS(null, 'y', pf(-h));
	      imgEl.setAttributeNS(null, 'transform', 'scale(' + pf(1 / w) + ' ' + pf(-1 / h) + ')');
	      this._ensureTransformGroup().appendChild(imgEl);
	     },
	     paintImageXObject: function SVGGraphics_paintImageXObject(objId) {
	      var imgData = this.objs.get(objId);
	      if (!imgData) {
	       warn('Dependent image isn\'t ready yet');
	       return;
	      }
	      this.paintInlineImageXObject(imgData);
	     },
	     paintInlineImageXObject: function SVGGraphics_paintInlineImageXObject(imgData, mask) {
	      var width = imgData.width;
	      var height = imgData.height;
	      var imgSrc = convertImgDataToPng(imgData, this.forceDataSchema);
	      var cliprect = document.createElementNS(NS, 'svg:rect');
	      cliprect.setAttributeNS(null, 'x', '0');
	      cliprect.setAttributeNS(null, 'y', '0');
	      cliprect.setAttributeNS(null, 'width', pf(width));
	      cliprect.setAttributeNS(null, 'height', pf(height));
	      this.current.element = cliprect;
	      this.clip('nonzero');
	      var imgEl = document.createElementNS(NS, 'svg:image');
	      imgEl.setAttributeNS(XLINK_NS, 'xlink:href', imgSrc);
	      imgEl.setAttributeNS(null, 'x', '0');
	      imgEl.setAttributeNS(null, 'y', pf(-height));
	      imgEl.setAttributeNS(null, 'width', pf(width) + 'px');
	      imgEl.setAttributeNS(null, 'height', pf(height) + 'px');
	      imgEl.setAttributeNS(null, 'transform', 'scale(' + pf(1 / width) + ' ' + pf(-1 / height) + ')');
	      if (mask) {
	       mask.appendChild(imgEl);
	      } else {
	       this._ensureTransformGroup().appendChild(imgEl);
	      }
	     },
	     paintImageMaskXObject: function SVGGraphics_paintImageMaskXObject(imgData) {
	      var current = this.current;
	      var width = imgData.width;
	      var height = imgData.height;
	      var fillColor = current.fillColor;
	      current.maskId = 'mask' + maskCount++;
	      var mask = document.createElementNS(NS, 'svg:mask');
	      mask.setAttributeNS(null, 'id', current.maskId);
	      var rect = document.createElementNS(NS, 'svg:rect');
	      rect.setAttributeNS(null, 'x', '0');
	      rect.setAttributeNS(null, 'y', '0');
	      rect.setAttributeNS(null, 'width', pf(width));
	      rect.setAttributeNS(null, 'height', pf(height));
	      rect.setAttributeNS(null, 'fill', fillColor);
	      rect.setAttributeNS(null, 'mask', 'url(#' + current.maskId + ')');
	      this.defs.appendChild(mask);
	      this._ensureTransformGroup().appendChild(rect);
	      this.paintInlineImageXObject(imgData, mask);
	     },
	     paintFormXObjectBegin: function SVGGraphics_paintFormXObjectBegin(matrix, bbox) {
	      if (isArray(matrix) && matrix.length === 6) {
	       this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);
	      }
	      if (isArray(bbox) && bbox.length === 4) {
	       var width = bbox[2] - bbox[0];
	       var height = bbox[3] - bbox[1];
	       var cliprect = document.createElementNS(NS, 'svg:rect');
	       cliprect.setAttributeNS(null, 'x', bbox[0]);
	       cliprect.setAttributeNS(null, 'y', bbox[1]);
	       cliprect.setAttributeNS(null, 'width', pf(width));
	       cliprect.setAttributeNS(null, 'height', pf(height));
	       this.current.element = cliprect;
	       this.clip('nonzero');
	       this.endPath();
	      }
	     },
	     paintFormXObjectEnd: function SVGGraphics_paintFormXObjectEnd() {
	     },
	     _initialize: function SVGGraphics_initialize(viewport) {
	      var svg = document.createElementNS(NS, 'svg:svg');
	      svg.setAttributeNS(null, 'version', '1.1');
	      svg.setAttributeNS(null, 'width', viewport.width + 'px');
	      svg.setAttributeNS(null, 'height', viewport.height + 'px');
	      svg.setAttributeNS(null, 'preserveAspectRatio', 'none');
	      svg.setAttributeNS(null, 'viewBox', '0 0 ' + viewport.width + ' ' + viewport.height);
	      var definitions = document.createElementNS(NS, 'svg:defs');
	      svg.appendChild(definitions);
	      this.defs = definitions;
	      var rootGroup = document.createElementNS(NS, 'svg:g');
	      rootGroup.setAttributeNS(null, 'transform', pm(viewport.transform));
	      svg.appendChild(rootGroup);
	      this.svg = rootGroup;
	      return svg;
	     },
	     _ensureClipGroup: function SVGGraphics_ensureClipGroup() {
	      if (!this.current.clipGroup) {
	       var clipGroup = document.createElementNS(NS, 'svg:g');
	       clipGroup.setAttributeNS(null, 'clip-path', this.current.activeClipUrl);
	       this.svg.appendChild(clipGroup);
	       this.current.clipGroup = clipGroup;
	      }
	      return this.current.clipGroup;
	     },
	     _ensureTransformGroup: function SVGGraphics_ensureTransformGroup() {
	      if (!this.tgrp) {
	       this.tgrp = document.createElementNS(NS, 'svg:g');
	       this.tgrp.setAttributeNS(null, 'transform', pm(this.transformMatrix));
	       if (this.current.activeClipUrl) {
	        this._ensureClipGroup().appendChild(this.tgrp);
	       } else {
	        this.svg.appendChild(this.tgrp);
	       }
	      }
	      return this.tgrp;
	     }
	    };
	    return SVGGraphics;
	   }();
	   exports.SVGGraphics = SVGGraphics;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCorePsParser = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives);
	  }(this, function (exports, sharedUtil, corePrimitives) {
	   var error = sharedUtil.error;
	   var isSpace = sharedUtil.isSpace;
	   var EOF = corePrimitives.EOF;
	   var PostScriptParser = function PostScriptParserClosure() {
	    function PostScriptParser(lexer) {
	     this.lexer = lexer;
	     this.operators = [];
	     this.token = null;
	     this.prev = null;
	    }
	    PostScriptParser.prototype = {
	     nextToken: function PostScriptParser_nextToken() {
	      this.prev = this.token;
	      this.token = this.lexer.getToken();
	     },
	     accept: function PostScriptParser_accept(type) {
	      if (this.token.type === type) {
	       this.nextToken();
	       return true;
	      }
	      return false;
	     },
	     expect: function PostScriptParser_expect(type) {
	      if (this.accept(type)) {
	       return true;
	      }
	      error('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');
	     },
	     parse: function PostScriptParser_parse() {
	      this.nextToken();
	      this.expect(PostScriptTokenTypes.LBRACE);
	      this.parseBlock();
	      this.expect(PostScriptTokenTypes.RBRACE);
	      return this.operators;
	     },
	     parseBlock: function PostScriptParser_parseBlock() {
	      while (true) {
	       if (this.accept(PostScriptTokenTypes.NUMBER)) {
	        this.operators.push(this.prev.value);
	       } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {
	        this.operators.push(this.prev.value);
	       } else if (this.accept(PostScriptTokenTypes.LBRACE)) {
	        this.parseCondition();
	       } else {
	        return;
	       }
	      }
	     },
	     parseCondition: function PostScriptParser_parseCondition() {
	      var conditionLocation = this.operators.length;
	      this.operators.push(null, null);
	      this.parseBlock();
	      this.expect(PostScriptTokenTypes.RBRACE);
	      if (this.accept(PostScriptTokenTypes.IF)) {
	       this.operators[conditionLocation] = this.operators.length;
	       this.operators[conditionLocation + 1] = 'jz';
	      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {
	       var jumpLocation = this.operators.length;
	       this.operators.push(null, null);
	       var endOfTrue = this.operators.length;
	       this.parseBlock();
	       this.expect(PostScriptTokenTypes.RBRACE);
	       this.expect(PostScriptTokenTypes.IFELSE);
	       this.operators[jumpLocation] = this.operators.length;
	       this.operators[jumpLocation + 1] = 'j';
	       this.operators[conditionLocation] = endOfTrue;
	       this.operators[conditionLocation + 1] = 'jz';
	      } else {
	       error('PS Function: error parsing conditional.');
	      }
	     }
	    };
	    return PostScriptParser;
	   }();
	   var PostScriptTokenTypes = {
	    LBRACE: 0,
	    RBRACE: 1,
	    NUMBER: 2,
	    OPERATOR: 3,
	    IF: 4,
	    IFELSE: 5
	   };
	   var PostScriptToken = function PostScriptTokenClosure() {
	    function PostScriptToken(type, value) {
	     this.type = type;
	     this.value = value;
	    }
	    var opCache = Object.create(null);
	    PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {
	     var opValue = opCache[op];
	     if (opValue) {
	      return opValue;
	     }
	     return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);
	    };
	    PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');
	    PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');
	    PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');
	    PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');
	    return PostScriptToken;
	   }();
	   var PostScriptLexer = function PostScriptLexerClosure() {
	    function PostScriptLexer(stream) {
	     this.stream = stream;
	     this.nextChar();
	     this.strBuf = [];
	    }
	    PostScriptLexer.prototype = {
	     nextChar: function PostScriptLexer_nextChar() {
	      return this.currentChar = this.stream.getByte();
	     },
	     getToken: function PostScriptLexer_getToken() {
	      var comment = false;
	      var ch = this.currentChar;
	      while (true) {
	       if (ch < 0) {
	        return EOF;
	       }
	       if (comment) {
	        if (ch === 0x0A || ch === 0x0D) {
	         comment = false;
	        }
	       } else if (ch === 0x25) {
	        comment = true;
	       } else if (!isSpace(ch)) {
	        break;
	       }
	       ch = this.nextChar();
	      }
	      switch (ch | 0) {
	      case 0x30:
	      case 0x31:
	      case 0x32:
	      case 0x33:
	      case 0x34:
	      case 0x35:
	      case 0x36:
	      case 0x37:
	      case 0x38:
	      case 0x39:
	      case 0x2B:
	      case 0x2D:
	      case 0x2E:
	       return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());
	      case 0x7B:
	       this.nextChar();
	       return PostScriptToken.LBRACE;
	      case 0x7D:
	       this.nextChar();
	       return PostScriptToken.RBRACE;
	      }
	      var strBuf = this.strBuf;
	      strBuf.length = 0;
	      strBuf[0] = String.fromCharCode(ch);
	      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {
	       strBuf.push(String.fromCharCode(ch));
	      }
	      var str = strBuf.join('');
	      switch (str.toLowerCase()) {
	      case 'if':
	       return PostScriptToken.IF;
	      case 'ifelse':
	       return PostScriptToken.IFELSE;
	      default:
	       return PostScriptToken.getOperator(str);
	      }
	     },
	     getNumber: function PostScriptLexer_getNumber() {
	      var ch = this.currentChar;
	      var strBuf = this.strBuf;
	      strBuf.length = 0;
	      strBuf[0] = String.fromCharCode(ch);
	      while ((ch = this.nextChar()) >= 0) {
	       if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {
	        strBuf.push(String.fromCharCode(ch));
	       } else {
	        break;
	       }
	      }
	      var value = parseFloat(strBuf.join(''));
	      if (isNaN(value)) {
	       error('Invalid floating point number: ' + value);
	      }
	      return value;
	     }
	    };
	    return PostScriptLexer;
	   }();
	   exports.PostScriptLexer = PostScriptLexer;
	   exports.PostScriptParser = PostScriptParser;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreStream = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreJbig2, root.pdfjsCoreJpg, root.pdfjsCoreJpx);
	  }(this, function (exports, sharedUtil, corePrimitives, coreJbig2, coreJpg, coreJpx) {
	   var Util = sharedUtil.Util;
	   var error = sharedUtil.error;
	   var info = sharedUtil.info;
	   var isInt = sharedUtil.isInt;
	   var isArray = sharedUtil.isArray;
	   var createObjectURL = sharedUtil.createObjectURL;
	   var shadow = sharedUtil.shadow;
	   var warn = sharedUtil.warn;
	   var isSpace = sharedUtil.isSpace;
	   var Dict = corePrimitives.Dict;
	   var isDict = corePrimitives.isDict;
	   var isStream = corePrimitives.isStream;
	   var Jbig2Image = coreJbig2.Jbig2Image;
	   var JpegImage = coreJpg.JpegImage;
	   var JpxImage = coreJpx.JpxImage;
	   var Stream = function StreamClosure() {
	    function Stream(arrayBuffer, start, length, dict) {
	     this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);
	     this.start = start || 0;
	     this.pos = this.start;
	     this.end = start + length || this.bytes.length;
	     this.dict = dict;
	    }
	    Stream.prototype = {
	     get length() {
	      return this.end - this.start;
	     },
	     get isEmpty() {
	      return this.length === 0;
	     },
	     getByte: function Stream_getByte() {
	      if (this.pos >= this.end) {
	       return -1;
	      }
	      return this.bytes[this.pos++];
	     },
	     getUint16: function Stream_getUint16() {
	      var b0 = this.getByte();
	      var b1 = this.getByte();
	      if (b0 === -1 || b1 === -1) {
	       return -1;
	      }
	      return (b0 << 8) + b1;
	     },
	     getInt32: function Stream_getInt32() {
	      var b0 = this.getByte();
	      var b1 = this.getByte();
	      var b2 = this.getByte();
	      var b3 = this.getByte();
	      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;
	     },
	     getBytes: function Stream_getBytes(length) {
	      var bytes = this.bytes;
	      var pos = this.pos;
	      var strEnd = this.end;
	      if (!length) {
	       return bytes.subarray(pos, strEnd);
	      }
	      var end = pos + length;
	      if (end > strEnd) {
	       end = strEnd;
	      }
	      this.pos = end;
	      return bytes.subarray(pos, end);
	     },
	     peekByte: function Stream_peekByte() {
	      var peekedByte = this.getByte();
	      this.pos--;
	      return peekedByte;
	     },
	     peekBytes: function Stream_peekBytes(length) {
	      var bytes = this.getBytes(length);
	      this.pos -= bytes.length;
	      return bytes;
	     },
	     skip: function Stream_skip(n) {
	      if (!n) {
	       n = 1;
	      }
	      this.pos += n;
	     },
	     reset: function Stream_reset() {
	      this.pos = this.start;
	     },
	     moveStart: function Stream_moveStart() {
	      this.start = this.pos;
	     },
	     makeSubStream: function Stream_makeSubStream(start, length, dict) {
	      return new Stream(this.bytes.buffer, start, length, dict);
	     },
	     isStream: true
	    };
	    return Stream;
	   }();
	   var StringStream = function StringStreamClosure() {
	    function StringStream(str) {
	     var length = str.length;
	     var bytes = new Uint8Array(length);
	     for (var n = 0; n < length; ++n) {
	      bytes[n] = str.charCodeAt(n);
	     }
	     Stream.call(this, bytes);
	    }
	    StringStream.prototype = Stream.prototype;
	    return StringStream;
	   }();
	   var DecodeStream = function DecodeStreamClosure() {
	    var emptyBuffer = new Uint8Array(0);
	    function DecodeStream(maybeMinBufferLength) {
	     this.pos = 0;
	     this.bufferLength = 0;
	     this.eof = false;
	     this.buffer = emptyBuffer;
	     this.minBufferLength = 512;
	     if (maybeMinBufferLength) {
	      while (this.minBufferLength < maybeMinBufferLength) {
	       this.minBufferLength *= 2;
	      }
	     }
	    }
	    DecodeStream.prototype = {
	     get isEmpty() {
	      while (!this.eof && this.bufferLength === 0) {
	       this.readBlock();
	      }
	      return this.bufferLength === 0;
	     },
	     ensureBuffer: function DecodeStream_ensureBuffer(requested) {
	      var buffer = this.buffer;
	      if (requested <= buffer.byteLength) {
	       return buffer;
	      }
	      var size = this.minBufferLength;
	      while (size < requested) {
	       size *= 2;
	      }
	      var buffer2 = new Uint8Array(size);
	      buffer2.set(buffer);
	      return this.buffer = buffer2;
	     },
	     getByte: function DecodeStream_getByte() {
	      var pos = this.pos;
	      while (this.bufferLength <= pos) {
	       if (this.eof) {
	        return -1;
	       }
	       this.readBlock();
	      }
	      return this.buffer[this.pos++];
	     },
	     getUint16: function DecodeStream_getUint16() {
	      var b0 = this.getByte();
	      var b1 = this.getByte();
	      if (b0 === -1 || b1 === -1) {
	       return -1;
	      }
	      return (b0 << 8) + b1;
	     },
	     getInt32: function DecodeStream_getInt32() {
	      var b0 = this.getByte();
	      var b1 = this.getByte();
	      var b2 = this.getByte();
	      var b3 = this.getByte();
	      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;
	     },
	     getBytes: function DecodeStream_getBytes(length) {
	      var end, pos = this.pos;
	      if (length) {
	       this.ensureBuffer(pos + length);
	       end = pos + length;
	       while (!this.eof && this.bufferLength < end) {
	        this.readBlock();
	       }
	       var bufEnd = this.bufferLength;
	       if (end > bufEnd) {
	        end = bufEnd;
	       }
	      } else {
	       while (!this.eof) {
	        this.readBlock();
	       }
	       end = this.bufferLength;
	      }
	      this.pos = end;
	      return this.buffer.subarray(pos, end);
	     },
	     peekByte: function DecodeStream_peekByte() {
	      var peekedByte = this.getByte();
	      this.pos--;
	      return peekedByte;
	     },
	     peekBytes: function DecodeStream_peekBytes(length) {
	      var bytes = this.getBytes(length);
	      this.pos -= bytes.length;
	      return bytes;
	     },
	     makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {
	      var end = start + length;
	      while (this.bufferLength <= end && !this.eof) {
	       this.readBlock();
	      }
	      return new Stream(this.buffer, start, length, dict);
	     },
	     skip: function DecodeStream_skip(n) {
	      if (!n) {
	       n = 1;
	      }
	      this.pos += n;
	     },
	     reset: function DecodeStream_reset() {
	      this.pos = 0;
	     },
	     getBaseStreams: function DecodeStream_getBaseStreams() {
	      if (this.str && this.str.getBaseStreams) {
	       return this.str.getBaseStreams();
	      }
	      return [];
	     }
	    };
	    return DecodeStream;
	   }();
	   var StreamsSequenceStream = function StreamsSequenceStreamClosure() {
	    function StreamsSequenceStream(streams) {
	     this.streams = streams;
	     DecodeStream.call(this, null);
	    }
	    StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);
	    StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {
	     var streams = this.streams;
	     if (streams.length === 0) {
	      this.eof = true;
	      return;
	     }
	     var stream = streams.shift();
	     var chunk = stream.getBytes();
	     var bufferLength = this.bufferLength;
	     var newLength = bufferLength + chunk.length;
	     var buffer = this.ensureBuffer(newLength);
	     buffer.set(chunk, bufferLength);
	     this.bufferLength = newLength;
	    };
	    StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {
	     var baseStreams = [];
	     for (var i = 0, ii = this.streams.length; i < ii; i++) {
	      var stream = this.streams[i];
	      if (stream.getBaseStreams) {
	       Util.appendToArray(baseStreams, stream.getBaseStreams());
	      }
	     }
	     return baseStreams;
	    };
	    return StreamsSequenceStream;
	   }();
	   var FlateStream = function FlateStreamClosure() {
	    var codeLenCodeMap = new Int32Array([
	     16,
	     17,
	     18,
	     0,
	     8,
	     7,
	     9,
	     6,
	     10,
	     5,
	     11,
	     4,
	     12,
	     3,
	     13,
	     2,
	     14,
	     1,
	     15
	    ]);
	    var lengthDecode = new Int32Array([
	     0x00003,
	     0x00004,
	     0x00005,
	     0x00006,
	     0x00007,
	     0x00008,
	     0x00009,
	     0x0000a,
	     0x1000b,
	     0x1000d,
	     0x1000f,
	     0x10011,
	     0x20013,
	     0x20017,
	     0x2001b,
	     0x2001f,
	     0x30023,
	     0x3002b,
	     0x30033,
	     0x3003b,
	     0x40043,
	     0x40053,
	     0x40063,
	     0x40073,
	     0x50083,
	     0x500a3,
	     0x500c3,
	     0x500e3,
	     0x00102,
	     0x00102,
	     0x00102
	    ]);
	    var distDecode = new Int32Array([
	     0x00001,
	     0x00002,
	     0x00003,
	     0x00004,
	     0x10005,
	     0x10007,
	     0x20009,
	     0x2000d,
	     0x30011,
	     0x30019,
	     0x40021,
	     0x40031,
	     0x50041,
	     0x50061,
	     0x60081,
	     0x600c1,
	     0x70101,
	     0x70181,
	     0x80201,
	     0x80301,
	     0x90401,
	     0x90601,
	     0xa0801,
	     0xa0c01,
	     0xb1001,
	     0xb1801,
	     0xc2001,
	     0xc3001,
	     0xd4001,
	     0xd6001
	    ]);
	    var fixedLitCodeTab = [
	     new Int32Array([
	      0x70100,
	      0x80050,
	      0x80010,
	      0x80118,
	      0x70110,
	      0x80070,
	      0x80030,
	      0x900c0,
	      0x70108,
	      0x80060,
	      0x80020,
	      0x900a0,
	      0x80000,
	      0x80080,
	      0x80040,
	      0x900e0,
	      0x70104,
	      0x80058,
	      0x80018,
	      0x90090,
	      0x70114,
	      0x80078,
	      0x80038,
	      0x900d0,
	      0x7010c,
	      0x80068,
	      0x80028,
	      0x900b0,
	      0x80008,
	      0x80088,
	      0x80048,
	      0x900f0,
	      0x70102,
	      0x80054,
	      0x80014,
	      0x8011c,
	      0x70112,
	      0x80074,
	      0x80034,
	      0x900c8,
	      0x7010a,
	      0x80064,
	      0x80024,
	      0x900a8,
	      0x80004,
	      0x80084,
	      0x80044,
	      0x900e8,
	      0x70106,
	      0x8005c,
	      0x8001c,
	      0x90098,
	      0x70116,
	      0x8007c,
	      0x8003c,
	      0x900d8,
	      0x7010e,
	      0x8006c,
	      0x8002c,
	      0x900b8,
	      0x8000c,
	      0x8008c,
	      0x8004c,
	      0x900f8,
	      0x70101,
	      0x80052,
	      0x80012,
	      0x8011a,
	      0x70111,
	      0x80072,
	      0x80032,
	      0x900c4,
	      0x70109,
	      0x80062,
	      0x80022,
	      0x900a4,
	      0x80002,
	      0x80082,
	      0x80042,
	      0x900e4,
	      0x70105,
	      0x8005a,
	      0x8001a,
	      0x90094,
	      0x70115,
	      0x8007a,
	      0x8003a,
	      0x900d4,
	      0x7010d,
	      0x8006a,
	      0x8002a,
	      0x900b4,
	      0x8000a,
	      0x8008a,
	      0x8004a,
	      0x900f4,
	      0x70103,
	      0x80056,
	      0x80016,
	      0x8011e,
	      0x70113,
	      0x80076,
	      0x80036,
	      0x900cc,
	      0x7010b,
	      0x80066,
	      0x80026,
	      0x900ac,
	      0x80006,
	      0x80086,
	      0x80046,
	      0x900ec,
	      0x70107,
	      0x8005e,
	      0x8001e,
	      0x9009c,
	      0x70117,
	      0x8007e,
	      0x8003e,
	      0x900dc,
	      0x7010f,
	      0x8006e,
	      0x8002e,
	      0x900bc,
	      0x8000e,
	      0x8008e,
	      0x8004e,
	      0x900fc,
	      0x70100,
	      0x80051,
	      0x80011,
	      0x80119,
	      0x70110,
	      0x80071,
	      0x80031,
	      0x900c2,
	      0x70108,
	      0x80061,
	      0x80021,
	      0x900a2,
	      0x80001,
	      0x80081,
	      0x80041,
	      0x900e2,
	      0x70104,
	      0x80059,
	      0x80019,
	      0x90092,
	      0x70114,
	      0x80079,
	      0x80039,
	      0x900d2,
	      0x7010c,
	      0x80069,
	      0x80029,
	      0x900b2,
	      0x80009,
	      0x80089,
	      0x80049,
	      0x900f2,
	      0x70102,
	      0x80055,
	      0x80015,
	      0x8011d,
	      0x70112,
	      0x80075,
	      0x80035,
	      0x900ca,
	      0x7010a,
	      0x80065,
	      0x80025,
	      0x900aa,
	      0x80005,
	      0x80085,
	      0x80045,
	      0x900ea,
	      0x70106,
	      0x8005d,
	      0x8001d,
	      0x9009a,
	      0x70116,
	      0x8007d,
	      0x8003d,
	      0x900da,
	      0x7010e,
	      0x8006d,
	      0x8002d,
	      0x900ba,
	      0x8000d,
	      0x8008d,
	      0x8004d,
	      0x900fa,
	      0x70101,
	      0x80053,
	      0x80013,
	      0x8011b,
	      0x70111,
	      0x80073,
	      0x80033,
	      0x900c6,
	      0x70109,
	      0x80063,
	      0x80023,
	      0x900a6,
	      0x80003,
	      0x80083,
	      0x80043,
	      0x900e6,
	      0x70105,
	      0x8005b,
	      0x8001b,
	      0x90096,
	      0x70115,
	      0x8007b,
	      0x8003b,
	      0x900d6,
	      0x7010d,
	      0x8006b,
	      0x8002b,
	      0x900b6,
	      0x8000b,
	      0x8008b,
	      0x8004b,
	      0x900f6,
	      0x70103,
	      0x80057,
	      0x80017,
	      0x8011f,
	      0x70113,
	      0x80077,
	      0x80037,
	      0x900ce,
	      0x7010b,
	      0x80067,
	      0x80027,
	      0x900ae,
	      0x80007,
	      0x80087,
	      0x80047,
	      0x900ee,
	      0x70107,
	      0x8005f,
	      0x8001f,
	      0x9009e,
	      0x70117,
	      0x8007f,
	      0x8003f,
	      0x900de,
	      0x7010f,
	      0x8006f,
	      0x8002f,
	      0x900be,
	      0x8000f,
	      0x8008f,
	      0x8004f,
	      0x900fe,
	      0x70100,
	      0x80050,
	      0x80010,
	      0x80118,
	      0x70110,
	      0x80070,
	      0x80030,
	      0x900c1,
	      0x70108,
	      0x80060,
	      0x80020,
	      0x900a1,
	      0x80000,
	      0x80080,
	      0x80040,
	      0x900e1,
	      0x70104,
	      0x80058,
	      0x80018,
	      0x90091,
	      0x70114,
	      0x80078,
	      0x80038,
	      0x900d1,
	      0x7010c,
	      0x80068,
	      0x80028,
	      0x900b1,
	      0x80008,
	      0x80088,
	      0x80048,
	      0x900f1,
	      0x70102,
	      0x80054,
	      0x80014,
	      0x8011c,
	      0x70112,
	      0x80074,
	      0x80034,
	      0x900c9,
	      0x7010a,
	      0x80064,
	      0x80024,
	      0x900a9,
	      0x80004,
	      0x80084,
	      0x80044,
	      0x900e9,
	      0x70106,
	      0x8005c,
	      0x8001c,
	      0x90099,
	      0x70116,
	      0x8007c,
	      0x8003c,
	      0x900d9,
	      0x7010e,
	      0x8006c,
	      0x8002c,
	      0x900b9,
	      0x8000c,
	      0x8008c,
	      0x8004c,
	      0x900f9,
	      0x70101,
	      0x80052,
	      0x80012,
	      0x8011a,
	      0x70111,
	      0x80072,
	      0x80032,
	      0x900c5,
	      0x70109,
	      0x80062,
	      0x80022,
	      0x900a5,
	      0x80002,
	      0x80082,
	      0x80042,
	      0x900e5,
	      0x70105,
	      0x8005a,
	      0x8001a,
	      0x90095,
	      0x70115,
	      0x8007a,
	      0x8003a,
	      0x900d5,
	      0x7010d,
	      0x8006a,
	      0x8002a,
	      0x900b5,
	      0x8000a,
	      0x8008a,
	      0x8004a,
	      0x900f5,
	      0x70103,
	      0x80056,
	      0x80016,
	      0x8011e,
	      0x70113,
	      0x80076,
	      0x80036,
	      0x900cd,
	      0x7010b,
	      0x80066,
	      0x80026,
	      0x900ad,
	      0x80006,
	      0x80086,
	      0x80046,
	      0x900ed,
	      0x70107,
	      0x8005e,
	      0x8001e,
	      0x9009d,
	      0x70117,
	      0x8007e,
	      0x8003e,
	      0x900dd,
	      0x7010f,
	      0x8006e,
	      0x8002e,
	      0x900bd,
	      0x8000e,
	      0x8008e,
	      0x8004e,
	      0x900fd,
	      0x70100,
	      0x80051,
	      0x80011,
	      0x80119,
	      0x70110,
	      0x80071,
	      0x80031,
	      0x900c3,
	      0x70108,
	      0x80061,
	      0x80021,
	      0x900a3,
	      0x80001,
	      0x80081,
	      0x80041,
	      0x900e3,
	      0x70104,
	      0x80059,
	      0x80019,
	      0x90093,
	      0x70114,
	      0x80079,
	      0x80039,
	      0x900d3,
	      0x7010c,
	      0x80069,
	      0x80029,
	      0x900b3,
	      0x80009,
	      0x80089,
	      0x80049,
	      0x900f3,
	      0x70102,
	      0x80055,
	      0x80015,
	      0x8011d,
	      0x70112,
	      0x80075,
	      0x80035,
	      0x900cb,
	      0x7010a,
	      0x80065,
	      0x80025,
	      0x900ab,
	      0x80005,
	      0x80085,
	      0x80045,
	      0x900eb,
	      0x70106,
	      0x8005d,
	      0x8001d,
	      0x9009b,
	      0x70116,
	      0x8007d,
	      0x8003d,
	      0x900db,
	      0x7010e,
	      0x8006d,
	      0x8002d,
	      0x900bb,
	      0x8000d,
	      0x8008d,
	      0x8004d,
	      0x900fb,
	      0x70101,
	      0x80053,
	      0x80013,
	      0x8011b,
	      0x70111,
	      0x80073,
	      0x80033,
	      0x900c7,
	      0x70109,
	      0x80063,
	      0x80023,
	      0x900a7,
	      0x80003,
	      0x80083,
	      0x80043,
	      0x900e7,
	      0x70105,
	      0x8005b,
	      0x8001b,
	      0x90097,
	      0x70115,
	      0x8007b,
	      0x8003b,
	      0x900d7,
	      0x7010d,
	      0x8006b,
	      0x8002b,
	      0x900b7,
	      0x8000b,
	      0x8008b,
	      0x8004b,
	      0x900f7,
	      0x70103,
	      0x80057,
	      0x80017,
	      0x8011f,
	      0x70113,
	      0x80077,
	      0x80037,
	      0x900cf,
	      0x7010b,
	      0x80067,
	      0x80027,
	      0x900af,
	      0x80007,
	      0x80087,
	      0x80047,
	      0x900ef,
	      0x70107,
	      0x8005f,
	      0x8001f,
	      0x9009f,
	      0x70117,
	      0x8007f,
	      0x8003f,
	      0x900df,
	      0x7010f,
	      0x8006f,
	      0x8002f,
	      0x900bf,
	      0x8000f,
	      0x8008f,
	      0x8004f,
	      0x900ff
	     ]),
	     9
	    ];
	    var fixedDistCodeTab = [
	     new Int32Array([
	      0x50000,
	      0x50010,
	      0x50008,
	      0x50018,
	      0x50004,
	      0x50014,
	      0x5000c,
	      0x5001c,
	      0x50002,
	      0x50012,
	      0x5000a,
	      0x5001a,
	      0x50006,
	      0x50016,
	      0x5000e,
	      0x00000,
	      0x50001,
	      0x50011,
	      0x50009,
	      0x50019,
	      0x50005,
	      0x50015,
	      0x5000d,
	      0x5001d,
	      0x50003,
	      0x50013,
	      0x5000b,
	      0x5001b,
	      0x50007,
	      0x50017,
	      0x5000f,
	      0x00000
	     ]),
	     5
	    ];
	    function FlateStream(str, maybeLength) {
	     this.str = str;
	     this.dict = str.dict;
	     var cmf = str.getByte();
	     var flg = str.getByte();
	     if (cmf === -1 || flg === -1) {
	      error('Invalid header in flate stream: ' + cmf + ', ' + flg);
	     }
	     if ((cmf & 0x0f) !== 0x08) {
	      error('Unknown compression method in flate stream: ' + cmf + ', ' + flg);
	     }
	     if (((cmf << 8) + flg) % 31 !== 0) {
	      error('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);
	     }
	     if (flg & 0x20) {
	      error('FDICT bit set in flate stream: ' + cmf + ', ' + flg);
	     }
	     this.codeSize = 0;
	     this.codeBuf = 0;
	     DecodeStream.call(this, maybeLength);
	    }
	    FlateStream.prototype = Object.create(DecodeStream.prototype);
	    FlateStream.prototype.getBits = function FlateStream_getBits(bits) {
	     var str = this.str;
	     var codeSize = this.codeSize;
	     var codeBuf = this.codeBuf;
	     var b;
	     while (codeSize < bits) {
	      if ((b = str.getByte()) === -1) {
	       error('Bad encoding in flate stream');
	      }
	      codeBuf |= b << codeSize;
	      codeSize += 8;
	     }
	     b = codeBuf & (1 << bits) - 1;
	     this.codeBuf = codeBuf >> bits;
	     this.codeSize = codeSize -= bits;
	     return b;
	    };
	    FlateStream.prototype.getCode = function FlateStream_getCode(table) {
	     var str = this.str;
	     var codes = table[0];
	     var maxLen = table[1];
	     var codeSize = this.codeSize;
	     var codeBuf = this.codeBuf;
	     var b;
	     while (codeSize < maxLen) {
	      if ((b = str.getByte()) === -1) {
	       break;
	      }
	      codeBuf |= b << codeSize;
	      codeSize += 8;
	     }
	     var code = codes[codeBuf & (1 << maxLen) - 1];
	     var codeLen = code >> 16;
	     var codeVal = code & 0xffff;
	     if (codeLen < 1 || codeSize < codeLen) {
	      error('Bad encoding in flate stream');
	     }
	     this.codeBuf = codeBuf >> codeLen;
	     this.codeSize = codeSize - codeLen;
	     return codeVal;
	    };
	    FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {
	     var n = lengths.length;
	     var maxLen = 0;
	     var i;
	     for (i = 0; i < n; ++i) {
	      if (lengths[i] > maxLen) {
	       maxLen = lengths[i];
	      }
	     }
	     var size = 1 << maxLen;
	     var codes = new Int32Array(size);
	     for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {
	      for (var val = 0; val < n; ++val) {
	       if (lengths[val] === len) {
	        var code2 = 0;
	        var t = code;
	        for (i = 0; i < len; ++i) {
	         code2 = code2 << 1 | t & 1;
	         t >>= 1;
	        }
	        for (i = code2; i < size; i += skip) {
	         codes[i] = len << 16 | val;
	        }
	        ++code;
	       }
	      }
	     }
	     return [
	      codes,
	      maxLen
	     ];
	    };
	    FlateStream.prototype.readBlock = function FlateStream_readBlock() {
	     var buffer, len;
	     var str = this.str;
	     var hdr = this.getBits(3);
	     if (hdr & 1) {
	      this.eof = true;
	     }
	     hdr >>= 1;
	     if (hdr === 0) {
	      var b;
	      if ((b = str.getByte()) === -1) {
	       error('Bad block header in flate stream');
	      }
	      var blockLen = b;
	      if ((b = str.getByte()) === -1) {
	       error('Bad block header in flate stream');
	      }
	      blockLen |= b << 8;
	      if ((b = str.getByte()) === -1) {
	       error('Bad block header in flate stream');
	      }
	      var check = b;
	      if ((b = str.getByte()) === -1) {
	       error('Bad block header in flate stream');
	      }
	      check |= b << 8;
	      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {
	       error('Bad uncompressed block length in flate stream');
	      }
	      this.codeBuf = 0;
	      this.codeSize = 0;
	      var bufferLength = this.bufferLength;
	      buffer = this.ensureBuffer(bufferLength + blockLen);
	      var end = bufferLength + blockLen;
	      this.bufferLength = end;
	      if (blockLen === 0) {
	       if (str.peekByte() === -1) {
	        this.eof = true;
	       }
	      } else {
	       for (var n = bufferLength; n < end; ++n) {
	        if ((b = str.getByte()) === -1) {
	         this.eof = true;
	         break;
	        }
	        buffer[n] = b;
	       }
	      }
	      return;
	     }
	     var litCodeTable;
	     var distCodeTable;
	     if (hdr === 1) {
	      litCodeTable = fixedLitCodeTab;
	      distCodeTable = fixedDistCodeTab;
	     } else if (hdr === 2) {
	      var numLitCodes = this.getBits(5) + 257;
	      var numDistCodes = this.getBits(5) + 1;
	      var numCodeLenCodes = this.getBits(4) + 4;
	      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);
	      var i;
	      for (i = 0; i < numCodeLenCodes; ++i) {
	       codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);
	      }
	      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);
	      len = 0;
	      i = 0;
	      var codes = numLitCodes + numDistCodes;
	      var codeLengths = new Uint8Array(codes);
	      var bitsLength, bitsOffset, what;
	      while (i < codes) {
	       var code = this.getCode(codeLenCodeTab);
	       if (code === 16) {
	        bitsLength = 2;
	        bitsOffset = 3;
	        what = len;
	       } else if (code === 17) {
	        bitsLength = 3;
	        bitsOffset = 3;
	        what = len = 0;
	       } else if (code === 18) {
	        bitsLength = 7;
	        bitsOffset = 11;
	        what = len = 0;
	       } else {
	        codeLengths[i++] = len = code;
	        continue;
	       }
	       var repeatLength = this.getBits(bitsLength) + bitsOffset;
	       while (repeatLength-- > 0) {
	        codeLengths[i++] = what;
	       }
	      }
	      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));
	      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));
	     } else {
	      error('Unknown block type in flate stream');
	     }
	     buffer = this.buffer;
	     var limit = buffer ? buffer.length : 0;
	     var pos = this.bufferLength;
	     while (true) {
	      var code1 = this.getCode(litCodeTable);
	      if (code1 < 256) {
	       if (pos + 1 >= limit) {
	        buffer = this.ensureBuffer(pos + 1);
	        limit = buffer.length;
	       }
	       buffer[pos++] = code1;
	       continue;
	      }
	      if (code1 === 256) {
	       this.bufferLength = pos;
	       return;
	      }
	      code1 -= 257;
	      code1 = lengthDecode[code1];
	      var code2 = code1 >> 16;
	      if (code2 > 0) {
	       code2 = this.getBits(code2);
	      }
	      len = (code1 & 0xffff) + code2;
	      code1 = this.getCode(distCodeTable);
	      code1 = distDecode[code1];
	      code2 = code1 >> 16;
	      if (code2 > 0) {
	       code2 = this.getBits(code2);
	      }
	      var dist = (code1 & 0xffff) + code2;
	      if (pos + len >= limit) {
	       buffer = this.ensureBuffer(pos + len);
	       limit = buffer.length;
	      }
	      for (var k = 0; k < len; ++k, ++pos) {
	       buffer[pos] = buffer[pos - dist];
	      }
	     }
	    };
	    return FlateStream;
	   }();
	   var PredictorStream = function PredictorStreamClosure() {
	    function PredictorStream(str, maybeLength, params) {
	     if (!isDict(params)) {
	      return str;
	     }
	     var predictor = this.predictor = params.get('Predictor') || 1;
	     if (predictor <= 1) {
	      return str;
	     }
	     if (predictor !== 2 && (predictor < 10 || predictor > 15)) {
	      error('Unsupported predictor: ' + predictor);
	     }
	     if (predictor === 2) {
	      this.readBlock = this.readBlockTiff;
	     } else {
	      this.readBlock = this.readBlockPng;
	     }
	     this.str = str;
	     this.dict = str.dict;
	     var colors = this.colors = params.get('Colors') || 1;
	     var bits = this.bits = params.get('BitsPerComponent') || 8;
	     var columns = this.columns = params.get('Columns') || 1;
	     this.pixBytes = colors * bits + 7 >> 3;
	     this.rowBytes = columns * colors * bits + 7 >> 3;
	     DecodeStream.call(this, maybeLength);
	     return this;
	    }
	    PredictorStream.prototype = Object.create(DecodeStream.prototype);
	    PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {
	     var rowBytes = this.rowBytes;
	     var bufferLength = this.bufferLength;
	     var buffer = this.ensureBuffer(bufferLength + rowBytes);
	     var bits = this.bits;
	     var colors = this.colors;
	     var rawBytes = this.str.getBytes(rowBytes);
	     this.eof = !rawBytes.length;
	     if (this.eof) {
	      return;
	     }
	     var inbuf = 0, outbuf = 0;
	     var inbits = 0, outbits = 0;
	     var pos = bufferLength;
	     var i;
	     if (bits === 1 && colors === 1) {
	      for (i = 0; i < rowBytes; ++i) {
	       var c = rawBytes[i] ^ inbuf;
	       c ^= c >> 1;
	       c ^= c >> 2;
	       c ^= c >> 4;
	       inbuf = (c & 1) << 7;
	       buffer[pos++] = c;
	      }
	     } else if (bits === 8) {
	      for (i = 0; i < colors; ++i) {
	       buffer[pos++] = rawBytes[i];
	      }
	      for (; i < rowBytes; ++i) {
	       buffer[pos] = buffer[pos - colors] + rawBytes[i];
	       pos++;
	      }
	     } else {
	      var compArray = new Uint8Array(colors + 1);
	      var bitMask = (1 << bits) - 1;
	      var j = 0, k = bufferLength;
	      var columns = this.columns;
	      for (i = 0; i < columns; ++i) {
	       for (var kk = 0; kk < colors; ++kk) {
	        if (inbits < bits) {
	         inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;
	         inbits += 8;
	        }
	        compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;
	        inbits -= bits;
	        outbuf = outbuf << bits | compArray[kk];
	        outbits += bits;
	        if (outbits >= 8) {
	         buffer[k++] = outbuf >> outbits - 8 & 0xFF;
	         outbits -= 8;
	        }
	       }
	      }
	      if (outbits > 0) {
	       buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);
	      }
	     }
	     this.bufferLength += rowBytes;
	    };
	    PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {
	     var rowBytes = this.rowBytes;
	     var pixBytes = this.pixBytes;
	     var predictor = this.str.getByte();
	     var rawBytes = this.str.getBytes(rowBytes);
	     this.eof = !rawBytes.length;
	     if (this.eof) {
	      return;
	     }
	     var bufferLength = this.bufferLength;
	     var buffer = this.ensureBuffer(bufferLength + rowBytes);
	     var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);
	     if (prevRow.length === 0) {
	      prevRow = new Uint8Array(rowBytes);
	     }
	     var i, j = bufferLength, up, c;
	     switch (predictor) {
	     case 0:
	      for (i = 0; i < rowBytes; ++i) {
	       buffer[j++] = rawBytes[i];
	      }
	      break;
	     case 1:
	      for (i = 0; i < pixBytes; ++i) {
	       buffer[j++] = rawBytes[i];
	      }
	      for (; i < rowBytes; ++i) {
	       buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;
	       j++;
	      }
	      break;
	     case 2:
	      for (i = 0; i < rowBytes; ++i) {
	       buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;
	      }
	      break;
	     case 3:
	      for (i = 0; i < pixBytes; ++i) {
	       buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];
	      }
	      for (; i < rowBytes; ++i) {
	       buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;
	       j++;
	      }
	      break;
	     case 4:
	      for (i = 0; i < pixBytes; ++i) {
	       up = prevRow[i];
	       c = rawBytes[i];
	       buffer[j++] = up + c;
	      }
	      for (; i < rowBytes; ++i) {
	       up = prevRow[i];
	       var upLeft = prevRow[i - pixBytes];
	       var left = buffer[j - pixBytes];
	       var p = left + up - upLeft;
	       var pa = p - left;
	       if (pa < 0) {
	        pa = -pa;
	       }
	       var pb = p - up;
	       if (pb < 0) {
	        pb = -pb;
	       }
	       var pc = p - upLeft;
	       if (pc < 0) {
	        pc = -pc;
	       }
	       c = rawBytes[i];
	       if (pa <= pb && pa <= pc) {
	        buffer[j++] = left + c;
	       } else if (pb <= pc) {
	        buffer[j++] = up + c;
	       } else {
	        buffer[j++] = upLeft + c;
	       }
	      }
	      break;
	     default:
	      error('Unsupported predictor: ' + predictor);
	     }
	     this.bufferLength += rowBytes;
	    };
	    return PredictorStream;
	   }();
	   var JpegStream = function JpegStreamClosure() {
	    function JpegStream(stream, maybeLength, dict, params) {
	     var ch;
	     while ((ch = stream.getByte()) !== -1) {
	      if (ch === 0xFF) {
	       stream.skip(-1);
	       break;
	      }
	     }
	     this.stream = stream;
	     this.maybeLength = maybeLength;
	     this.dict = dict;
	     this.params = params;
	     DecodeStream.call(this, maybeLength);
	    }
	    JpegStream.prototype = Object.create(DecodeStream.prototype);
	    Object.defineProperty(JpegStream.prototype, 'bytes', {
	     get: function JpegStream_bytes() {
	      return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));
	     },
	     configurable: true
	    });
	    JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {
	     if (this.bufferLength) {
	      return;
	     }
	     var jpegImage = new JpegImage();
	     var decodeArr = this.dict.getArray('Decode', 'D');
	     if (this.forceRGB && isArray(decodeArr)) {
	      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;
	      var decodeArrLength = decodeArr.length;
	      var transform = new Int32Array(decodeArrLength);
	      var transformNeeded = false;
	      var maxValue = (1 << bitsPerComponent) - 1;
	      for (var i = 0; i < decodeArrLength; i += 2) {
	       transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;
	       transform[i + 1] = decodeArr[i] * maxValue | 0;
	       if (transform[i] !== 256 || transform[i + 1] !== 0) {
	        transformNeeded = true;
	       }
	      }
	      if (transformNeeded) {
	       jpegImage.decodeTransform = transform;
	      }
	     }
	     if (isDict(this.params)) {
	      var colorTransform = this.params.get('ColorTransform');
	      if (isInt(colorTransform)) {
	       jpegImage.colorTransform = colorTransform;
	      }
	     }
	     jpegImage.parse(this.bytes);
	     var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);
	     this.buffer = data;
	     this.bufferLength = data.length;
	     this.eof = true;
	    };
	    JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {
	     this.ensureBuffer();
	     return this.buffer;
	    };
	    JpegStream.prototype.getIR = function JpegStream_getIR(forceDataSchema) {
	     return createObjectURL(this.bytes, 'image/jpeg', forceDataSchema);
	    };
	    return JpegStream;
	   }();
	   var JpxStream = function JpxStreamClosure() {
	    function JpxStream(stream, maybeLength, dict, params) {
	     this.stream = stream;
	     this.maybeLength = maybeLength;
	     this.dict = dict;
	     this.params = params;
	     DecodeStream.call(this, maybeLength);
	    }
	    JpxStream.prototype = Object.create(DecodeStream.prototype);
	    Object.defineProperty(JpxStream.prototype, 'bytes', {
	     get: function JpxStream_bytes() {
	      return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));
	     },
	     configurable: true
	    });
	    JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {
	     if (this.bufferLength) {
	      return;
	     }
	     var jpxImage = new JpxImage();
	     jpxImage.parse(this.bytes);
	     var width = jpxImage.width;
	     var height = jpxImage.height;
	     var componentsCount = jpxImage.componentsCount;
	     var tileCount = jpxImage.tiles.length;
	     if (tileCount === 1) {
	      this.buffer = jpxImage.tiles[0].items;
	     } else {
	      var data = new Uint8Array(width * height * componentsCount);
	      for (var k = 0; k < tileCount; k++) {
	       var tileComponents = jpxImage.tiles[k];
	       var tileWidth = tileComponents.width;
	       var tileHeight = tileComponents.height;
	       var tileLeft = tileComponents.left;
	       var tileTop = tileComponents.top;
	       var src = tileComponents.items;
	       var srcPosition = 0;
	       var dataPosition = (width * tileTop + tileLeft) * componentsCount;
	       var imgRowSize = width * componentsCount;
	       var tileRowSize = tileWidth * componentsCount;
	       for (var j = 0; j < tileHeight; j++) {
	        var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);
	        data.set(rowBytes, dataPosition);
	        srcPosition += tileRowSize;
	        dataPosition += imgRowSize;
	       }
	      }
	      this.buffer = data;
	     }
	     this.bufferLength = this.buffer.length;
	     this.eof = true;
	    };
	    return JpxStream;
	   }();
	   var Jbig2Stream = function Jbig2StreamClosure() {
	    function Jbig2Stream(stream, maybeLength, dict, params) {
	     this.stream = stream;
	     this.maybeLength = maybeLength;
	     this.dict = dict;
	     this.params = params;
	     DecodeStream.call(this, maybeLength);
	    }
	    Jbig2Stream.prototype = Object.create(DecodeStream.prototype);
	    Object.defineProperty(Jbig2Stream.prototype, 'bytes', {
	     get: function Jbig2Stream_bytes() {
	      return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));
	     },
	     configurable: true
	    });
	    Jbig2Stream.prototype.ensureBuffer = function Jbig2Stream_ensureBuffer(req) {
	     if (this.bufferLength) {
	      return;
	     }
	     var jbig2Image = new Jbig2Image();
	     var chunks = [];
	     if (isDict(this.params)) {
	      var globalsStream = this.params.get('JBIG2Globals');
	      if (isStream(globalsStream)) {
	       var globals = globalsStream.getBytes();
	       chunks.push({
	        data: globals,
	        start: 0,
	        end: globals.length
	       });
	      }
	     }
	     chunks.push({
	      data: this.bytes,
	      start: 0,
	      end: this.bytes.length
	     });
	     var data = jbig2Image.parseChunks(chunks);
	     var dataLength = data.length;
	     for (var i = 0; i < dataLength; i++) {
	      data[i] ^= 0xFF;
	     }
	     this.buffer = data;
	     this.bufferLength = dataLength;
	     this.eof = true;
	    };
	    return Jbig2Stream;
	   }();
	   var DecryptStream = function DecryptStreamClosure() {
	    function DecryptStream(str, maybeLength, decrypt) {
	     this.str = str;
	     this.dict = str.dict;
	     this.decrypt = decrypt;
	     this.nextChunk = null;
	     this.initialized = false;
	     DecodeStream.call(this, maybeLength);
	    }
	    var chunkSize = 512;
	    DecryptStream.prototype = Object.create(DecodeStream.prototype);
	    DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {
	     var chunk;
	     if (this.initialized) {
	      chunk = this.nextChunk;
	     } else {
	      chunk = this.str.getBytes(chunkSize);
	      this.initialized = true;
	     }
	     if (!chunk || chunk.length === 0) {
	      this.eof = true;
	      return;
	     }
	     this.nextChunk = this.str.getBytes(chunkSize);
	     var hasMoreData = this.nextChunk && this.nextChunk.length > 0;
	     var decrypt = this.decrypt;
	     chunk = decrypt(chunk, !hasMoreData);
	     var bufferLength = this.bufferLength;
	     var i, n = chunk.length;
	     var buffer = this.ensureBuffer(bufferLength + n);
	     for (i = 0; i < n; i++) {
	      buffer[bufferLength++] = chunk[i];
	     }
	     this.bufferLength = bufferLength;
	    };
	    return DecryptStream;
	   }();
	   var Ascii85Stream = function Ascii85StreamClosure() {
	    function Ascii85Stream(str, maybeLength) {
	     this.str = str;
	     this.dict = str.dict;
	     this.input = new Uint8Array(5);
	     if (maybeLength) {
	      maybeLength = 0.8 * maybeLength;
	     }
	     DecodeStream.call(this, maybeLength);
	    }
	    Ascii85Stream.prototype = Object.create(DecodeStream.prototype);
	    Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {
	     var TILDA_CHAR = 0x7E;
	     var Z_LOWER_CHAR = 0x7A;
	     var EOF = -1;
	     var str = this.str;
	     var c = str.getByte();
	     while (isSpace(c)) {
	      c = str.getByte();
	     }
	     if (c === EOF || c === TILDA_CHAR) {
	      this.eof = true;
	      return;
	     }
	     var bufferLength = this.bufferLength, buffer;
	     var i;
	     if (c === Z_LOWER_CHAR) {
	      buffer = this.ensureBuffer(bufferLength + 4);
	      for (i = 0; i < 4; ++i) {
	       buffer[bufferLength + i] = 0;
	      }
	      this.bufferLength += 4;
	     } else {
	      var input = this.input;
	      input[0] = c;
	      for (i = 1; i < 5; ++i) {
	       c = str.getByte();
	       while (isSpace(c)) {
	        c = str.getByte();
	       }
	       input[i] = c;
	       if (c === EOF || c === TILDA_CHAR) {
	        break;
	       }
	      }
	      buffer = this.ensureBuffer(bufferLength + i - 1);
	      this.bufferLength += i - 1;
	      if (i < 5) {
	       for (; i < 5; ++i) {
	        input[i] = 0x21 + 84;
	       }
	       this.eof = true;
	      }
	      var t = 0;
	      for (i = 0; i < 5; ++i) {
	       t = t * 85 + (input[i] - 0x21);
	      }
	      for (i = 3; i >= 0; --i) {
	       buffer[bufferLength + i] = t & 0xFF;
	       t >>= 8;
	      }
	     }
	    };
	    return Ascii85Stream;
	   }();
	   var AsciiHexStream = function AsciiHexStreamClosure() {
	    function AsciiHexStream(str, maybeLength) {
	     this.str = str;
	     this.dict = str.dict;
	     this.firstDigit = -1;
	     if (maybeLength) {
	      maybeLength = 0.5 * maybeLength;
	     }
	     DecodeStream.call(this, maybeLength);
	    }
	    AsciiHexStream.prototype = Object.create(DecodeStream.prototype);
	    AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {
	     var UPSTREAM_BLOCK_SIZE = 8000;
	     var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);
	     if (!bytes.length) {
	      this.eof = true;
	      return;
	     }
	     var maxDecodeLength = bytes.length + 1 >> 1;
	     var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);
	     var bufferLength = this.bufferLength;
	     var firstDigit = this.firstDigit;
	     for (var i = 0, ii = bytes.length; i < ii; i++) {
	      var ch = bytes[i], digit;
	      if (ch >= 0x30 && ch <= 0x39) {
	       digit = ch & 0x0F;
	      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {
	       digit = (ch & 0x0F) + 9;
	      } else if (ch === 0x3E) {
	       this.eof = true;
	       break;
	      } else {
	       continue;
	      }
	      if (firstDigit < 0) {
	       firstDigit = digit;
	      } else {
	       buffer[bufferLength++] = firstDigit << 4 | digit;
	       firstDigit = -1;
	      }
	     }
	     if (firstDigit >= 0 && this.eof) {
	      buffer[bufferLength++] = firstDigit << 4;
	      firstDigit = -1;
	     }
	     this.firstDigit = firstDigit;
	     this.bufferLength = bufferLength;
	    };
	    return AsciiHexStream;
	   }();
	   var RunLengthStream = function RunLengthStreamClosure() {
	    function RunLengthStream(str, maybeLength) {
	     this.str = str;
	     this.dict = str.dict;
	     DecodeStream.call(this, maybeLength);
	    }
	    RunLengthStream.prototype = Object.create(DecodeStream.prototype);
	    RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {
	     var repeatHeader = this.str.getBytes(2);
	     if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {
	      this.eof = true;
	      return;
	     }
	     var buffer;
	     var bufferLength = this.bufferLength;
	     var n = repeatHeader[0];
	     if (n < 128) {
	      buffer = this.ensureBuffer(bufferLength + n + 1);
	      buffer[bufferLength++] = repeatHeader[1];
	      if (n > 0) {
	       var source = this.str.getBytes(n);
	       buffer.set(source, bufferLength);
	       bufferLength += n;
	      }
	     } else {
	      n = 257 - n;
	      var b = repeatHeader[1];
	      buffer = this.ensureBuffer(bufferLength + n + 1);
	      for (var i = 0; i < n; i++) {
	       buffer[bufferLength++] = b;
	      }
	     }
	     this.bufferLength = bufferLength;
	    };
	    return RunLengthStream;
	   }();
	   var CCITTFaxStream = function CCITTFaxStreamClosure() {
	    var ccittEOL = -2;
	    var ccittEOF = -1;
	    var twoDimPass = 0;
	    var twoDimHoriz = 1;
	    var twoDimVert0 = 2;
	    var twoDimVertR1 = 3;
	    var twoDimVertL1 = 4;
	    var twoDimVertR2 = 5;
	    var twoDimVertL2 = 6;
	    var twoDimVertR3 = 7;
	    var twoDimVertL3 = 8;
	    var twoDimTable = [
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      7,
	      twoDimVertL3
	     ],
	     [
	      7,
	      twoDimVertR3
	     ],
	     [
	      6,
	      twoDimVertL2
	     ],
	     [
	      6,
	      twoDimVertL2
	     ],
	     [
	      6,
	      twoDimVertR2
	     ],
	     [
	      6,
	      twoDimVertR2
	     ],
	     [
	      4,
	      twoDimPass
	     ],
	     [
	      4,
	      twoDimPass
	     ],
	     [
	      4,
	      twoDimPass
	     ],
	     [
	      4,
	      twoDimPass
	     ],
	     [
	      4,
	      twoDimPass
	     ],
	     [
	      4,
	      twoDimPass
	     ],
	     [
	      4,
	      twoDimPass
	     ],
	     [
	      4,
	      twoDimPass
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimHoriz
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertL1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      3,
	      twoDimVertR1
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ],
	     [
	      1,
	      twoDimVert0
	     ]
	    ];
	    var whiteTable1 = [
	     [
	      -1,
	      -1
	     ],
	     [
	      12,
	      ccittEOL
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      11,
	      1792
	     ],
	     [
	      11,
	      1792
	     ],
	     [
	      12,
	      1984
	     ],
	     [
	      12,
	      2048
	     ],
	     [
	      12,
	      2112
	     ],
	     [
	      12,
	      2176
	     ],
	     [
	      12,
	      2240
	     ],
	     [
	      12,
	      2304
	     ],
	     [
	      11,
	      1856
	     ],
	     [
	      11,
	      1856
	     ],
	     [
	      11,
	      1920
	     ],
	     [
	      11,
	      1920
	     ],
	     [
	      12,
	      2368
	     ],
	     [
	      12,
	      2432
	     ],
	     [
	      12,
	      2496
	     ],
	     [
	      12,
	      2560
	     ]
	    ];
	    var whiteTable2 = [
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      8,
	      29
	     ],
	     [
	      8,
	      29
	     ],
	     [
	      8,
	      30
	     ],
	     [
	      8,
	      30
	     ],
	     [
	      8,
	      45
	     ],
	     [
	      8,
	      45
	     ],
	     [
	      8,
	      46
	     ],
	     [
	      8,
	      46
	     ],
	     [
	      7,
	      22
	     ],
	     [
	      7,
	      22
	     ],
	     [
	      7,
	      22
	     ],
	     [
	      7,
	      22
	     ],
	     [
	      7,
	      23
	     ],
	     [
	      7,
	      23
	     ],
	     [
	      7,
	      23
	     ],
	     [
	      7,
	      23
	     ],
	     [
	      8,
	      47
	     ],
	     [
	      8,
	      47
	     ],
	     [
	      8,
	      48
	     ],
	     [
	      8,
	      48
	     ],
	     [
	      6,
	      13
	     ],
	     [
	      6,
	      13
	     ],
	     [
	      6,
	      13
	     ],
	     [
	      6,
	      13
	     ],
	     [
	      6,
	      13
	     ],
	     [
	      6,
	      13
	     ],
	     [
	      6,
	      13
	     ],
	     [
	      6,
	      13
	     ],
	     [
	      7,
	      20
	     ],
	     [
	      7,
	      20
	     ],
	     [
	      7,
	      20
	     ],
	     [
	      7,
	      20
	     ],
	     [
	      8,
	      33
	     ],
	     [
	      8,
	      33
	     ],
	     [
	      8,
	      34
	     ],
	     [
	      8,
	      34
	     ],
	     [
	      8,
	      35
	     ],
	     [
	      8,
	      35
	     ],
	     [
	      8,
	      36
	     ],
	     [
	      8,
	      36
	     ],
	     [
	      8,
	      37
	     ],
	     [
	      8,
	      37
	     ],
	     [
	      8,
	      38
	     ],
	     [
	      8,
	      38
	     ],
	     [
	      7,
	      19
	     ],
	     [
	      7,
	      19
	     ],
	     [
	      7,
	      19
	     ],
	     [
	      7,
	      19
	     ],
	     [
	      8,
	      31
	     ],
	     [
	      8,
	      31
	     ],
	     [
	      8,
	      32
	     ],
	     [
	      8,
	      32
	     ],
	     [
	      6,
	      1
	     ],
	     [
	      6,
	      1
	     ],
	     [
	      6,
	      1
	     ],
	     [
	      6,
	      1
	     ],
	     [
	      6,
	      1
	     ],
	     [
	      6,
	      1
	     ],
	     [
	      6,
	      1
	     ],
	     [
	      6,
	      1
	     ],
	     [
	      6,
	      12
	     ],
	     [
	      6,
	      12
	     ],
	     [
	      6,
	      12
	     ],
	     [
	      6,
	      12
	     ],
	     [
	      6,
	      12
	     ],
	     [
	      6,
	      12
	     ],
	     [
	      6,
	      12
	     ],
	     [
	      6,
	      12
	     ],
	     [
	      8,
	      53
	     ],
	     [
	      8,
	      53
	     ],
	     [
	      8,
	      54
	     ],
	     [
	      8,
	      54
	     ],
	     [
	      7,
	      26
	     ],
	     [
	      7,
	      26
	     ],
	     [
	      7,
	      26
	     ],
	     [
	      7,
	      26
	     ],
	     [
	      8,
	      39
	     ],
	     [
	      8,
	      39
	     ],
	     [
	      8,
	      40
	     ],
	     [
	      8,
	      40
	     ],
	     [
	      8,
	      41
	     ],
	     [
	      8,
	      41
	     ],
	     [
	      8,
	      42
	     ],
	     [
	      8,
	      42
	     ],
	     [
	      8,
	      43
	     ],
	     [
	      8,
	      43
	     ],
	     [
	      8,
	      44
	     ],
	     [
	      8,
	      44
	     ],
	     [
	      7,
	      21
	     ],
	     [
	      7,
	      21
	     ],
	     [
	      7,
	      21
	     ],
	     [
	      7,
	      21
	     ],
	     [
	      7,
	      28
	     ],
	     [
	      7,
	      28
	     ],
	     [
	      7,
	      28
	     ],
	     [
	      7,
	      28
	     ],
	     [
	      8,
	      61
	     ],
	     [
	      8,
	      61
	     ],
	     [
	      8,
	      62
	     ],
	     [
	      8,
	      62
	     ],
	     [
	      8,
	      63
	     ],
	     [
	      8,
	      63
	     ],
	     [
	      8,
	      0
	     ],
	     [
	      8,
	      0
	     ],
	     [
	      8,
	      320
	     ],
	     [
	      8,
	      320
	     ],
	     [
	      8,
	      384
	     ],
	     [
	      8,
	      384
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      10
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      5,
	      11
	     ],
	     [
	      7,
	      27
	     ],
	     [
	      7,
	      27
	     ],
	     [
	      7,
	      27
	     ],
	     [
	      7,
	      27
	     ],
	     [
	      8,
	      59
	     ],
	     [
	      8,
	      59
	     ],
	     [
	      8,
	      60
	     ],
	     [
	      8,
	      60
	     ],
	     [
	      9,
	      1472
	     ],
	     [
	      9,
	      1536
	     ],
	     [
	      9,
	      1600
	     ],
	     [
	      9,
	      1728
	     ],
	     [
	      7,
	      18
	     ],
	     [
	      7,
	      18
	     ],
	     [
	      7,
	      18
	     ],
	     [
	      7,
	      18
	     ],
	     [
	      7,
	      24
	     ],
	     [
	      7,
	      24
	     ],
	     [
	      7,
	      24
	     ],
	     [
	      7,
	      24
	     ],
	     [
	      8,
	      49
	     ],
	     [
	      8,
	      49
	     ],
	     [
	      8,
	      50
	     ],
	     [
	      8,
	      50
	     ],
	     [
	      8,
	      51
	     ],
	     [
	      8,
	      51
	     ],
	     [
	      8,
	      52
	     ],
	     [
	      8,
	      52
	     ],
	     [
	      7,
	      25
	     ],
	     [
	      7,
	      25
	     ],
	     [
	      7,
	      25
	     ],
	     [
	      7,
	      25
	     ],
	     [
	      8,
	      55
	     ],
	     [
	      8,
	      55
	     ],
	     [
	      8,
	      56
	     ],
	     [
	      8,
	      56
	     ],
	     [
	      8,
	      57
	     ],
	     [
	      8,
	      57
	     ],
	     [
	      8,
	      58
	     ],
	     [
	      8,
	      58
	     ],
	     [
	      6,
	      192
	     ],
	     [
	      6,
	      192
	     ],
	     [
	      6,
	      192
	     ],
	     [
	      6,
	      192
	     ],
	     [
	      6,
	      192
	     ],
	     [
	      6,
	      192
	     ],
	     [
	      6,
	      192
	     ],
	     [
	      6,
	      192
	     ],
	     [
	      6,
	      1664
	     ],
	     [
	      6,
	      1664
	     ],
	     [
	      6,
	      1664
	     ],
	     [
	      6,
	      1664
	     ],
	     [
	      6,
	      1664
	     ],
	     [
	      6,
	      1664
	     ],
	     [
	      6,
	      1664
	     ],
	     [
	      6,
	      1664
	     ],
	     [
	      8,
	      448
	     ],
	     [
	      8,
	      448
	     ],
	     [
	      8,
	      512
	     ],
	     [
	      8,
	      512
	     ],
	     [
	      9,
	      704
	     ],
	     [
	      9,
	      768
	     ],
	     [
	      8,
	      640
	     ],
	     [
	      8,
	      640
	     ],
	     [
	      8,
	      576
	     ],
	     [
	      8,
	      576
	     ],
	     [
	      9,
	      832
	     ],
	     [
	      9,
	      896
	     ],
	     [
	      9,
	      960
	     ],
	     [
	      9,
	      1024
	     ],
	     [
	      9,
	      1088
	     ],
	     [
	      9,
	      1152
	     ],
	     [
	      9,
	      1216
	     ],
	     [
	      9,
	      1280
	     ],
	     [
	      9,
	      1344
	     ],
	     [
	      9,
	      1408
	     ],
	     [
	      7,
	      256
	     ],
	     [
	      7,
	      256
	     ],
	     [
	      7,
	      256
	     ],
	     [
	      7,
	      256
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      2
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      4,
	      3
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      128
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      8
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      5,
	      9
	     ],
	     [
	      6,
	      16
	     ],
	     [
	      6,
	      16
	     ],
	     [
	      6,
	      16
	     ],
	     [
	      6,
	      16
	     ],
	     [
	      6,
	      16
	     ],
	     [
	      6,
	      16
	     ],
	     [
	      6,
	      16
	     ],
	     [
	      6,
	      16
	     ],
	     [
	      6,
	      17
	     ],
	     [
	      6,
	      17
	     ],
	     [
	      6,
	      17
	     ],
	     [
	      6,
	      17
	     ],
	     [
	      6,
	      17
	     ],
	     [
	      6,
	      17
	     ],
	     [
	      6,
	      17
	     ],
	     [
	      6,
	      17
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      4
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      6,
	      14
	     ],
	     [
	      6,
	      14
	     ],
	     [
	      6,
	      14
	     ],
	     [
	      6,
	      14
	     ],
	     [
	      6,
	      14
	     ],
	     [
	      6,
	      14
	     ],
	     [
	      6,
	      14
	     ],
	     [
	      6,
	      14
	     ],
	     [
	      6,
	      15
	     ],
	     [
	      6,
	      15
	     ],
	     [
	      6,
	      15
	     ],
	     [
	      6,
	      15
	     ],
	     [
	      6,
	      15
	     ],
	     [
	      6,
	      15
	     ],
	     [
	      6,
	      15
	     ],
	     [
	      6,
	      15
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      5,
	      64
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ],
	     [
	      4,
	      7
	     ]
	    ];
	    var blackTable1 = [
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      12,
	      ccittEOL
	     ],
	     [
	      12,
	      ccittEOL
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      11,
	      1792
	     ],
	     [
	      11,
	      1792
	     ],
	     [
	      11,
	      1792
	     ],
	     [
	      11,
	      1792
	     ],
	     [
	      12,
	      1984
	     ],
	     [
	      12,
	      1984
	     ],
	     [
	      12,
	      2048
	     ],
	     [
	      12,
	      2048
	     ],
	     [
	      12,
	      2112
	     ],
	     [
	      12,
	      2112
	     ],
	     [
	      12,
	      2176
	     ],
	     [
	      12,
	      2176
	     ],
	     [
	      12,
	      2240
	     ],
	     [
	      12,
	      2240
	     ],
	     [
	      12,
	      2304
	     ],
	     [
	      12,
	      2304
	     ],
	     [
	      11,
	      1856
	     ],
	     [
	      11,
	      1856
	     ],
	     [
	      11,
	      1856
	     ],
	     [
	      11,
	      1856
	     ],
	     [
	      11,
	      1920
	     ],
	     [
	      11,
	      1920
	     ],
	     [
	      11,
	      1920
	     ],
	     [
	      11,
	      1920
	     ],
	     [
	      12,
	      2368
	     ],
	     [
	      12,
	      2368
	     ],
	     [
	      12,
	      2432
	     ],
	     [
	      12,
	      2432
	     ],
	     [
	      12,
	      2496
	     ],
	     [
	      12,
	      2496
	     ],
	     [
	      12,
	      2560
	     ],
	     [
	      12,
	      2560
	     ],
	     [
	      10,
	      18
	     ],
	     [
	      10,
	      18
	     ],
	     [
	      10,
	      18
	     ],
	     [
	      10,
	      18
	     ],
	     [
	      10,
	      18
	     ],
	     [
	      10,
	      18
	     ],
	     [
	      10,
	      18
	     ],
	     [
	      10,
	      18
	     ],
	     [
	      12,
	      52
	     ],
	     [
	      12,
	      52
	     ],
	     [
	      13,
	      640
	     ],
	     [
	      13,
	      704
	     ],
	     [
	      13,
	      768
	     ],
	     [
	      13,
	      832
	     ],
	     [
	      12,
	      55
	     ],
	     [
	      12,
	      55
	     ],
	     [
	      12,
	      56
	     ],
	     [
	      12,
	      56
	     ],
	     [
	      13,
	      1280
	     ],
	     [
	      13,
	      1344
	     ],
	     [
	      13,
	      1408
	     ],
	     [
	      13,
	      1472
	     ],
	     [
	      12,
	      59
	     ],
	     [
	      12,
	      59
	     ],
	     [
	      12,
	      60
	     ],
	     [
	      12,
	      60
	     ],
	     [
	      13,
	      1536
	     ],
	     [
	      13,
	      1600
	     ],
	     [
	      11,
	      24
	     ],
	     [
	      11,
	      24
	     ],
	     [
	      11,
	      24
	     ],
	     [
	      11,
	      24
	     ],
	     [
	      11,
	      25
	     ],
	     [
	      11,
	      25
	     ],
	     [
	      11,
	      25
	     ],
	     [
	      11,
	      25
	     ],
	     [
	      13,
	      1664
	     ],
	     [
	      13,
	      1728
	     ],
	     [
	      12,
	      320
	     ],
	     [
	      12,
	      320
	     ],
	     [
	      12,
	      384
	     ],
	     [
	      12,
	      384
	     ],
	     [
	      12,
	      448
	     ],
	     [
	      12,
	      448
	     ],
	     [
	      13,
	      512
	     ],
	     [
	      13,
	      576
	     ],
	     [
	      12,
	      53
	     ],
	     [
	      12,
	      53
	     ],
	     [
	      12,
	      54
	     ],
	     [
	      12,
	      54
	     ],
	     [
	      13,
	      896
	     ],
	     [
	      13,
	      960
	     ],
	     [
	      13,
	      1024
	     ],
	     [
	      13,
	      1088
	     ],
	     [
	      13,
	      1152
	     ],
	     [
	      13,
	      1216
	     ],
	     [
	      10,
	      64
	     ],
	     [
	      10,
	      64
	     ],
	     [
	      10,
	      64
	     ],
	     [
	      10,
	      64
	     ],
	     [
	      10,
	      64
	     ],
	     [
	      10,
	      64
	     ],
	     [
	      10,
	      64
	     ],
	     [
	      10,
	      64
	     ]
	    ];
	    var blackTable2 = [
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      8,
	      13
	     ],
	     [
	      11,
	      23
	     ],
	     [
	      11,
	      23
	     ],
	     [
	      12,
	      50
	     ],
	     [
	      12,
	      51
	     ],
	     [
	      12,
	      44
	     ],
	     [
	      12,
	      45
	     ],
	     [
	      12,
	      46
	     ],
	     [
	      12,
	      47
	     ],
	     [
	      12,
	      57
	     ],
	     [
	      12,
	      58
	     ],
	     [
	      12,
	      61
	     ],
	     [
	      12,
	      256
	     ],
	     [
	      10,
	      16
	     ],
	     [
	      10,
	      16
	     ],
	     [
	      10,
	      16
	     ],
	     [
	      10,
	      16
	     ],
	     [
	      10,
	      17
	     ],
	     [
	      10,
	      17
	     ],
	     [
	      10,
	      17
	     ],
	     [
	      10,
	      17
	     ],
	     [
	      12,
	      48
	     ],
	     [
	      12,
	      49
	     ],
	     [
	      12,
	      62
	     ],
	     [
	      12,
	      63
	     ],
	     [
	      12,
	      30
	     ],
	     [
	      12,
	      31
	     ],
	     [
	      12,
	      32
	     ],
	     [
	      12,
	      33
	     ],
	     [
	      12,
	      40
	     ],
	     [
	      12,
	      41
	     ],
	     [
	      11,
	      22
	     ],
	     [
	      11,
	      22
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      8,
	      14
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      10
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      7,
	      11
	     ],
	     [
	      9,
	      15
	     ],
	     [
	      9,
	      15
	     ],
	     [
	      9,
	      15
	     ],
	     [
	      9,
	      15
	     ],
	     [
	      9,
	      15
	     ],
	     [
	      9,
	      15
	     ],
	     [
	      9,
	      15
	     ],
	     [
	      9,
	      15
	     ],
	     [
	      12,
	      128
	     ],
	     [
	      12,
	      192
	     ],
	     [
	      12,
	      26
	     ],
	     [
	      12,
	      27
	     ],
	     [
	      12,
	      28
	     ],
	     [
	      12,
	      29
	     ],
	     [
	      11,
	      19
	     ],
	     [
	      11,
	      19
	     ],
	     [
	      11,
	      20
	     ],
	     [
	      11,
	      20
	     ],
	     [
	      12,
	      34
	     ],
	     [
	      12,
	      35
	     ],
	     [
	      12,
	      36
	     ],
	     [
	      12,
	      37
	     ],
	     [
	      12,
	      38
	     ],
	     [
	      12,
	      39
	     ],
	     [
	      11,
	      21
	     ],
	     [
	      11,
	      21
	     ],
	     [
	      12,
	      42
	     ],
	     [
	      12,
	      43
	     ],
	     [
	      10,
	      0
	     ],
	     [
	      10,
	      0
	     ],
	     [
	      10,
	      0
	     ],
	     [
	      10,
	      0
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ],
	     [
	      7,
	      12
	     ]
	    ];
	    var blackTable3 = [
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      -1,
	      -1
	     ],
	     [
	      6,
	      9
	     ],
	     [
	      6,
	      8
	     ],
	     [
	      5,
	      7
	     ],
	     [
	      5,
	      7
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      6
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      4,
	      5
	     ],
	     [
	      3,
	      1
	     ],
	     [
	      3,
	      1
	     ],
	     [
	      3,
	      1
	     ],
	     [
	      3,
	      1
	     ],
	     [
	      3,
	      1
	     ],
	     [
	      3,
	      1
	     ],
	     [
	      3,
	      1
	     ],
	     [
	      3,
	      1
	     ],
	     [
	      3,
	      4
	     ],
	     [
	      3,
	      4
	     ],
	     [
	      3,
	      4
	     ],
	     [
	      3,
	      4
	     ],
	     [
	      3,
	      4
	     ],
	     [
	      3,
	      4
	     ],
	     [
	      3,
	      4
	     ],
	     [
	      3,
	      4
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      3
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ],
	     [
	      2,
	      2
	     ]
	    ];
	    function CCITTFaxStream(str, maybeLength, params) {
	     this.str = str;
	     this.dict = str.dict;
	     params = params || Dict.empty;
	     this.encoding = params.get('K') || 0;
	     this.eoline = params.get('EndOfLine') || false;
	     this.byteAlign = params.get('EncodedByteAlign') || false;
	     this.columns = params.get('Columns') || 1728;
	     this.rows = params.get('Rows') || 0;
	     var eoblock = params.get('EndOfBlock');
	     if (eoblock === null || eoblock === undefined) {
	      eoblock = true;
	     }
	     this.eoblock = eoblock;
	     this.black = params.get('BlackIs1') || false;
	     this.codingLine = new Uint32Array(this.columns + 1);
	     this.refLine = new Uint32Array(this.columns + 2);
	     this.codingLine[0] = this.columns;
	     this.codingPos = 0;
	     this.row = 0;
	     this.nextLine2D = this.encoding < 0;
	     this.inputBits = 0;
	     this.inputBuf = 0;
	     this.outputBits = 0;
	     var code1;
	     while ((code1 = this.lookBits(12)) === 0) {
	      this.eatBits(1);
	     }
	     if (code1 === 1) {
	      this.eatBits(12);
	     }
	     if (this.encoding > 0) {
	      this.nextLine2D = !this.lookBits(1);
	      this.eatBits(1);
	     }
	     DecodeStream.call(this, maybeLength);
	    }
	    CCITTFaxStream.prototype = Object.create(DecodeStream.prototype);
	    CCITTFaxStream.prototype.readBlock = function CCITTFaxStream_readBlock() {
	     while (!this.eof) {
	      var c = this.lookChar();
	      this.ensureBuffer(this.bufferLength + 1);
	      this.buffer[this.bufferLength++] = c;
	     }
	    };
	    CCITTFaxStream.prototype.addPixels = function ccittFaxStreamAddPixels(a1, blackPixels) {
	     var codingLine = this.codingLine;
	     var codingPos = this.codingPos;
	     if (a1 > codingLine[codingPos]) {
	      if (a1 > this.columns) {
	       info('row is wrong length');
	       this.err = true;
	       a1 = this.columns;
	      }
	      if (codingPos & 1 ^ blackPixels) {
	       ++codingPos;
	      }
	      codingLine[codingPos] = a1;
	     }
	     this.codingPos = codingPos;
	    };
	    CCITTFaxStream.prototype.addPixelsNeg = function ccittFaxStreamAddPixelsNeg(a1, blackPixels) {
	     var codingLine = this.codingLine;
	     var codingPos = this.codingPos;
	     if (a1 > codingLine[codingPos]) {
	      if (a1 > this.columns) {
	       info('row is wrong length');
	       this.err = true;
	       a1 = this.columns;
	      }
	      if (codingPos & 1 ^ blackPixels) {
	       ++codingPos;
	      }
	      codingLine[codingPos] = a1;
	     } else if (a1 < codingLine[codingPos]) {
	      if (a1 < 0) {
	       info('invalid code');
	       this.err = true;
	       a1 = 0;
	      }
	      while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {
	       --codingPos;
	      }
	      codingLine[codingPos] = a1;
	     }
	     this.codingPos = codingPos;
	    };
	    CCITTFaxStream.prototype.lookChar = function CCITTFaxStream_lookChar() {
	     var refLine = this.refLine;
	     var codingLine = this.codingLine;
	     var columns = this.columns;
	     var refPos, blackPixels, bits, i;
	     if (this.outputBits === 0) {
	      if (this.eof) {
	       return null;
	      }
	      this.err = false;
	      var code1, code2, code3;
	      if (this.nextLine2D) {
	       for (i = 0; codingLine[i] < columns; ++i) {
	        refLine[i] = codingLine[i];
	       }
	       refLine[i++] = columns;
	       refLine[i] = columns;
	       codingLine[0] = 0;
	       this.codingPos = 0;
	       refPos = 0;
	       blackPixels = 0;
	       while (codingLine[this.codingPos] < columns) {
	        code1 = this.getTwoDimCode();
	        switch (code1) {
	        case twoDimPass:
	         this.addPixels(refLine[refPos + 1], blackPixels);
	         if (refLine[refPos + 1] < columns) {
	          refPos += 2;
	         }
	         break;
	        case twoDimHoriz:
	         code1 = code2 = 0;
	         if (blackPixels) {
	          do {
	           code1 += code3 = this.getBlackCode();
	          } while (code3 >= 64);
	          do {
	           code2 += code3 = this.getWhiteCode();
	          } while (code3 >= 64);
	         } else {
	          do {
	           code1 += code3 = this.getWhiteCode();
	          } while (code3 >= 64);
	          do {
	           code2 += code3 = this.getBlackCode();
	          } while (code3 >= 64);
	         }
	         this.addPixels(codingLine[this.codingPos] + code1, blackPixels);
	         if (codingLine[this.codingPos] < columns) {
	          this.addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);
	         }
	         while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {
	          refPos += 2;
	         }
	         break;
	        case twoDimVertR3:
	         this.addPixels(refLine[refPos] + 3, blackPixels);
	         blackPixels ^= 1;
	         if (codingLine[this.codingPos] < columns) {
	          ++refPos;
	          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {
	           refPos += 2;
	          }
	         }
	         break;
	        case twoDimVertR2:
	         this.addPixels(refLine[refPos] + 2, blackPixels);
	         blackPixels ^= 1;
	         if (codingLine[this.codingPos] < columns) {
	          ++refPos;
	          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {
	           refPos += 2;
	          }
	         }
	         break;
	        case twoDimVertR1:
	         this.addPixels(refLine[refPos] + 1, blackPixels);
	         blackPixels ^= 1;
	         if (codingLine[this.codingPos] < columns) {
	          ++refPos;
	          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {
	           refPos += 2;
	          }
	         }
	         break;
	        case twoDimVert0:
	         this.addPixels(refLine[refPos], blackPixels);
	         blackPixels ^= 1;
	         if (codingLine[this.codingPos] < columns) {
	          ++refPos;
	          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {
	           refPos += 2;
	          }
	         }
	         break;
	        case twoDimVertL3:
	         this.addPixelsNeg(refLine[refPos] - 3, blackPixels);
	         blackPixels ^= 1;
	         if (codingLine[this.codingPos] < columns) {
	          if (refPos > 0) {
	           --refPos;
	          } else {
	           ++refPos;
	          }
	          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {
	           refPos += 2;
	          }
	         }
	         break;
	        case twoDimVertL2:
	         this.addPixelsNeg(refLine[refPos] - 2, blackPixels);
	         blackPixels ^= 1;
	         if (codingLine[this.codingPos] < columns) {
	          if (refPos > 0) {
	           --refPos;
	          } else {
	           ++refPos;
	          }
	          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {
	           refPos += 2;
	          }
	         }
	         break;
	        case twoDimVertL1:
	         this.addPixelsNeg(refLine[refPos] - 1, blackPixels);
	         blackPixels ^= 1;
	         if (codingLine[this.codingPos] < columns) {
	          if (refPos > 0) {
	           --refPos;
	          } else {
	           ++refPos;
	          }
	          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {
	           refPos += 2;
	          }
	         }
	         break;
	        case ccittEOF:
	         this.addPixels(columns, 0);
	         this.eof = true;
	         break;
	        default:
	         info('bad 2d code');
	         this.addPixels(columns, 0);
	         this.err = true;
	        }
	       }
	      } else {
	       codingLine[0] = 0;
	       this.codingPos = 0;
	       blackPixels = 0;
	       while (codingLine[this.codingPos] < columns) {
	        code1 = 0;
	        if (blackPixels) {
	         do {
	          code1 += code3 = this.getBlackCode();
	         } while (code3 >= 64);
	        } else {
	         do {
	          code1 += code3 = this.getWhiteCode();
	         } while (code3 >= 64);
	        }
	        this.addPixels(codingLine[this.codingPos] + code1, blackPixels);
	        blackPixels ^= 1;
	       }
	      }
	      var gotEOL = false;
	      if (this.byteAlign) {
	       this.inputBits &= ~7;
	      }
	      if (!this.eoblock && this.row === this.rows - 1) {
	       this.eof = true;
	      } else {
	       code1 = this.lookBits(12);
	       if (this.eoline) {
	        while (code1 !== ccittEOF && code1 !== 1) {
	         this.eatBits(1);
	         code1 = this.lookBits(12);
	        }
	       } else {
	        while (code1 === 0) {
	         this.eatBits(1);
	         code1 = this.lookBits(12);
	        }
	       }
	       if (code1 === 1) {
	        this.eatBits(12);
	        gotEOL = true;
	       } else if (code1 === ccittEOF) {
	        this.eof = true;
	       }
	      }
	      if (!this.eof && this.encoding > 0) {
	       this.nextLine2D = !this.lookBits(1);
	       this.eatBits(1);
	      }
	      if (this.eoblock && gotEOL && this.byteAlign) {
	       code1 = this.lookBits(12);
	       if (code1 === 1) {
	        this.eatBits(12);
	        if (this.encoding > 0) {
	         this.lookBits(1);
	         this.eatBits(1);
	        }
	        if (this.encoding >= 0) {
	         for (i = 0; i < 4; ++i) {
	          code1 = this.lookBits(12);
	          if (code1 !== 1) {
	           info('bad rtc code: ' + code1);
	          }
	          this.eatBits(12);
	          if (this.encoding > 0) {
	           this.lookBits(1);
	           this.eatBits(1);
	          }
	         }
	        }
	        this.eof = true;
	       }
	      } else if (this.err && this.eoline) {
	       while (true) {
	        code1 = this.lookBits(13);
	        if (code1 === ccittEOF) {
	         this.eof = true;
	         return null;
	        }
	        if (code1 >> 1 === 1) {
	         break;
	        }
	        this.eatBits(1);
	       }
	       this.eatBits(12);
	       if (this.encoding > 0) {
	        this.eatBits(1);
	        this.nextLine2D = !(code1 & 1);
	       }
	      }
	      if (codingLine[0] > 0) {
	       this.outputBits = codingLine[this.codingPos = 0];
	      } else {
	       this.outputBits = codingLine[this.codingPos = 1];
	      }
	      this.row++;
	     }
	     var c;
	     if (this.outputBits >= 8) {
	      c = this.codingPos & 1 ? 0 : 0xFF;
	      this.outputBits -= 8;
	      if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {
	       this.codingPos++;
	       this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];
	      }
	     } else {
	      bits = 8;
	      c = 0;
	      do {
	       if (this.outputBits > bits) {
	        c <<= bits;
	        if (!(this.codingPos & 1)) {
	         c |= 0xFF >> 8 - bits;
	        }
	        this.outputBits -= bits;
	        bits = 0;
	       } else {
	        c <<= this.outputBits;
	        if (!(this.codingPos & 1)) {
	         c |= 0xFF >> 8 - this.outputBits;
	        }
	        bits -= this.outputBits;
	        this.outputBits = 0;
	        if (codingLine[this.codingPos] < columns) {
	         this.codingPos++;
	         this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];
	        } else if (bits > 0) {
	         c <<= bits;
	         bits = 0;
	        }
	       }
	      } while (bits);
	     }
	     if (this.black) {
	      c ^= 0xFF;
	     }
	     return c;
	    };
	    CCITTFaxStream.prototype.findTableCode = function ccittFaxStreamFindTableCode(start, end, table, limit) {
	     var limitValue = limit || 0;
	     for (var i = start; i <= end; ++i) {
	      var code = this.lookBits(i);
	      if (code === ccittEOF) {
	       return [
	        true,
	        1,
	        false
	       ];
	      }
	      if (i < end) {
	       code <<= end - i;
	      }
	      if (!limitValue || code >= limitValue) {
	       var p = table[code - limitValue];
	       if (p[0] === i) {
	        this.eatBits(i);
	        return [
	         true,
	         p[1],
	         true
	        ];
	       }
	      }
	     }
	     return [
	      false,
	      0,
	      false
	     ];
	    };
	    CCITTFaxStream.prototype.getTwoDimCode = function ccittFaxStreamGetTwoDimCode() {
	     var code = 0;
	     var p;
	     if (this.eoblock) {
	      code = this.lookBits(7);
	      p = twoDimTable[code];
	      if (p && p[0] > 0) {
	       this.eatBits(p[0]);
	       return p[1];
	      }
	     } else {
	      var result = this.findTableCode(1, 7, twoDimTable);
	      if (result[0] && result[2]) {
	       return result[1];
	      }
	     }
	     info('Bad two dim code');
	     return ccittEOF;
	    };
	    CCITTFaxStream.prototype.getWhiteCode = function ccittFaxStreamGetWhiteCode() {
	     var code = 0;
	     var p;
	     if (this.eoblock) {
	      code = this.lookBits(12);
	      if (code === ccittEOF) {
	       return 1;
	      }
	      if (code >> 5 === 0) {
	       p = whiteTable1[code];
	      } else {
	       p = whiteTable2[code >> 3];
	      }
	      if (p[0] > 0) {
	       this.eatBits(p[0]);
	       return p[1];
	      }
	     } else {
	      var result = this.findTableCode(1, 9, whiteTable2);
	      if (result[0]) {
	       return result[1];
	      }
	      result = this.findTableCode(11, 12, whiteTable1);
	      if (result[0]) {
	       return result[1];
	      }
	     }
	     info('bad white code');
	     this.eatBits(1);
	     return 1;
	    };
	    CCITTFaxStream.prototype.getBlackCode = function ccittFaxStreamGetBlackCode() {
	     var code, p;
	     if (this.eoblock) {
	      code = this.lookBits(13);
	      if (code === ccittEOF) {
	       return 1;
	      }
	      if (code >> 7 === 0) {
	       p = blackTable1[code];
	      } else if (code >> 9 === 0 && code >> 7 !== 0) {
	       p = blackTable2[(code >> 1) - 64];
	      } else {
	       p = blackTable3[code >> 7];
	      }
	      if (p[0] > 0) {
	       this.eatBits(p[0]);
	       return p[1];
	      }
	     } else {
	      var result = this.findTableCode(2, 6, blackTable3);
	      if (result[0]) {
	       return result[1];
	      }
	      result = this.findTableCode(7, 12, blackTable2, 64);
	      if (result[0]) {
	       return result[1];
	      }
	      result = this.findTableCode(10, 13, blackTable1);
	      if (result[0]) {
	       return result[1];
	      }
	     }
	     info('bad black code');
	     this.eatBits(1);
	     return 1;
	    };
	    CCITTFaxStream.prototype.lookBits = function CCITTFaxStream_lookBits(n) {
	     var c;
	     while (this.inputBits < n) {
	      if ((c = this.str.getByte()) === -1) {
	       if (this.inputBits === 0) {
	        return ccittEOF;
	       }
	       return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;
	      }
	      this.inputBuf = this.inputBuf << 8 | c;
	      this.inputBits += 8;
	     }
	     return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;
	    };
	    CCITTFaxStream.prototype.eatBits = function CCITTFaxStream_eatBits(n) {
	     if ((this.inputBits -= n) < 0) {
	      this.inputBits = 0;
	     }
	    };
	    return CCITTFaxStream;
	   }();
	   var LZWStream = function LZWStreamClosure() {
	    function LZWStream(str, maybeLength, earlyChange) {
	     this.str = str;
	     this.dict = str.dict;
	     this.cachedData = 0;
	     this.bitsCached = 0;
	     var maxLzwDictionarySize = 4096;
	     var lzwState = {
	      earlyChange: earlyChange,
	      codeLength: 9,
	      nextCode: 258,
	      dictionaryValues: new Uint8Array(maxLzwDictionarySize),
	      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),
	      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),
	      currentSequence: new Uint8Array(maxLzwDictionarySize),
	      currentSequenceLength: 0
	     };
	     for (var i = 0; i < 256; ++i) {
	      lzwState.dictionaryValues[i] = i;
	      lzwState.dictionaryLengths[i] = 1;
	     }
	     this.lzwState = lzwState;
	     DecodeStream.call(this, maybeLength);
	    }
	    LZWStream.prototype = Object.create(DecodeStream.prototype);
	    LZWStream.prototype.readBits = function LZWStream_readBits(n) {
	     var bitsCached = this.bitsCached;
	     var cachedData = this.cachedData;
	     while (bitsCached < n) {
	      var c = this.str.getByte();
	      if (c === -1) {
	       this.eof = true;
	       return null;
	      }
	      cachedData = cachedData << 8 | c;
	      bitsCached += 8;
	     }
	     this.bitsCached = bitsCached -= n;
	     this.cachedData = cachedData;
	     this.lastCode = null;
	     return cachedData >>> bitsCached & (1 << n) - 1;
	    };
	    LZWStream.prototype.readBlock = function LZWStream_readBlock() {
	     var blockSize = 512;
	     var estimatedDecodedSize = blockSize * 2, decodedSizeDelta = blockSize;
	     var i, j, q;
	     var lzwState = this.lzwState;
	     if (!lzwState) {
	      return;
	     }
	     var earlyChange = lzwState.earlyChange;
	     var nextCode = lzwState.nextCode;
	     var dictionaryValues = lzwState.dictionaryValues;
	     var dictionaryLengths = lzwState.dictionaryLengths;
	     var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;
	     var codeLength = lzwState.codeLength;
	     var prevCode = lzwState.prevCode;
	     var currentSequence = lzwState.currentSequence;
	     var currentSequenceLength = lzwState.currentSequenceLength;
	     var decodedLength = 0;
	     var currentBufferLength = this.bufferLength;
	     var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);
	     for (i = 0; i < blockSize; i++) {
	      var code = this.readBits(codeLength);
	      var hasPrev = currentSequenceLength > 0;
	      if (code < 256) {
	       currentSequence[0] = code;
	       currentSequenceLength = 1;
	      } else if (code >= 258) {
	       if (code < nextCode) {
	        currentSequenceLength = dictionaryLengths[code];
	        for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {
	         currentSequence[j] = dictionaryValues[q];
	         q = dictionaryPrevCodes[q];
	        }
	       } else {
	        currentSequence[currentSequenceLength++] = currentSequence[0];
	       }
	      } else if (code === 256) {
	       codeLength = 9;
	       nextCode = 258;
	       currentSequenceLength = 0;
	       continue;
	      } else {
	       this.eof = true;
	       delete this.lzwState;
	       break;
	      }
	      if (hasPrev) {
	       dictionaryPrevCodes[nextCode] = prevCode;
	       dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;
	       dictionaryValues[nextCode] = currentSequence[0];
	       nextCode++;
	       codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;
	      }
	      prevCode = code;
	      decodedLength += currentSequenceLength;
	      if (estimatedDecodedSize < decodedLength) {
	       do {
	        estimatedDecodedSize += decodedSizeDelta;
	       } while (estimatedDecodedSize < decodedLength);
	       buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);
	      }
	      for (j = 0; j < currentSequenceLength; j++) {
	       buffer[currentBufferLength++] = currentSequence[j];
	      }
	     }
	     lzwState.nextCode = nextCode;
	     lzwState.codeLength = codeLength;
	     lzwState.prevCode = prevCode;
	     lzwState.currentSequenceLength = currentSequenceLength;
	     this.bufferLength = currentBufferLength;
	    };
	    return LZWStream;
	   }();
	   var NullStream = function NullStreamClosure() {
	    function NullStream() {
	     Stream.call(this, new Uint8Array(0));
	    }
	    NullStream.prototype = Stream.prototype;
	    return NullStream;
	   }();
	   exports.Ascii85Stream = Ascii85Stream;
	   exports.AsciiHexStream = AsciiHexStream;
	   exports.CCITTFaxStream = CCITTFaxStream;
	   exports.DecryptStream = DecryptStream;
	   exports.DecodeStream = DecodeStream;
	   exports.FlateStream = FlateStream;
	   exports.Jbig2Stream = Jbig2Stream;
	   exports.JpegStream = JpegStream;
	   exports.JpxStream = JpxStream;
	   exports.NullStream = NullStream;
	   exports.PredictorStream = PredictorStream;
	   exports.RunLengthStream = RunLengthStream;
	   exports.Stream = Stream;
	   exports.StreamsSequenceStream = StreamsSequenceStream;
	   exports.StringStream = StringStream;
	   exports.LZWStream = LZWStream;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsDisplayAnnotationLayer = {}, root.pdfjsSharedUtil, root.pdfjsDisplayDOMUtils);
	  }(this, function (exports, sharedUtil, displayDOMUtils) {
	   var AnnotationBorderStyleType = sharedUtil.AnnotationBorderStyleType;
	   var AnnotationType = sharedUtil.AnnotationType;
	   var Util = sharedUtil.Util;
	   var addLinkAttributes = displayDOMUtils.addLinkAttributes;
	   var LinkTarget = displayDOMUtils.LinkTarget;
	   var getFilenameFromUrl = displayDOMUtils.getFilenameFromUrl;
	   var warn = sharedUtil.warn;
	   var CustomStyle = displayDOMUtils.CustomStyle;
	   var getDefaultSetting = displayDOMUtils.getDefaultSetting;
	   function AnnotationElementFactory() {
	   }
	   AnnotationElementFactory.prototype = {
	    create: function AnnotationElementFactory_create(parameters) {
	     var subtype = parameters.data.annotationType;
	     switch (subtype) {
	     case AnnotationType.LINK:
	      return new LinkAnnotationElement(parameters);
	     case AnnotationType.TEXT:
	      return new TextAnnotationElement(parameters);
	     case AnnotationType.WIDGET:
	      var fieldType = parameters.data.fieldType;
	      switch (fieldType) {
	      case 'Tx':
	       return new TextWidgetAnnotationElement(parameters);
	      case 'Btn':
	       if (parameters.data.radioButton) {
	        return new RadioButtonWidgetAnnotationElement(parameters);
	       } else if (parameters.data.checkBox) {
	        return new CheckboxWidgetAnnotationElement(parameters);
	       }
	       warn('Unimplemented button widget annotation: pushbutton');
	       break;
	      case 'Ch':
	       return new ChoiceWidgetAnnotationElement(parameters);
	      }
	      return new WidgetAnnotationElement(parameters);
	     case AnnotationType.POPUP:
	      return new PopupAnnotationElement(parameters);
	     case AnnotationType.HIGHLIGHT:
	      return new HighlightAnnotationElement(parameters);
	     case AnnotationType.UNDERLINE:
	      return new UnderlineAnnotationElement(parameters);
	     case AnnotationType.SQUIGGLY:
	      return new SquigglyAnnotationElement(parameters);
	     case AnnotationType.STRIKEOUT:
	      return new StrikeOutAnnotationElement(parameters);
	     case AnnotationType.FILEATTACHMENT:
	      return new FileAttachmentAnnotationElement(parameters);
	     default:
	      return new AnnotationElement(parameters);
	     }
	    }
	   };
	   var AnnotationElement = function AnnotationElementClosure() {
	    function AnnotationElement(parameters, isRenderable) {
	     this.isRenderable = isRenderable || false;
	     this.data = parameters.data;
	     this.layer = parameters.layer;
	     this.page = parameters.page;
	     this.viewport = parameters.viewport;
	     this.linkService = parameters.linkService;
	     this.downloadManager = parameters.downloadManager;
	     this.imageResourcesPath = parameters.imageResourcesPath;
	     this.renderInteractiveForms = parameters.renderInteractiveForms;
	     if (isRenderable) {
	      this.container = this._createContainer();
	     }
	    }
	    AnnotationElement.prototype = {
	     _createContainer: function AnnotationElement_createContainer() {
	      var data = this.data, page = this.page, viewport = this.viewport;
	      var container = document.createElement('section');
	      var width = data.rect[2] - data.rect[0];
	      var height = data.rect[3] - data.rect[1];
	      container.setAttribute('data-annotation-id', data.id);
	      var rect = Util.normalizeRect([
	       data.rect[0],
	       page.view[3] - data.rect[1] + page.view[1],
	       data.rect[2],
	       page.view[3] - data.rect[3] + page.view[1]
	      ]);
	      CustomStyle.setProp('transform', container, 'matrix(' + viewport.transform.join(',') + ')');
	      CustomStyle.setProp('transformOrigin', container, -rect[0] + 'px ' + -rect[1] + 'px');
	      if (data.borderStyle.width > 0) {
	       container.style.borderWidth = data.borderStyle.width + 'px';
	       if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {
	        width = width - 2 * data.borderStyle.width;
	        height = height - 2 * data.borderStyle.width;
	       }
	       var horizontalRadius = data.borderStyle.horizontalCornerRadius;
	       var verticalRadius = data.borderStyle.verticalCornerRadius;
	       if (horizontalRadius > 0 || verticalRadius > 0) {
	        var radius = horizontalRadius + 'px / ' + verticalRadius + 'px';
	        CustomStyle.setProp('borderRadius', container, radius);
	       }
	       switch (data.borderStyle.style) {
	       case AnnotationBorderStyleType.SOLID:
	        container.style.borderStyle = 'solid';
	        break;
	       case AnnotationBorderStyleType.DASHED:
	        container.style.borderStyle = 'dashed';
	        break;
	       case AnnotationBorderStyleType.BEVELED:
	        warn('Unimplemented border style: beveled');
	        break;
	       case AnnotationBorderStyleType.INSET:
	        warn('Unimplemented border style: inset');
	        break;
	       case AnnotationBorderStyleType.UNDERLINE:
	        container.style.borderBottomStyle = 'solid';
	        break;
	       default:
	        break;
	       }
	       if (data.color) {
	        container.style.borderColor = Util.makeCssRgb(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);
	       } else {
	        container.style.borderWidth = 0;
	       }
	      }
	      container.style.left = rect[0] + 'px';
	      container.style.top = rect[1] + 'px';
	      container.style.width = width + 'px';
	      container.style.height = height + 'px';
	      return container;
	     },
	     _createPopup: function AnnotationElement_createPopup(container, trigger, data) {
	      if (!trigger) {
	       trigger = document.createElement('div');
	       trigger.style.height = container.style.height;
	       trigger.style.width = container.style.width;
	       container.appendChild(trigger);
	      }
	      var popupElement = new PopupElement({
	       container: container,
	       trigger: trigger,
	       color: data.color,
	       title: data.title,
	       contents: data.contents,
	       hideWrapper: true
	      });
	      var popup = popupElement.render();
	      popup.style.left = container.style.width;
	      container.appendChild(popup);
	     },
	     render: function AnnotationElement_render() {
	      throw new Error('Abstract method AnnotationElement.render called');
	     }
	    };
	    return AnnotationElement;
	   }();
	   var LinkAnnotationElement = function LinkAnnotationElementClosure() {
	    function LinkAnnotationElement(parameters) {
	     AnnotationElement.call(this, parameters, true);
	    }
	    Util.inherit(LinkAnnotationElement, AnnotationElement, {
	     render: function LinkAnnotationElement_render() {
	      this.container.className = 'linkAnnotation';
	      var link = document.createElement('a');
	      addLinkAttributes(link, {
	       url: this.data.url,
	       target: this.data.newWindow ? LinkTarget.BLANK : undefined
	      });
	      if (!this.data.url) {
	       if (this.data.action) {
	        this._bindNamedAction(link, this.data.action);
	       } else {
	        this._bindLink(link, this.data.dest);
	       }
	      }
	      this.container.appendChild(link);
	      return this.container;
	     },
	     _bindLink: function LinkAnnotationElement_bindLink(link, destination) {
	      var self = this;
	      link.href = this.linkService.getDestinationHash(destination);
	      link.onclick = function () {
	       if (destination) {
	        self.linkService.navigateTo(destination);
	       }
	       return false;
	      };
	      if (destination) {
	       link.className = 'internalLink';
	      }
	     },
	     _bindNamedAction: function LinkAnnotationElement_bindNamedAction(link, action) {
	      var self = this;
	      link.href = this.linkService.getAnchorUrl('');
	      link.onclick = function () {
	       self.linkService.executeNamedAction(action);
	       return false;
	      };
	      link.className = 'internalLink';
	     }
	    });
	    return LinkAnnotationElement;
	   }();
	   var TextAnnotationElement = function TextAnnotationElementClosure() {
	    function TextAnnotationElement(parameters) {
	     var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
	     AnnotationElement.call(this, parameters, isRenderable);
	    }
	    Util.inherit(TextAnnotationElement, AnnotationElement, {
	     render: function TextAnnotationElement_render() {
	      this.container.className = 'textAnnotation';
	      var image = document.createElement('img');
	      image.style.height = this.container.style.height;
	      image.style.width = this.container.style.width;
	      image.src = this.imageResourcesPath + 'annotation-' + this.data.name.toLowerCase() + '.svg';
	      image.alt = '[{{type}} Annotation]';
	      image.dataset.l10nId = 'text_annotation_type';
	      image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });
	      if (!this.data.hasPopup) {
	       this._createPopup(this.container, image, this.data);
	      }
	      this.container.appendChild(image);
	      return this.container;
	     }
	    });
	    return TextAnnotationElement;
	   }();
	   var WidgetAnnotationElement = function WidgetAnnotationElementClosure() {
	    function WidgetAnnotationElement(parameters, isRenderable) {
	     AnnotationElement.call(this, parameters, isRenderable);
	    }
	    Util.inherit(WidgetAnnotationElement, AnnotationElement, {
	     render: function WidgetAnnotationElement_render() {
	      return this.container;
	     }
	    });
	    return WidgetAnnotationElement;
	   }();
	   var TextWidgetAnnotationElement = function TextWidgetAnnotationElementClosure() {
	    var TEXT_ALIGNMENT = [
	     'left',
	     'center',
	     'right'
	    ];
	    function TextWidgetAnnotationElement(parameters) {
	     var isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;
	     WidgetAnnotationElement.call(this, parameters, isRenderable);
	    }
	    Util.inherit(TextWidgetAnnotationElement, WidgetAnnotationElement, {
	     render: function TextWidgetAnnotationElement_render() {
	      this.container.className = 'textWidgetAnnotation';
	      var element = null;
	      if (this.renderInteractiveForms) {
	       if (this.data.multiLine) {
	        element = document.createElement('textarea');
	        element.textContent = this.data.fieldValue;
	       } else {
	        element = document.createElement('input');
	        element.type = 'text';
	        element.setAttribute('value', this.data.fieldValue);
	       }
	       element.disabled = this.data.readOnly;
	       if (this.data.maxLen !== null) {
	        element.maxLength = this.data.maxLen;
	       }
	       if (this.data.comb) {
	        var fieldWidth = this.data.rect[2] - this.data.rect[0];
	        var combWidth = fieldWidth / this.data.maxLen;
	        element.classList.add('comb');
	        element.style.letterSpacing = 'calc(' + combWidth + 'px - 1ch)';
	       }
	      } else {
	       element = document.createElement('div');
	       element.textContent = this.data.fieldValue;
	       element.style.verticalAlign = 'middle';
	       element.style.display = 'table-cell';
	       var font = null;
	       if (this.data.fontRefName) {
	        font = this.page.commonObjs.getData(this.data.fontRefName);
	       }
	       this._setTextStyle(element, font);
	      }
	      if (this.data.textAlignment !== null) {
	       element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];
	      }
	      this.container.appendChild(element);
	      return this.container;
	     },
	     _setTextStyle: function TextWidgetAnnotationElement_setTextStyle(element, font) {
	      var style = element.style;
	      style.fontSize = this.data.fontSize + 'px';
	      style.direction = this.data.fontDirection < 0 ? 'rtl' : 'ltr';
	      if (!font) {
	       return;
	      }
	      style.fontWeight = font.black ? font.bold ? '900' : 'bold' : font.bold ? 'bold' : 'normal';
	      style.fontStyle = font.italic ? 'italic' : 'normal';
	      var fontFamily = font.loadedName ? '"' + font.loadedName + '", ' : '';
	      var fallbackName = font.fallbackName || 'Helvetica, sans-serif';
	      style.fontFamily = fontFamily + fallbackName;
	     }
	    });
	    return TextWidgetAnnotationElement;
	   }();
	   var CheckboxWidgetAnnotationElement = function CheckboxWidgetAnnotationElementClosure() {
	    function CheckboxWidgetAnnotationElement(parameters) {
	     WidgetAnnotationElement.call(this, parameters, parameters.renderInteractiveForms);
	    }
	    Util.inherit(CheckboxWidgetAnnotationElement, WidgetAnnotationElement, {
	     render: function CheckboxWidgetAnnotationElement_render() {
	      this.container.className = 'buttonWidgetAnnotation checkBox';
	      var element = document.createElement('input');
	      element.disabled = this.data.readOnly;
	      element.type = 'checkbox';
	      if (this.data.fieldValue && this.data.fieldValue !== 'Off') {
	       element.setAttribute('checked', true);
	      }
	      this.container.appendChild(element);
	      return this.container;
	     }
	    });
	    return CheckboxWidgetAnnotationElement;
	   }();
	   var RadioButtonWidgetAnnotationElement = function RadioButtonWidgetAnnotationElementClosure() {
	    function RadioButtonWidgetAnnotationElement(parameters) {
	     WidgetAnnotationElement.call(this, parameters, parameters.renderInteractiveForms);
	    }
	    Util.inherit(RadioButtonWidgetAnnotationElement, WidgetAnnotationElement, {
	     render: function RadioButtonWidgetAnnotationElement_render() {
	      this.container.className = 'buttonWidgetAnnotation radioButton';
	      var element = document.createElement('input');
	      element.disabled = this.data.readOnly;
	      element.type = 'radio';
	      element.name = this.data.fieldName;
	      if (this.data.fieldValue === this.data.buttonValue) {
	       element.setAttribute('checked', true);
	      }
	      this.container.appendChild(element);
	      return this.container;
	     }
	    });
	    return RadioButtonWidgetAnnotationElement;
	   }();
	   var ChoiceWidgetAnnotationElement = function ChoiceWidgetAnnotationElementClosure() {
	    function ChoiceWidgetAnnotationElement(parameters) {
	     WidgetAnnotationElement.call(this, parameters, parameters.renderInteractiveForms);
	    }
	    Util.inherit(ChoiceWidgetAnnotationElement, WidgetAnnotationElement, {
	     render: function ChoiceWidgetAnnotationElement_render() {
	      this.container.className = 'choiceWidgetAnnotation';
	      var selectElement = document.createElement('select');
	      selectElement.disabled = this.data.readOnly;
	      if (!this.data.combo) {
	       selectElement.size = this.data.options.length;
	       if (this.data.multiSelect) {
	        selectElement.multiple = true;
	       }
	      }
	      for (var i = 0, ii = this.data.options.length; i < ii; i++) {
	       var option = this.data.options[i];
	       var optionElement = document.createElement('option');
	       optionElement.textContent = option.displayValue;
	       optionElement.value = option.exportValue;
	       if (this.data.fieldValue.indexOf(option.displayValue) >= 0) {
	        optionElement.setAttribute('selected', true);
	       }
	       selectElement.appendChild(optionElement);
	      }
	      this.container.appendChild(selectElement);
	      return this.container;
	     }
	    });
	    return ChoiceWidgetAnnotationElement;
	   }();
	   var PopupAnnotationElement = function PopupAnnotationElementClosure() {
	    function PopupAnnotationElement(parameters) {
	     var isRenderable = !!(parameters.data.title || parameters.data.contents);
	     AnnotationElement.call(this, parameters, isRenderable);
	    }
	    Util.inherit(PopupAnnotationElement, AnnotationElement, {
	     render: function PopupAnnotationElement_render() {
	      this.container.className = 'popupAnnotation';
	      var selector = '[data-annotation-id="' + this.data.parentId + '"]';
	      var parentElement = this.layer.querySelector(selector);
	      if (!parentElement) {
	       return this.container;
	      }
	      var popup = new PopupElement({
	       container: this.container,
	       trigger: parentElement,
	       color: this.data.color,
	       title: this.data.title,
	       contents: this.data.contents
	      });
	      var parentLeft = parseFloat(parentElement.style.left);
	      var parentWidth = parseFloat(parentElement.style.width);
	      CustomStyle.setProp('transformOrigin', this.container, -(parentLeft + parentWidth) + 'px -' + parentElement.style.top);
	      this.container.style.left = parentLeft + parentWidth + 'px';
	      this.container.appendChild(popup.render());
	      return this.container;
	     }
	    });
	    return PopupAnnotationElement;
	   }();
	   var PopupElement = function PopupElementClosure() {
	    var BACKGROUND_ENLIGHT = 0.7;
	    function PopupElement(parameters) {
	     this.container = parameters.container;
	     this.trigger = parameters.trigger;
	     this.color = parameters.color;
	     this.title = parameters.title;
	     this.contents = parameters.contents;
	     this.hideWrapper = parameters.hideWrapper || false;
	     this.pinned = false;
	    }
	    PopupElement.prototype = {
	     render: function PopupElement_render() {
	      var wrapper = document.createElement('div');
	      wrapper.className = 'popupWrapper';
	      this.hideElement = this.hideWrapper ? wrapper : this.container;
	      this.hideElement.setAttribute('hidden', true);
	      var popup = document.createElement('div');
	      popup.className = 'popup';
	      var color = this.color;
	      if (color) {
	       var r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];
	       var g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];
	       var b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];
	       popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);
	      }
	      var contents = this._formatContents(this.contents);
	      var title = document.createElement('h1');
	      title.textContent = this.title;
	      this.trigger.addEventListener('click', this._toggle.bind(this));
	      this.trigger.addEventListener('mouseover', this._show.bind(this, false));
	      this.trigger.addEventListener('mouseout', this._hide.bind(this, false));
	      popup.addEventListener('click', this._hide.bind(this, true));
	      popup.appendChild(title);
	      popup.appendChild(contents);
	      wrapper.appendChild(popup);
	      return wrapper;
	     },
	     _formatContents: function PopupElement_formatContents(contents) {
	      var p = document.createElement('p');
	      var lines = contents.split(/(?:\r\n?|\n)/);
	      for (var i = 0, ii = lines.length; i < ii; ++i) {
	       var line = lines[i];
	       p.appendChild(document.createTextNode(line));
	       if (i < ii - 1) {
	        p.appendChild(document.createElement('br'));
	       }
	      }
	      return p;
	     },
	     _toggle: function PopupElement_toggle() {
	      if (this.pinned) {
	       this._hide(true);
	      } else {
	       this._show(true);
	      }
	     },
	     _show: function PopupElement_show(pin) {
	      if (pin) {
	       this.pinned = true;
	      }
	      if (this.hideElement.hasAttribute('hidden')) {
	       this.hideElement.removeAttribute('hidden');
	       this.container.style.zIndex += 1;
	      }
	     },
	     _hide: function PopupElement_hide(unpin) {
	      if (unpin) {
	       this.pinned = false;
	      }
	      if (!this.hideElement.hasAttribute('hidden') && !this.pinned) {
	       this.hideElement.setAttribute('hidden', true);
	       this.container.style.zIndex -= 1;
	      }
	     }
	    };
	    return PopupElement;
	   }();
	   var HighlightAnnotationElement = function HighlightAnnotationElementClosure() {
	    function HighlightAnnotationElement(parameters) {
	     var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
	     AnnotationElement.call(this, parameters, isRenderable);
	    }
	    Util.inherit(HighlightAnnotationElement, AnnotationElement, {
	     render: function HighlightAnnotationElement_render() {
	      this.container.className = 'highlightAnnotation';
	      if (!this.data.hasPopup) {
	       this._createPopup(this.container, null, this.data);
	      }
	      return this.container;
	     }
	    });
	    return HighlightAnnotationElement;
	   }();
	   var UnderlineAnnotationElement = function UnderlineAnnotationElementClosure() {
	    function UnderlineAnnotationElement(parameters) {
	     var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
	     AnnotationElement.call(this, parameters, isRenderable);
	    }
	    Util.inherit(UnderlineAnnotationElement, AnnotationElement, {
	     render: function UnderlineAnnotationElement_render() {
	      this.container.className = 'underlineAnnotation';
	      if (!this.data.hasPopup) {
	       this._createPopup(this.container, null, this.data);
	      }
	      return this.container;
	     }
	    });
	    return UnderlineAnnotationElement;
	   }();
	   var SquigglyAnnotationElement = function SquigglyAnnotationElementClosure() {
	    function SquigglyAnnotationElement(parameters) {
	     var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
	     AnnotationElement.call(this, parameters, isRenderable);
	    }
	    Util.inherit(SquigglyAnnotationElement, AnnotationElement, {
	     render: function SquigglyAnnotationElement_render() {
	      this.container.className = 'squigglyAnnotation';
	      if (!this.data.hasPopup) {
	       this._createPopup(this.container, null, this.data);
	      }
	      return this.container;
	     }
	    });
	    return SquigglyAnnotationElement;
	   }();
	   var StrikeOutAnnotationElement = function StrikeOutAnnotationElementClosure() {
	    function StrikeOutAnnotationElement(parameters) {
	     var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
	     AnnotationElement.call(this, parameters, isRenderable);
	    }
	    Util.inherit(StrikeOutAnnotationElement, AnnotationElement, {
	     render: function StrikeOutAnnotationElement_render() {
	      this.container.className = 'strikeoutAnnotation';
	      if (!this.data.hasPopup) {
	       this._createPopup(this.container, null, this.data);
	      }
	      return this.container;
	     }
	    });
	    return StrikeOutAnnotationElement;
	   }();
	   var FileAttachmentAnnotationElement = function FileAttachmentAnnotationElementClosure() {
	    function FileAttachmentAnnotationElement(parameters) {
	     AnnotationElement.call(this, parameters, true);
	     this.filename = getFilenameFromUrl(parameters.data.file.filename);
	     this.content = parameters.data.file.content;
	    }
	    Util.inherit(FileAttachmentAnnotationElement, AnnotationElement, {
	     render: function FileAttachmentAnnotationElement_render() {
	      this.container.className = 'fileAttachmentAnnotation';
	      var trigger = document.createElement('div');
	      trigger.style.height = this.container.style.height;
	      trigger.style.width = this.container.style.width;
	      trigger.addEventListener('dblclick', this._download.bind(this));
	      if (!this.data.hasPopup && (this.data.title || this.data.contents)) {
	       this._createPopup(this.container, trigger, this.data);
	      }
	      this.container.appendChild(trigger);
	      return this.container;
	     },
	     _download: function FileAttachmentAnnotationElement_download() {
	      if (!this.downloadManager) {
	       warn('Download cannot be started due to unavailable download manager');
	       return;
	      }
	      this.downloadManager.downloadData(this.content, this.filename, '');
	     }
	    });
	    return FileAttachmentAnnotationElement;
	   }();
	   var AnnotationLayer = function AnnotationLayerClosure() {
	    return {
	     render: function AnnotationLayer_render(parameters) {
	      var annotationElementFactory = new AnnotationElementFactory();
	      for (var i = 0, ii = parameters.annotations.length; i < ii; i++) {
	       var data = parameters.annotations[i];
	       if (!data) {
	        continue;
	       }
	       var properties = {
	        data: data,
	        layer: parameters.div,
	        page: parameters.page,
	        viewport: parameters.viewport,
	        linkService: parameters.linkService,
	        downloadManager: parameters.downloadManager,
	        imageResourcesPath: parameters.imageResourcesPath || getDefaultSetting('imageResourcesPath'),
	        renderInteractiveForms: parameters.renderInteractiveForms || false
	       };
	       var element = annotationElementFactory.create(properties);
	       if (element.isRenderable) {
	        parameters.div.appendChild(element.render());
	       }
	      }
	     },
	     update: function AnnotationLayer_update(parameters) {
	      for (var i = 0, ii = parameters.annotations.length; i < ii; i++) {
	       var data = parameters.annotations[i];
	       var element = parameters.div.querySelector('[data-annotation-id="' + data.id + '"]');
	       if (element) {
	        CustomStyle.setProp('transform', element, 'matrix(' + parameters.viewport.transform.join(',') + ')');
	       }
	      }
	      parameters.div.removeAttribute('hidden');
	     }
	    };
	   }();
	   exports.AnnotationLayer = AnnotationLayer;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsDisplayTextLayer = {}, root.pdfjsSharedUtil, root.pdfjsDisplayDOMUtils);
	  }(this, function (exports, sharedUtil, displayDOMUtils) {
	   var Util = sharedUtil.Util;
	   var createPromiseCapability = sharedUtil.createPromiseCapability;
	   var CustomStyle = displayDOMUtils.CustomStyle;
	   var getDefaultSetting = displayDOMUtils.getDefaultSetting;
	   var renderTextLayer = function renderTextLayerClosure() {
	    var MAX_TEXT_DIVS_TO_RENDER = 100000;
	    var NonWhitespaceRegexp = /\S/;
	    function isAllWhitespace(str) {
	     return !NonWhitespaceRegexp.test(str);
	    }
	    var styleBuf = [
	     'left: ',
	     0,
	     'px; top: ',
	     0,
	     'px; font-size: ',
	     0,
	     'px; font-family: ',
	     '',
	     ';'
	    ];
	    function appendText(task, geom, styles) {
	     var textDiv = document.createElement('div');
	     var textDivProperties = {
	      style: null,
	      angle: 0,
	      canvasWidth: 0,
	      isWhitespace: false,
	      originalTransform: null,
	      paddingBottom: 0,
	      paddingLeft: 0,
	      paddingRight: 0,
	      paddingTop: 0,
	      scale: 1
	     };
	     task._textDivs.push(textDiv);
	     if (isAllWhitespace(geom.str)) {
	      textDivProperties.isWhitespace = true;
	      task._textDivProperties.set(textDiv, textDivProperties);
	      return;
	     }
	     var tx = Util.transform(task._viewport.transform, geom.transform);
	     var angle = Math.atan2(tx[1], tx[0]);
	     var style = styles[geom.fontName];
	     if (style.vertical) {
	      angle += Math.PI / 2;
	     }
	     var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);
	     var fontAscent = fontHeight;
	     if (style.ascent) {
	      fontAscent = style.ascent * fontAscent;
	     } else if (style.descent) {
	      fontAscent = (1 + style.descent) * fontAscent;
	     }
	     var left;
	     var top;
	     if (angle === 0) {
	      left = tx[4];
	      top = tx[5] - fontAscent;
	     } else {
	      left = tx[4] + fontAscent * Math.sin(angle);
	      top = tx[5] - fontAscent * Math.cos(angle);
	     }
	     styleBuf[1] = left;
	     styleBuf[3] = top;
	     styleBuf[5] = fontHeight;
	     styleBuf[7] = style.fontFamily;
	     textDivProperties.style = styleBuf.join('');
	     textDiv.setAttribute('style', textDivProperties.style);
	     textDiv.textContent = geom.str;
	     if (getDefaultSetting('pdfBug')) {
	      textDiv.dataset.fontName = geom.fontName;
	     }
	     if (angle !== 0) {
	      textDivProperties.angle = angle * (180 / Math.PI);
	     }
	     if (geom.str.length > 1) {
	      if (style.vertical) {
	       textDivProperties.canvasWidth = geom.height * task._viewport.scale;
	      } else {
	       textDivProperties.canvasWidth = geom.width * task._viewport.scale;
	      }
	     }
	     task._textDivProperties.set(textDiv, textDivProperties);
	     if (task._enhanceTextSelection) {
	      var angleCos = 1, angleSin = 0;
	      if (angle !== 0) {
	       angleCos = Math.cos(angle);
	       angleSin = Math.sin(angle);
	      }
	      var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;
	      var divHeight = fontHeight;
	      var m, b;
	      if (angle !== 0) {
	       m = [
	        angleCos,
	        angleSin,
	        -angleSin,
	        angleCos,
	        left,
	        top
	       ];
	       b = Util.getAxialAlignedBoundingBox([
	        0,
	        0,
	        divWidth,
	        divHeight
	       ], m);
	      } else {
	       b = [
	        left,
	        top,
	        left + divWidth,
	        top + divHeight
	       ];
	      }
	      task._bounds.push({
	       left: b[0],
	       top: b[1],
	       right: b[2],
	       bottom: b[3],
	       div: textDiv,
	       size: [
	        divWidth,
	        divHeight
	       ],
	       m: m
	      });
	     }
	    }
	    function render(task) {
	     if (task._canceled) {
	      return;
	     }
	     var textLayerFrag = task._container;
	     var textDivs = task._textDivs;
	     var capability = task._capability;
	     var textDivsLength = textDivs.length;
	     if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {
	      task._renderingDone = true;
	      capability.resolve();
	      return;
	     }
	     var canvas = document.createElement('canvas');
	     var ctx = canvas.getContext('2d', { alpha: false });
	     var lastFontSize;
	     var lastFontFamily;
	     for (var i = 0; i < textDivsLength; i++) {
	      var textDiv = textDivs[i];
	      var textDivProperties = task._textDivProperties.get(textDiv);
	      if (textDivProperties.isWhitespace) {
	       continue;
	      }
	      var fontSize = textDiv.style.fontSize;
	      var fontFamily = textDiv.style.fontFamily;
	      if (fontSize !== lastFontSize || fontFamily !== lastFontFamily) {
	       ctx.font = fontSize + ' ' + fontFamily;
	       lastFontSize = fontSize;
	       lastFontFamily = fontFamily;
	      }
	      var width = ctx.measureText(textDiv.textContent).width;
	      textLayerFrag.appendChild(textDiv);
	      var transform = '';
	      if (textDivProperties.canvasWidth !== 0 && width > 0) {
	       textDivProperties.scale = textDivProperties.canvasWidth / width;
	       transform = 'scaleX(' + textDivProperties.scale + ')';
	      }
	      if (textDivProperties.angle !== 0) {
	       transform = 'rotate(' + textDivProperties.angle + 'deg) ' + transform;
	      }
	      if (transform !== '') {
	       textDivProperties.originalTransform = transform;
	       CustomStyle.setProp('transform', textDiv, transform);
	      }
	      task._textDivProperties.set(textDiv, textDivProperties);
	     }
	     task._renderingDone = true;
	     capability.resolve();
	    }
	    function expand(task) {
	     var bounds = task._bounds;
	     var viewport = task._viewport;
	     var expanded = expandBounds(viewport.width, viewport.height, bounds);
	     for (var i = 0; i < expanded.length; i++) {
	      var div = bounds[i].div;
	      var divProperties = task._textDivProperties.get(div);
	      if (divProperties.angle === 0) {
	       divProperties.paddingLeft = bounds[i].left - expanded[i].left;
	       divProperties.paddingTop = bounds[i].top - expanded[i].top;
	       divProperties.paddingRight = expanded[i].right - bounds[i].right;
	       divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;
	       task._textDivProperties.set(div, divProperties);
	       continue;
	      }
	      var e = expanded[i], b = bounds[i];
	      var m = b.m, c = m[0], s = m[1];
	      var points = [
	       [
	        0,
	        0
	       ],
	       [
	        0,
	        b.size[1]
	       ],
	       [
	        b.size[0],
	        0
	       ],
	       b.size
	      ];
	      var ts = new Float64Array(64);
	      points.forEach(function (p, i) {
	       var t = Util.applyTransform(p, m);
	       ts[i + 0] = c && (e.left - t[0]) / c;
	       ts[i + 4] = s && (e.top - t[1]) / s;
	       ts[i + 8] = c && (e.right - t[0]) / c;
	       ts[i + 12] = s && (e.bottom - t[1]) / s;
	       ts[i + 16] = s && (e.left - t[0]) / -s;
	       ts[i + 20] = c && (e.top - t[1]) / c;
	       ts[i + 24] = s && (e.right - t[0]) / -s;
	       ts[i + 28] = c && (e.bottom - t[1]) / c;
	       ts[i + 32] = c && (e.left - t[0]) / -c;
	       ts[i + 36] = s && (e.top - t[1]) / -s;
	       ts[i + 40] = c && (e.right - t[0]) / -c;
	       ts[i + 44] = s && (e.bottom - t[1]) / -s;
	       ts[i + 48] = s && (e.left - t[0]) / s;
	       ts[i + 52] = c && (e.top - t[1]) / -c;
	       ts[i + 56] = s && (e.right - t[0]) / s;
	       ts[i + 60] = c && (e.bottom - t[1]) / -c;
	      });
	      var findPositiveMin = function (ts, offset, count) {
	       var result = 0;
	       for (var i = 0; i < count; i++) {
	        var t = ts[offset++];
	        if (t > 0) {
	         result = result ? Math.min(t, result) : t;
	        }
	       }
	       return result;
	      };
	      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));
	      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;
	      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;
	      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;
	      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;
	      task._textDivProperties.set(div, divProperties);
	     }
	    }
	    function expandBounds(width, height, boxes) {
	     var bounds = boxes.map(function (box, i) {
	      return {
	       x1: box.left,
	       y1: box.top,
	       x2: box.right,
	       y2: box.bottom,
	       index: i,
	       x1New: undefined,
	       x2New: undefined
	      };
	     });
	     expandBoundsLTR(width, bounds);
	     var expanded = new Array(boxes.length);
	     bounds.forEach(function (b) {
	      var i = b.index;
	      expanded[i] = {
	       left: b.x1New,
	       top: 0,
	       right: b.x2New,
	       bottom: 0
	      };
	     });
	     boxes.map(function (box, i) {
	      var e = expanded[i], b = bounds[i];
	      b.x1 = box.top;
	      b.y1 = width - e.right;
	      b.x2 = box.bottom;
	      b.y2 = width - e.left;
	      b.index = i;
	      b.x1New = undefined;
	      b.x2New = undefined;
	     });
	     expandBoundsLTR(height, bounds);
	     bounds.forEach(function (b) {
	      var i = b.index;
	      expanded[i].top = b.x1New;
	      expanded[i].bottom = b.x2New;
	     });
	     return expanded;
	    }
	    function expandBoundsLTR(width, bounds) {
	     bounds.sort(function (a, b) {
	      return a.x1 - b.x1 || a.index - b.index;
	     });
	     var fakeBoundary = {
	      x1: -Infinity,
	      y1: -Infinity,
	      x2: 0,
	      y2: Infinity,
	      index: -1,
	      x1New: 0,
	      x2New: 0
	     };
	     var horizon = [{
	       start: -Infinity,
	       end: Infinity,
	       boundary: fakeBoundary
	      }];
	     bounds.forEach(function (boundary) {
	      var i = 0;
	      while (i < horizon.length && horizon[i].end <= boundary.y1) {
	       i++;
	      }
	      var j = horizon.length - 1;
	      while (j >= 0 && horizon[j].start >= boundary.y2) {
	       j--;
	      }
	      var horizonPart, affectedBoundary;
	      var q, k, maxXNew = -Infinity;
	      for (q = i; q <= j; q++) {
	       horizonPart = horizon[q];
	       affectedBoundary = horizonPart.boundary;
	       var xNew;
	       if (affectedBoundary.x2 > boundary.x1) {
	        xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;
	       } else if (affectedBoundary.x2New === undefined) {
	        xNew = (affectedBoundary.x2 + boundary.x1) / 2;
	       } else {
	        xNew = affectedBoundary.x2New;
	       }
	       if (xNew > maxXNew) {
	        maxXNew = xNew;
	       }
	      }
	      boundary.x1New = maxXNew;
	      for (q = i; q <= j; q++) {
	       horizonPart = horizon[q];
	       affectedBoundary = horizonPart.boundary;
	       if (affectedBoundary.x2New === undefined) {
	        if (affectedBoundary.x2 > boundary.x1) {
	         if (affectedBoundary.index > boundary.index) {
	          affectedBoundary.x2New = affectedBoundary.x2;
	         }
	        } else {
	         affectedBoundary.x2New = maxXNew;
	        }
	       } else if (affectedBoundary.x2New > maxXNew) {
	        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);
	       }
	      }
	      var changedHorizon = [], lastBoundary = null;
	      for (q = i; q <= j; q++) {
	       horizonPart = horizon[q];
	       affectedBoundary = horizonPart.boundary;
	       var useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;
	       if (lastBoundary === useBoundary) {
	        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;
	       } else {
	        changedHorizon.push({
	         start: horizonPart.start,
	         end: horizonPart.end,
	         boundary: useBoundary
	        });
	        lastBoundary = useBoundary;
	       }
	      }
	      if (horizon[i].start < boundary.y1) {
	       changedHorizon[0].start = boundary.y1;
	       changedHorizon.unshift({
	        start: horizon[i].start,
	        end: boundary.y1,
	        boundary: horizon[i].boundary
	       });
	      }
	      if (boundary.y2 < horizon[j].end) {
	       changedHorizon[changedHorizon.length - 1].end = boundary.y2;
	       changedHorizon.push({
	        start: boundary.y2,
	        end: horizon[j].end,
	        boundary: horizon[j].boundary
	       });
	      }
	      for (q = i; q <= j; q++) {
	       horizonPart = horizon[q];
	       affectedBoundary = horizonPart.boundary;
	       if (affectedBoundary.x2New !== undefined) {
	        continue;
	       }
	       var used = false;
	       for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {
	        used = horizon[k].boundary === affectedBoundary;
	       }
	       for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {
	        used = horizon[k].boundary === affectedBoundary;
	       }
	       for (k = 0; !used && k < changedHorizon.length; k++) {
	        used = changedHorizon[k].boundary === affectedBoundary;
	       }
	       if (!used) {
	        affectedBoundary.x2New = maxXNew;
	       }
	      }
	      Array.prototype.splice.apply(horizon, [
	       i,
	       j - i + 1
	      ].concat(changedHorizon));
	     });
	     horizon.forEach(function (horizonPart) {
	      var affectedBoundary = horizonPart.boundary;
	      if (affectedBoundary.x2New === undefined) {
	       affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);
	      }
	     });
	    }
	    function TextLayerRenderTask(textContent, container, viewport, textDivs, enhanceTextSelection) {
	     this._textContent = textContent;
	     this._container = container;
	     this._viewport = viewport;
	     this._textDivs = textDivs || [];
	     this._textDivProperties = new WeakMap();
	     this._renderingDone = false;
	     this._canceled = false;
	     this._capability = createPromiseCapability();
	     this._renderTimer = null;
	     this._bounds = [];
	     this._enhanceTextSelection = !!enhanceTextSelection;
	    }
	    TextLayerRenderTask.prototype = {
	     get promise() {
	      return this._capability.promise;
	     },
	     cancel: function TextLayer_cancel() {
	      this._canceled = true;
	      if (this._renderTimer !== null) {
	       clearTimeout(this._renderTimer);
	       this._renderTimer = null;
	      }
	      this._capability.reject('canceled');
	     },
	     _render: function TextLayer_render(timeout) {
	      var textItems = this._textContent.items;
	      var textStyles = this._textContent.styles;
	      for (var i = 0, len = textItems.length; i < len; i++) {
	       appendText(this, textItems[i], textStyles);
	      }
	      if (!timeout) {
	       render(this);
	      } else {
	       var self = this;
	       this._renderTimer = setTimeout(function () {
	        render(self);
	        self._renderTimer = null;
	       }, timeout);
	      }
	     },
	     expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {
	      if (!this._enhanceTextSelection || !this._renderingDone) {
	       return;
	      }
	      if (this._bounds !== null) {
	       expand(this);
	       this._bounds = null;
	      }
	      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {
	       var div = this._textDivs[i];
	       var divProperties = this._textDivProperties.get(div);
	       if (divProperties.isWhitespace) {
	        continue;
	       }
	       if (expandDivs) {
	        var transform = '', padding = '';
	        if (divProperties.scale !== 1) {
	         transform = 'scaleX(' + divProperties.scale + ')';
	        }
	        if (divProperties.angle !== 0) {
	         transform = 'rotate(' + divProperties.angle + 'deg) ' + transform;
	        }
	        if (divProperties.paddingLeft !== 0) {
	         padding += ' padding-left: ' + divProperties.paddingLeft / divProperties.scale + 'px;';
	         transform += ' translateX(' + -divProperties.paddingLeft / divProperties.scale + 'px)';
	        }
	        if (divProperties.paddingTop !== 0) {
	         padding += ' padding-top: ' + divProperties.paddingTop + 'px;';
	         transform += ' translateY(' + -divProperties.paddingTop + 'px)';
	        }
	        if (divProperties.paddingRight !== 0) {
	         padding += ' padding-right: ' + divProperties.paddingRight / divProperties.scale + 'px;';
	        }
	        if (divProperties.paddingBottom !== 0) {
	         padding += ' padding-bottom: ' + divProperties.paddingBottom + 'px;';
	        }
	        if (padding !== '') {
	         div.setAttribute('style', divProperties.style + padding);
	        }
	        if (transform !== '') {
	         CustomStyle.setProp('transform', div, transform);
	        }
	       } else {
	        div.style.padding = 0;
	        CustomStyle.setProp('transform', div, divProperties.originalTransform || '');
	       }
	      }
	     }
	    };
	    function renderTextLayer(renderParameters) {
	     var task = new TextLayerRenderTask(renderParameters.textContent, renderParameters.container, renderParameters.viewport, renderParameters.textDivs, renderParameters.enhanceTextSelection);
	     task._render(renderParameters.timeout);
	     return task;
	    }
	    return renderTextLayer;
	   }();
	   exports.renderTextLayer = renderTextLayer;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsDisplayWebGL = {}, root.pdfjsSharedUtil, root.pdfjsDisplayDOMUtils);
	  }(this, function (exports, sharedUtil, displayDOMUtils) {
	   var shadow = sharedUtil.shadow;
	   var getDefaultSetting = displayDOMUtils.getDefaultSetting;
	   var WebGLUtils = function WebGLUtilsClosure() {
	    function loadShader(gl, code, shaderType) {
	     var shader = gl.createShader(shaderType);
	     gl.shaderSource(shader, code);
	     gl.compileShader(shader);
	     var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);
	     if (!compiled) {
	      var errorMsg = gl.getShaderInfoLog(shader);
	      throw new Error('Error during shader compilation: ' + errorMsg);
	     }
	     return shader;
	    }
	    function createVertexShader(gl, code) {
	     return loadShader(gl, code, gl.VERTEX_SHADER);
	    }
	    function createFragmentShader(gl, code) {
	     return loadShader(gl, code, gl.FRAGMENT_SHADER);
	    }
	    function createProgram(gl, shaders) {
	     var program = gl.createProgram();
	     for (var i = 0, ii = shaders.length; i < ii; ++i) {
	      gl.attachShader(program, shaders[i]);
	     }
	     gl.linkProgram(program);
	     var linked = gl.getProgramParameter(program, gl.LINK_STATUS);
	     if (!linked) {
	      var errorMsg = gl.getProgramInfoLog(program);
	      throw new Error('Error during program linking: ' + errorMsg);
	     }
	     return program;
	    }
	    function createTexture(gl, image, textureId) {
	     gl.activeTexture(textureId);
	     var texture = gl.createTexture();
	     gl.bindTexture(gl.TEXTURE_2D, texture);
	     gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
	     gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
	     gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
	     gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
	     gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);
	     return texture;
	    }
	    var currentGL, currentCanvas;
	    function generateGL() {
	     if (currentGL) {
	      return;
	     }
	     currentCanvas = document.createElement('canvas');
	     currentGL = currentCanvas.getContext('webgl', { premultipliedalpha: false });
	    }
	    var smaskVertexShaderCode = '\
	  attribute vec2 a_position;                                    \
	  attribute vec2 a_texCoord;                                    \
	                                                                \
	  uniform vec2 u_resolution;                                    \
	                                                                \
	  varying vec2 v_texCoord;                                      \
	                                                                \
	  void main() {                                                 \
	    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \
	    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \
	                                                                \
	    v_texCoord = a_texCoord;                                    \
	  }                                                             ';
	    var smaskFragmentShaderCode = '\
	  precision mediump float;                                      \
	                                                                \
	  uniform vec4 u_backdrop;                                      \
	  uniform int u_subtype;                                        \
	  uniform sampler2D u_image;                                    \
	  uniform sampler2D u_mask;                                     \
	                                                                \
	  varying vec2 v_texCoord;                                      \
	                                                                \
	  void main() {                                                 \
	    vec4 imageColor = texture2D(u_image, v_texCoord);           \
	    vec4 maskColor = texture2D(u_mask, v_texCoord);             \
	    if (u_backdrop.a > 0.0) {                                   \
	      maskColor.rgb = maskColor.rgb * maskColor.a +             \
	                      u_backdrop.rgb * (1.0 - maskColor.a);     \
	    }                                                           \
	    float lum;                                                  \
	    if (u_subtype == 0) {                                       \
	      lum = maskColor.a;                                        \
	    } else {                                                    \
	      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \
	            maskColor.b * 0.11;                                 \
	    }                                                           \
	    imageColor.a *= lum;                                        \
	    imageColor.rgb *= imageColor.a;                             \
	    gl_FragColor = imageColor;                                  \
	  }                                                             ';
	    var smaskCache = null;
	    function initSmaskGL() {
	     var canvas, gl;
	     generateGL();
	     canvas = currentCanvas;
	     currentCanvas = null;
	     gl = currentGL;
	     currentGL = null;
	     var vertexShader = createVertexShader(gl, smaskVertexShaderCode);
	     var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);
	     var program = createProgram(gl, [
	      vertexShader,
	      fragmentShader
	     ]);
	     gl.useProgram(program);
	     var cache = {};
	     cache.gl = gl;
	     cache.canvas = canvas;
	     cache.resolutionLocation = gl.getUniformLocation(program, 'u_resolution');
	     cache.positionLocation = gl.getAttribLocation(program, 'a_position');
	     cache.backdropLocation = gl.getUniformLocation(program, 'u_backdrop');
	     cache.subtypeLocation = gl.getUniformLocation(program, 'u_subtype');
	     var texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');
	     var texLayerLocation = gl.getUniformLocation(program, 'u_image');
	     var texMaskLocation = gl.getUniformLocation(program, 'u_mask');
	     var texCoordBuffer = gl.createBuffer();
	     gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);
	     gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([
	      0.0,
	      0.0,
	      1.0,
	      0.0,
	      0.0,
	      1.0,
	      0.0,
	      1.0,
	      1.0,
	      0.0,
	      1.0,
	      1.0
	     ]), gl.STATIC_DRAW);
	     gl.enableVertexAttribArray(texCoordLocation);
	     gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);
	     gl.uniform1i(texLayerLocation, 0);
	     gl.uniform1i(texMaskLocation, 1);
	     smaskCache = cache;
	    }
	    function composeSMask(layer, mask, properties) {
	     var width = layer.width, height = layer.height;
	     if (!smaskCache) {
	      initSmaskGL();
	     }
	     var cache = smaskCache, canvas = cache.canvas, gl = cache.gl;
	     canvas.width = width;
	     canvas.height = height;
	     gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);
	     gl.uniform2f(cache.resolutionLocation, width, height);
	     if (properties.backdrop) {
	      gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);
	     } else {
	      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);
	     }
	     gl.uniform1i(cache.subtypeLocation, properties.subtype === 'Luminosity' ? 1 : 0);
	     var texture = createTexture(gl, layer, gl.TEXTURE0);
	     var maskTexture = createTexture(gl, mask, gl.TEXTURE1);
	     var buffer = gl.createBuffer();
	     gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
	     gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([
	      0,
	      0,
	      width,
	      0,
	      0,
	      height,
	      0,
	      height,
	      width,
	      0,
	      width,
	      height
	     ]), gl.STATIC_DRAW);
	     gl.enableVertexAttribArray(cache.positionLocation);
	     gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);
	     gl.clearColor(0, 0, 0, 0);
	     gl.enable(gl.BLEND);
	     gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
	     gl.clear(gl.COLOR_BUFFER_BIT);
	     gl.drawArrays(gl.TRIANGLES, 0, 6);
	     gl.flush();
	     gl.deleteTexture(texture);
	     gl.deleteTexture(maskTexture);
	     gl.deleteBuffer(buffer);
	     return canvas;
	    }
	    var figuresVertexShaderCode = '\
	  attribute vec2 a_position;                                    \
	  attribute vec3 a_color;                                       \
	                                                                \
	  uniform vec2 u_resolution;                                    \
	  uniform vec2 u_scale;                                         \
	  uniform vec2 u_offset;                                        \
	                                                                \
	  varying vec4 v_color;                                         \
	                                                                \
	  void main() {                                                 \
	    vec2 position = (a_position + u_offset) * u_scale;          \
	    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \
	    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \
	                                                                \
	    v_color = vec4(a_color / 255.0, 1.0);                       \
	  }                                                             ';
	    var figuresFragmentShaderCode = '\
	  precision mediump float;                                      \
	                                                                \
	  varying vec4 v_color;                                         \
	                                                                \
	  void main() {                                                 \
	    gl_FragColor = v_color;                                     \
	  }                                                             ';
	    var figuresCache = null;
	    function initFiguresGL() {
	     var canvas, gl;
	     generateGL();
	     canvas = currentCanvas;
	     currentCanvas = null;
	     gl = currentGL;
	     currentGL = null;
	     var vertexShader = createVertexShader(gl, figuresVertexShaderCode);
	     var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);
	     var program = createProgram(gl, [
	      vertexShader,
	      fragmentShader
	     ]);
	     gl.useProgram(program);
	     var cache = {};
	     cache.gl = gl;
	     cache.canvas = canvas;
	     cache.resolutionLocation = gl.getUniformLocation(program, 'u_resolution');
	     cache.scaleLocation = gl.getUniformLocation(program, 'u_scale');
	     cache.offsetLocation = gl.getUniformLocation(program, 'u_offset');
	     cache.positionLocation = gl.getAttribLocation(program, 'a_position');
	     cache.colorLocation = gl.getAttribLocation(program, 'a_color');
	     figuresCache = cache;
	    }
	    function drawFigures(width, height, backgroundColor, figures, context) {
	     if (!figuresCache) {
	      initFiguresGL();
	     }
	     var cache = figuresCache, canvas = cache.canvas, gl = cache.gl;
	     canvas.width = width;
	     canvas.height = height;
	     gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);
	     gl.uniform2f(cache.resolutionLocation, width, height);
	     var count = 0;
	     var i, ii, rows;
	     for (i = 0, ii = figures.length; i < ii; i++) {
	      switch (figures[i].type) {
	      case 'lattice':
	       rows = figures[i].coords.length / figures[i].verticesPerRow | 0;
	       count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;
	       break;
	      case 'triangles':
	       count += figures[i].coords.length;
	       break;
	      }
	     }
	     var coords = new Float32Array(count * 2);
	     var colors = new Uint8Array(count * 3);
	     var coordsMap = context.coords, colorsMap = context.colors;
	     var pIndex = 0, cIndex = 0;
	     for (i = 0, ii = figures.length; i < ii; i++) {
	      var figure = figures[i], ps = figure.coords, cs = figure.colors;
	      switch (figure.type) {
	      case 'lattice':
	       var cols = figure.verticesPerRow;
	       rows = ps.length / cols | 0;
	       for (var row = 1; row < rows; row++) {
	        var offset = row * cols + 1;
	        for (var col = 1; col < cols; col++, offset++) {
	         coords[pIndex] = coordsMap[ps[offset - cols - 1]];
	         coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];
	         coords[pIndex + 2] = coordsMap[ps[offset - cols]];
	         coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];
	         coords[pIndex + 4] = coordsMap[ps[offset - 1]];
	         coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];
	         colors[cIndex] = colorsMap[cs[offset - cols - 1]];
	         colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];
	         colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];
	         colors[cIndex + 3] = colorsMap[cs[offset - cols]];
	         colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];
	         colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];
	         colors[cIndex + 6] = colorsMap[cs[offset - 1]];
	         colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];
	         colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];
	         coords[pIndex + 6] = coords[pIndex + 2];
	         coords[pIndex + 7] = coords[pIndex + 3];
	         coords[pIndex + 8] = coords[pIndex + 4];
	         coords[pIndex + 9] = coords[pIndex + 5];
	         coords[pIndex + 10] = coordsMap[ps[offset]];
	         coords[pIndex + 11] = coordsMap[ps[offset] + 1];
	         colors[cIndex + 9] = colors[cIndex + 3];
	         colors[cIndex + 10] = colors[cIndex + 4];
	         colors[cIndex + 11] = colors[cIndex + 5];
	         colors[cIndex + 12] = colors[cIndex + 6];
	         colors[cIndex + 13] = colors[cIndex + 7];
	         colors[cIndex + 14] = colors[cIndex + 8];
	         colors[cIndex + 15] = colorsMap[cs[offset]];
	         colors[cIndex + 16] = colorsMap[cs[offset] + 1];
	         colors[cIndex + 17] = colorsMap[cs[offset] + 2];
	         pIndex += 12;
	         cIndex += 18;
	        }
	       }
	       break;
	      case 'triangles':
	       for (var j = 0, jj = ps.length; j < jj; j++) {
	        coords[pIndex] = coordsMap[ps[j]];
	        coords[pIndex + 1] = coordsMap[ps[j] + 1];
	        colors[cIndex] = colorsMap[cs[j]];
	        colors[cIndex + 1] = colorsMap[cs[j] + 1];
	        colors[cIndex + 2] = colorsMap[cs[j] + 2];
	        pIndex += 2;
	        cIndex += 3;
	       }
	       break;
	      }
	     }
	     if (backgroundColor) {
	      gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);
	     } else {
	      gl.clearColor(0, 0, 0, 0);
	     }
	     gl.clear(gl.COLOR_BUFFER_BIT);
	     var coordsBuffer = gl.createBuffer();
	     gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);
	     gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);
	     gl.enableVertexAttribArray(cache.positionLocation);
	     gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);
	     var colorsBuffer = gl.createBuffer();
	     gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);
	     gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);
	     gl.enableVertexAttribArray(cache.colorLocation);
	     gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);
	     gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);
	     gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);
	     gl.drawArrays(gl.TRIANGLES, 0, count);
	     gl.flush();
	     gl.deleteBuffer(coordsBuffer);
	     gl.deleteBuffer(colorsBuffer);
	     return canvas;
	    }
	    function cleanup() {
	     if (smaskCache && smaskCache.canvas) {
	      smaskCache.canvas.width = 0;
	      smaskCache.canvas.height = 0;
	     }
	     if (figuresCache && figuresCache.canvas) {
	      figuresCache.canvas.width = 0;
	      figuresCache.canvas.height = 0;
	     }
	     smaskCache = null;
	     figuresCache = null;
	    }
	    return {
	     get isEnabled() {
	      if (getDefaultSetting('disableWebGL')) {
	       return false;
	      }
	      var enabled = false;
	      try {
	       generateGL();
	       enabled = !!currentGL;
	      } catch (e) {
	      }
	      return shadow(this, 'isEnabled', enabled);
	     },
	     composeSMask: composeSMask,
	     drawFigures: drawFigures,
	     clear: cleanup
	    };
	   }();
	   exports.WebGLUtils = WebGLUtils;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreCrypto = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream);
	  }(this, function (exports, sharedUtil, corePrimitives, coreStream) {
	   var PasswordException = sharedUtil.PasswordException;
	   var PasswordResponses = sharedUtil.PasswordResponses;
	   var bytesToString = sharedUtil.bytesToString;
	   var warn = sharedUtil.warn;
	   var error = sharedUtil.error;
	   var assert = sharedUtil.assert;
	   var isInt = sharedUtil.isInt;
	   var stringToBytes = sharedUtil.stringToBytes;
	   var utf8StringToString = sharedUtil.utf8StringToString;
	   var Name = corePrimitives.Name;
	   var isName = corePrimitives.isName;
	   var isDict = corePrimitives.isDict;
	   var DecryptStream = coreStream.DecryptStream;
	   var ARCFourCipher = function ARCFourCipherClosure() {
	    function ARCFourCipher(key) {
	     this.a = 0;
	     this.b = 0;
	     var s = new Uint8Array(256);
	     var i, j = 0, tmp, keyLength = key.length;
	     for (i = 0; i < 256; ++i) {
	      s[i] = i;
	     }
	     for (i = 0; i < 256; ++i) {
	      tmp = s[i];
	      j = j + tmp + key[i % keyLength] & 0xFF;
	      s[i] = s[j];
	      s[j] = tmp;
	     }
	     this.s = s;
	    }
	    ARCFourCipher.prototype = {
	     encryptBlock: function ARCFourCipher_encryptBlock(data) {
	      var i, n = data.length, tmp, tmp2;
	      var a = this.a, b = this.b, s = this.s;
	      var output = new Uint8Array(n);
	      for (i = 0; i < n; ++i) {
	       a = a + 1 & 0xFF;
	       tmp = s[a];
	       b = b + tmp & 0xFF;
	       tmp2 = s[b];
	       s[a] = tmp2;
	       s[b] = tmp;
	       output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];
	      }
	      this.a = a;
	      this.b = b;
	      return output;
	     }
	    };
	    ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;
	    return ARCFourCipher;
	   }();
	   var calculateMD5 = function calculateMD5Closure() {
	    var r = new Uint8Array([
	     7,
	     12,
	     17,
	     22,
	     7,
	     12,
	     17,
	     22,
	     7,
	     12,
	     17,
	     22,
	     7,
	     12,
	     17,
	     22,
	     5,
	     9,
	     14,
	     20,
	     5,
	     9,
	     14,
	     20,
	     5,
	     9,
	     14,
	     20,
	     5,
	     9,
	     14,
	     20,
	     4,
	     11,
	     16,
	     23,
	     4,
	     11,
	     16,
	     23,
	     4,
	     11,
	     16,
	     23,
	     4,
	     11,
	     16,
	     23,
	     6,
	     10,
	     15,
	     21,
	     6,
	     10,
	     15,
	     21,
	     6,
	     10,
	     15,
	     21,
	     6,
	     10,
	     15,
	     21
	    ]);
	    var k = new Int32Array([
	     -680876936,
	     -389564586,
	     606105819,
	     -1044525330,
	     -176418897,
	     1200080426,
	     -1473231341,
	     -45705983,
	     1770035416,
	     -1958414417,
	     -42063,
	     -1990404162,
	     1804603682,
	     -40341101,
	     -1502002290,
	     1236535329,
	     -165796510,
	     -1069501632,
	     643717713,
	     -373897302,
	     -701558691,
	     38016083,
	     -660478335,
	     -405537848,
	     568446438,
	     -1019803690,
	     -187363961,
	     1163531501,
	     -1444681467,
	     -51403784,
	     1735328473,
	     -1926607734,
	     -378558,
	     -2022574463,
	     1839030562,
	     -35309556,
	     -1530992060,
	     1272893353,
	     -155497632,
	     -1094730640,
	     681279174,
	     -358537222,
	     -722521979,
	     76029189,
	     -640364487,
	     -421815835,
	     530742520,
	     -995338651,
	     -198630844,
	     1126891415,
	     -1416354905,
	     -57434055,
	     1700485571,
	     -1894986606,
	     -1051523,
	     -2054922799,
	     1873313359,
	     -30611744,
	     -1560198380,
	     1309151649,
	     -145523070,
	     -1120210379,
	     718787259,
	     -343485551
	    ]);
	    function hash(data, offset, length) {
	     var h0 = 1732584193, h1 = -271733879, h2 = -1732584194, h3 = 271733878;
	     var paddedLength = length + 72 & ~63;
	     var padded = new Uint8Array(paddedLength);
	     var i, j, n;
	     for (i = 0; i < length; ++i) {
	      padded[i] = data[offset++];
	     }
	     padded[i++] = 0x80;
	     n = paddedLength - 8;
	     while (i < n) {
	      padded[i++] = 0;
	     }
	     padded[i++] = length << 3 & 0xFF;
	     padded[i++] = length >> 5 & 0xFF;
	     padded[i++] = length >> 13 & 0xFF;
	     padded[i++] = length >> 21 & 0xFF;
	     padded[i++] = length >>> 29 & 0xFF;
	     padded[i++] = 0;
	     padded[i++] = 0;
	     padded[i++] = 0;
	     var w = new Int32Array(16);
	     for (i = 0; i < paddedLength;) {
	      for (j = 0; j < 16; ++j, i += 4) {
	       w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;
	      }
	      var a = h0, b = h1, c = h2, d = h3, f, g;
	      for (j = 0; j < 64; ++j) {
	       if (j < 16) {
	        f = b & c | ~b & d;
	        g = j;
	       } else if (j < 32) {
	        f = d & b | ~d & c;
	        g = 5 * j + 1 & 15;
	       } else if (j < 48) {
	        f = b ^ c ^ d;
	        g = 3 * j + 5 & 15;
	       } else {
	        f = c ^ (b | ~d);
	        g = 7 * j & 15;
	       }
	       var tmp = d, rotateArg = a + f + k[j] + w[g] | 0, rotate = r[j];
	       d = c;
	       c = b;
	       b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;
	       a = tmp;
	      }
	      h0 = h0 + a | 0;
	      h1 = h1 + b | 0;
	      h2 = h2 + c | 0;
	      h3 = h3 + d | 0;
	     }
	     return new Uint8Array([
	      h0 & 0xFF,
	      h0 >> 8 & 0xFF,
	      h0 >> 16 & 0xFF,
	      h0 >>> 24 & 0xFF,
	      h1 & 0xFF,
	      h1 >> 8 & 0xFF,
	      h1 >> 16 & 0xFF,
	      h1 >>> 24 & 0xFF,
	      h2 & 0xFF,
	      h2 >> 8 & 0xFF,
	      h2 >> 16 & 0xFF,
	      h2 >>> 24 & 0xFF,
	      h3 & 0xFF,
	      h3 >> 8 & 0xFF,
	      h3 >> 16 & 0xFF,
	      h3 >>> 24 & 0xFF
	     ]);
	    }
	    return hash;
	   }();
	   var Word64 = function Word64Closure() {
	    function Word64(highInteger, lowInteger) {
	     this.high = highInteger | 0;
	     this.low = lowInteger | 0;
	    }
	    Word64.prototype = {
	     and: function Word64_and(word) {
	      this.high &= word.high;
	      this.low &= word.low;
	     },
	     xor: function Word64_xor(word) {
	      this.high ^= word.high;
	      this.low ^= word.low;
	     },
	     or: function Word64_or(word) {
	      this.high |= word.high;
	      this.low |= word.low;
	     },
	     shiftRight: function Word64_shiftRight(places) {
	      if (places >= 32) {
	       this.low = this.high >>> places - 32 | 0;
	       this.high = 0;
	      } else {
	       this.low = this.low >>> places | this.high << 32 - places;
	       this.high = this.high >>> places | 0;
	      }
	     },
	     shiftLeft: function Word64_shiftLeft(places) {
	      if (places >= 32) {
	       this.high = this.low << places - 32;
	       this.low = 0;
	      } else {
	       this.high = this.high << places | this.low >>> 32 - places;
	       this.low = this.low << places;
	      }
	     },
	     rotateRight: function Word64_rotateRight(places) {
	      var low, high;
	      if (places & 32) {
	       high = this.low;
	       low = this.high;
	      } else {
	       low = this.low;
	       high = this.high;
	      }
	      places &= 31;
	      this.low = low >>> places | high << 32 - places;
	      this.high = high >>> places | low << 32 - places;
	     },
	     not: function Word64_not() {
	      this.high = ~this.high;
	      this.low = ~this.low;
	     },
	     add: function Word64_add(word) {
	      var lowAdd = (this.low >>> 0) + (word.low >>> 0);
	      var highAdd = (this.high >>> 0) + (word.high >>> 0);
	      if (lowAdd > 0xFFFFFFFF) {
	       highAdd += 1;
	      }
	      this.low = lowAdd | 0;
	      this.high = highAdd | 0;
	     },
	     copyTo: function Word64_copyTo(bytes, offset) {
	      bytes[offset] = this.high >>> 24 & 0xFF;
	      bytes[offset + 1] = this.high >> 16 & 0xFF;
	      bytes[offset + 2] = this.high >> 8 & 0xFF;
	      bytes[offset + 3] = this.high & 0xFF;
	      bytes[offset + 4] = this.low >>> 24 & 0xFF;
	      bytes[offset + 5] = this.low >> 16 & 0xFF;
	      bytes[offset + 6] = this.low >> 8 & 0xFF;
	      bytes[offset + 7] = this.low & 0xFF;
	     },
	     assign: function Word64_assign(word) {
	      this.high = word.high;
	      this.low = word.low;
	     }
	    };
	    return Word64;
	   }();
	   var calculateSHA256 = function calculateSHA256Closure() {
	    function rotr(x, n) {
	     return x >>> n | x << 32 - n;
	    }
	    function ch(x, y, z) {
	     return x & y ^ ~x & z;
	    }
	    function maj(x, y, z) {
	     return x & y ^ x & z ^ y & z;
	    }
	    function sigma(x) {
	     return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);
	    }
	    function sigmaPrime(x) {
	     return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);
	    }
	    function littleSigma(x) {
	     return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;
	    }
	    function littleSigmaPrime(x) {
	     return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;
	    }
	    var k = [
	     0x428a2f98,
	     0x71374491,
	     0xb5c0fbcf,
	     0xe9b5dba5,
	     0x3956c25b,
	     0x59f111f1,
	     0x923f82a4,
	     0xab1c5ed5,
	     0xd807aa98,
	     0x12835b01,
	     0x243185be,
	     0x550c7dc3,
	     0x72be5d74,
	     0x80deb1fe,
	     0x9bdc06a7,
	     0xc19bf174,
	     0xe49b69c1,
	     0xefbe4786,
	     0x0fc19dc6,
	     0x240ca1cc,
	     0x2de92c6f,
	     0x4a7484aa,
	     0x5cb0a9dc,
	     0x76f988da,
	     0x983e5152,
	     0xa831c66d,
	     0xb00327c8,
	     0xbf597fc7,
	     0xc6e00bf3,
	     0xd5a79147,
	     0x06ca6351,
	     0x14292967,
	     0x27b70a85,
	     0x2e1b2138,
	     0x4d2c6dfc,
	     0x53380d13,
	     0x650a7354,
	     0x766a0abb,
	     0x81c2c92e,
	     0x92722c85,
	     0xa2bfe8a1,
	     0xa81a664b,
	     0xc24b8b70,
	     0xc76c51a3,
	     0xd192e819,
	     0xd6990624,
	     0xf40e3585,
	     0x106aa070,
	     0x19a4c116,
	     0x1e376c08,
	     0x2748774c,
	     0x34b0bcb5,
	     0x391c0cb3,
	     0x4ed8aa4a,
	     0x5b9cca4f,
	     0x682e6ff3,
	     0x748f82ee,
	     0x78a5636f,
	     0x84c87814,
	     0x8cc70208,
	     0x90befffa,
	     0xa4506ceb,
	     0xbef9a3f7,
	     0xc67178f2
	    ];
	    function hash(data, offset, length) {
	     var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a, h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;
	     var paddedLength = Math.ceil((length + 9) / 64) * 64;
	     var padded = new Uint8Array(paddedLength);
	     var i, j, n;
	     for (i = 0; i < length; ++i) {
	      padded[i] = data[offset++];
	     }
	     padded[i++] = 0x80;
	     n = paddedLength - 8;
	     while (i < n) {
	      padded[i++] = 0;
	     }
	     padded[i++] = 0;
	     padded[i++] = 0;
	     padded[i++] = 0;
	     padded[i++] = length >>> 29 & 0xFF;
	     padded[i++] = length >> 21 & 0xFF;
	     padded[i++] = length >> 13 & 0xFF;
	     padded[i++] = length >> 5 & 0xFF;
	     padded[i++] = length << 3 & 0xFF;
	     var w = new Uint32Array(64);
	     for (i = 0; i < paddedLength;) {
	      for (j = 0; j < 16; ++j) {
	       w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];
	       i += 4;
	      }
	      for (j = 16; j < 64; ++j) {
	       w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;
	      }
	      var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, t1, t2;
	      for (j = 0; j < 64; ++j) {
	       t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];
	       t2 = sigma(a) + maj(a, b, c);
	       h = g;
	       g = f;
	       f = e;
	       e = d + t1 | 0;
	       d = c;
	       c = b;
	       b = a;
	       a = t1 + t2 | 0;
	      }
	      h0 = h0 + a | 0;
	      h1 = h1 + b | 0;
	      h2 = h2 + c | 0;
	      h3 = h3 + d | 0;
	      h4 = h4 + e | 0;
	      h5 = h5 + f | 0;
	      h6 = h6 + g | 0;
	      h7 = h7 + h | 0;
	     }
	     return new Uint8Array([
	      h0 >> 24 & 0xFF,
	      h0 >> 16 & 0xFF,
	      h0 >> 8 & 0xFF,
	      h0 & 0xFF,
	      h1 >> 24 & 0xFF,
	      h1 >> 16 & 0xFF,
	      h1 >> 8 & 0xFF,
	      h1 & 0xFF,
	      h2 >> 24 & 0xFF,
	      h2 >> 16 & 0xFF,
	      h2 >> 8 & 0xFF,
	      h2 & 0xFF,
	      h3 >> 24 & 0xFF,
	      h3 >> 16 & 0xFF,
	      h3 >> 8 & 0xFF,
	      h3 & 0xFF,
	      h4 >> 24 & 0xFF,
	      h4 >> 16 & 0xFF,
	      h4 >> 8 & 0xFF,
	      h4 & 0xFF,
	      h5 >> 24 & 0xFF,
	      h5 >> 16 & 0xFF,
	      h5 >> 8 & 0xFF,
	      h5 & 0xFF,
	      h6 >> 24 & 0xFF,
	      h6 >> 16 & 0xFF,
	      h6 >> 8 & 0xFF,
	      h6 & 0xFF,
	      h7 >> 24 & 0xFF,
	      h7 >> 16 & 0xFF,
	      h7 >> 8 & 0xFF,
	      h7 & 0xFF
	     ]);
	    }
	    return hash;
	   }();
	   var calculateSHA512 = function calculateSHA512Closure() {
	    function ch(result, x, y, z, tmp) {
	     result.assign(x);
	     result.and(y);
	     tmp.assign(x);
	     tmp.not();
	     tmp.and(z);
	     result.xor(tmp);
	    }
	    function maj(result, x, y, z, tmp) {
	     result.assign(x);
	     result.and(y);
	     tmp.assign(x);
	     tmp.and(z);
	     result.xor(tmp);
	     tmp.assign(y);
	     tmp.and(z);
	     result.xor(tmp);
	    }
	    function sigma(result, x, tmp) {
	     result.assign(x);
	     result.rotateRight(28);
	     tmp.assign(x);
	     tmp.rotateRight(34);
	     result.xor(tmp);
	     tmp.assign(x);
	     tmp.rotateRight(39);
	     result.xor(tmp);
	    }
	    function sigmaPrime(result, x, tmp) {
	     result.assign(x);
	     result.rotateRight(14);
	     tmp.assign(x);
	     tmp.rotateRight(18);
	     result.xor(tmp);
	     tmp.assign(x);
	     tmp.rotateRight(41);
	     result.xor(tmp);
	    }
	    function littleSigma(result, x, tmp) {
	     result.assign(x);
	     result.rotateRight(1);
	     tmp.assign(x);
	     tmp.rotateRight(8);
	     result.xor(tmp);
	     tmp.assign(x);
	     tmp.shiftRight(7);
	     result.xor(tmp);
	    }
	    function littleSigmaPrime(result, x, tmp) {
	     result.assign(x);
	     result.rotateRight(19);
	     tmp.assign(x);
	     tmp.rotateRight(61);
	     result.xor(tmp);
	     tmp.assign(x);
	     tmp.shiftRight(6);
	     result.xor(tmp);
	    }
	    var k = [
	     new Word64(0x428a2f98, 0xd728ae22),
	     new Word64(0x71374491, 0x23ef65cd),
	     new Word64(0xb5c0fbcf, 0xec4d3b2f),
	     new Word64(0xe9b5dba5, 0x8189dbbc),
	     new Word64(0x3956c25b, 0xf348b538),
	     new Word64(0x59f111f1, 0xb605d019),
	     new Word64(0x923f82a4, 0xaf194f9b),
	     new Word64(0xab1c5ed5, 0xda6d8118),
	     new Word64(0xd807aa98, 0xa3030242),
	     new Word64(0x12835b01, 0x45706fbe),
	     new Word64(0x243185be, 0x4ee4b28c),
	     new Word64(0x550c7dc3, 0xd5ffb4e2),
	     new Word64(0x72be5d74, 0xf27b896f),
	     new Word64(0x80deb1fe, 0x3b1696b1),
	     new Word64(0x9bdc06a7, 0x25c71235),
	     new Word64(0xc19bf174, 0xcf692694),
	     new Word64(0xe49b69c1, 0x9ef14ad2),
	     new Word64(0xefbe4786, 0x384f25e3),
	     new Word64(0x0fc19dc6, 0x8b8cd5b5),
	     new Word64(0x240ca1cc, 0x77ac9c65),
	     new Word64(0x2de92c6f, 0x592b0275),
	     new Word64(0x4a7484aa, 0x6ea6e483),
	     new Word64(0x5cb0a9dc, 0xbd41fbd4),
	     new Word64(0x76f988da, 0x831153b5),
	     new Word64(0x983e5152, 0xee66dfab),
	     new Word64(0xa831c66d, 0x2db43210),
	     new Word64(0xb00327c8, 0x98fb213f),
	     new Word64(0xbf597fc7, 0xbeef0ee4),
	     new Word64(0xc6e00bf3, 0x3da88fc2),
	     new Word64(0xd5a79147, 0x930aa725),
	     new Word64(0x06ca6351, 0xe003826f),
	     new Word64(0x14292967, 0x0a0e6e70),
	     new Word64(0x27b70a85, 0x46d22ffc),
	     new Word64(0x2e1b2138, 0x5c26c926),
	     new Word64(0x4d2c6dfc, 0x5ac42aed),
	     new Word64(0x53380d13, 0x9d95b3df),
	     new Word64(0x650a7354, 0x8baf63de),
	     new Word64(0x766a0abb, 0x3c77b2a8),
	     new Word64(0x81c2c92e, 0x47edaee6),
	     new Word64(0x92722c85, 0x1482353b),
	     new Word64(0xa2bfe8a1, 0x4cf10364),
	     new Word64(0xa81a664b, 0xbc423001),
	     new Word64(0xc24b8b70, 0xd0f89791),
	     new Word64(0xc76c51a3, 0x0654be30),
	     new Word64(0xd192e819, 0xd6ef5218),
	     new Word64(0xd6990624, 0x5565a910),
	     new Word64(0xf40e3585, 0x5771202a),
	     new Word64(0x106aa070, 0x32bbd1b8),
	     new Word64(0x19a4c116, 0xb8d2d0c8),
	     new Word64(0x1e376c08, 0x5141ab53),
	     new Word64(0x2748774c, 0xdf8eeb99),
	     new Word64(0x34b0bcb5, 0xe19b48a8),
	     new Word64(0x391c0cb3, 0xc5c95a63),
	     new Word64(0x4ed8aa4a, 0xe3418acb),
	     new Word64(0x5b9cca4f, 0x7763e373),
	     new Word64(0x682e6ff3, 0xd6b2b8a3),
	     new Word64(0x748f82ee, 0x5defb2fc),
	     new Word64(0x78a5636f, 0x43172f60),
	     new Word64(0x84c87814, 0xa1f0ab72),
	     new Word64(0x8cc70208, 0x1a6439ec),
	     new Word64(0x90befffa, 0x23631e28),
	     new Word64(0xa4506ceb, 0xde82bde9),
	     new Word64(0xbef9a3f7, 0xb2c67915),
	     new Word64(0xc67178f2, 0xe372532b),
	     new Word64(0xca273ece, 0xea26619c),
	     new Word64(0xd186b8c7, 0x21c0c207),
	     new Word64(0xeada7dd6, 0xcde0eb1e),
	     new Word64(0xf57d4f7f, 0xee6ed178),
	     new Word64(0x06f067aa, 0x72176fba),
	     new Word64(0x0a637dc5, 0xa2c898a6),
	     new Word64(0x113f9804, 0xbef90dae),
	     new Word64(0x1b710b35, 0x131c471b),
	     new Word64(0x28db77f5, 0x23047d84),
	     new Word64(0x32caab7b, 0x40c72493),
	     new Word64(0x3c9ebe0a, 0x15c9bebc),
	     new Word64(0x431d67c4, 0x9c100d4c),
	     new Word64(0x4cc5d4be, 0xcb3e42b6),
	     new Word64(0x597f299c, 0xfc657e2a),
	     new Word64(0x5fcb6fab, 0x3ad6faec),
	     new Word64(0x6c44198c, 0x4a475817)
	    ];
	    function hash(data, offset, length, mode384) {
	     mode384 = !!mode384;
	     var h0, h1, h2, h3, h4, h5, h6, h7;
	     if (!mode384) {
	      h0 = new Word64(0x6a09e667, 0xf3bcc908);
	      h1 = new Word64(0xbb67ae85, 0x84caa73b);
	      h2 = new Word64(0x3c6ef372, 0xfe94f82b);
	      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);
	      h4 = new Word64(0x510e527f, 0xade682d1);
	      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);
	      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);
	      h7 = new Word64(0x5be0cd19, 0x137e2179);
	     } else {
	      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);
	      h1 = new Word64(0x629a292a, 0x367cd507);
	      h2 = new Word64(0x9159015a, 0x3070dd17);
	      h3 = new Word64(0x152fecd8, 0xf70e5939);
	      h4 = new Word64(0x67332667, 0xffc00b31);
	      h5 = new Word64(0x8eb44a87, 0x68581511);
	      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);
	      h7 = new Word64(0x47b5481d, 0xbefa4fa4);
	     }
	     var paddedLength = Math.ceil((length + 17) / 128) * 128;
	     var padded = new Uint8Array(paddedLength);
	     var i, j, n;
	     for (i = 0; i < length; ++i) {
	      padded[i] = data[offset++];
	     }
	     padded[i++] = 0x80;
	     n = paddedLength - 16;
	     while (i < n) {
	      padded[i++] = 0;
	     }
	     padded[i++] = 0;
	     padded[i++] = 0;
	     padded[i++] = 0;
	     padded[i++] = 0;
	     padded[i++] = 0;
	     padded[i++] = 0;
	     padded[i++] = 0;
	     padded[i++] = 0;
	     padded[i++] = 0;
	     padded[i++] = 0;
	     padded[i++] = 0;
	     padded[i++] = length >>> 29 & 0xFF;
	     padded[i++] = length >> 21 & 0xFF;
	     padded[i++] = length >> 13 & 0xFF;
	     padded[i++] = length >> 5 & 0xFF;
	     padded[i++] = length << 3 & 0xFF;
	     var w = new Array(80);
	     for (i = 0; i < 80; i++) {
	      w[i] = new Word64(0, 0);
	     }
	     var a = new Word64(0, 0), b = new Word64(0, 0), c = new Word64(0, 0);
	     var d = new Word64(0, 0), e = new Word64(0, 0), f = new Word64(0, 0);
	     var g = new Word64(0, 0), h = new Word64(0, 0);
	     var t1 = new Word64(0, 0), t2 = new Word64(0, 0);
	     var tmp1 = new Word64(0, 0), tmp2 = new Word64(0, 0), tmp3;
	     for (i = 0; i < paddedLength;) {
	      for (j = 0; j < 16; ++j) {
	       w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];
	       w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];
	       i += 8;
	      }
	      for (j = 16; j < 80; ++j) {
	       tmp3 = w[j];
	       littleSigmaPrime(tmp3, w[j - 2], tmp2);
	       tmp3.add(w[j - 7]);
	       littleSigma(tmp1, w[j - 15], tmp2);
	       tmp3.add(tmp1);
	       tmp3.add(w[j - 16]);
	      }
	      a.assign(h0);
	      b.assign(h1);
	      c.assign(h2);
	      d.assign(h3);
	      e.assign(h4);
	      f.assign(h5);
	      g.assign(h6);
	      h.assign(h7);
	      for (j = 0; j < 80; ++j) {
	       t1.assign(h);
	       sigmaPrime(tmp1, e, tmp2);
	       t1.add(tmp1);
	       ch(tmp1, e, f, g, tmp2);
	       t1.add(tmp1);
	       t1.add(k[j]);
	       t1.add(w[j]);
	       sigma(t2, a, tmp2);
	       maj(tmp1, a, b, c, tmp2);
	       t2.add(tmp1);
	       tmp3 = h;
	       h = g;
	       g = f;
	       f = e;
	       d.add(t1);
	       e = d;
	       d = c;
	       c = b;
	       b = a;
	       tmp3.assign(t1);
	       tmp3.add(t2);
	       a = tmp3;
	      }
	      h0.add(a);
	      h1.add(b);
	      h2.add(c);
	      h3.add(d);
	      h4.add(e);
	      h5.add(f);
	      h6.add(g);
	      h7.add(h);
	     }
	     var result;
	     if (!mode384) {
	      result = new Uint8Array(64);
	      h0.copyTo(result, 0);
	      h1.copyTo(result, 8);
	      h2.copyTo(result, 16);
	      h3.copyTo(result, 24);
	      h4.copyTo(result, 32);
	      h5.copyTo(result, 40);
	      h6.copyTo(result, 48);
	      h7.copyTo(result, 56);
	     } else {
	      result = new Uint8Array(48);
	      h0.copyTo(result, 0);
	      h1.copyTo(result, 8);
	      h2.copyTo(result, 16);
	      h3.copyTo(result, 24);
	      h4.copyTo(result, 32);
	      h5.copyTo(result, 40);
	     }
	     return result;
	    }
	    return hash;
	   }();
	   var calculateSHA384 = function calculateSHA384Closure() {
	    function hash(data, offset, length) {
	     return calculateSHA512(data, offset, length, true);
	    }
	    return hash;
	   }();
	   var NullCipher = function NullCipherClosure() {
	    function NullCipher() {
	    }
	    NullCipher.prototype = {
	     decryptBlock: function NullCipher_decryptBlock(data) {
	      return data;
	     }
	    };
	    return NullCipher;
	   }();
	   var AES128Cipher = function AES128CipherClosure() {
	    var rcon = new Uint8Array([
	     0x8d,
	     0x01,
	     0x02,
	     0x04,
	     0x08,
	     0x10,
	     0x20,
	     0x40,
	     0x80,
	     0x1b,
	     0x36,
	     0x6c,
	     0xd8,
	     0xab,
	     0x4d,
	     0x9a,
	     0x2f,
	     0x5e,
	     0xbc,
	     0x63,
	     0xc6,
	     0x97,
	     0x35,
	     0x6a,
	     0xd4,
	     0xb3,
	     0x7d,
	     0xfa,
	     0xef,
	     0xc5,
	     0x91,
	     0x39,
	     0x72,
	     0xe4,
	     0xd3,
	     0xbd,
	     0x61,
	     0xc2,
	     0x9f,
	     0x25,
	     0x4a,
	     0x94,
	     0x33,
	     0x66,
	     0xcc,
	     0x83,
	     0x1d,
	     0x3a,
	     0x74,
	     0xe8,
	     0xcb,
	     0x8d,
	     0x01,
	     0x02,
	     0x04,
	     0x08,
	     0x10,
	     0x20,
	     0x40,
	     0x80,
	     0x1b,
	     0x36,
	     0x6c,
	     0xd8,
	     0xab,
	     0x4d,
	     0x9a,
	     0x2f,
	     0x5e,
	     0xbc,
	     0x63,
	     0xc6,
	     0x97,
	     0x35,
	     0x6a,
	     0xd4,
	     0xb3,
	     0x7d,
	     0xfa,
	     0xef,
	     0xc5,
	     0x91,
	     0x39,
	     0x72,
	     0xe4,
	     0xd3,
	     0xbd,
	     0x61,
	     0xc2,
	     0x9f,
	     0x25,
	     0x4a,
	     0x94,
	     0x33,
	     0x66,
	     0xcc,
	     0x83,
	     0x1d,
	     0x3a,
	     0x74,
	     0xe8,
	     0xcb,
	     0x8d,
	     0x01,
	     0x02,
	     0x04,
	     0x08,
	     0x10,
	     0x20,
	     0x40,
	     0x80,
	     0x1b,
	     0x36,
	     0x6c,
	     0xd8,
	     0xab,
	     0x4d,
	     0x9a,
	     0x2f,
	     0x5e,
	     0xbc,
	     0x63,
	     0xc6,
	     0x97,
	     0x35,
	     0x6a,
	     0xd4,
	     0xb3,
	     0x7d,
	     0xfa,
	     0xef,
	     0xc5,
	     0x91,
	     0x39,
	     0x72,
	     0xe4,
	     0xd3,
	     0xbd,
	     0x61,
	     0xc2,
	     0x9f,
	     0x25,
	     0x4a,
	     0x94,
	     0x33,
	     0x66,
	     0xcc,
	     0x83,
	     0x1d,
	     0x3a,
	     0x74,
	     0xe8,
	     0xcb,
	     0x8d,
	     0x01,
	     0x02,
	     0x04,
	     0x08,
	     0x10,
	     0x20,
	     0x40,
	     0x80,
	     0x1b,
	     0x36,
	     0x6c,
	     0xd8,
	     0xab,
	     0x4d,
	     0x9a,
	     0x2f,
	     0x5e,
	     0xbc,
	     0x63,
	     0xc6,
	     0x97,
	     0x35,
	     0x6a,
	     0xd4,
	     0xb3,
	     0x7d,
	     0xfa,
	     0xef,
	     0xc5,
	     0x91,
	     0x39,
	     0x72,
	     0xe4,
	     0xd3,
	     0xbd,
	     0x61,
	     0xc2,
	     0x9f,
	     0x25,
	     0x4a,
	     0x94,
	     0x33,
	     0x66,
	     0xcc,
	     0x83,
	     0x1d,
	     0x3a,
	     0x74,
	     0xe8,
	     0xcb,
	     0x8d,
	     0x01,
	     0x02,
	     0x04,
	     0x08,
	     0x10,
	     0x20,
	     0x40,
	     0x80,
	     0x1b,
	     0x36,
	     0x6c,
	     0xd8,
	     0xab,
	     0x4d,
	     0x9a,
	     0x2f,
	     0x5e,
	     0xbc,
	     0x63,
	     0xc6,
	     0x97,
	     0x35,
	     0x6a,
	     0xd4,
	     0xb3,
	     0x7d,
	     0xfa,
	     0xef,
	     0xc5,
	     0x91,
	     0x39,
	     0x72,
	     0xe4,
	     0xd3,
	     0xbd,
	     0x61,
	     0xc2,
	     0x9f,
	     0x25,
	     0x4a,
	     0x94,
	     0x33,
	     0x66,
	     0xcc,
	     0x83,
	     0x1d,
	     0x3a,
	     0x74,
	     0xe8,
	     0xcb,
	     0x8d
	    ]);
	    var s = new Uint8Array([
	     0x63,
	     0x7c,
	     0x77,
	     0x7b,
	     0xf2,
	     0x6b,
	     0x6f,
	     0xc5,
	     0x30,
	     0x01,
	     0x67,
	     0x2b,
	     0xfe,
	     0xd7,
	     0xab,
	     0x76,
	     0xca,
	     0x82,
	     0xc9,
	     0x7d,
	     0xfa,
	     0x59,
	     0x47,
	     0xf0,
	     0xad,
	     0xd4,
	     0xa2,
	     0xaf,
	     0x9c,
	     0xa4,
	     0x72,
	     0xc0,
	     0xb7,
	     0xfd,
	     0x93,
	     0x26,
	     0x36,
	     0x3f,
	     0xf7,
	     0xcc,
	     0x34,
	     0xa5,
	     0xe5,
	     0xf1,
	     0x71,
	     0xd8,
	     0x31,
	     0x15,
	     0x04,
	     0xc7,
	     0x23,
	     0xc3,
	     0x18,
	     0x96,
	     0x05,
	     0x9a,
	     0x07,
	     0x12,
	     0x80,
	     0xe2,
	     0xeb,
	     0x27,
	     0xb2,
	     0x75,
	     0x09,
	     0x83,
	     0x2c,
	     0x1a,
	     0x1b,
	     0x6e,
	     0x5a,
	     0xa0,
	     0x52,
	     0x3b,
	     0xd6,
	     0xb3,
	     0x29,
	     0xe3,
	     0x2f,
	     0x84,
	     0x53,
	     0xd1,
	     0x00,
	     0xed,
	     0x20,
	     0xfc,
	     0xb1,
	     0x5b,
	     0x6a,
	     0xcb,
	     0xbe,
	     0x39,
	     0x4a,
	     0x4c,
	     0x58,
	     0xcf,
	     0xd0,
	     0xef,
	     0xaa,
	     0xfb,
	     0x43,
	     0x4d,
	     0x33,
	     0x85,
	     0x45,
	     0xf9,
	     0x02,
	     0x7f,
	     0x50,
	     0x3c,
	     0x9f,
	     0xa8,
	     0x51,
	     0xa3,
	     0x40,
	     0x8f,
	     0x92,
	     0x9d,
	     0x38,
	     0xf5,
	     0xbc,
	     0xb6,
	     0xda,
	     0x21,
	     0x10,
	     0xff,
	     0xf3,
	     0xd2,
	     0xcd,
	     0x0c,
	     0x13,
	     0xec,
	     0x5f,
	     0x97,
	     0x44,
	     0x17,
	     0xc4,
	     0xa7,
	     0x7e,
	     0x3d,
	     0x64,
	     0x5d,
	     0x19,
	     0x73,
	     0x60,
	     0x81,
	     0x4f,
	     0xdc,
	     0x22,
	     0x2a,
	     0x90,
	     0x88,
	     0x46,
	     0xee,
	     0xb8,
	     0x14,
	     0xde,
	     0x5e,
	     0x0b,
	     0xdb,
	     0xe0,
	     0x32,
	     0x3a,
	     0x0a,
	     0x49,
	     0x06,
	     0x24,
	     0x5c,
	     0xc2,
	     0xd3,
	     0xac,
	     0x62,
	     0x91,
	     0x95,
	     0xe4,
	     0x79,
	     0xe7,
	     0xc8,
	     0x37,
	     0x6d,
	     0x8d,
	     0xd5,
	     0x4e,
	     0xa9,
	     0x6c,
	     0x56,
	     0xf4,
	     0xea,
	     0x65,
	     0x7a,
	     0xae,
	     0x08,
	     0xba,
	     0x78,
	     0x25,
	     0x2e,
	     0x1c,
	     0xa6,
	     0xb4,
	     0xc6,
	     0xe8,
	     0xdd,
	     0x74,
	     0x1f,
	     0x4b,
	     0xbd,
	     0x8b,
	     0x8a,
	     0x70,
	     0x3e,
	     0xb5,
	     0x66,
	     0x48,
	     0x03,
	     0xf6,
	     0x0e,
	     0x61,
	     0x35,
	     0x57,
	     0xb9,
	     0x86,
	     0xc1,
	     0x1d,
	     0x9e,
	     0xe1,
	     0xf8,
	     0x98,
	     0x11,
	     0x69,
	     0xd9,
	     0x8e,
	     0x94,
	     0x9b,
	     0x1e,
	     0x87,
	     0xe9,
	     0xce,
	     0x55,
	     0x28,
	     0xdf,
	     0x8c,
	     0xa1,
	     0x89,
	     0x0d,
	     0xbf,
	     0xe6,
	     0x42,
	     0x68,
	     0x41,
	     0x99,
	     0x2d,
	     0x0f,
	     0xb0,
	     0x54,
	     0xbb,
	     0x16
	    ]);
	    var inv_s = new Uint8Array([
	     0x52,
	     0x09,
	     0x6a,
	     0xd5,
	     0x30,
	     0x36,
	     0xa5,
	     0x38,
	     0xbf,
	     0x40,
	     0xa3,
	     0x9e,
	     0x81,
	     0xf3,
	     0xd7,
	     0xfb,
	     0x7c,
	     0xe3,
	     0x39,
	     0x82,
	     0x9b,
	     0x2f,
	     0xff,
	     0x87,
	     0x34,
	     0x8e,
	     0x43,
	     0x44,
	     0xc4,
	     0xde,
	     0xe9,
	     0xcb,
	     0x54,
	     0x7b,
	     0x94,
	     0x32,
	     0xa6,
	     0xc2,
	     0x23,
	     0x3d,
	     0xee,
	     0x4c,
	     0x95,
	     0x0b,
	     0x42,
	     0xfa,
	     0xc3,
	     0x4e,
	     0x08,
	     0x2e,
	     0xa1,
	     0x66,
	     0x28,
	     0xd9,
	     0x24,
	     0xb2,
	     0x76,
	     0x5b,
	     0xa2,
	     0x49,
	     0x6d,
	     0x8b,
	     0xd1,
	     0x25,
	     0x72,
	     0xf8,
	     0xf6,
	     0x64,
	     0x86,
	     0x68,
	     0x98,
	     0x16,
	     0xd4,
	     0xa4,
	     0x5c,
	     0xcc,
	     0x5d,
	     0x65,
	     0xb6,
	     0x92,
	     0x6c,
	     0x70,
	     0x48,
	     0x50,
	     0xfd,
	     0xed,
	     0xb9,
	     0xda,
	     0x5e,
	     0x15,
	     0x46,
	     0x57,
	     0xa7,
	     0x8d,
	     0x9d,
	     0x84,
	     0x90,
	     0xd8,
	     0xab,
	     0x00,
	     0x8c,
	     0xbc,
	     0xd3,
	     0x0a,
	     0xf7,
	     0xe4,
	     0x58,
	     0x05,
	     0xb8,
	     0xb3,
	     0x45,
	     0x06,
	     0xd0,
	     0x2c,
	     0x1e,
	     0x8f,
	     0xca,
	     0x3f,
	     0x0f,
	     0x02,
	     0xc1,
	     0xaf,
	     0xbd,
	     0x03,
	     0x01,
	     0x13,
	     0x8a,
	     0x6b,
	     0x3a,
	     0x91,
	     0x11,
	     0x41,
	     0x4f,
	     0x67,
	     0xdc,
	     0xea,
	     0x97,
	     0xf2,
	     0xcf,
	     0xce,
	     0xf0,
	     0xb4,
	     0xe6,
	     0x73,
	     0x96,
	     0xac,
	     0x74,
	     0x22,
	     0xe7,
	     0xad,
	     0x35,
	     0x85,
	     0xe2,
	     0xf9,
	     0x37,
	     0xe8,
	     0x1c,
	     0x75,
	     0xdf,
	     0x6e,
	     0x47,
	     0xf1,
	     0x1a,
	     0x71,
	     0x1d,
	     0x29,
	     0xc5,
	     0x89,
	     0x6f,
	     0xb7,
	     0x62,
	     0x0e,
	     0xaa,
	     0x18,
	     0xbe,
	     0x1b,
	     0xfc,
	     0x56,
	     0x3e,
	     0x4b,
	     0xc6,
	     0xd2,
	     0x79,
	     0x20,
	     0x9a,
	     0xdb,
	     0xc0,
	     0xfe,
	     0x78,
	     0xcd,
	     0x5a,
	     0xf4,
	     0x1f,
	     0xdd,
	     0xa8,
	     0x33,
	     0x88,
	     0x07,
	     0xc7,
	     0x31,
	     0xb1,
	     0x12,
	     0x10,
	     0x59,
	     0x27,
	     0x80,
	     0xec,
	     0x5f,
	     0x60,
	     0x51,
	     0x7f,
	     0xa9,
	     0x19,
	     0xb5,
	     0x4a,
	     0x0d,
	     0x2d,
	     0xe5,
	     0x7a,
	     0x9f,
	     0x93,
	     0xc9,
	     0x9c,
	     0xef,
	     0xa0,
	     0xe0,
	     0x3b,
	     0x4d,
	     0xae,
	     0x2a,
	     0xf5,
	     0xb0,
	     0xc8,
	     0xeb,
	     0xbb,
	     0x3c,
	     0x83,
	     0x53,
	     0x99,
	     0x61,
	     0x17,
	     0x2b,
	     0x04,
	     0x7e,
	     0xba,
	     0x77,
	     0xd6,
	     0x26,
	     0xe1,
	     0x69,
	     0x14,
	     0x63,
	     0x55,
	     0x21,
	     0x0c,
	     0x7d
	    ]);
	    var mixCol = new Uint8Array(256);
	    for (var i = 0; i < 256; i++) {
	     if (i < 128) {
	      mixCol[i] = i << 1;
	     } else {
	      mixCol[i] = i << 1 ^ 0x1b;
	     }
	    }
	    var mix = new Uint32Array([
	     0x00000000,
	     0x0e090d0b,
	     0x1c121a16,
	     0x121b171d,
	     0x3824342c,
	     0x362d3927,
	     0x24362e3a,
	     0x2a3f2331,
	     0x70486858,
	     0x7e416553,
	     0x6c5a724e,
	     0x62537f45,
	     0x486c5c74,
	     0x4665517f,
	     0x547e4662,
	     0x5a774b69,
	     0xe090d0b0,
	     0xee99ddbb,
	     0xfc82caa6,
	     0xf28bc7ad,
	     0xd8b4e49c,
	     0xd6bde997,
	     0xc4a6fe8a,
	     0xcaaff381,
	     0x90d8b8e8,
	     0x9ed1b5e3,
	     0x8ccaa2fe,
	     0x82c3aff5,
	     0xa8fc8cc4,
	     0xa6f581cf,
	     0xb4ee96d2,
	     0xbae79bd9,
	     0xdb3bbb7b,
	     0xd532b670,
	     0xc729a16d,
	     0xc920ac66,
	     0xe31f8f57,
	     0xed16825c,
	     0xff0d9541,
	     0xf104984a,
	     0xab73d323,
	     0xa57ade28,
	     0xb761c935,
	     0xb968c43e,
	     0x9357e70f,
	     0x9d5eea04,
	     0x8f45fd19,
	     0x814cf012,
	     0x3bab6bcb,
	     0x35a266c0,
	     0x27b971dd,
	     0x29b07cd6,
	     0x038f5fe7,
	     0x0d8652ec,
	     0x1f9d45f1,
	     0x119448fa,
	     0x4be30393,
	     0x45ea0e98,
	     0x57f11985,
	     0x59f8148e,
	     0x73c737bf,
	     0x7dce3ab4,
	     0x6fd52da9,
	     0x61dc20a2,
	     0xad766df6,
	     0xa37f60fd,
	     0xb16477e0,
	     0xbf6d7aeb,
	     0x955259da,
	     0x9b5b54d1,
	     0x894043cc,
	     0x87494ec7,
	     0xdd3e05ae,
	     0xd33708a5,
	     0xc12c1fb8,
	     0xcf2512b3,
	     0xe51a3182,
	     0xeb133c89,
	     0xf9082b94,
	     0xf701269f,
	     0x4de6bd46,
	     0x43efb04d,
	     0x51f4a750,
	     0x5ffdaa5b,
	     0x75c2896a,
	     0x7bcb8461,
	     0x69d0937c,
	     0x67d99e77,
	     0x3daed51e,
	     0x33a7d815,
	     0x21bccf08,
	     0x2fb5c203,
	     0x058ae132,
	     0x0b83ec39,
	     0x1998fb24,
	     0x1791f62f,
	     0x764dd68d,
	     0x7844db86,
	     0x6a5fcc9b,
	     0x6456c190,
	     0x4e69e2a1,
	     0x4060efaa,
	     0x527bf8b7,
	     0x5c72f5bc,
	     0x0605bed5,
	     0x080cb3de,
	     0x1a17a4c3,
	     0x141ea9c8,
	     0x3e218af9,
	     0x302887f2,
	     0x223390ef,
	     0x2c3a9de4,
	     0x96dd063d,
	     0x98d40b36,
	     0x8acf1c2b,
	     0x84c61120,
	     0xaef93211,
	     0xa0f03f1a,
	     0xb2eb2807,
	     0xbce2250c,
	     0xe6956e65,
	     0xe89c636e,
	     0xfa877473,
	     0xf48e7978,
	     0xdeb15a49,
	     0xd0b85742,
	     0xc2a3405f,
	     0xccaa4d54,
	     0x41ecdaf7,
	     0x4fe5d7fc,
	     0x5dfec0e1,
	     0x53f7cdea,
	     0x79c8eedb,
	     0x77c1e3d0,
	     0x65daf4cd,
	     0x6bd3f9c6,
	     0x31a4b2af,
	     0x3fadbfa4,
	     0x2db6a8b9,
	     0x23bfa5b2,
	     0x09808683,
	     0x07898b88,
	     0x15929c95,
	     0x1b9b919e,
	     0xa17c0a47,
	     0xaf75074c,
	     0xbd6e1051,
	     0xb3671d5a,
	     0x99583e6b,
	     0x97513360,
	     0x854a247d,
	     0x8b432976,
	     0xd134621f,
	     0xdf3d6f14,
	     0xcd267809,
	     0xc32f7502,
	     0xe9105633,
	     0xe7195b38,
	     0xf5024c25,
	     0xfb0b412e,
	     0x9ad7618c,
	     0x94de6c87,
	     0x86c57b9a,
	     0x88cc7691,
	     0xa2f355a0,
	     0xacfa58ab,
	     0xbee14fb6,
	     0xb0e842bd,
	     0xea9f09d4,
	     0xe49604df,
	     0xf68d13c2,
	     0xf8841ec9,
	     0xd2bb3df8,
	     0xdcb230f3,
	     0xcea927ee,
	     0xc0a02ae5,
	     0x7a47b13c,
	     0x744ebc37,
	     0x6655ab2a,
	     0x685ca621,
	     0x42638510,
	     0x4c6a881b,
	     0x5e719f06,
	     0x5078920d,
	     0x0a0fd964,
	     0x0406d46f,
	     0x161dc372,
	     0x1814ce79,
	     0x322bed48,
	     0x3c22e043,
	     0x2e39f75e,
	     0x2030fa55,
	     0xec9ab701,
	     0xe293ba0a,
	     0xf088ad17,
	     0xfe81a01c,
	     0xd4be832d,
	     0xdab78e26,
	     0xc8ac993b,
	     0xc6a59430,
	     0x9cd2df59,
	     0x92dbd252,
	     0x80c0c54f,
	     0x8ec9c844,
	     0xa4f6eb75,
	     0xaaffe67e,
	     0xb8e4f163,
	     0xb6edfc68,
	     0x0c0a67b1,
	     0x02036aba,
	     0x10187da7,
	     0x1e1170ac,
	     0x342e539d,
	     0x3a275e96,
	     0x283c498b,
	     0x26354480,
	     0x7c420fe9,
	     0x724b02e2,
	     0x605015ff,
	     0x6e5918f4,
	     0x44663bc5,
	     0x4a6f36ce,
	     0x587421d3,
	     0x567d2cd8,
	     0x37a10c7a,
	     0x39a80171,
	     0x2bb3166c,
	     0x25ba1b67,
	     0x0f853856,
	     0x018c355d,
	     0x13972240,
	     0x1d9e2f4b,
	     0x47e96422,
	     0x49e06929,
	     0x5bfb7e34,
	     0x55f2733f,
	     0x7fcd500e,
	     0x71c45d05,
	     0x63df4a18,
	     0x6dd64713,
	     0xd731dcca,
	     0xd938d1c1,
	     0xcb23c6dc,
	     0xc52acbd7,
	     0xef15e8e6,
	     0xe11ce5ed,
	     0xf307f2f0,
	     0xfd0efffb,
	     0xa779b492,
	     0xa970b999,
	     0xbb6bae84,
	     0xb562a38f,
	     0x9f5d80be,
	     0x91548db5,
	     0x834f9aa8,
	     0x8d4697a3
	    ]);
	    function expandKey128(cipherKey) {
	     var b = 176, result = new Uint8Array(b);
	     result.set(cipherKey);
	     for (var j = 16, i = 1; j < b; ++i) {
	      var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];
	      t1 = s[t1];
	      t2 = s[t2];
	      t3 = s[t3];
	      t4 = s[t4];
	      t1 = t1 ^ rcon[i];
	      for (var n = 0; n < 4; ++n) {
	       result[j] = t1 ^= result[j - 16];
	       j++;
	       result[j] = t2 ^= result[j - 16];
	       j++;
	       result[j] = t3 ^= result[j - 16];
	       j++;
	       result[j] = t4 ^= result[j - 16];
	       j++;
	      }
	     }
	     return result;
	    }
	    function decrypt128(input, key) {
	     var state = new Uint8Array(16);
	     state.set(input);
	     var i, j, k;
	     var t, u, v;
	     for (j = 0, k = 160; j < 16; ++j, ++k) {
	      state[j] ^= key[k];
	     }
	     for (i = 9; i >= 1; --i) {
	      t = state[13];
	      state[13] = state[9];
	      state[9] = state[5];
	      state[5] = state[1];
	      state[1] = t;
	      t = state[14];
	      u = state[10];
	      state[14] = state[6];
	      state[10] = state[2];
	      state[6] = t;
	      state[2] = u;
	      t = state[15];
	      u = state[11];
	      v = state[7];
	      state[15] = state[3];
	      state[11] = t;
	      state[7] = u;
	      state[3] = v;
	      for (j = 0; j < 16; ++j) {
	       state[j] = inv_s[state[j]];
	      }
	      for (j = 0, k = i * 16; j < 16; ++j, ++k) {
	       state[j] ^= key[k];
	      }
	      for (j = 0; j < 16; j += 4) {
	       var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];
	       t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;
	       state[j] = t >>> 24 & 0xFF;
	       state[j + 1] = t >> 16 & 0xFF;
	       state[j + 2] = t >> 8 & 0xFF;
	       state[j + 3] = t & 0xFF;
	      }
	     }
	     t = state[13];
	     state[13] = state[9];
	     state[9] = state[5];
	     state[5] = state[1];
	     state[1] = t;
	     t = state[14];
	     u = state[10];
	     state[14] = state[6];
	     state[10] = state[2];
	     state[6] = t;
	     state[2] = u;
	     t = state[15];
	     u = state[11];
	     v = state[7];
	     state[15] = state[3];
	     state[11] = t;
	     state[7] = u;
	     state[3] = v;
	     for (j = 0; j < 16; ++j) {
	      state[j] = inv_s[state[j]];
	      state[j] ^= key[j];
	     }
	     return state;
	    }
	    function encrypt128(input, key) {
	     var t, u, v, k;
	     var state = new Uint8Array(16);
	     state.set(input);
	     for (j = 0; j < 16; ++j) {
	      state[j] ^= key[j];
	     }
	     for (i = 1; i < 10; i++) {
	      for (j = 0; j < 16; ++j) {
	       state[j] = s[state[j]];
	      }
	      v = state[1];
	      state[1] = state[5];
	      state[5] = state[9];
	      state[9] = state[13];
	      state[13] = v;
	      v = state[2];
	      u = state[6];
	      state[2] = state[10];
	      state[6] = state[14];
	      state[10] = v;
	      state[14] = u;
	      v = state[3];
	      u = state[7];
	      t = state[11];
	      state[3] = state[15];
	      state[7] = v;
	      state[11] = u;
	      state[15] = t;
	      for (var j = 0; j < 16; j += 4) {
	       var s0 = state[j + 0], s1 = state[j + 1];
	       var s2 = state[j + 2], s3 = state[j + 3];
	       t = s0 ^ s1 ^ s2 ^ s3;
	       state[j + 0] ^= t ^ mixCol[s0 ^ s1];
	       state[j + 1] ^= t ^ mixCol[s1 ^ s2];
	       state[j + 2] ^= t ^ mixCol[s2 ^ s3];
	       state[j + 3] ^= t ^ mixCol[s3 ^ s0];
	      }
	      for (j = 0, k = i * 16; j < 16; ++j, ++k) {
	       state[j] ^= key[k];
	      }
	     }
	     for (j = 0; j < 16; ++j) {
	      state[j] = s[state[j]];
	     }
	     v = state[1];
	     state[1] = state[5];
	     state[5] = state[9];
	     state[9] = state[13];
	     state[13] = v;
	     v = state[2];
	     u = state[6];
	     state[2] = state[10];
	     state[6] = state[14];
	     state[10] = v;
	     state[14] = u;
	     v = state[3];
	     u = state[7];
	     t = state[11];
	     state[3] = state[15];
	     state[7] = v;
	     state[11] = u;
	     state[15] = t;
	     for (j = 0, k = 160; j < 16; ++j, ++k) {
	      state[j] ^= key[k];
	     }
	     return state;
	    }
	    function AES128Cipher(key) {
	     this.key = expandKey128(key);
	     this.buffer = new Uint8Array(16);
	     this.bufferPosition = 0;
	    }
	    function decryptBlock2(data, finalize) {
	     var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;
	     for (i = 0; i < sourceLength; ++i) {
	      buffer[bufferLength] = data[i];
	      ++bufferLength;
	      if (bufferLength < 16) {
	       continue;
	      }
	      var plain = decrypt128(buffer, this.key);
	      for (j = 0; j < 16; ++j) {
	       plain[j] ^= iv[j];
	      }
	      iv = buffer;
	      result.push(plain);
	      buffer = new Uint8Array(16);
	      bufferLength = 0;
	     }
	     this.buffer = buffer;
	     this.bufferLength = bufferLength;
	     this.iv = iv;
	     if (result.length === 0) {
	      return new Uint8Array([]);
	     }
	     var outputLength = 16 * result.length;
	     if (finalize) {
	      var lastBlock = result[result.length - 1];
	      var psLen = lastBlock[15];
	      if (psLen <= 16) {
	       for (i = 15, ii = 16 - psLen; i >= ii; --i) {
	        if (lastBlock[i] !== psLen) {
	         psLen = 0;
	         break;
	        }
	       }
	       outputLength -= psLen;
	       result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);
	      }
	     }
	     var output = new Uint8Array(outputLength);
	     for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {
	      output.set(result[i], j);
	     }
	     return output;
	    }
	    AES128Cipher.prototype = {
	     decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {
	      var i, sourceLength = data.length;
	      var buffer = this.buffer, bufferLength = this.bufferPosition;
	      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {
	       buffer[bufferLength] = data[i];
	      }
	      if (bufferLength < 16) {
	       this.bufferLength = bufferLength;
	       return new Uint8Array([]);
	      }
	      this.iv = buffer;
	      this.buffer = new Uint8Array(16);
	      this.bufferLength = 0;
	      this.decryptBlock = decryptBlock2;
	      return this.decryptBlock(data.subarray(16), finalize);
	     },
	     encrypt: function AES128Cipher_encrypt(data, iv) {
	      var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];
	      if (!iv) {
	       iv = new Uint8Array(16);
	      }
	      for (i = 0; i < sourceLength; ++i) {
	       buffer[bufferLength] = data[i];
	       ++bufferLength;
	       if (bufferLength < 16) {
	        continue;
	       }
	       for (j = 0; j < 16; ++j) {
	        buffer[j] ^= iv[j];
	       }
	       var cipher = encrypt128(buffer, this.key);
	       iv = cipher;
	       result.push(cipher);
	       buffer = new Uint8Array(16);
	       bufferLength = 0;
	      }
	      this.buffer = buffer;
	      this.bufferLength = bufferLength;
	      this.iv = iv;
	      if (result.length === 0) {
	       return new Uint8Array([]);
	      }
	      var outputLength = 16 * result.length;
	      var output = new Uint8Array(outputLength);
	      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {
	       output.set(result[i], j);
	      }
	      return output;
	     }
	    };
	    return AES128Cipher;
	   }();
	   var AES256Cipher = function AES256CipherClosure() {
	    var rcon = new Uint8Array([
	     0x8d,
	     0x01,
	     0x02,
	     0x04,
	     0x08,
	     0x10,
	     0x20,
	     0x40,
	     0x80,
	     0x1b,
	     0x36,
	     0x6c,
	     0xd8,
	     0xab,
	     0x4d,
	     0x9a,
	     0x2f,
	     0x5e,
	     0xbc,
	     0x63,
	     0xc6,
	     0x97,
	     0x35,
	     0x6a,
	     0xd4,
	     0xb3,
	     0x7d,
	     0xfa,
	     0xef,
	     0xc5,
	     0x91,
	     0x39,
	     0x72,
	     0xe4,
	     0xd3,
	     0xbd,
	     0x61,
	     0xc2,
	     0x9f,
	     0x25,
	     0x4a,
	     0x94,
	     0x33,
	     0x66,
	     0xcc,
	     0x83,
	     0x1d,
	     0x3a,
	     0x74,
	     0xe8,
	     0xcb,
	     0x8d,
	     0x01,
	     0x02,
	     0x04,
	     0x08,
	     0x10,
	     0x20,
	     0x40,
	     0x80,
	     0x1b,
	     0x36,
	     0x6c,
	     0xd8,
	     0xab,
	     0x4d,
	     0x9a,
	     0x2f,
	     0x5e,
	     0xbc,
	     0x63,
	     0xc6,
	     0x97,
	     0x35,
	     0x6a,
	     0xd4,
	     0xb3,
	     0x7d,
	     0xfa,
	     0xef,
	     0xc5,
	     0x91,
	     0x39,
	     0x72,
	     0xe4,
	     0xd3,
	     0xbd,
	     0x61,
	     0xc2,
	     0x9f,
	     0x25,
	     0x4a,
	     0x94,
	     0x33,
	     0x66,
	     0xcc,
	     0x83,
	     0x1d,
	     0x3a,
	     0x74,
	     0xe8,
	     0xcb,
	     0x8d,
	     0x01,
	     0x02,
	     0x04,
	     0x08,
	     0x10,
	     0x20,
	     0x40,
	     0x80,
	     0x1b,
	     0x36,
	     0x6c,
	     0xd8,
	     0xab,
	     0x4d,
	     0x9a,
	     0x2f,
	     0x5e,
	     0xbc,
	     0x63,
	     0xc6,
	     0x97,
	     0x35,
	     0x6a,
	     0xd4,
	     0xb3,
	     0x7d,
	     0xfa,
	     0xef,
	     0xc5,
	     0x91,
	     0x39,
	     0x72,
	     0xe4,
	     0xd3,
	     0xbd,
	     0x61,
	     0xc2,
	     0x9f,
	     0x25,
	     0x4a,
	     0x94,
	     0x33,
	     0x66,
	     0xcc,
	     0x83,
	     0x1d,
	     0x3a,
	     0x74,
	     0xe8,
	     0xcb,
	     0x8d,
	     0x01,
	     0x02,
	     0x04,
	     0x08,
	     0x10,
	     0x20,
	     0x40,
	     0x80,
	     0x1b,
	     0x36,
	     0x6c,
	     0xd8,
	     0xab,
	     0x4d,
	     0x9a,
	     0x2f,
	     0x5e,
	     0xbc,
	     0x63,
	     0xc6,
	     0x97,
	     0x35,
	     0x6a,
	     0xd4,
	     0xb3,
	     0x7d,
	     0xfa,
	     0xef,
	     0xc5,
	     0x91,
	     0x39,
	     0x72,
	     0xe4,
	     0xd3,
	     0xbd,
	     0x61,
	     0xc2,
	     0x9f,
	     0x25,
	     0x4a,
	     0x94,
	     0x33,
	     0x66,
	     0xcc,
	     0x83,
	     0x1d,
	     0x3a,
	     0x74,
	     0xe8,
	     0xcb,
	     0x8d,
	     0x01,
	     0x02,
	     0x04,
	     0x08,
	     0x10,
	     0x20,
	     0x40,
	     0x80,
	     0x1b,
	     0x36,
	     0x6c,
	     0xd8,
	     0xab,
	     0x4d,
	     0x9a,
	     0x2f,
	     0x5e,
	     0xbc,
	     0x63,
	     0xc6,
	     0x97,
	     0x35,
	     0x6a,
	     0xd4,
	     0xb3,
	     0x7d,
	     0xfa,
	     0xef,
	     0xc5,
	     0x91,
	     0x39,
	     0x72,
	     0xe4,
	     0xd3,
	     0xbd,
	     0x61,
	     0xc2,
	     0x9f,
	     0x25,
	     0x4a,
	     0x94,
	     0x33,
	     0x66,
	     0xcc,
	     0x83,
	     0x1d,
	     0x3a,
	     0x74,
	     0xe8,
	     0xcb,
	     0x8d
	    ]);
	    var s = new Uint8Array([
	     0x63,
	     0x7c,
	     0x77,
	     0x7b,
	     0xf2,
	     0x6b,
	     0x6f,
	     0xc5,
	     0x30,
	     0x01,
	     0x67,
	     0x2b,
	     0xfe,
	     0xd7,
	     0xab,
	     0x76,
	     0xca,
	     0x82,
	     0xc9,
	     0x7d,
	     0xfa,
	     0x59,
	     0x47,
	     0xf0,
	     0xad,
	     0xd4,
	     0xa2,
	     0xaf,
	     0x9c,
	     0xa4,
	     0x72,
	     0xc0,
	     0xb7,
	     0xfd,
	     0x93,
	     0x26,
	     0x36,
	     0x3f,
	     0xf7,
	     0xcc,
	     0x34,
	     0xa5,
	     0xe5,
	     0xf1,
	     0x71,
	     0xd8,
	     0x31,
	     0x15,
	     0x04,
	     0xc7,
	     0x23,
	     0xc3,
	     0x18,
	     0x96,
	     0x05,
	     0x9a,
	     0x07,
	     0x12,
	     0x80,
	     0xe2,
	     0xeb,
	     0x27,
	     0xb2,
	     0x75,
	     0x09,
	     0x83,
	     0x2c,
	     0x1a,
	     0x1b,
	     0x6e,
	     0x5a,
	     0xa0,
	     0x52,
	     0x3b,
	     0xd6,
	     0xb3,
	     0x29,
	     0xe3,
	     0x2f,
	     0x84,
	     0x53,
	     0xd1,
	     0x00,
	     0xed,
	     0x20,
	     0xfc,
	     0xb1,
	     0x5b,
	     0x6a,
	     0xcb,
	     0xbe,
	     0x39,
	     0x4a,
	     0x4c,
	     0x58,
	     0xcf,
	     0xd0,
	     0xef,
	     0xaa,
	     0xfb,
	     0x43,
	     0x4d,
	     0x33,
	     0x85,
	     0x45,
	     0xf9,
	     0x02,
	     0x7f,
	     0x50,
	     0x3c,
	     0x9f,
	     0xa8,
	     0x51,
	     0xa3,
	     0x40,
	     0x8f,
	     0x92,
	     0x9d,
	     0x38,
	     0xf5,
	     0xbc,
	     0xb6,
	     0xda,
	     0x21,
	     0x10,
	     0xff,
	     0xf3,
	     0xd2,
	     0xcd,
	     0x0c,
	     0x13,
	     0xec,
	     0x5f,
	     0x97,
	     0x44,
	     0x17,
	     0xc4,
	     0xa7,
	     0x7e,
	     0x3d,
	     0x64,
	     0x5d,
	     0x19,
	     0x73,
	     0x60,
	     0x81,
	     0x4f,
	     0xdc,
	     0x22,
	     0x2a,
	     0x90,
	     0x88,
	     0x46,
	     0xee,
	     0xb8,
	     0x14,
	     0xde,
	     0x5e,
	     0x0b,
	     0xdb,
	     0xe0,
	     0x32,
	     0x3a,
	     0x0a,
	     0x49,
	     0x06,
	     0x24,
	     0x5c,
	     0xc2,
	     0xd3,
	     0xac,
	     0x62,
	     0x91,
	     0x95,
	     0xe4,
	     0x79,
	     0xe7,
	     0xc8,
	     0x37,
	     0x6d,
	     0x8d,
	     0xd5,
	     0x4e,
	     0xa9,
	     0x6c,
	     0x56,
	     0xf4,
	     0xea,
	     0x65,
	     0x7a,
	     0xae,
	     0x08,
	     0xba,
	     0x78,
	     0x25,
	     0x2e,
	     0x1c,
	     0xa6,
	     0xb4,
	     0xc6,
	     0xe8,
	     0xdd,
	     0x74,
	     0x1f,
	     0x4b,
	     0xbd,
	     0x8b,
	     0x8a,
	     0x70,
	     0x3e,
	     0xb5,
	     0x66,
	     0x48,
	     0x03,
	     0xf6,
	     0x0e,
	     0x61,
	     0x35,
	     0x57,
	     0xb9,
	     0x86,
	     0xc1,
	     0x1d,
	     0x9e,
	     0xe1,
	     0xf8,
	     0x98,
	     0x11,
	     0x69,
	     0xd9,
	     0x8e,
	     0x94,
	     0x9b,
	     0x1e,
	     0x87,
	     0xe9,
	     0xce,
	     0x55,
	     0x28,
	     0xdf,
	     0x8c,
	     0xa1,
	     0x89,
	     0x0d,
	     0xbf,
	     0xe6,
	     0x42,
	     0x68,
	     0x41,
	     0x99,
	     0x2d,
	     0x0f,
	     0xb0,
	     0x54,
	     0xbb,
	     0x16
	    ]);
	    var inv_s = new Uint8Array([
	     0x52,
	     0x09,
	     0x6a,
	     0xd5,
	     0x30,
	     0x36,
	     0xa5,
	     0x38,
	     0xbf,
	     0x40,
	     0xa3,
	     0x9e,
	     0x81,
	     0xf3,
	     0xd7,
	     0xfb,
	     0x7c,
	     0xe3,
	     0x39,
	     0x82,
	     0x9b,
	     0x2f,
	     0xff,
	     0x87,
	     0x34,
	     0x8e,
	     0x43,
	     0x44,
	     0xc4,
	     0xde,
	     0xe9,
	     0xcb,
	     0x54,
	     0x7b,
	     0x94,
	     0x32,
	     0xa6,
	     0xc2,
	     0x23,
	     0x3d,
	     0xee,
	     0x4c,
	     0x95,
	     0x0b,
	     0x42,
	     0xfa,
	     0xc3,
	     0x4e,
	     0x08,
	     0x2e,
	     0xa1,
	     0x66,
	     0x28,
	     0xd9,
	     0x24,
	     0xb2,
	     0x76,
	     0x5b,
	     0xa2,
	     0x49,
	     0x6d,
	     0x8b,
	     0xd1,
	     0x25,
	     0x72,
	     0xf8,
	     0xf6,
	     0x64,
	     0x86,
	     0x68,
	     0x98,
	     0x16,
	     0xd4,
	     0xa4,
	     0x5c,
	     0xcc,
	     0x5d,
	     0x65,
	     0xb6,
	     0x92,
	     0x6c,
	     0x70,
	     0x48,
	     0x50,
	     0xfd,
	     0xed,
	     0xb9,
	     0xda,
	     0x5e,
	     0x15,
	     0x46,
	     0x57,
	     0xa7,
	     0x8d,
	     0x9d,
	     0x84,
	     0x90,
	     0xd8,
	     0xab,
	     0x00,
	     0x8c,
	     0xbc,
	     0xd3,
	     0x0a,
	     0xf7,
	     0xe4,
	     0x58,
	     0x05,
	     0xb8,
	     0xb3,
	     0x45,
	     0x06,
	     0xd0,
	     0x2c,
	     0x1e,
	     0x8f,
	     0xca,
	     0x3f,
	     0x0f,
	     0x02,
	     0xc1,
	     0xaf,
	     0xbd,
	     0x03,
	     0x01,
	     0x13,
	     0x8a,
	     0x6b,
	     0x3a,
	     0x91,
	     0x11,
	     0x41,
	     0x4f,
	     0x67,
	     0xdc,
	     0xea,
	     0x97,
	     0xf2,
	     0xcf,
	     0xce,
	     0xf0,
	     0xb4,
	     0xe6,
	     0x73,
	     0x96,
	     0xac,
	     0x74,
	     0x22,
	     0xe7,
	     0xad,
	     0x35,
	     0x85,
	     0xe2,
	     0xf9,
	     0x37,
	     0xe8,
	     0x1c,
	     0x75,
	     0xdf,
	     0x6e,
	     0x47,
	     0xf1,
	     0x1a,
	     0x71,
	     0x1d,
	     0x29,
	     0xc5,
	     0x89,
	     0x6f,
	     0xb7,
	     0x62,
	     0x0e,
	     0xaa,
	     0x18,
	     0xbe,
	     0x1b,
	     0xfc,
	     0x56,
	     0x3e,
	     0x4b,
	     0xc6,
	     0xd2,
	     0x79,
	     0x20,
	     0x9a,
	     0xdb,
	     0xc0,
	     0xfe,
	     0x78,
	     0xcd,
	     0x5a,
	     0xf4,
	     0x1f,
	     0xdd,
	     0xa8,
	     0x33,
	     0x88,
	     0x07,
	     0xc7,
	     0x31,
	     0xb1,
	     0x12,
	     0x10,
	     0x59,
	     0x27,
	     0x80,
	     0xec,
	     0x5f,
	     0x60,
	     0x51,
	     0x7f,
	     0xa9,
	     0x19,
	     0xb5,
	     0x4a,
	     0x0d,
	     0x2d,
	     0xe5,
	     0x7a,
	     0x9f,
	     0x93,
	     0xc9,
	     0x9c,
	     0xef,
	     0xa0,
	     0xe0,
	     0x3b,
	     0x4d,
	     0xae,
	     0x2a,
	     0xf5,
	     0xb0,
	     0xc8,
	     0xeb,
	     0xbb,
	     0x3c,
	     0x83,
	     0x53,
	     0x99,
	     0x61,
	     0x17,
	     0x2b,
	     0x04,
	     0x7e,
	     0xba,
	     0x77,
	     0xd6,
	     0x26,
	     0xe1,
	     0x69,
	     0x14,
	     0x63,
	     0x55,
	     0x21,
	     0x0c,
	     0x7d
	    ]);
	    var mixCol = new Uint8Array(256);
	    for (var i = 0; i < 256; i++) {
	     if (i < 128) {
	      mixCol[i] = i << 1;
	     } else {
	      mixCol[i] = i << 1 ^ 0x1b;
	     }
	    }
	    var mix = new Uint32Array([
	     0x00000000,
	     0x0e090d0b,
	     0x1c121a16,
	     0x121b171d,
	     0x3824342c,
	     0x362d3927,
	     0x24362e3a,
	     0x2a3f2331,
	     0x70486858,
	     0x7e416553,
	     0x6c5a724e,
	     0x62537f45,
	     0x486c5c74,
	     0x4665517f,
	     0x547e4662,
	     0x5a774b69,
	     0xe090d0b0,
	     0xee99ddbb,
	     0xfc82caa6,
	     0xf28bc7ad,
	     0xd8b4e49c,
	     0xd6bde997,
	     0xc4a6fe8a,
	     0xcaaff381,
	     0x90d8b8e8,
	     0x9ed1b5e3,
	     0x8ccaa2fe,
	     0x82c3aff5,
	     0xa8fc8cc4,
	     0xa6f581cf,
	     0xb4ee96d2,
	     0xbae79bd9,
	     0xdb3bbb7b,
	     0xd532b670,
	     0xc729a16d,
	     0xc920ac66,
	     0xe31f8f57,
	     0xed16825c,
	     0xff0d9541,
	     0xf104984a,
	     0xab73d323,
	     0xa57ade28,
	     0xb761c935,
	     0xb968c43e,
	     0x9357e70f,
	     0x9d5eea04,
	     0x8f45fd19,
	     0x814cf012,
	     0x3bab6bcb,
	     0x35a266c0,
	     0x27b971dd,
	     0x29b07cd6,
	     0x038f5fe7,
	     0x0d8652ec,
	     0x1f9d45f1,
	     0x119448fa,
	     0x4be30393,
	     0x45ea0e98,
	     0x57f11985,
	     0x59f8148e,
	     0x73c737bf,
	     0x7dce3ab4,
	     0x6fd52da9,
	     0x61dc20a2,
	     0xad766df6,
	     0xa37f60fd,
	     0xb16477e0,
	     0xbf6d7aeb,
	     0x955259da,
	     0x9b5b54d1,
	     0x894043cc,
	     0x87494ec7,
	     0xdd3e05ae,
	     0xd33708a5,
	     0xc12c1fb8,
	     0xcf2512b3,
	     0xe51a3182,
	     0xeb133c89,
	     0xf9082b94,
	     0xf701269f,
	     0x4de6bd46,
	     0x43efb04d,
	     0x51f4a750,
	     0x5ffdaa5b,
	     0x75c2896a,
	     0x7bcb8461,
	     0x69d0937c,
	     0x67d99e77,
	     0x3daed51e,
	     0x33a7d815,
	     0x21bccf08,
	     0x2fb5c203,
	     0x058ae132,
	     0x0b83ec39,
	     0x1998fb24,
	     0x1791f62f,
	     0x764dd68d,
	     0x7844db86,
	     0x6a5fcc9b,
	     0x6456c190,
	     0x4e69e2a1,
	     0x4060efaa,
	     0x527bf8b7,
	     0x5c72f5bc,
	     0x0605bed5,
	     0x080cb3de,
	     0x1a17a4c3,
	     0x141ea9c8,
	     0x3e218af9,
	     0x302887f2,
	     0x223390ef,
	     0x2c3a9de4,
	     0x96dd063d,
	     0x98d40b36,
	     0x8acf1c2b,
	     0x84c61120,
	     0xaef93211,
	     0xa0f03f1a,
	     0xb2eb2807,
	     0xbce2250c,
	     0xe6956e65,
	     0xe89c636e,
	     0xfa877473,
	     0xf48e7978,
	     0xdeb15a49,
	     0xd0b85742,
	     0xc2a3405f,
	     0xccaa4d54,
	     0x41ecdaf7,
	     0x4fe5d7fc,
	     0x5dfec0e1,
	     0x53f7cdea,
	     0x79c8eedb,
	     0x77c1e3d0,
	     0x65daf4cd,
	     0x6bd3f9c6,
	     0x31a4b2af,
	     0x3fadbfa4,
	     0x2db6a8b9,
	     0x23bfa5b2,
	     0x09808683,
	     0x07898b88,
	     0x15929c95,
	     0x1b9b919e,
	     0xa17c0a47,
	     0xaf75074c,
	     0xbd6e1051,
	     0xb3671d5a,
	     0x99583e6b,
	     0x97513360,
	     0x854a247d,
	     0x8b432976,
	     0xd134621f,
	     0xdf3d6f14,
	     0xcd267809,
	     0xc32f7502,
	     0xe9105633,
	     0xe7195b38,
	     0xf5024c25,
	     0xfb0b412e,
	     0x9ad7618c,
	     0x94de6c87,
	     0x86c57b9a,
	     0x88cc7691,
	     0xa2f355a0,
	     0xacfa58ab,
	     0xbee14fb6,
	     0xb0e842bd,
	     0xea9f09d4,
	     0xe49604df,
	     0xf68d13c2,
	     0xf8841ec9,
	     0xd2bb3df8,
	     0xdcb230f3,
	     0xcea927ee,
	     0xc0a02ae5,
	     0x7a47b13c,
	     0x744ebc37,
	     0x6655ab2a,
	     0x685ca621,
	     0x42638510,
	     0x4c6a881b,
	     0x5e719f06,
	     0x5078920d,
	     0x0a0fd964,
	     0x0406d46f,
	     0x161dc372,
	     0x1814ce79,
	     0x322bed48,
	     0x3c22e043,
	     0x2e39f75e,
	     0x2030fa55,
	     0xec9ab701,
	     0xe293ba0a,
	     0xf088ad17,
	     0xfe81a01c,
	     0xd4be832d,
	     0xdab78e26,
	     0xc8ac993b,
	     0xc6a59430,
	     0x9cd2df59,
	     0x92dbd252,
	     0x80c0c54f,
	     0x8ec9c844,
	     0xa4f6eb75,
	     0xaaffe67e,
	     0xb8e4f163,
	     0xb6edfc68,
	     0x0c0a67b1,
	     0x02036aba,
	     0x10187da7,
	     0x1e1170ac,
	     0x342e539d,
	     0x3a275e96,
	     0x283c498b,
	     0x26354480,
	     0x7c420fe9,
	     0x724b02e2,
	     0x605015ff,
	     0x6e5918f4,
	     0x44663bc5,
	     0x4a6f36ce,
	     0x587421d3,
	     0x567d2cd8,
	     0x37a10c7a,
	     0x39a80171,
	     0x2bb3166c,
	     0x25ba1b67,
	     0x0f853856,
	     0x018c355d,
	     0x13972240,
	     0x1d9e2f4b,
	     0x47e96422,
	     0x49e06929,
	     0x5bfb7e34,
	     0x55f2733f,
	     0x7fcd500e,
	     0x71c45d05,
	     0x63df4a18,
	     0x6dd64713,
	     0xd731dcca,
	     0xd938d1c1,
	     0xcb23c6dc,
	     0xc52acbd7,
	     0xef15e8e6,
	     0xe11ce5ed,
	     0xf307f2f0,
	     0xfd0efffb,
	     0xa779b492,
	     0xa970b999,
	     0xbb6bae84,
	     0xb562a38f,
	     0x9f5d80be,
	     0x91548db5,
	     0x834f9aa8,
	     0x8d4697a3
	    ]);
	    function expandKey256(cipherKey) {
	     var b = 240, result = new Uint8Array(b);
	     var r = 1;
	     result.set(cipherKey);
	     for (var j = 32, i = 1; j < b; ++i) {
	      if (j % 32 === 16) {
	       t1 = s[t1];
	       t2 = s[t2];
	       t3 = s[t3];
	       t4 = s[t4];
	      } else if (j % 32 === 0) {
	       var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];
	       t1 = s[t1];
	       t2 = s[t2];
	       t3 = s[t3];
	       t4 = s[t4];
	       t1 = t1 ^ r;
	       if ((r <<= 1) >= 256) {
	        r = (r ^ 0x1b) & 0xFF;
	       }
	      }
	      for (var n = 0; n < 4; ++n) {
	       result[j] = t1 ^= result[j - 32];
	       j++;
	       result[j] = t2 ^= result[j - 32];
	       j++;
	       result[j] = t3 ^= result[j - 32];
	       j++;
	       result[j] = t4 ^= result[j - 32];
	       j++;
	      }
	     }
	     return result;
	    }
	    function decrypt256(input, key) {
	     var state = new Uint8Array(16);
	     state.set(input);
	     var i, j, k;
	     var t, u, v;
	     for (j = 0, k = 224; j < 16; ++j, ++k) {
	      state[j] ^= key[k];
	     }
	     for (i = 13; i >= 1; --i) {
	      t = state[13];
	      state[13] = state[9];
	      state[9] = state[5];
	      state[5] = state[1];
	      state[1] = t;
	      t = state[14];
	      u = state[10];
	      state[14] = state[6];
	      state[10] = state[2];
	      state[6] = t;
	      state[2] = u;
	      t = state[15];
	      u = state[11];
	      v = state[7];
	      state[15] = state[3];
	      state[11] = t;
	      state[7] = u;
	      state[3] = v;
	      for (j = 0; j < 16; ++j) {
	       state[j] = inv_s[state[j]];
	      }
	      for (j = 0, k = i * 16; j < 16; ++j, ++k) {
	       state[j] ^= key[k];
	      }
	      for (j = 0; j < 16; j += 4) {
	       var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];
	       t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;
	       state[j] = t >>> 24 & 0xFF;
	       state[j + 1] = t >> 16 & 0xFF;
	       state[j + 2] = t >> 8 & 0xFF;
	       state[j + 3] = t & 0xFF;
	      }
	     }
	     t = state[13];
	     state[13] = state[9];
	     state[9] = state[5];
	     state[5] = state[1];
	     state[1] = t;
	     t = state[14];
	     u = state[10];
	     state[14] = state[6];
	     state[10] = state[2];
	     state[6] = t;
	     state[2] = u;
	     t = state[15];
	     u = state[11];
	     v = state[7];
	     state[15] = state[3];
	     state[11] = t;
	     state[7] = u;
	     state[3] = v;
	     for (j = 0; j < 16; ++j) {
	      state[j] = inv_s[state[j]];
	      state[j] ^= key[j];
	     }
	     return state;
	    }
	    function encrypt256(input, key) {
	     var t, u, v, k;
	     var state = new Uint8Array(16);
	     state.set(input);
	     for (j = 0; j < 16; ++j) {
	      state[j] ^= key[j];
	     }
	     for (i = 1; i < 14; i++) {
	      for (j = 0; j < 16; ++j) {
	       state[j] = s[state[j]];
	      }
	      v = state[1];
	      state[1] = state[5];
	      state[5] = state[9];
	      state[9] = state[13];
	      state[13] = v;
	      v = state[2];
	      u = state[6];
	      state[2] = state[10];
	      state[6] = state[14];
	      state[10] = v;
	      state[14] = u;
	      v = state[3];
	      u = state[7];
	      t = state[11];
	      state[3] = state[15];
	      state[7] = v;
	      state[11] = u;
	      state[15] = t;
	      for (var j = 0; j < 16; j += 4) {
	       var s0 = state[j + 0], s1 = state[j + 1];
	       var s2 = state[j + 2], s3 = state[j + 3];
	       t = s0 ^ s1 ^ s2 ^ s3;
	       state[j + 0] ^= t ^ mixCol[s0 ^ s1];
	       state[j + 1] ^= t ^ mixCol[s1 ^ s2];
	       state[j + 2] ^= t ^ mixCol[s2 ^ s3];
	       state[j + 3] ^= t ^ mixCol[s3 ^ s0];
	      }
	      for (j = 0, k = i * 16; j < 16; ++j, ++k) {
	       state[j] ^= key[k];
	      }
	     }
	     for (j = 0; j < 16; ++j) {
	      state[j] = s[state[j]];
	     }
	     v = state[1];
	     state[1] = state[5];
	     state[5] = state[9];
	     state[9] = state[13];
	     state[13] = v;
	     v = state[2];
	     u = state[6];
	     state[2] = state[10];
	     state[6] = state[14];
	     state[10] = v;
	     state[14] = u;
	     v = state[3];
	     u = state[7];
	     t = state[11];
	     state[3] = state[15];
	     state[7] = v;
	     state[11] = u;
	     state[15] = t;
	     for (j = 0, k = 224; j < 16; ++j, ++k) {
	      state[j] ^= key[k];
	     }
	     return state;
	    }
	    function AES256Cipher(key) {
	     this.key = expandKey256(key);
	     this.buffer = new Uint8Array(16);
	     this.bufferPosition = 0;
	    }
	    function decryptBlock2(data, finalize) {
	     var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;
	     for (i = 0; i < sourceLength; ++i) {
	      buffer[bufferLength] = data[i];
	      ++bufferLength;
	      if (bufferLength < 16) {
	       continue;
	      }
	      var plain = decrypt256(buffer, this.key);
	      for (j = 0; j < 16; ++j) {
	       plain[j] ^= iv[j];
	      }
	      iv = buffer;
	      result.push(plain);
	      buffer = new Uint8Array(16);
	      bufferLength = 0;
	     }
	     this.buffer = buffer;
	     this.bufferLength = bufferLength;
	     this.iv = iv;
	     if (result.length === 0) {
	      return new Uint8Array([]);
	     }
	     var outputLength = 16 * result.length;
	     if (finalize) {
	      var lastBlock = result[result.length - 1];
	      var psLen = lastBlock[15];
	      if (psLen <= 16) {
	       for (i = 15, ii = 16 - psLen; i >= ii; --i) {
	        if (lastBlock[i] !== psLen) {
	         psLen = 0;
	         break;
	        }
	       }
	       outputLength -= psLen;
	       result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);
	      }
	     }
	     var output = new Uint8Array(outputLength);
	     for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {
	      output.set(result[i], j);
	     }
	     return output;
	    }
	    AES256Cipher.prototype = {
	     decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {
	      var i, sourceLength = data.length;
	      var buffer = this.buffer, bufferLength = this.bufferPosition;
	      if (iv) {
	       this.iv = iv;
	      } else {
	       for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {
	        buffer[bufferLength] = data[i];
	       }
	       if (bufferLength < 16) {
	        this.bufferLength = bufferLength;
	        return new Uint8Array([]);
	       }
	       this.iv = buffer;
	       data = data.subarray(16);
	      }
	      this.buffer = new Uint8Array(16);
	      this.bufferLength = 0;
	      this.decryptBlock = decryptBlock2;
	      return this.decryptBlock(data, finalize);
	     },
	     encrypt: function AES256Cipher_encrypt(data, iv) {
	      var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];
	      if (!iv) {
	       iv = new Uint8Array(16);
	      }
	      for (i = 0; i < sourceLength; ++i) {
	       buffer[bufferLength] = data[i];
	       ++bufferLength;
	       if (bufferLength < 16) {
	        continue;
	       }
	       for (j = 0; j < 16; ++j) {
	        buffer[j] ^= iv[j];
	       }
	       var cipher = encrypt256(buffer, this.key);
	       this.iv = cipher;
	       result.push(cipher);
	       buffer = new Uint8Array(16);
	       bufferLength = 0;
	      }
	      this.buffer = buffer;
	      this.bufferLength = bufferLength;
	      this.iv = iv;
	      if (result.length === 0) {
	       return new Uint8Array([]);
	      }
	      var outputLength = 16 * result.length;
	      var output = new Uint8Array(outputLength);
	      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {
	       output.set(result[i], j);
	      }
	      return output;
	     }
	    };
	    return AES256Cipher;
	   }();
	   var PDF17 = function PDF17Closure() {
	    function compareByteArrays(array1, array2) {
	     if (array1.length !== array2.length) {
	      return false;
	     }
	     for (var i = 0; i < array1.length; i++) {
	      if (array1[i] !== array2[i]) {
	       return false;
	      }
	     }
	     return true;
	    }
	    function PDF17() {
	    }
	    PDF17.prototype = {
	     checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {
	      var hashData = new Uint8Array(password.length + 56);
	      hashData.set(password, 0);
	      hashData.set(ownerValidationSalt, password.length);
	      hashData.set(userBytes, password.length + ownerValidationSalt.length);
	      var result = calculateSHA256(hashData, 0, hashData.length);
	      return compareByteArrays(result, ownerPassword);
	     },
	     checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {
	      var hashData = new Uint8Array(password.length + 8);
	      hashData.set(password, 0);
	      hashData.set(userValidationSalt, password.length);
	      var result = calculateSHA256(hashData, 0, hashData.length);
	      return compareByteArrays(result, userPassword);
	     },
	     getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {
	      var hashData = new Uint8Array(password.length + 56);
	      hashData.set(password, 0);
	      hashData.set(ownerKeySalt, password.length);
	      hashData.set(userBytes, password.length + ownerKeySalt.length);
	      var key = calculateSHA256(hashData, 0, hashData.length);
	      var cipher = new AES256Cipher(key);
	      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));
	     },
	     getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {
	      var hashData = new Uint8Array(password.length + 8);
	      hashData.set(password, 0);
	      hashData.set(userKeySalt, password.length);
	      var key = calculateSHA256(hashData, 0, hashData.length);
	      var cipher = new AES256Cipher(key);
	      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));
	     }
	    };
	    return PDF17;
	   }();
	   var PDF20 = function PDF20Closure() {
	    function concatArrays(array1, array2) {
	     var t = new Uint8Array(array1.length + array2.length);
	     t.set(array1, 0);
	     t.set(array2, array1.length);
	     return t;
	    }
	    function calculatePDF20Hash(password, input, userBytes) {
	     var k = calculateSHA256(input, 0, input.length).subarray(0, 32);
	     var e = [0];
	     var i = 0;
	     while (i < 64 || e[e.length - 1] > i - 32) {
	      var arrayLength = password.length + k.length + userBytes.length;
	      var k1 = new Uint8Array(arrayLength * 64);
	      var array = concatArrays(password, k);
	      array = concatArrays(array, userBytes);
	      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {
	       k1.set(array, pos);
	      }
	      var cipher = new AES128Cipher(k.subarray(0, 16));
	      e = cipher.encrypt(k1, k.subarray(16, 32));
	      var remainder = 0;
	      for (var z = 0; z < 16; z++) {
	       remainder *= 256 % 3;
	       remainder %= 3;
	       remainder += (e[z] >>> 0) % 3;
	       remainder %= 3;
	      }
	      if (remainder === 0) {
	       k = calculateSHA256(e, 0, e.length);
	      } else if (remainder === 1) {
	       k = calculateSHA384(e, 0, e.length);
	      } else if (remainder === 2) {
	       k = calculateSHA512(e, 0, e.length);
	      }
	      i++;
	     }
	     return k.subarray(0, 32);
	    }
	    function PDF20() {
	    }
	    function compareByteArrays(array1, array2) {
	     if (array1.length !== array2.length) {
	      return false;
	     }
	     for (var i = 0; i < array1.length; i++) {
	      if (array1[i] !== array2[i]) {
	       return false;
	      }
	     }
	     return true;
	    }
	    PDF20.prototype = {
	     hash: function PDF20_hash(password, concatBytes, userBytes) {
	      return calculatePDF20Hash(password, concatBytes, userBytes);
	     },
	     checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {
	      var hashData = new Uint8Array(password.length + 56);
	      hashData.set(password, 0);
	      hashData.set(ownerValidationSalt, password.length);
	      hashData.set(userBytes, password.length + ownerValidationSalt.length);
	      var result = calculatePDF20Hash(password, hashData, userBytes);
	      return compareByteArrays(result, ownerPassword);
	     },
	     checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {
	      var hashData = new Uint8Array(password.length + 8);
	      hashData.set(password, 0);
	      hashData.set(userValidationSalt, password.length);
	      var result = calculatePDF20Hash(password, hashData, []);
	      return compareByteArrays(result, userPassword);
	     },
	     getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {
	      var hashData = new Uint8Array(password.length + 56);
	      hashData.set(password, 0);
	      hashData.set(ownerKeySalt, password.length);
	      hashData.set(userBytes, password.length + ownerKeySalt.length);
	      var key = calculatePDF20Hash(password, hashData, userBytes);
	      var cipher = new AES256Cipher(key);
	      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));
	     },
	     getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {
	      var hashData = new Uint8Array(password.length + 8);
	      hashData.set(password, 0);
	      hashData.set(userKeySalt, password.length);
	      var key = calculatePDF20Hash(password, hashData, []);
	      var cipher = new AES256Cipher(key);
	      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));
	     }
	    };
	    return PDF20;
	   }();
	   var CipherTransform = function CipherTransformClosure() {
	    function CipherTransform(stringCipherConstructor, streamCipherConstructor) {
	     this.StringCipherConstructor = stringCipherConstructor;
	     this.StreamCipherConstructor = streamCipherConstructor;
	    }
	    CipherTransform.prototype = {
	     createStream: function CipherTransform_createStream(stream, length) {
	      var cipher = new this.StreamCipherConstructor();
	      return new DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {
	       return cipher.decryptBlock(data, finalize);
	      });
	     },
	     decryptString: function CipherTransform_decryptString(s) {
	      var cipher = new this.StringCipherConstructor();
	      var data = stringToBytes(s);
	      data = cipher.decryptBlock(data, true);
	      return bytesToString(data);
	     }
	    };
	    return CipherTransform;
	   }();
	   var CipherTransformFactory = function CipherTransformFactoryClosure() {
	    var defaultPasswordBytes = new Uint8Array([
	     0x28,
	     0xBF,
	     0x4E,
	     0x5E,
	     0x4E,
	     0x75,
	     0x8A,
	     0x41,
	     0x64,
	     0x00,
	     0x4E,
	     0x56,
	     0xFF,
	     0xFA,
	     0x01,
	     0x08,
	     0x2E,
	     0x2E,
	     0x00,
	     0xB6,
	     0xD0,
	     0x68,
	     0x3E,
	     0x80,
	     0x2F,
	     0x0C,
	     0xA9,
	     0xFE,
	     0x64,
	     0x53,
	     0x69,
	     0x7A
	    ]);
	    function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {
	     if (password) {
	      var passwordLength = Math.min(127, password.length);
	      password = password.subarray(0, passwordLength);
	     } else {
	      password = [];
	     }
	     var pdfAlgorithm;
	     if (revision === 6) {
	      pdfAlgorithm = new PDF20();
	     } else {
	      pdfAlgorithm = new PDF17();
	     }
	     if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {
	      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);
	     } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {
	      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);
	     }
	     return null;
	    }
	    function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {
	     var hashDataSize = 40 + ownerPassword.length + fileId.length;
	     var hashData = new Uint8Array(hashDataSize), i = 0, j, n;
	     if (password) {
	      n = Math.min(32, password.length);
	      for (; i < n; ++i) {
	       hashData[i] = password[i];
	      }
	     }
	     j = 0;
	     while (i < 32) {
	      hashData[i++] = defaultPasswordBytes[j++];
	     }
	     for (j = 0, n = ownerPassword.length; j < n; ++j) {
	      hashData[i++] = ownerPassword[j];
	     }
	     hashData[i++] = flags & 0xFF;
	     hashData[i++] = flags >> 8 & 0xFF;
	     hashData[i++] = flags >> 16 & 0xFF;
	     hashData[i++] = flags >>> 24 & 0xFF;
	     for (j = 0, n = fileId.length; j < n; ++j) {
	      hashData[i++] = fileId[j];
	     }
	     if (revision >= 4 && !encryptMetadata) {
	      hashData[i++] = 0xFF;
	      hashData[i++] = 0xFF;
	      hashData[i++] = 0xFF;
	      hashData[i++] = 0xFF;
	     }
	     var hash = calculateMD5(hashData, 0, i);
	     var keyLengthInBytes = keyLength >> 3;
	     if (revision >= 3) {
	      for (j = 0; j < 50; ++j) {
	       hash = calculateMD5(hash, 0, keyLengthInBytes);
	      }
	     }
	     var encryptionKey = hash.subarray(0, keyLengthInBytes);
	     var cipher, checkData;
	     if (revision >= 3) {
	      for (i = 0; i < 32; ++i) {
	       hashData[i] = defaultPasswordBytes[i];
	      }
	      for (j = 0, n = fileId.length; j < n; ++j) {
	       hashData[i++] = fileId[j];
	      }
	      cipher = new ARCFourCipher(encryptionKey);
	      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));
	      n = encryptionKey.length;
	      var derivedKey = new Uint8Array(n), k;
	      for (j = 1; j <= 19; ++j) {
	       for (k = 0; k < n; ++k) {
	        derivedKey[k] = encryptionKey[k] ^ j;
	       }
	       cipher = new ARCFourCipher(derivedKey);
	       checkData = cipher.encryptBlock(checkData);
	      }
	      for (j = 0, n = checkData.length; j < n; ++j) {
	       if (userPassword[j] !== checkData[j]) {
	        return null;
	       }
	      }
	     } else {
	      cipher = new ARCFourCipher(encryptionKey);
	      checkData = cipher.encryptBlock(defaultPasswordBytes);
	      for (j = 0, n = checkData.length; j < n; ++j) {
	       if (userPassword[j] !== checkData[j]) {
	        return null;
	       }
	      }
	     }
	     return encryptionKey;
	    }
	    function decodeUserPassword(password, ownerPassword, revision, keyLength) {
	     var hashData = new Uint8Array(32), i = 0, j, n;
	     n = Math.min(32, password.length);
	     for (; i < n; ++i) {
	      hashData[i] = password[i];
	     }
	     j = 0;
	     while (i < 32) {
	      hashData[i++] = defaultPasswordBytes[j++];
	     }
	     var hash = calculateMD5(hashData, 0, i);
	     var keyLengthInBytes = keyLength >> 3;
	     if (revision >= 3) {
	      for (j = 0; j < 50; ++j) {
	       hash = calculateMD5(hash, 0, hash.length);
	      }
	     }
	     var cipher, userPassword;
	     if (revision >= 3) {
	      userPassword = ownerPassword;
	      var derivedKey = new Uint8Array(keyLengthInBytes), k;
	      for (j = 19; j >= 0; j--) {
	       for (k = 0; k < keyLengthInBytes; ++k) {
	        derivedKey[k] = hash[k] ^ j;
	       }
	       cipher = new ARCFourCipher(derivedKey);
	       userPassword = cipher.encryptBlock(userPassword);
	      }
	     } else {
	      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));
	      userPassword = cipher.encryptBlock(ownerPassword);
	     }
	     return userPassword;
	    }
	    var identityName = Name.get('Identity');
	    function CipherTransformFactory(dict, fileId, password) {
	     var filter = dict.get('Filter');
	     if (!isName(filter, 'Standard')) {
	      error('unknown encryption method');
	     }
	     this.dict = dict;
	     var algorithm = dict.get('V');
	     if (!isInt(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {
	      error('unsupported encryption algorithm');
	     }
	     this.algorithm = algorithm;
	     var keyLength = dict.get('Length');
	     if (!keyLength) {
	      if (algorithm <= 3) {
	       keyLength = 40;
	      } else {
	       var cfDict = dict.get('CF');
	       var streamCryptoName = dict.get('StmF');
	       if (isDict(cfDict) && isName(streamCryptoName)) {
	        cfDict.suppressEncryption = true;
	        var handlerDict = cfDict.get(streamCryptoName.name);
	        keyLength = handlerDict && handlerDict.get('Length') || 128;
	        if (keyLength < 40) {
	         keyLength <<= 3;
	        }
	       }
	      }
	     }
	     if (!isInt(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {
	      error('invalid key length');
	     }
	     var ownerPassword = stringToBytes(dict.get('O')).subarray(0, 32);
	     var userPassword = stringToBytes(dict.get('U')).subarray(0, 32);
	     var flags = dict.get('P');
	     var revision = dict.get('R');
	     var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;
	     this.encryptMetadata = encryptMetadata;
	     var fileIdBytes = stringToBytes(fileId);
	     var passwordBytes;
	     if (password) {
	      if (revision === 6) {
	       try {
	        password = utf8StringToString(password);
	       } catch (ex) {
	        warn('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');
	       }
	      }
	      passwordBytes = stringToBytes(password);
	     }
	     var encryptionKey;
	     if (algorithm !== 5) {
	      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);
	     } else {
	      var ownerValidationSalt = stringToBytes(dict.get('O')).subarray(32, 40);
	      var ownerKeySalt = stringToBytes(dict.get('O')).subarray(40, 48);
	      var uBytes = stringToBytes(dict.get('U')).subarray(0, 48);
	      var userValidationSalt = stringToBytes(dict.get('U')).subarray(32, 40);
	      var userKeySalt = stringToBytes(dict.get('U')).subarray(40, 48);
	      var ownerEncryption = stringToBytes(dict.get('OE'));
	      var userEncryption = stringToBytes(dict.get('UE'));
	      var perms = stringToBytes(dict.get('Perms'));
	      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);
	     }
	     if (!encryptionKey && !password) {
	      throw new PasswordException('No password given', PasswordResponses.NEED_PASSWORD);
	     } else if (!encryptionKey && password) {
	      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);
	      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);
	     }
	     if (!encryptionKey) {
	      throw new PasswordException('Incorrect Password', PasswordResponses.INCORRECT_PASSWORD);
	     }
	     this.encryptionKey = encryptionKey;
	     if (algorithm >= 4) {
	      var cf = dict.get('CF');
	      if (isDict(cf)) {
	       cf.suppressEncryption = true;
	      }
	      this.cf = cf;
	      this.stmf = dict.get('StmF') || identityName;
	      this.strf = dict.get('StrF') || identityName;
	      this.eff = dict.get('EFF') || this.stmf;
	     }
	    }
	    function buildObjectKey(num, gen, encryptionKey, isAes) {
	     var key = new Uint8Array(encryptionKey.length + 9), i, n;
	     for (i = 0, n = encryptionKey.length; i < n; ++i) {
	      key[i] = encryptionKey[i];
	     }
	     key[i++] = num & 0xFF;
	     key[i++] = num >> 8 & 0xFF;
	     key[i++] = num >> 16 & 0xFF;
	     key[i++] = gen & 0xFF;
	     key[i++] = gen >> 8 & 0xFF;
	     if (isAes) {
	      key[i++] = 0x73;
	      key[i++] = 0x41;
	      key[i++] = 0x6C;
	      key[i++] = 0x54;
	     }
	     var hash = calculateMD5(key, 0, i);
	     return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));
	    }
	    function buildCipherConstructor(cf, name, num, gen, key) {
	     assert(isName(name), 'Invalid crypt filter name.');
	     var cryptFilter = cf.get(name.name);
	     var cfm;
	     if (cryptFilter !== null && cryptFilter !== undefined) {
	      cfm = cryptFilter.get('CFM');
	     }
	     if (!cfm || cfm.name === 'None') {
	      return function cipherTransformFactoryBuildCipherConstructorNone() {
	       return new NullCipher();
	      };
	     }
	     if (cfm.name === 'V2') {
	      return function cipherTransformFactoryBuildCipherConstructorV2() {
	       return new ARCFourCipher(buildObjectKey(num, gen, key, false));
	      };
	     }
	     if (cfm.name === 'AESV2') {
	      return function cipherTransformFactoryBuildCipherConstructorAESV2() {
	       return new AES128Cipher(buildObjectKey(num, gen, key, true));
	      };
	     }
	     if (cfm.name === 'AESV3') {
	      return function cipherTransformFactoryBuildCipherConstructorAESV3() {
	       return new AES256Cipher(key);
	      };
	     }
	     error('Unknown crypto method');
	    }
	    CipherTransformFactory.prototype = {
	     createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {
	      if (this.algorithm === 4 || this.algorithm === 5) {
	       return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));
	      }
	      var key = buildObjectKey(num, gen, this.encryptionKey, false);
	      var cipherConstructor = function buildCipherCipherConstructor() {
	       return new ARCFourCipher(key);
	      };
	      return new CipherTransform(cipherConstructor, cipherConstructor);
	     }
	    };
	    return CipherTransformFactory;
	   }();
	   exports.AES128Cipher = AES128Cipher;
	   exports.AES256Cipher = AES256Cipher;
	   exports.ARCFourCipher = ARCFourCipher;
	   exports.CipherTransformFactory = CipherTransformFactory;
	   exports.PDF17 = PDF17;
	   exports.PDF20 = PDF20;
	   exports.calculateMD5 = calculateMD5;
	   exports.calculateSHA256 = calculateSHA256;
	   exports.calculateSHA384 = calculateSHA384;
	   exports.calculateSHA512 = calculateSHA512;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreFontRenderer = {}, root.pdfjsSharedUtil, root.pdfjsCoreStream, root.pdfjsCoreGlyphList, root.pdfjsCoreEncodings, root.pdfjsCoreCFFParser);
	  }(this, function (exports, sharedUtil, coreStream, coreGlyphList, coreEncodings, coreCFFParser) {
	   var Util = sharedUtil.Util;
	   var bytesToString = sharedUtil.bytesToString;
	   var error = sharedUtil.error;
	   var Stream = coreStream.Stream;
	   var getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;
	   var StandardEncoding = coreEncodings.StandardEncoding;
	   var CFFParser = coreCFFParser.CFFParser;
	   var FontRendererFactory = function FontRendererFactoryClosure() {
	    function getLong(data, offset) {
	     return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];
	    }
	    function getUshort(data, offset) {
	     return data[offset] << 8 | data[offset + 1];
	    }
	    function parseCmap(data, start, end) {
	     var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);
	     var format = getUshort(data, start + offset);
	     var length, ranges, p, i;
	     if (format === 4) {
	      length = getUshort(data, start + offset + 2);
	      var segCount = getUshort(data, start + offset + 6) >> 1;
	      p = start + offset + 14;
	      ranges = [];
	      for (i = 0; i < segCount; i++, p += 2) {
	       ranges[i] = { end: getUshort(data, p) };
	      }
	      p += 2;
	      for (i = 0; i < segCount; i++, p += 2) {
	       ranges[i].start = getUshort(data, p);
	      }
	      for (i = 0; i < segCount; i++, p += 2) {
	       ranges[i].idDelta = getUshort(data, p);
	      }
	      for (i = 0; i < segCount; i++, p += 2) {
	       var idOffset = getUshort(data, p);
	       if (idOffset === 0) {
	        continue;
	       }
	       ranges[i].ids = [];
	       for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {
	        ranges[i].ids[j] = getUshort(data, p + idOffset);
	        idOffset += 2;
	       }
	      }
	      return ranges;
	     } else if (format === 12) {
	      length = getLong(data, start + offset + 4);
	      var groups = getLong(data, start + offset + 12);
	      p = start + offset + 16;
	      ranges = [];
	      for (i = 0; i < groups; i++) {
	       ranges.push({
	        start: getLong(data, p),
	        end: getLong(data, p + 4),
	        idDelta: getLong(data, p + 8) - getLong(data, p)
	       });
	       p += 12;
	      }
	      return ranges;
	     }
	     error('not supported cmap: ' + format);
	    }
	    function parseCff(data, start, end, seacAnalysisEnabled) {
	     var properties = {};
	     var parser = new CFFParser(new Stream(data, start, end - start), properties, seacAnalysisEnabled);
	     var cff = parser.parse();
	     return {
	      glyphs: cff.charStrings.objects,
	      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,
	      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects
	     };
	    }
	    function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {
	     var itemSize, itemDecode;
	     if (isGlyphLocationsLong) {
	      itemSize = 4;
	      itemDecode = function fontItemDecodeLong(data, offset) {
	       return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];
	      };
	     } else {
	      itemSize = 2;
	      itemDecode = function fontItemDecode(data, offset) {
	       return data[offset] << 9 | data[offset + 1] << 1;
	      };
	     }
	     var glyphs = [];
	     var startOffset = itemDecode(loca, 0);
	     for (var j = itemSize; j < loca.length; j += itemSize) {
	      var endOffset = itemDecode(loca, j);
	      glyphs.push(glyf.subarray(startOffset, endOffset));
	      startOffset = endOffset;
	     }
	     return glyphs;
	    }
	    function lookupCmap(ranges, unicode) {
	     var code = unicode.charCodeAt(0), gid = 0;
	     var l = 0, r = ranges.length - 1;
	     while (l < r) {
	      var c = l + r + 1 >> 1;
	      if (code < ranges[c].start) {
	       r = c - 1;
	      } else {
	       l = c;
	      }
	     }
	     if (ranges[l].start <= code && code <= ranges[l].end) {
	      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;
	     }
	     return {
	      charCode: code,
	      glyphId: gid
	     };
	    }
	    function compileGlyf(code, cmds, font) {
	     function moveTo(x, y) {
	      cmds.push({
	       cmd: 'moveTo',
	       args: [
	        x,
	        y
	       ]
	      });
	     }
	     function lineTo(x, y) {
	      cmds.push({
	       cmd: 'lineTo',
	       args: [
	        x,
	        y
	       ]
	      });
	     }
	     function quadraticCurveTo(xa, ya, x, y) {
	      cmds.push({
	       cmd: 'quadraticCurveTo',
	       args: [
	        xa,
	        ya,
	        x,
	        y
	       ]
	      });
	     }
	     var i = 0;
	     var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;
	     var flags;
	     var x = 0, y = 0;
	     i += 10;
	     if (numberOfContours < 0) {
	      do {
	       flags = code[i] << 8 | code[i + 1];
	       var glyphIndex = code[i + 2] << 8 | code[i + 3];
	       i += 4;
	       var arg1, arg2;
	       if (flags & 0x01) {
	        arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;
	        arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;
	        i += 4;
	       } else {
	        arg1 = code[i++];
	        arg2 = code[i++];
	       }
	       if (flags & 0x02) {
	        x = arg1;
	        y = arg2;
	       } else {
	        x = 0;
	        y = 0;
	       }
	       var scaleX = 1, scaleY = 1, scale01 = 0, scale10 = 0;
	       if (flags & 0x08) {
	        scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;
	        i += 2;
	       } else if (flags & 0x40) {
	        scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;
	        scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;
	        i += 4;
	       } else if (flags & 0x80) {
	        scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;
	        scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;
	        scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;
	        scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;
	        i += 8;
	       }
	       var subglyph = font.glyphs[glyphIndex];
	       if (subglyph) {
	        cmds.push({ cmd: 'save' });
	        cmds.push({
	         cmd: 'transform',
	         args: [
	          scaleX,
	          scale01,
	          scale10,
	          scaleY,
	          x,
	          y
	         ]
	        });
	        compileGlyf(subglyph, cmds, font);
	        cmds.push({ cmd: 'restore' });
	       }
	      } while (flags & 0x20);
	     } else {
	      var endPtsOfContours = [];
	      var j, jj;
	      for (j = 0; j < numberOfContours; j++) {
	       endPtsOfContours.push(code[i] << 8 | code[i + 1]);
	       i += 2;
	      }
	      var instructionLength = code[i] << 8 | code[i + 1];
	      i += 2 + instructionLength;
	      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;
	      var points = [];
	      while (points.length < numberOfPoints) {
	       flags = code[i++];
	       var repeat = 1;
	       if (flags & 0x08) {
	        repeat += code[i++];
	       }
	       while (repeat-- > 0) {
	        points.push({ flags: flags });
	       }
	      }
	      for (j = 0; j < numberOfPoints; j++) {
	       switch (points[j].flags & 0x12) {
	       case 0x00:
	        x += (code[i] << 24 | code[i + 1] << 16) >> 16;
	        i += 2;
	        break;
	       case 0x02:
	        x -= code[i++];
	        break;
	       case 0x12:
	        x += code[i++];
	        break;
	       }
	       points[j].x = x;
	      }
	      for (j = 0; j < numberOfPoints; j++) {
	       switch (points[j].flags & 0x24) {
	       case 0x00:
	        y += (code[i] << 24 | code[i + 1] << 16) >> 16;
	        i += 2;
	        break;
	       case 0x04:
	        y -= code[i++];
	        break;
	       case 0x24:
	        y += code[i++];
	        break;
	       }
	       points[j].y = y;
	      }
	      var startPoint = 0;
	      for (i = 0; i < numberOfContours; i++) {
	       var endPoint = endPtsOfContours[i];
	       var contour = points.slice(startPoint, endPoint + 1);
	       if (contour[0].flags & 1) {
	        contour.push(contour[0]);
	       } else if (contour[contour.length - 1].flags & 1) {
	        contour.unshift(contour[contour.length - 1]);
	       } else {
	        var p = {
	         flags: 1,
	         x: (contour[0].x + contour[contour.length - 1].x) / 2,
	         y: (contour[0].y + contour[contour.length - 1].y) / 2
	        };
	        contour.unshift(p);
	        contour.push(p);
	       }
	       moveTo(contour[0].x, contour[0].y);
	       for (j = 1, jj = contour.length; j < jj; j++) {
	        if (contour[j].flags & 1) {
	         lineTo(contour[j].x, contour[j].y);
	        } else if (contour[j + 1].flags & 1) {
	         quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);
	         j++;
	        } else {
	         quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);
	        }
	       }
	       startPoint = endPoint + 1;
	      }
	     }
	    }
	    function compileCharString(code, cmds, font) {
	     var stack = [];
	     var x = 0, y = 0;
	     var stems = 0;
	     function moveTo(x, y) {
	      cmds.push({
	       cmd: 'moveTo',
	       args: [
	        x,
	        y
	       ]
	      });
	     }
	     function lineTo(x, y) {
	      cmds.push({
	       cmd: 'lineTo',
	       args: [
	        x,
	        y
	       ]
	      });
	     }
	     function bezierCurveTo(x1, y1, x2, y2, x, y) {
	      cmds.push({
	       cmd: 'bezierCurveTo',
	       args: [
	        x1,
	        y1,
	        x2,
	        y2,
	        x,
	        y
	       ]
	      });
	     }
	     function parse(code) {
	      var i = 0;
	      while (i < code.length) {
	       var stackClean = false;
	       var v = code[i++];
	       var xa, xb, ya, yb, y1, y2, y3, n, subrCode;
	       switch (v) {
	       case 1:
	        stems += stack.length >> 1;
	        stackClean = true;
	        break;
	       case 3:
	        stems += stack.length >> 1;
	        stackClean = true;
	        break;
	       case 4:
	        y += stack.pop();
	        moveTo(x, y);
	        stackClean = true;
	        break;
	       case 5:
	        while (stack.length > 0) {
	         x += stack.shift();
	         y += stack.shift();
	         lineTo(x, y);
	        }
	        break;
	       case 6:
	        while (stack.length > 0) {
	         x += stack.shift();
	         lineTo(x, y);
	         if (stack.length === 0) {
	          break;
	         }
	         y += stack.shift();
	         lineTo(x, y);
	        }
	        break;
	       case 7:
	        while (stack.length > 0) {
	         y += stack.shift();
	         lineTo(x, y);
	         if (stack.length === 0) {
	          break;
	         }
	         x += stack.shift();
	         lineTo(x, y);
	        }
	        break;
	       case 8:
	        while (stack.length > 0) {
	         xa = x + stack.shift();
	         ya = y + stack.shift();
	         xb = xa + stack.shift();
	         yb = ya + stack.shift();
	         x = xb + stack.shift();
	         y = yb + stack.shift();
	         bezierCurveTo(xa, ya, xb, yb, x, y);
	        }
	        break;
	       case 10:
	        n = stack.pop() + font.subrsBias;
	        subrCode = font.subrs[n];
	        if (subrCode) {
	         parse(subrCode);
	        }
	        break;
	       case 11:
	        return;
	       case 12:
	        v = code[i++];
	        switch (v) {
	        case 34:
	         xa = x + stack.shift();
	         xb = xa + stack.shift();
	         y1 = y + stack.shift();
	         x = xb + stack.shift();
	         bezierCurveTo(xa, y, xb, y1, x, y1);
	         xa = x + stack.shift();
	         xb = xa + stack.shift();
	         x = xb + stack.shift();
	         bezierCurveTo(xa, y1, xb, y, x, y);
	         break;
	        case 35:
	         xa = x + stack.shift();
	         ya = y + stack.shift();
	         xb = xa + stack.shift();
	         yb = ya + stack.shift();
	         x = xb + stack.shift();
	         y = yb + stack.shift();
	         bezierCurveTo(xa, ya, xb, yb, x, y);
	         xa = x + stack.shift();
	         ya = y + stack.shift();
	         xb = xa + stack.shift();
	         yb = ya + stack.shift();
	         x = xb + stack.shift();
	         y = yb + stack.shift();
	         bezierCurveTo(xa, ya, xb, yb, x, y);
	         stack.pop();
	         break;
	        case 36:
	         xa = x + stack.shift();
	         y1 = y + stack.shift();
	         xb = xa + stack.shift();
	         y2 = y1 + stack.shift();
	         x = xb + stack.shift();
	         bezierCurveTo(xa, y1, xb, y2, x, y2);
	         xa = x + stack.shift();
	         xb = xa + stack.shift();
	         y3 = y2 + stack.shift();
	         x = xb + stack.shift();
	         bezierCurveTo(xa, y2, xb, y3, x, y);
	         break;
	        case 37:
	         var x0 = x, y0 = y;
	         xa = x + stack.shift();
	         ya = y + stack.shift();
	         xb = xa + stack.shift();
	         yb = ya + stack.shift();
	         x = xb + stack.shift();
	         y = yb + stack.shift();
	         bezierCurveTo(xa, ya, xb, yb, x, y);
	         xa = x + stack.shift();
	         ya = y + stack.shift();
	         xb = xa + stack.shift();
	         yb = ya + stack.shift();
	         x = xb;
	         y = yb;
	         if (Math.abs(x - x0) > Math.abs(y - y0)) {
	          x += stack.shift();
	         } else {
	          y += stack.shift();
	         }
	         bezierCurveTo(xa, ya, xb, yb, x, y);
	         break;
	        default:
	         error('unknown operator: 12 ' + v);
	        }
	        break;
	       case 14:
	        if (stack.length >= 4) {
	         var achar = stack.pop();
	         var bchar = stack.pop();
	         y = stack.pop();
	         x = stack.pop();
	         cmds.push({ cmd: 'save' });
	         cmds.push({
	          cmd: 'translate',
	          args: [
	           x,
	           y
	          ]
	         });
	         var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[achar]]));
	         compileCharString(font.glyphs[cmap.glyphId], cmds, font);
	         cmds.push({ cmd: 'restore' });
	         cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[bchar]]));
	         compileCharString(font.glyphs[cmap.glyphId], cmds, font);
	        }
	        return;
	       case 18:
	        stems += stack.length >> 1;
	        stackClean = true;
	        break;
	       case 19:
	        stems += stack.length >> 1;
	        i += stems + 7 >> 3;
	        stackClean = true;
	        break;
	       case 20:
	        stems += stack.length >> 1;
	        i += stems + 7 >> 3;
	        stackClean = true;
	        break;
	       case 21:
	        y += stack.pop();
	        x += stack.pop();
	        moveTo(x, y);
	        stackClean = true;
	        break;
	       case 22:
	        x += stack.pop();
	        moveTo(x, y);
	        stackClean = true;
	        break;
	       case 23:
	        stems += stack.length >> 1;
	        stackClean = true;
	        break;
	       case 24:
	        while (stack.length > 2) {
	         xa = x + stack.shift();
	         ya = y + stack.shift();
	         xb = xa + stack.shift();
	         yb = ya + stack.shift();
	         x = xb + stack.shift();
	         y = yb + stack.shift();
	         bezierCurveTo(xa, ya, xb, yb, x, y);
	        }
	        x += stack.shift();
	        y += stack.shift();
	        lineTo(x, y);
	        break;
	       case 25:
	        while (stack.length > 6) {
	         x += stack.shift();
	         y += stack.shift();
	         lineTo(x, y);
	        }
	        xa = x + stack.shift();
	        ya = y + stack.shift();
	        xb = xa + stack.shift();
	        yb = ya + stack.shift();
	        x = xb + stack.shift();
	        y = yb + stack.shift();
	        bezierCurveTo(xa, ya, xb, yb, x, y);
	        break;
	       case 26:
	        if (stack.length % 2) {
	         x += stack.shift();
	        }
	        while (stack.length > 0) {
	         xa = x;
	         ya = y + stack.shift();
	         xb = xa + stack.shift();
	         yb = ya + stack.shift();
	         x = xb;
	         y = yb + stack.shift();
	         bezierCurveTo(xa, ya, xb, yb, x, y);
	        }
	        break;
	       case 27:
	        if (stack.length % 2) {
	         y += stack.shift();
	        }
	        while (stack.length > 0) {
	         xa = x + stack.shift();
	         ya = y;
	         xb = xa + stack.shift();
	         yb = ya + stack.shift();
	         x = xb + stack.shift();
	         y = yb;
	         bezierCurveTo(xa, ya, xb, yb, x, y);
	        }
	        break;
	       case 28:
	        stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);
	        i += 2;
	        break;
	       case 29:
	        n = stack.pop() + font.gsubrsBias;
	        subrCode = font.gsubrs[n];
	        if (subrCode) {
	         parse(subrCode);
	        }
	        break;
	       case 30:
	        while (stack.length > 0) {
	         xa = x;
	         ya = y + stack.shift();
	         xb = xa + stack.shift();
	         yb = ya + stack.shift();
	         x = xb + stack.shift();
	         y = yb + (stack.length === 1 ? stack.shift() : 0);
	         bezierCurveTo(xa, ya, xb, yb, x, y);
	         if (stack.length === 0) {
	          break;
	         }
	         xa = x + stack.shift();
	         ya = y;
	         xb = xa + stack.shift();
	         yb = ya + stack.shift();
	         y = yb + stack.shift();
	         x = xb + (stack.length === 1 ? stack.shift() : 0);
	         bezierCurveTo(xa, ya, xb, yb, x, y);
	        }
	        break;
	       case 31:
	        while (stack.length > 0) {
	         xa = x + stack.shift();
	         ya = y;
	         xb = xa + stack.shift();
	         yb = ya + stack.shift();
	         y = yb + stack.shift();
	         x = xb + (stack.length === 1 ? stack.shift() : 0);
	         bezierCurveTo(xa, ya, xb, yb, x, y);
	         if (stack.length === 0) {
	          break;
	         }
	         xa = x;
	         ya = y + stack.shift();
	         xb = xa + stack.shift();
	         yb = ya + stack.shift();
	         x = xb + stack.shift();
	         y = yb + (stack.length === 1 ? stack.shift() : 0);
	         bezierCurveTo(xa, ya, xb, yb, x, y);
	        }
	        break;
	       default:
	        if (v < 32) {
	         error('unknown operator: ' + v);
	        }
	        if (v < 247) {
	         stack.push(v - 139);
	        } else if (v < 251) {
	         stack.push((v - 247) * 256 + code[i++] + 108);
	        } else if (v < 255) {
	         stack.push(-(v - 251) * 256 - code[i++] - 108);
	        } else {
	         stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);
	         i += 4;
	        }
	        break;
	       }
	       if (stackClean) {
	        stack.length = 0;
	       }
	      }
	     }
	     parse(code);
	    }
	    var noop = '';
	    function CompiledFont(fontMatrix) {
	     this.compiledGlyphs = Object.create(null);
	     this.compiledCharCodeToGlyphId = Object.create(null);
	     this.fontMatrix = fontMatrix;
	    }
	    CompiledFont.prototype = {
	     getPathJs: function (unicode) {
	      var cmap = lookupCmap(this.cmap, unicode);
	      var fn = this.compiledGlyphs[cmap.glyphId];
	      if (!fn) {
	       fn = this.compileGlyph(this.glyphs[cmap.glyphId]);
	       this.compiledGlyphs[cmap.glyphId] = fn;
	      }
	      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {
	       this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;
	      }
	      return fn;
	     },
	     compileGlyph: function (code) {
	      if (!code || code.length === 0 || code[0] === 14) {
	       return noop;
	      }
	      var cmds = [];
	      cmds.push({ cmd: 'save' });
	      cmds.push({
	       cmd: 'transform',
	       args: this.fontMatrix.slice()
	      });
	      cmds.push({
	       cmd: 'scale',
	       args: [
	        'size',
	        '-size'
	       ]
	      });
	      this.compileGlyphImpl(code, cmds);
	      cmds.push({ cmd: 'restore' });
	      return cmds;
	     },
	     compileGlyphImpl: function () {
	      error('Children classes should implement this.');
	     },
	     hasBuiltPath: function (unicode) {
	      var cmap = lookupCmap(this.cmap, unicode);
	      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;
	     }
	    };
	    function TrueTypeCompiled(glyphs, cmap, fontMatrix) {
	     fontMatrix = fontMatrix || [
	      0.000488,
	      0,
	      0,
	      0.000488,
	      0,
	      0
	     ];
	     CompiledFont.call(this, fontMatrix);
	     this.glyphs = glyphs;
	     this.cmap = cmap;
	    }
	    Util.inherit(TrueTypeCompiled, CompiledFont, {
	     compileGlyphImpl: function (code, cmds) {
	      compileGlyf(code, cmds, this);
	     }
	    });
	    function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {
	     fontMatrix = fontMatrix || [
	      0.001,
	      0,
	      0,
	      0.001,
	      0,
	      0
	     ];
	     CompiledFont.call(this, fontMatrix);
	     this.glyphs = cffInfo.glyphs;
	     this.gsubrs = cffInfo.gsubrs || [];
	     this.subrs = cffInfo.subrs || [];
	     this.cmap = cmap;
	     this.glyphNameMap = glyphNameMap || getGlyphsUnicode();
	     this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;
	     this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;
	    }
	    Util.inherit(Type2Compiled, CompiledFont, {
	     compileGlyphImpl: function (code, cmds) {
	      compileCharString(code, cmds, this);
	     }
	    });
	    return {
	     create: function FontRendererFactory_create(font, seacAnalysisEnabled) {
	      var data = new Uint8Array(font.data);
	      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;
	      var numTables = getUshort(data, 4);
	      for (var i = 0, p = 12; i < numTables; i++, p += 16) {
	       var tag = bytesToString(data.subarray(p, p + 4));
	       var offset = getLong(data, p + 8);
	       var length = getLong(data, p + 12);
	       switch (tag) {
	       case 'cmap':
	        cmap = parseCmap(data, offset, offset + length);
	        break;
	       case 'glyf':
	        glyf = data.subarray(offset, offset + length);
	        break;
	       case 'loca':
	        loca = data.subarray(offset, offset + length);
	        break;
	       case 'head':
	        unitsPerEm = getUshort(data, offset + 18);
	        indexToLocFormat = getUshort(data, offset + 50);
	        break;
	       case 'CFF ':
	        cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);
	        break;
	       }
	      }
	      if (glyf) {
	       var fontMatrix = !unitsPerEm ? font.fontMatrix : [
	        1 / unitsPerEm,
	        0,
	        0,
	        1 / unitsPerEm,
	        0,
	        0
	       ];
	       return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);
	      }
	      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);
	     }
	    };
	   }();
	   exports.FontRendererFactory = FontRendererFactory;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreFunction = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCorePsParser);
	  }(this, function (exports, sharedUtil, corePrimitives, corePsParser) {
	   var error = sharedUtil.error;
	   var info = sharedUtil.info;
	   var isArray = sharedUtil.isArray;
	   var isBool = sharedUtil.isBool;
	   var isDict = corePrimitives.isDict;
	   var isStream = corePrimitives.isStream;
	   var PostScriptLexer = corePsParser.PostScriptLexer;
	   var PostScriptParser = corePsParser.PostScriptParser;
	   var PDFFunction = function PDFFunctionClosure() {
	    var CONSTRUCT_SAMPLED = 0;
	    var CONSTRUCT_INTERPOLATED = 2;
	    var CONSTRUCT_STICHED = 3;
	    var CONSTRUCT_POSTSCRIPT = 4;
	    return {
	     getSampleArray: function PDFFunction_getSampleArray(size, outputSize, bps, str) {
	      var i, ii;
	      var length = 1;
	      for (i = 0, ii = size.length; i < ii; i++) {
	       length *= size[i];
	      }
	      length *= outputSize;
	      var array = new Array(length);
	      var codeSize = 0;
	      var codeBuf = 0;
	      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);
	      var strBytes = str.getBytes((length * bps + 7) / 8);
	      var strIdx = 0;
	      for (i = 0; i < length; i++) {
	       while (codeSize < bps) {
	        codeBuf <<= 8;
	        codeBuf |= strBytes[strIdx++];
	        codeSize += 8;
	       }
	       codeSize -= bps;
	       array[i] = (codeBuf >> codeSize) * sampleMul;
	       codeBuf &= (1 << codeSize) - 1;
	      }
	      return array;
	     },
	     getIR: function PDFFunction_getIR(xref, fn) {
	      var dict = fn.dict;
	      if (!dict) {
	       dict = fn;
	      }
	      var types = [
	       this.constructSampled,
	       null,
	       this.constructInterpolated,
	       this.constructStiched,
	       this.constructPostScript
	      ];
	      var typeNum = dict.get('FunctionType');
	      var typeFn = types[typeNum];
	      if (!typeFn) {
	       error('Unknown type of function');
	      }
	      return typeFn.call(this, fn, dict, xref);
	     },
	     fromIR: function PDFFunction_fromIR(IR) {
	      var type = IR[0];
	      switch (type) {
	      case CONSTRUCT_SAMPLED:
	       return this.constructSampledFromIR(IR);
	      case CONSTRUCT_INTERPOLATED:
	       return this.constructInterpolatedFromIR(IR);
	      case CONSTRUCT_STICHED:
	       return this.constructStichedFromIR(IR);
	      default:
	       return this.constructPostScriptFromIR(IR);
	      }
	     },
	     parse: function PDFFunction_parse(xref, fn) {
	      var IR = this.getIR(xref, fn);
	      return this.fromIR(IR);
	     },
	     parseArray: function PDFFunction_parseArray(xref, fnObj) {
	      if (!isArray(fnObj)) {
	       return this.parse(xref, fnObj);
	      }
	      var fnArray = [];
	      for (var j = 0, jj = fnObj.length; j < jj; j++) {
	       var obj = xref.fetchIfRef(fnObj[j]);
	       fnArray.push(PDFFunction.parse(xref, obj));
	      }
	      return function (src, srcOffset, dest, destOffset) {
	       for (var i = 0, ii = fnArray.length; i < ii; i++) {
	        fnArray[i](src, srcOffset, dest, destOffset + i);
	       }
	      };
	     },
	     constructSampled: function PDFFunction_constructSampled(str, dict) {
	      function toMultiArray(arr) {
	       var inputLength = arr.length;
	       var out = [];
	       var index = 0;
	       for (var i = 0; i < inputLength; i += 2) {
	        out[index] = [
	         arr[i],
	         arr[i + 1]
	        ];
	        ++index;
	       }
	       return out;
	      }
	      var domain = dict.getArray('Domain');
	      var range = dict.getArray('Range');
	      if (!domain || !range) {
	       error('No domain or range');
	      }
	      var inputSize = domain.length / 2;
	      var outputSize = range.length / 2;
	      domain = toMultiArray(domain);
	      range = toMultiArray(range);
	      var size = dict.get('Size');
	      var bps = dict.get('BitsPerSample');
	      var order = dict.get('Order') || 1;
	      if (order !== 1) {
	       info('No support for cubic spline interpolation: ' + order);
	      }
	      var encode = dict.getArray('Encode');
	      if (!encode) {
	       encode = [];
	       for (var i = 0; i < inputSize; ++i) {
	        encode.push(0);
	        encode.push(size[i] - 1);
	       }
	      }
	      encode = toMultiArray(encode);
	      var decode = dict.getArray('Decode');
	      if (!decode) {
	       decode = range;
	      } else {
	       decode = toMultiArray(decode);
	      }
	      var samples = this.getSampleArray(size, outputSize, bps, str);
	      return [
	       CONSTRUCT_SAMPLED,
	       inputSize,
	       domain,
	       encode,
	       decode,
	       samples,
	       size,
	       outputSize,
	       Math.pow(2, bps) - 1,
	       range
	      ];
	     },
	     constructSampledFromIR: function PDFFunction_constructSampledFromIR(IR) {
	      function interpolate(x, xmin, xmax, ymin, ymax) {
	       return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));
	      }
	      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {
	       var m = IR[1];
	       var domain = IR[2];
	       var encode = IR[3];
	       var decode = IR[4];
	       var samples = IR[5];
	       var size = IR[6];
	       var n = IR[7];
	       var range = IR[9];
	       var cubeVertices = 1 << m;
	       var cubeN = new Float64Array(cubeVertices);
	       var cubeVertex = new Uint32Array(cubeVertices);
	       var i, j;
	       for (j = 0; j < cubeVertices; j++) {
	        cubeN[j] = 1;
	       }
	       var k = n, pos = 1;
	       for (i = 0; i < m; ++i) {
	        var domain_2i = domain[i][0];
	        var domain_2i_1 = domain[i][1];
	        var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);
	        var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);
	        var size_i = size[i];
	        e = Math.min(Math.max(e, 0), size_i - 1);
	        var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;
	        var n0 = e0 + 1 - e;
	        var n1 = e - e0;
	        var offset0 = e0 * k;
	        var offset1 = offset0 + k;
	        for (j = 0; j < cubeVertices; j++) {
	         if (j & pos) {
	          cubeN[j] *= n1;
	          cubeVertex[j] += offset1;
	         } else {
	          cubeN[j] *= n0;
	          cubeVertex[j] += offset0;
	         }
	        }
	        k *= size_i;
	        pos <<= 1;
	       }
	       for (j = 0; j < n; ++j) {
	        var rj = 0;
	        for (i = 0; i < cubeVertices; i++) {
	         rj += samples[cubeVertex[i] + j] * cubeN[i];
	        }
	        rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);
	        dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);
	       }
	      };
	     },
	     constructInterpolated: function PDFFunction_constructInterpolated(str, dict) {
	      var c0 = dict.getArray('C0') || [0];
	      var c1 = dict.getArray('C1') || [1];
	      var n = dict.get('N');
	      if (!isArray(c0) || !isArray(c1)) {
	       error('Illegal dictionary for interpolated function');
	      }
	      var length = c0.length;
	      var diff = [];
	      for (var i = 0; i < length; ++i) {
	       diff.push(c1[i] - c0[i]);
	      }
	      return [
	       CONSTRUCT_INTERPOLATED,
	       c0,
	       diff,
	       n
	      ];
	     },
	     constructInterpolatedFromIR: function PDFFunction_constructInterpolatedFromIR(IR) {
	      var c0 = IR[1];
	      var diff = IR[2];
	      var n = IR[3];
	      var length = diff.length;
	      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {
	       var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);
	       for (var j = 0; j < length; ++j) {
	        dest[destOffset + j] = c0[j] + x * diff[j];
	       }
	      };
	     },
	     constructStiched: function PDFFunction_constructStiched(fn, dict, xref) {
	      var domain = dict.getArray('Domain');
	      if (!domain) {
	       error('No domain');
	      }
	      var inputSize = domain.length / 2;
	      if (inputSize !== 1) {
	       error('Bad domain for stiched function');
	      }
	      var fnRefs = dict.get('Functions');
	      var fns = [];
	      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {
	       fns.push(PDFFunction.getIR(xref, xref.fetchIfRef(fnRefs[i])));
	      }
	      var bounds = dict.getArray('Bounds');
	      var encode = dict.getArray('Encode');
	      return [
	       CONSTRUCT_STICHED,
	       domain,
	       bounds,
	       encode,
	       fns
	      ];
	     },
	     constructStichedFromIR: function PDFFunction_constructStichedFromIR(IR) {
	      var domain = IR[1];
	      var bounds = IR[2];
	      var encode = IR[3];
	      var fnsIR = IR[4];
	      var fns = [];
	      var tmpBuf = new Float32Array(1);
	      for (var i = 0, ii = fnsIR.length; i < ii; i++) {
	       fns.push(PDFFunction.fromIR(fnsIR[i]));
	      }
	      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {
	       var clip = function constructStichedFromIRClip(v, min, max) {
	        if (v > max) {
	         v = max;
	        } else if (v < min) {
	         v = min;
	        }
	        return v;
	       };
	       var v = clip(src[srcOffset], domain[0], domain[1]);
	       for (var i = 0, ii = bounds.length; i < ii; ++i) {
	        if (v < bounds[i]) {
	         break;
	        }
	       }
	       var dmin = domain[0];
	       if (i > 0) {
	        dmin = bounds[i - 1];
	       }
	       var dmax = domain[1];
	       if (i < bounds.length) {
	        dmax = bounds[i];
	       }
	       var rmin = encode[2 * i];
	       var rmax = encode[2 * i + 1];
	       tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);
	       fns[i](tmpBuf, 0, dest, destOffset);
	      };
	     },
	     constructPostScript: function PDFFunction_constructPostScript(fn, dict, xref) {
	      var domain = dict.getArray('Domain');
	      var range = dict.getArray('Range');
	      if (!domain) {
	       error('No domain.');
	      }
	      if (!range) {
	       error('No range.');
	      }
	      var lexer = new PostScriptLexer(fn);
	      var parser = new PostScriptParser(lexer);
	      var code = parser.parse();
	      return [
	       CONSTRUCT_POSTSCRIPT,
	       domain,
	       range,
	       code
	      ];
	     },
	     constructPostScriptFromIR: function PDFFunction_constructPostScriptFromIR(IR) {
	      var domain = IR[1];
	      var range = IR[2];
	      var code = IR[3];
	      var compiled = new PostScriptCompiler().compile(code, domain, range);
	      if (compiled) {
	       return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);
	      }
	      info('Unable to compile PS function');
	      var numOutputs = range.length >> 1;
	      var numInputs = domain.length >> 1;
	      var evaluator = new PostScriptEvaluator(code);
	      var cache = Object.create(null);
	      var MAX_CACHE_SIZE = 2048 * 4;
	      var cache_available = MAX_CACHE_SIZE;
	      var tmpBuf = new Float32Array(numInputs);
	      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {
	       var i, value;
	       var key = '';
	       var input = tmpBuf;
	       for (i = 0; i < numInputs; i++) {
	        value = src[srcOffset + i];
	        input[i] = value;
	        key += value + '_';
	       }
	       var cachedValue = cache[key];
	       if (cachedValue !== undefined) {
	        dest.set(cachedValue, destOffset);
	        return;
	       }
	       var output = new Float32Array(numOutputs);
	       var stack = evaluator.execute(input);
	       var stackIndex = stack.length - numOutputs;
	       for (i = 0; i < numOutputs; i++) {
	        value = stack[stackIndex + i];
	        var bound = range[i * 2];
	        if (value < bound) {
	         value = bound;
	        } else {
	         bound = range[i * 2 + 1];
	         if (value > bound) {
	          value = bound;
	         }
	        }
	        output[i] = value;
	       }
	       if (cache_available > 0) {
	        cache_available--;
	        cache[key] = output;
	       }
	       dest.set(output, destOffset);
	      };
	     }
	    };
	   }();
	   function isPDFFunction(v) {
	    var fnDict;
	    if (typeof v !== 'object') {
	     return false;
	    } else if (isDict(v)) {
	     fnDict = v;
	    } else if (isStream(v)) {
	     fnDict = v.dict;
	    } else {
	     return false;
	    }
	    return fnDict.has('FunctionType');
	   }
	   var PostScriptStack = function PostScriptStackClosure() {
	    var MAX_STACK_SIZE = 100;
	    function PostScriptStack(initialStack) {
	     this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);
	    }
	    PostScriptStack.prototype = {
	     push: function PostScriptStack_push(value) {
	      if (this.stack.length >= MAX_STACK_SIZE) {
	       error('PostScript function stack overflow.');
	      }
	      this.stack.push(value);
	     },
	     pop: function PostScriptStack_pop() {
	      if (this.stack.length <= 0) {
	       error('PostScript function stack underflow.');
	      }
	      return this.stack.pop();
	     },
	     copy: function PostScriptStack_copy(n) {
	      if (this.stack.length + n >= MAX_STACK_SIZE) {
	       error('PostScript function stack overflow.');
	      }
	      var stack = this.stack;
	      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {
	       stack.push(stack[i]);
	      }
	     },
	     index: function PostScriptStack_index(n) {
	      this.push(this.stack[this.stack.length - n - 1]);
	     },
	     roll: function PostScriptStack_roll(n, p) {
	      var stack = this.stack;
	      var l = stack.length - n;
	      var r = stack.length - 1, c = l + (p - Math.floor(p / n) * n), i, j, t;
	      for (i = l, j = r; i < j; i++, j--) {
	       t = stack[i];
	       stack[i] = stack[j];
	       stack[j] = t;
	      }
	      for (i = l, j = c - 1; i < j; i++, j--) {
	       t = stack[i];
	       stack[i] = stack[j];
	       stack[j] = t;
	      }
	      for (i = c, j = r; i < j; i++, j--) {
	       t = stack[i];
	       stack[i] = stack[j];
	       stack[j] = t;
	      }
	     }
	    };
	    return PostScriptStack;
	   }();
	   var PostScriptEvaluator = function PostScriptEvaluatorClosure() {
	    function PostScriptEvaluator(operators) {
	     this.operators = operators;
	    }
	    PostScriptEvaluator.prototype = {
	     execute: function PostScriptEvaluator_execute(initialStack) {
	      var stack = new PostScriptStack(initialStack);
	      var counter = 0;
	      var operators = this.operators;
	      var length = operators.length;
	      var operator, a, b;
	      while (counter < length) {
	       operator = operators[counter++];
	       if (typeof operator === 'number') {
	        stack.push(operator);
	        continue;
	       }
	       switch (operator) {
	       case 'jz':
	        b = stack.pop();
	        a = stack.pop();
	        if (!a) {
	         counter = b;
	        }
	        break;
	       case 'j':
	        a = stack.pop();
	        counter = a;
	        break;
	       case 'abs':
	        a = stack.pop();
	        stack.push(Math.abs(a));
	        break;
	       case 'add':
	        b = stack.pop();
	        a = stack.pop();
	        stack.push(a + b);
	        break;
	       case 'and':
	        b = stack.pop();
	        a = stack.pop();
	        if (isBool(a) && isBool(b)) {
	         stack.push(a && b);
	        } else {
	         stack.push(a & b);
	        }
	        break;
	       case 'atan':
	        a = stack.pop();
	        stack.push(Math.atan(a));
	        break;
	       case 'bitshift':
	        b = stack.pop();
	        a = stack.pop();
	        if (a > 0) {
	         stack.push(a << b);
	        } else {
	         stack.push(a >> b);
	        }
	        break;
	       case 'ceiling':
	        a = stack.pop();
	        stack.push(Math.ceil(a));
	        break;
	       case 'copy':
	        a = stack.pop();
	        stack.copy(a);
	        break;
	       case 'cos':
	        a = stack.pop();
	        stack.push(Math.cos(a));
	        break;
	       case 'cvi':
	        a = stack.pop() | 0;
	        stack.push(a);
	        break;
	       case 'cvr':
	        break;
	       case 'div':
	        b = stack.pop();
	        a = stack.pop();
	        stack.push(a / b);
	        break;
	       case 'dup':
	        stack.copy(1);
	        break;
	       case 'eq':
	        b = stack.pop();
	        a = stack.pop();
	        stack.push(a === b);
	        break;
	       case 'exch':
	        stack.roll(2, 1);
	        break;
	       case 'exp':
	        b = stack.pop();
	        a = stack.pop();
	        stack.push(Math.pow(a, b));
	        break;
	       case 'false':
	        stack.push(false);
	        break;
	       case 'floor':
	        a = stack.pop();
	        stack.push(Math.floor(a));
	        break;
	       case 'ge':
	        b = stack.pop();
	        a = stack.pop();
	        stack.push(a >= b);
	        break;
	       case 'gt':
	        b = stack.pop();
	        a = stack.pop();
	        stack.push(a > b);
	        break;
	       case 'idiv':
	        b = stack.pop();
	        a = stack.pop();
	        stack.push(a / b | 0);
	        break;
	       case 'index':
	        a = stack.pop();
	        stack.index(a);
	        break;
	       case 'le':
	        b = stack.pop();
	        a = stack.pop();
	        stack.push(a <= b);
	        break;
	       case 'ln':
	        a = stack.pop();
	        stack.push(Math.log(a));
	        break;
	       case 'log':
	        a = stack.pop();
	        stack.push(Math.log(a) / Math.LN10);
	        break;
	       case 'lt':
	        b = stack.pop();
	        a = stack.pop();
	        stack.push(a < b);
	        break;
	       case 'mod':
	        b = stack.pop();
	        a = stack.pop();
	        stack.push(a % b);
	        break;
	       case 'mul':
	        b = stack.pop();
	        a = stack.pop();
	        stack.push(a * b);
	        break;
	       case 'ne':
	        b = stack.pop();
	        a = stack.pop();
	        stack.push(a !== b);
	        break;
	       case 'neg':
	        a = stack.pop();
	        stack.push(-a);
	        break;
	       case 'not':
	        a = stack.pop();
	        if (isBool(a)) {
	         stack.push(!a);
	        } else {
	         stack.push(~a);
	        }
	        break;
	       case 'or':
	        b = stack.pop();
	        a = stack.pop();
	        if (isBool(a) && isBool(b)) {
	         stack.push(a || b);
	        } else {
	         stack.push(a | b);
	        }
	        break;
	       case 'pop':
	        stack.pop();
	        break;
	       case 'roll':
	        b = stack.pop();
	        a = stack.pop();
	        stack.roll(a, b);
	        break;
	       case 'round':
	        a = stack.pop();
	        stack.push(Math.round(a));
	        break;
	       case 'sin':
	        a = stack.pop();
	        stack.push(Math.sin(a));
	        break;
	       case 'sqrt':
	        a = stack.pop();
	        stack.push(Math.sqrt(a));
	        break;
	       case 'sub':
	        b = stack.pop();
	        a = stack.pop();
	        stack.push(a - b);
	        break;
	       case 'true':
	        stack.push(true);
	        break;
	       case 'truncate':
	        a = stack.pop();
	        a = a < 0 ? Math.ceil(a) : Math.floor(a);
	        stack.push(a);
	        break;
	       case 'xor':
	        b = stack.pop();
	        a = stack.pop();
	        if (isBool(a) && isBool(b)) {
	         stack.push(a !== b);
	        } else {
	         stack.push(a ^ b);
	        }
	        break;
	       default:
	        error('Unknown operator ' + operator);
	        break;
	       }
	      }
	      return stack.stack;
	     }
	    };
	    return PostScriptEvaluator;
	   }();
	   var PostScriptCompiler = function PostScriptCompilerClosure() {
	    function AstNode(type) {
	     this.type = type;
	    }
	    AstNode.prototype.visit = function (visitor) {
	     throw new Error('abstract method');
	    };
	    function AstArgument(index, min, max) {
	     AstNode.call(this, 'args');
	     this.index = index;
	     this.min = min;
	     this.max = max;
	    }
	    AstArgument.prototype = Object.create(AstNode.prototype);
	    AstArgument.prototype.visit = function (visitor) {
	     visitor.visitArgument(this);
	    };
	    function AstLiteral(number) {
	     AstNode.call(this, 'literal');
	     this.number = number;
	     this.min = number;
	     this.max = number;
	    }
	    AstLiteral.prototype = Object.create(AstNode.prototype);
	    AstLiteral.prototype.visit = function (visitor) {
	     visitor.visitLiteral(this);
	    };
	    function AstBinaryOperation(op, arg1, arg2, min, max) {
	     AstNode.call(this, 'binary');
	     this.op = op;
	     this.arg1 = arg1;
	     this.arg2 = arg2;
	     this.min = min;
	     this.max = max;
	    }
	    AstBinaryOperation.prototype = Object.create(AstNode.prototype);
	    AstBinaryOperation.prototype.visit = function (visitor) {
	     visitor.visitBinaryOperation(this);
	    };
	    function AstMin(arg, max) {
	     AstNode.call(this, 'max');
	     this.arg = arg;
	     this.min = arg.min;
	     this.max = max;
	    }
	    AstMin.prototype = Object.create(AstNode.prototype);
	    AstMin.prototype.visit = function (visitor) {
	     visitor.visitMin(this);
	    };
	    function AstVariable(index, min, max) {
	     AstNode.call(this, 'var');
	     this.index = index;
	     this.min = min;
	     this.max = max;
	    }
	    AstVariable.prototype = Object.create(AstNode.prototype);
	    AstVariable.prototype.visit = function (visitor) {
	     visitor.visitVariable(this);
	    };
	    function AstVariableDefinition(variable, arg) {
	     AstNode.call(this, 'definition');
	     this.variable = variable;
	     this.arg = arg;
	    }
	    AstVariableDefinition.prototype = Object.create(AstNode.prototype);
	    AstVariableDefinition.prototype.visit = function (visitor) {
	     visitor.visitVariableDefinition(this);
	    };
	    function ExpressionBuilderVisitor() {
	     this.parts = [];
	    }
	    ExpressionBuilderVisitor.prototype = {
	     visitArgument: function (arg) {
	      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');
	     },
	     visitVariable: function (variable) {
	      this.parts.push('v', variable.index);
	     },
	     visitLiteral: function (literal) {
	      this.parts.push(literal.number);
	     },
	     visitBinaryOperation: function (operation) {
	      this.parts.push('(');
	      operation.arg1.visit(this);
	      this.parts.push(' ', operation.op, ' ');
	      operation.arg2.visit(this);
	      this.parts.push(')');
	     },
	     visitVariableDefinition: function (definition) {
	      this.parts.push('var ');
	      definition.variable.visit(this);
	      this.parts.push(' = ');
	      definition.arg.visit(this);
	      this.parts.push(';');
	     },
	     visitMin: function (max) {
	      this.parts.push('Math.min(');
	      max.arg.visit(this);
	      this.parts.push(', ', max.max, ')');
	     },
	     toString: function () {
	      return this.parts.join('');
	     }
	    };
	    function buildAddOperation(num1, num2) {
	     if (num2.type === 'literal' && num2.number === 0) {
	      return num1;
	     }
	     if (num1.type === 'literal' && num1.number === 0) {
	      return num2;
	     }
	     if (num2.type === 'literal' && num1.type === 'literal') {
	      return new AstLiteral(num1.number + num2.number);
	     }
	     return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);
	    }
	    function buildMulOperation(num1, num2) {
	     if (num2.type === 'literal') {
	      if (num2.number === 0) {
	       return new AstLiteral(0);
	      } else if (num2.number === 1) {
	       return num1;
	      } else if (num1.type === 'literal') {
	       return new AstLiteral(num1.number * num2.number);
	      }
	     }
	     if (num1.type === 'literal') {
	      if (num1.number === 0) {
	       return new AstLiteral(0);
	      } else if (num1.number === 1) {
	       return num2;
	      }
	     }
	     var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);
	     var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);
	     return new AstBinaryOperation('*', num1, num2, min, max);
	    }
	    function buildSubOperation(num1, num2) {
	     if (num2.type === 'literal') {
	      if (num2.number === 0) {
	       return num1;
	      } else if (num1.type === 'literal') {
	       return new AstLiteral(num1.number - num2.number);
	      }
	     }
	     if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {
	      return num2.arg2;
	     }
	     return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);
	    }
	    function buildMinOperation(num1, max) {
	     if (num1.min >= max) {
	      return new AstLiteral(max);
	     } else if (num1.max <= max) {
	      return num1;
	     }
	     return new AstMin(num1, max);
	    }
	    function PostScriptCompiler() {
	    }
	    PostScriptCompiler.prototype = {
	     compile: function PostScriptCompiler_compile(code, domain, range) {
	      var stack = [];
	      var i, ii;
	      var instructions = [];
	      var inputSize = domain.length >> 1, outputSize = range.length >> 1;
	      var lastRegister = 0;
	      var n, j;
	      var num1, num2, ast1, ast2, tmpVar, item;
	      for (i = 0; i < inputSize; i++) {
	       stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));
	      }
	      for (i = 0, ii = code.length; i < ii; i++) {
	       item = code[i];
	       if (typeof item === 'number') {
	        stack.push(new AstLiteral(item));
	        continue;
	       }
	       switch (item) {
	       case 'add':
	        if (stack.length < 2) {
	         return null;
	        }
	        num2 = stack.pop();
	        num1 = stack.pop();
	        stack.push(buildAddOperation(num1, num2));
	        break;
	       case 'cvr':
	        if (stack.length < 1) {
	         return null;
	        }
	        break;
	       case 'mul':
	        if (stack.length < 2) {
	         return null;
	        }
	        num2 = stack.pop();
	        num1 = stack.pop();
	        stack.push(buildMulOperation(num1, num2));
	        break;
	       case 'sub':
	        if (stack.length < 2) {
	         return null;
	        }
	        num2 = stack.pop();
	        num1 = stack.pop();
	        stack.push(buildSubOperation(num1, num2));
	        break;
	       case 'exch':
	        if (stack.length < 2) {
	         return null;
	        }
	        ast1 = stack.pop();
	        ast2 = stack.pop();
	        stack.push(ast1, ast2);
	        break;
	       case 'pop':
	        if (stack.length < 1) {
	         return null;
	        }
	        stack.pop();
	        break;
	       case 'index':
	        if (stack.length < 1) {
	         return null;
	        }
	        num1 = stack.pop();
	        if (num1.type !== 'literal') {
	         return null;
	        }
	        n = num1.number;
	        if (n < 0 || (n | 0) !== n || stack.length < n) {
	         return null;
	        }
	        ast1 = stack[stack.length - n - 1];
	        if (ast1.type === 'literal' || ast1.type === 'var') {
	         stack.push(ast1);
	         break;
	        }
	        tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);
	        stack[stack.length - n - 1] = tmpVar;
	        stack.push(tmpVar);
	        instructions.push(new AstVariableDefinition(tmpVar, ast1));
	        break;
	       case 'dup':
	        if (stack.length < 1) {
	         return null;
	        }
	        if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {
	         num1 = stack.pop();
	         stack.push(buildMinOperation(num1, code[i + 1]));
	         i += 6;
	         break;
	        }
	        ast1 = stack[stack.length - 1];
	        if (ast1.type === 'literal' || ast1.type === 'var') {
	         stack.push(ast1);
	         break;
	        }
	        tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);
	        stack[stack.length - 1] = tmpVar;
	        stack.push(tmpVar);
	        instructions.push(new AstVariableDefinition(tmpVar, ast1));
	        break;
	       case 'roll':
	        if (stack.length < 2) {
	         return null;
	        }
	        num2 = stack.pop();
	        num1 = stack.pop();
	        if (num2.type !== 'literal' || num1.type !== 'literal') {
	         return null;
	        }
	        j = num2.number;
	        n = num1.number;
	        if (n <= 0 || (n | 0) !== n || (j | 0) !== j || stack.length < n) {
	         return null;
	        }
	        j = (j % n + n) % n;
	        if (j === 0) {
	         break;
	        }
	        Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));
	        break;
	       default:
	        return null;
	       }
	      }
	      if (stack.length !== outputSize) {
	       return null;
	      }
	      var result = [];
	      instructions.forEach(function (instruction) {
	       var statementBuilder = new ExpressionBuilderVisitor();
	       instruction.visit(statementBuilder);
	       result.push(statementBuilder.toString());
	      });
	      stack.forEach(function (expr, i) {
	       var statementBuilder = new ExpressionBuilderVisitor();
	       expr.visit(statementBuilder);
	       var min = range[i * 2], max = range[i * 2 + 1];
	       var out = [statementBuilder.toString()];
	       if (min > expr.min) {
	        out.unshift('Math.max(', min, ', ');
	        out.push(')');
	       }
	       if (max < expr.max) {
	        out.unshift('Math.min(', max, ', ');
	        out.push(')');
	       }
	       out.unshift('dest[destOffset + ', i, '] = ');
	       out.push(';');
	       result.push(out.join(''));
	      });
	      return result.join('\n');
	     }
	    };
	    return PostScriptCompiler;
	   }();
	   exports.isPDFFunction = isPDFFunction;
	   exports.PDFFunction = PDFFunction;
	   exports.PostScriptEvaluator = PostScriptEvaluator;
	   exports.PostScriptCompiler = PostScriptCompiler;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreParser = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream);
	  }(this, function (exports, sharedUtil, corePrimitives, coreStream) {
	   var MissingDataException = sharedUtil.MissingDataException;
	   var StreamType = sharedUtil.StreamType;
	   var assert = sharedUtil.assert;
	   var error = sharedUtil.error;
	   var info = sharedUtil.info;
	   var isArray = sharedUtil.isArray;
	   var isInt = sharedUtil.isInt;
	   var isNum = sharedUtil.isNum;
	   var isString = sharedUtil.isString;
	   var warn = sharedUtil.warn;
	   var EOF = corePrimitives.EOF;
	   var Cmd = corePrimitives.Cmd;
	   var Dict = corePrimitives.Dict;
	   var Name = corePrimitives.Name;
	   var Ref = corePrimitives.Ref;
	   var isEOF = corePrimitives.isEOF;
	   var isCmd = corePrimitives.isCmd;
	   var isDict = corePrimitives.isDict;
	   var isName = corePrimitives.isName;
	   var Ascii85Stream = coreStream.Ascii85Stream;
	   var AsciiHexStream = coreStream.AsciiHexStream;
	   var CCITTFaxStream = coreStream.CCITTFaxStream;
	   var FlateStream = coreStream.FlateStream;
	   var Jbig2Stream = coreStream.Jbig2Stream;
	   var JpegStream = coreStream.JpegStream;
	   var JpxStream = coreStream.JpxStream;
	   var LZWStream = coreStream.LZWStream;
	   var NullStream = coreStream.NullStream;
	   var PredictorStream = coreStream.PredictorStream;
	   var RunLengthStream = coreStream.RunLengthStream;
	   var MAX_LENGTH_TO_CACHE = 1000;
	   var Parser = function ParserClosure() {
	    function Parser(lexer, allowStreams, xref, recoveryMode) {
	     this.lexer = lexer;
	     this.allowStreams = allowStreams;
	     this.xref = xref;
	     this.recoveryMode = recoveryMode || false;
	     this.imageCache = Object.create(null);
	     this.refill();
	    }
	    Parser.prototype = {
	     refill: function Parser_refill() {
	      this.buf1 = this.lexer.getObj();
	      this.buf2 = this.lexer.getObj();
	     },
	     shift: function Parser_shift() {
	      if (isCmd(this.buf2, 'ID')) {
	       this.buf1 = this.buf2;
	       this.buf2 = null;
	      } else {
	       this.buf1 = this.buf2;
	       this.buf2 = this.lexer.getObj();
	      }
	     },
	     tryShift: function Parser_tryShift() {
	      try {
	       this.shift();
	       return true;
	      } catch (e) {
	       if (e instanceof MissingDataException) {
	        throw e;
	       }
	       return false;
	      }
	     },
	     getObj: function Parser_getObj(cipherTransform) {
	      var buf1 = this.buf1;
	      this.shift();
	      if (buf1 instanceof Cmd) {
	       switch (buf1.cmd) {
	       case 'BI':
	        return this.makeInlineImage(cipherTransform);
	       case '[':
	        var array = [];
	        while (!isCmd(this.buf1, ']') && !isEOF(this.buf1)) {
	         array.push(this.getObj(cipherTransform));
	        }
	        if (isEOF(this.buf1)) {
	         if (!this.recoveryMode) {
	          error('End of file inside array');
	         }
	         return array;
	        }
	        this.shift();
	        return array;
	       case '<<':
	        var dict = new Dict(this.xref);
	        while (!isCmd(this.buf1, '>>') && !isEOF(this.buf1)) {
	         if (!isName(this.buf1)) {
	          info('Malformed dictionary: key must be a name object');
	          this.shift();
	          continue;
	         }
	         var key = this.buf1.name;
	         this.shift();
	         if (isEOF(this.buf1)) {
	          break;
	         }
	         dict.set(key, this.getObj(cipherTransform));
	        }
	        if (isEOF(this.buf1)) {
	         if (!this.recoveryMode) {
	          error('End of file inside dictionary');
	         }
	         return dict;
	        }
	        if (isCmd(this.buf2, 'stream')) {
	         return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;
	        }
	        this.shift();
	        return dict;
	       default:
	        return buf1;
	       }
	      }
	      if (isInt(buf1)) {
	       var num = buf1;
	       if (isInt(this.buf1) && isCmd(this.buf2, 'R')) {
	        var ref = new Ref(num, this.buf1);
	        this.shift();
	        this.shift();
	        return ref;
	       }
	       return num;
	      }
	      if (isString(buf1)) {
	       var str = buf1;
	       if (cipherTransform) {
	        str = cipherTransform.decryptString(str);
	       }
	       return str;
	      }
	      return buf1;
	     },
	     findDefaultInlineStreamEnd: function Parser_findDefaultInlineStreamEnd(stream) {
	      var E = 0x45, I = 0x49, SPACE = 0x20, LF = 0xA, CR = 0xD;
	      var startPos = stream.pos, state = 0, ch, i, n, followingBytes;
	      while ((ch = stream.getByte()) !== -1) {
	       if (state === 0) {
	        state = ch === E ? 1 : 0;
	       } else if (state === 1) {
	        state = ch === I ? 2 : 0;
	       } else {
	        assert(state === 2);
	        if (ch === SPACE || ch === LF || ch === CR) {
	         n = 5;
	         followingBytes = stream.peekBytes(n);
	         for (i = 0; i < n; i++) {
	          ch = followingBytes[i];
	          if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {
	           state = 0;
	           break;
	          }
	         }
	         if (state === 2) {
	          break;
	         }
	        } else
	         {
	          state = 0;
	         }
	       }
	      }
	      return stream.pos - 4 - startPos;
	     },
	     findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {
	      var startPos = stream.pos, foundEOI = false, b, markerLength, length;
	      while ((b = stream.getByte()) !== -1) {
	       if (b !== 0xFF) {
	        continue;
	       }
	       switch (stream.getByte()) {
	       case 0x00:
	        break;
	       case 0xFF:
	        stream.skip(-1);
	        break;
	       case 0xD9:
	        foundEOI = true;
	        break;
	       case 0xC0:
	       case 0xC1:
	       case 0xC2:
	       case 0xC3:
	       case 0xC5:
	       case 0xC6:
	       case 0xC7:
	       case 0xC9:
	       case 0xCA:
	       case 0xCB:
	       case 0xCD:
	       case 0xCE:
	       case 0xCF:
	       case 0xC4:
	       case 0xCC:
	       case 0xDA:
	       case 0xDB:
	       case 0xDC:
	       case 0xDD:
	       case 0xDE:
	       case 0xDF:
	       case 0xE0:
	       case 0xE1:
	       case 0xE2:
	       case 0xE3:
	       case 0xE4:
	       case 0xE5:
	       case 0xE6:
	       case 0xE7:
	       case 0xE8:
	       case 0xE9:
	       case 0xEA:
	       case 0xEB:
	       case 0xEC:
	       case 0xED:
	       case 0xEE:
	       case 0xEF:
	       case 0xFE:
	        markerLength = stream.getUint16();
	        if (markerLength > 2) {
	         stream.skip(markerLength - 2);
	        } else
	         {
	          stream.skip(-2);
	         }
	        break;
	       }
	       if (foundEOI) {
	        break;
	       }
	      }
	      length = stream.pos - startPos;
	      if (b === -1) {
	       warn('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');
	       stream.skip(-length);
	       return this.findDefaultInlineStreamEnd(stream);
	      }
	      this.inlineStreamSkipEI(stream);
	      return length;
	     },
	     findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {
	      var TILDE = 0x7E, GT = 0x3E;
	      var startPos = stream.pos, ch, length;
	      while ((ch = stream.getByte()) !== -1) {
	       if (ch === TILDE && stream.peekByte() === GT) {
	        stream.skip();
	        break;
	       }
	      }
	      length = stream.pos - startPos;
	      if (ch === -1) {
	       warn('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');
	       stream.skip(-length);
	       return this.findDefaultInlineStreamEnd(stream);
	      }
	      this.inlineStreamSkipEI(stream);
	      return length;
	     },
	     findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {
	      var GT = 0x3E;
	      var startPos = stream.pos, ch, length;
	      while ((ch = stream.getByte()) !== -1) {
	       if (ch === GT) {
	        break;
	       }
	      }
	      length = stream.pos - startPos;
	      if (ch === -1) {
	       warn('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');
	       stream.skip(-length);
	       return this.findDefaultInlineStreamEnd(stream);
	      }
	      this.inlineStreamSkipEI(stream);
	      return length;
	     },
	     inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {
	      var E = 0x45, I = 0x49;
	      var state = 0, ch;
	      while ((ch = stream.getByte()) !== -1) {
	       if (state === 0) {
	        state = ch === E ? 1 : 0;
	       } else if (state === 1) {
	        state = ch === I ? 2 : 0;
	       } else if (state === 2) {
	        break;
	       }
	      }
	     },
	     makeInlineImage: function Parser_makeInlineImage(cipherTransform) {
	      var lexer = this.lexer;
	      var stream = lexer.stream;
	      var dict = new Dict(this.xref);
	      while (!isCmd(this.buf1, 'ID') && !isEOF(this.buf1)) {
	       if (!isName(this.buf1)) {
	        error('Dictionary key must be a name object');
	       }
	       var key = this.buf1.name;
	       this.shift();
	       if (isEOF(this.buf1)) {
	        break;
	       }
	       dict.set(key, this.getObj(cipherTransform));
	      }
	      var filter = dict.get('Filter', 'F'), filterName;
	      if (isName(filter)) {
	       filterName = filter.name;
	      } else if (isArray(filter)) {
	       var filterZero = this.xref.fetchIfRef(filter[0]);
	       if (isName(filterZero)) {
	        filterName = filterZero.name;
	       }
	      }
	      var startPos = stream.pos, length, i, ii;
	      if (filterName === 'DCTDecode' || filterName === 'DCT') {
	       length = this.findDCTDecodeInlineStreamEnd(stream);
	      } else if (filterName === 'ASCII85Decide' || filterName === 'A85') {
	       length = this.findASCII85DecodeInlineStreamEnd(stream);
	      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {
	       length = this.findASCIIHexDecodeInlineStreamEnd(stream);
	      } else {
	       length = this.findDefaultInlineStreamEnd(stream);
	      }
	      var imageStream = stream.makeSubStream(startPos, length, dict);
	      var adler32;
	      if (length < MAX_LENGTH_TO_CACHE) {
	       var imageBytes = imageStream.getBytes();
	       imageStream.reset();
	       var a = 1;
	       var b = 0;
	       for (i = 0, ii = imageBytes.length; i < ii; ++i) {
	        a += imageBytes[i] & 0xff;
	        b += a;
	       }
	       adler32 = b % 65521 << 16 | a % 65521;
	       if (this.imageCache.adler32 === adler32) {
	        this.buf2 = Cmd.get('EI');
	        this.shift();
	        this.imageCache[adler32].reset();
	        return this.imageCache[adler32];
	       }
	      }
	      if (cipherTransform) {
	       imageStream = cipherTransform.createStream(imageStream, length);
	      }
	      imageStream = this.filter(imageStream, dict, length);
	      imageStream.dict = dict;
	      if (adler32 !== undefined) {
	       imageStream.cacheKey = 'inline_' + length + '_' + adler32;
	       this.imageCache[adler32] = imageStream;
	      }
	      this.buf2 = Cmd.get('EI');
	      this.shift();
	      return imageStream;
	     },
	     makeStream: function Parser_makeStream(dict, cipherTransform) {
	      var lexer = this.lexer;
	      var stream = lexer.stream;
	      lexer.skipToNextLine();
	      var pos = stream.pos - 1;
	      var length = dict.get('Length');
	      if (!isInt(length)) {
	       info('Bad ' + length + ' attribute in stream');
	       length = 0;
	      }
	      stream.pos = pos + length;
	      lexer.nextChar();
	      if (this.tryShift() && isCmd(this.buf2, 'endstream')) {
	       this.shift();
	      } else
	       {
	        stream.pos = pos;
	        var SCAN_BLOCK_SIZE = 2048;
	        var ENDSTREAM_SIGNATURE_LENGTH = 9;
	        var ENDSTREAM_SIGNATURE = [
	         0x65,
	         0x6E,
	         0x64,
	         0x73,
	         0x74,
	         0x72,
	         0x65,
	         0x61,
	         0x6D
	        ];
	        var skipped = 0, found = false, i, j;
	        while (stream.pos < stream.end) {
	         var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);
	         var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;
	         if (scanLength <= 0) {
	          break;
	         }
	         found = false;
	         i = 0;
	         while (i < scanLength) {
	          j = 0;
	          while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {
	           j++;
	          }
	          if (j >= ENDSTREAM_SIGNATURE_LENGTH) {
	           found = true;
	           break;
	          }
	          i++;
	         }
	         if (found) {
	          skipped += i;
	          stream.pos += i;
	          break;
	         }
	         skipped += scanLength;
	         stream.pos += scanLength;
	        }
	        if (!found) {
	         error('Missing endstream');
	        }
	        length = skipped;
	        lexer.nextChar();
	        this.shift();
	        this.shift();
	       }
	      this.shift();
	      stream = stream.makeSubStream(pos, length, dict);
	      if (cipherTransform) {
	       stream = cipherTransform.createStream(stream, length);
	      }
	      stream = this.filter(stream, dict, length);
	      stream.dict = dict;
	      return stream;
	     },
	     filter: function Parser_filter(stream, dict, length) {
	      var filter = dict.get('Filter', 'F');
	      var params = dict.get('DecodeParms', 'DP');
	      if (isName(filter)) {
	       if (isArray(params)) {
	        params = this.xref.fetchIfRef(params[0]);
	       }
	       return this.makeFilter(stream, filter.name, length, params);
	      }
	      var maybeLength = length;
	      if (isArray(filter)) {
	       var filterArray = filter;
	       var paramsArray = params;
	       for (var i = 0, ii = filterArray.length; i < ii; ++i) {
	        filter = this.xref.fetchIfRef(filterArray[i]);
	        if (!isName(filter)) {
	         error('Bad filter name: ' + filter);
	        }
	        params = null;
	        if (isArray(paramsArray) && i in paramsArray) {
	         params = this.xref.fetchIfRef(paramsArray[i]);
	        }
	        stream = this.makeFilter(stream, filter.name, maybeLength, params);
	        maybeLength = null;
	       }
	      }
	      return stream;
	     },
	     makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {
	      if (maybeLength === 0) {
	       warn('Empty "' + name + '" stream.');
	       return new NullStream(stream);
	      }
	      try {
	       var xrefStreamStats = this.xref.stats.streamTypes;
	       if (name === 'FlateDecode' || name === 'Fl') {
	        xrefStreamStats[StreamType.FLATE] = true;
	        if (params) {
	         return new PredictorStream(new FlateStream(stream, maybeLength), maybeLength, params);
	        }
	        return new FlateStream(stream, maybeLength);
	       }
	       if (name === 'LZWDecode' || name === 'LZW') {
	        xrefStreamStats[StreamType.LZW] = true;
	        var earlyChange = 1;
	        if (params) {
	         if (params.has('EarlyChange')) {
	          earlyChange = params.get('EarlyChange');
	         }
	         return new PredictorStream(new LZWStream(stream, maybeLength, earlyChange), maybeLength, params);
	        }
	        return new LZWStream(stream, maybeLength, earlyChange);
	       }
	       if (name === 'DCTDecode' || name === 'DCT') {
	        xrefStreamStats[StreamType.DCT] = true;
	        return new JpegStream(stream, maybeLength, stream.dict, params);
	       }
	       if (name === 'JPXDecode' || name === 'JPX') {
	        xrefStreamStats[StreamType.JPX] = true;
	        return new JpxStream(stream, maybeLength, stream.dict, params);
	       }
	       if (name === 'ASCII85Decode' || name === 'A85') {
	        xrefStreamStats[StreamType.A85] = true;
	        return new Ascii85Stream(stream, maybeLength);
	       }
	       if (name === 'ASCIIHexDecode' || name === 'AHx') {
	        xrefStreamStats[StreamType.AHX] = true;
	        return new AsciiHexStream(stream, maybeLength);
	       }
	       if (name === 'CCITTFaxDecode' || name === 'CCF') {
	        xrefStreamStats[StreamType.CCF] = true;
	        return new CCITTFaxStream(stream, maybeLength, params);
	       }
	       if (name === 'RunLengthDecode' || name === 'RL') {
	        xrefStreamStats[StreamType.RL] = true;
	        return new RunLengthStream(stream, maybeLength);
	       }
	       if (name === 'JBIG2Decode') {
	        xrefStreamStats[StreamType.JBIG] = true;
	        return new Jbig2Stream(stream, maybeLength, stream.dict, params);
	       }
	       warn('filter "' + name + '" not supported yet');
	       return stream;
	      } catch (ex) {
	       if (ex instanceof MissingDataException) {
	        throw ex;
	       }
	       warn('Invalid stream: \"' + ex + '\"');
	       return new NullStream(stream);
	      }
	     }
	    };
	    return Parser;
	   }();
	   var Lexer = function LexerClosure() {
	    function Lexer(stream, knownCommands) {
	     this.stream = stream;
	     this.nextChar();
	     this.strBuf = [];
	     this.knownCommands = knownCommands;
	    }
	    var specialChars = [
	     1,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     1,
	     1,
	     0,
	     1,
	     1,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     1,
	     0,
	     0,
	     0,
	     0,
	     2,
	     0,
	     0,
	     2,
	     2,
	     0,
	     0,
	     0,
	     0,
	     0,
	     2,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     2,
	     0,
	     2,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     2,
	     0,
	     2,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     2,
	     0,
	     2,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0,
	     0
	    ];
	    function toHexDigit(ch) {
	     if (ch >= 0x30 && ch <= 0x39) {
	      return ch & 0x0F;
	     }
	     if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {
	      return (ch & 0x0F) + 9;
	     }
	     return -1;
	    }
	    Lexer.prototype = {
	     nextChar: function Lexer_nextChar() {
	      return this.currentChar = this.stream.getByte();
	     },
	     peekChar: function Lexer_peekChar() {
	      return this.stream.peekByte();
	     },
	     getNumber: function Lexer_getNumber() {
	      var ch = this.currentChar;
	      var eNotation = false;
	      var divideBy = 0;
	      var sign = 1;
	      if (ch === 0x2D) {
	       sign = -1;
	       ch = this.nextChar();
	       if (ch === 0x2D) {
	        ch = this.nextChar();
	       }
	      } else if (ch === 0x2B) {
	       ch = this.nextChar();
	      }
	      if (ch === 0x2E) {
	       divideBy = 10;
	       ch = this.nextChar();
	      }
	      if (ch < 0x30 || ch > 0x39) {
	       error('Invalid number: ' + String.fromCharCode(ch));
	       return 0;
	      }
	      var baseValue = ch - 0x30;
	      var powerValue = 0;
	      var powerValueSign = 1;
	      while ((ch = this.nextChar()) >= 0) {
	       if (0x30 <= ch && ch <= 0x39) {
	        var currentDigit = ch - 0x30;
	        if (eNotation) {
	         powerValue = powerValue * 10 + currentDigit;
	        } else {
	         if (divideBy !== 0) {
	          divideBy *= 10;
	         }
	         baseValue = baseValue * 10 + currentDigit;
	        }
	       } else if (ch === 0x2E) {
	        if (divideBy === 0) {
	         divideBy = 1;
	        } else {
	         break;
	        }
	       } else if (ch === 0x2D) {
	        warn('Badly formatted number');
	       } else if (ch === 0x45 || ch === 0x65) {
	        ch = this.peekChar();
	        if (ch === 0x2B || ch === 0x2D) {
	         powerValueSign = ch === 0x2D ? -1 : 1;
	         this.nextChar();
	        } else if (ch < 0x30 || ch > 0x39) {
	         break;
	        }
	        eNotation = true;
	       } else {
	        break;
	       }
	      }
	      if (divideBy !== 0) {
	       baseValue /= divideBy;
	      }
	      if (eNotation) {
	       baseValue *= Math.pow(10, powerValueSign * powerValue);
	      }
	      return sign * baseValue;
	     },
	     getString: function Lexer_getString() {
	      var numParen = 1;
	      var done = false;
	      var strBuf = this.strBuf;
	      strBuf.length = 0;
	      var ch = this.nextChar();
	      while (true) {
	       var charBuffered = false;
	       switch (ch | 0) {
	       case -1:
	        warn('Unterminated string');
	        done = true;
	        break;
	       case 0x28:
	        ++numParen;
	        strBuf.push('(');
	        break;
	       case 0x29:
	        if (--numParen === 0) {
	         this.nextChar();
	         done = true;
	        } else {
	         strBuf.push(')');
	        }
	        break;
	       case 0x5C:
	        ch = this.nextChar();
	        switch (ch) {
	        case -1:
	         warn('Unterminated string');
	         done = true;
	         break;
	        case 0x6E:
	         strBuf.push('\n');
	         break;
	        case 0x72:
	         strBuf.push('\r');
	         break;
	        case 0x74:
	         strBuf.push('\t');
	         break;
	        case 0x62:
	         strBuf.push('\b');
	         break;
	        case 0x66:
	         strBuf.push('\f');
	         break;
	        case 0x5C:
	        case 0x28:
	        case 0x29:
	         strBuf.push(String.fromCharCode(ch));
	         break;
	        case 0x30:
	        case 0x31:
	        case 0x32:
	        case 0x33:
	        case 0x34:
	        case 0x35:
	        case 0x36:
	        case 0x37:
	         var x = ch & 0x0F;
	         ch = this.nextChar();
	         charBuffered = true;
	         if (ch >= 0x30 && ch <= 0x37) {
	          x = (x << 3) + (ch & 0x0F);
	          ch = this.nextChar();
	          if (ch >= 0x30 && ch <= 0x37) {
	           charBuffered = false;
	           x = (x << 3) + (ch & 0x0F);
	          }
	         }
	         strBuf.push(String.fromCharCode(x));
	         break;
	        case 0x0D:
	         if (this.peekChar() === 0x0A) {
	          this.nextChar();
	         }
	         break;
	        case 0x0A:
	         break;
	        default:
	         strBuf.push(String.fromCharCode(ch));
	         break;
	        }
	        break;
	       default:
	        strBuf.push(String.fromCharCode(ch));
	        break;
	       }
	       if (done) {
	        break;
	       }
	       if (!charBuffered) {
	        ch = this.nextChar();
	       }
	      }
	      return strBuf.join('');
	     },
	     getName: function Lexer_getName() {
	      var ch, previousCh;
	      var strBuf = this.strBuf;
	      strBuf.length = 0;
	      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {
	       if (ch === 0x23) {
	        ch = this.nextChar();
	        if (specialChars[ch]) {
	         warn('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');
	         strBuf.push('#');
	         break;
	        }
	        var x = toHexDigit(ch);
	        if (x !== -1) {
	         previousCh = ch;
	         ch = this.nextChar();
	         var x2 = toHexDigit(ch);
	         if (x2 === -1) {
	          warn('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');
	          strBuf.push('#', String.fromCharCode(previousCh));
	          if (specialChars[ch]) {
	           break;
	          }
	          strBuf.push(String.fromCharCode(ch));
	          continue;
	         }
	         strBuf.push(String.fromCharCode(x << 4 | x2));
	        } else {
	         strBuf.push('#', String.fromCharCode(ch));
	        }
	       } else {
	        strBuf.push(String.fromCharCode(ch));
	       }
	      }
	      if (strBuf.length > 127) {
	       warn('name token is longer than allowed by the spec: ' + strBuf.length);
	      }
	      return Name.get(strBuf.join(''));
	     },
	     getHexString: function Lexer_getHexString() {
	      var strBuf = this.strBuf;
	      strBuf.length = 0;
	      var ch = this.currentChar;
	      var isFirstHex = true;
	      var firstDigit;
	      var secondDigit;
	      while (true) {
	       if (ch < 0) {
	        warn('Unterminated hex string');
	        break;
	       } else if (ch === 0x3E) {
	        this.nextChar();
	        break;
	       } else if (specialChars[ch] === 1) {
	        ch = this.nextChar();
	        continue;
	       } else {
	        if (isFirstHex) {
	         firstDigit = toHexDigit(ch);
	         if (firstDigit === -1) {
	          warn('Ignoring invalid character "' + ch + '" in hex string');
	          ch = this.nextChar();
	          continue;
	         }
	        } else {
	         secondDigit = toHexDigit(ch);
	         if (secondDigit === -1) {
	          warn('Ignoring invalid character "' + ch + '" in hex string');
	          ch = this.nextChar();
	          continue;
	         }
	         strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));
	        }
	        isFirstHex = !isFirstHex;
	        ch = this.nextChar();
	       }
	      }
	      return strBuf.join('');
	     },
	     getObj: function Lexer_getObj() {
	      var comment = false;
	      var ch = this.currentChar;
	      while (true) {
	       if (ch < 0) {
	        return EOF;
	       }
	       if (comment) {
	        if (ch === 0x0A || ch === 0x0D) {
	         comment = false;
	        }
	       } else if (ch === 0x25) {
	        comment = true;
	       } else if (specialChars[ch] !== 1) {
	        break;
	       }
	       ch = this.nextChar();
	      }
	      switch (ch | 0) {
	      case 0x30:
	      case 0x31:
	      case 0x32:
	      case 0x33:
	      case 0x34:
	      case 0x35:
	      case 0x36:
	      case 0x37:
	      case 0x38:
	      case 0x39:
	      case 0x2B:
	      case 0x2D:
	      case 0x2E:
	       return this.getNumber();
	      case 0x28:
	       return this.getString();
	      case 0x2F:
	       return this.getName();
	      case 0x5B:
	       this.nextChar();
	       return Cmd.get('[');
	      case 0x5D:
	       this.nextChar();
	       return Cmd.get(']');
	      case 0x3C:
	       ch = this.nextChar();
	       if (ch === 0x3C) {
	        this.nextChar();
	        return Cmd.get('<<');
	       }
	       return this.getHexString();
	      case 0x3E:
	       ch = this.nextChar();
	       if (ch === 0x3E) {
	        this.nextChar();
	        return Cmd.get('>>');
	       }
	       return Cmd.get('>');
	      case 0x7B:
	       this.nextChar();
	       return Cmd.get('{');
	      case 0x7D:
	       this.nextChar();
	       return Cmd.get('}');
	      case 0x29:
	       error('Illegal character: ' + ch);
	       break;
	      }
	      var str = String.fromCharCode(ch);
	      var knownCommands = this.knownCommands;
	      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;
	      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {
	       var possibleCommand = str + String.fromCharCode(ch);
	       if (knownCommandFound && knownCommands[possibleCommand] === undefined) {
	        break;
	       }
	       if (str.length === 128) {
	        error('Command token too long: ' + str.length);
	       }
	       str = possibleCommand;
	       knownCommandFound = knownCommands && knownCommands[str] !== undefined;
	      }
	      if (str === 'true') {
	       return true;
	      }
	      if (str === 'false') {
	       return false;
	      }
	      if (str === 'null') {
	       return null;
	      }
	      return Cmd.get(str);
	     },
	     skipToNextLine: function Lexer_skipToNextLine() {
	      var ch = this.currentChar;
	      while (ch >= 0) {
	       if (ch === 0x0D) {
	        ch = this.nextChar();
	        if (ch === 0x0A) {
	         this.nextChar();
	        }
	        break;
	       } else if (ch === 0x0A) {
	        this.nextChar();
	        break;
	       }
	       ch = this.nextChar();
	      }
	     }
	    };
	    return Lexer;
	   }();
	   var Linearization = {
	    create: function LinearizationCreate(stream) {
	     function getInt(name, allowZeroValue) {
	      var obj = linDict.get(name);
	      if (isInt(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {
	       return obj;
	      }
	      throw new Error('The "' + name + '" parameter in the linearization ' + 'dictionary is invalid.');
	     }
	     function getHints() {
	      var hints = linDict.get('H'), hintsLength, item;
	      if (isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {
	       for (var index = 0; index < hintsLength; index++) {
	        if (!(isInt(item = hints[index]) && item > 0)) {
	         throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');
	        }
	       }
	       return hints;
	      }
	      throw new Error('Hint array in the linearization dictionary is invalid.');
	     }
	     var parser = new Parser(new Lexer(stream), false, null);
	     var obj1 = parser.getObj();
	     var obj2 = parser.getObj();
	     var obj3 = parser.getObj();
	     var linDict = parser.getObj();
	     var obj, length;
	     if (!(isInt(obj1) && isInt(obj2) && isCmd(obj3, 'obj') && isDict(linDict) && isNum(obj = linDict.get('Linearized')) && obj > 0)) {
	      return null;
	     } else if ((length = getInt('L')) !== stream.length) {
	      throw new Error('The "L" parameter in the linearization dictionary ' + 'does not equal the stream length.');
	     }
	     return {
	      length: length,
	      hints: getHints(),
	      objectNumberFirst: getInt('O'),
	      endFirst: getInt('E'),
	      numPages: getInt('N'),
	      mainXRefEntriesOffset: getInt('T'),
	      pageFirst: linDict.has('P') ? getInt('P', true) : 0
	     };
	    }
	   };
	   exports.Lexer = Lexer;
	   exports.Linearization = Linearization;
	   exports.Parser = Parser;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreType1Parser = {}, root.pdfjsSharedUtil, root.pdfjsCoreStream, root.pdfjsCoreEncodings);
	  }(this, function (exports, sharedUtil, coreStream, coreEncodings) {
	   var warn = sharedUtil.warn;
	   var isSpace = sharedUtil.isSpace;
	   var Stream = coreStream.Stream;
	   var getEncoding = coreEncodings.getEncoding;
	   var HINTING_ENABLED = false;
	   var Type1CharString = function Type1CharStringClosure() {
	    var COMMAND_MAP = {
	     'hstem': [1],
	     'vstem': [3],
	     'vmoveto': [4],
	     'rlineto': [5],
	     'hlineto': [6],
	     'vlineto': [7],
	     'rrcurveto': [8],
	     'callsubr': [10],
	     'flex': [
	      12,
	      35
	     ],
	     'drop': [
	      12,
	      18
	     ],
	     'endchar': [14],
	     'rmoveto': [21],
	     'hmoveto': [22],
	     'vhcurveto': [30],
	     'hvcurveto': [31]
	    };
	    function Type1CharString() {
	     this.width = 0;
	     this.lsb = 0;
	     this.flexing = false;
	     this.output = [];
	     this.stack = [];
	    }
	    Type1CharString.prototype = {
	     convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {
	      var count = encoded.length;
	      var error = false;
	      var wx, sbx, subrNumber;
	      for (var i = 0; i < count; i++) {
	       var value = encoded[i];
	       if (value < 32) {
	        if (value === 12) {
	         value = (value << 8) + encoded[++i];
	        }
	        switch (value) {
	        case 1:
	         if (!HINTING_ENABLED) {
	          this.stack = [];
	          break;
	         }
	         error = this.executeCommand(2, COMMAND_MAP.hstem);
	         break;
	        case 3:
	         if (!HINTING_ENABLED) {
	          this.stack = [];
	          break;
	         }
	         error = this.executeCommand(2, COMMAND_MAP.vstem);
	         break;
	        case 4:
	         if (this.flexing) {
	          if (this.stack.length < 1) {
	           error = true;
	           break;
	          }
	          var dy = this.stack.pop();
	          this.stack.push(0, dy);
	          break;
	         }
	         error = this.executeCommand(1, COMMAND_MAP.vmoveto);
	         break;
	        case 5:
	         error = this.executeCommand(2, COMMAND_MAP.rlineto);
	         break;
	        case 6:
	         error = this.executeCommand(1, COMMAND_MAP.hlineto);
	         break;
	        case 7:
	         error = this.executeCommand(1, COMMAND_MAP.vlineto);
	         break;
	        case 8:
	         error = this.executeCommand(6, COMMAND_MAP.rrcurveto);
	         break;
	        case 9:
	         this.stack = [];
	         break;
	        case 10:
	         if (this.stack.length < 1) {
	          error = true;
	          break;
	         }
	         subrNumber = this.stack.pop();
	         error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);
	         break;
	        case 11:
	         return error;
	        case 13:
	         if (this.stack.length < 2) {
	          error = true;
	          break;
	         }
	         wx = this.stack.pop();
	         sbx = this.stack.pop();
	         this.lsb = sbx;
	         this.width = wx;
	         this.stack.push(wx, sbx);
	         error = this.executeCommand(2, COMMAND_MAP.hmoveto);
	         break;
	        case 14:
	         this.output.push(COMMAND_MAP.endchar[0]);
	         break;
	        case 21:
	         if (this.flexing) {
	          break;
	         }
	         error = this.executeCommand(2, COMMAND_MAP.rmoveto);
	         break;
	        case 22:
	         if (this.flexing) {
	          this.stack.push(0);
	          break;
	         }
	         error = this.executeCommand(1, COMMAND_MAP.hmoveto);
	         break;
	        case 30:
	         error = this.executeCommand(4, COMMAND_MAP.vhcurveto);
	         break;
	        case 31:
	         error = this.executeCommand(4, COMMAND_MAP.hvcurveto);
	         break;
	        case (12 << 8) + 0:
	         this.stack = [];
	         break;
	        case (12 << 8) + 1:
	         if (!HINTING_ENABLED) {
	          this.stack = [];
	          break;
	         }
	         error = this.executeCommand(2, COMMAND_MAP.vstem);
	         break;
	        case (12 << 8) + 2:
	         if (!HINTING_ENABLED) {
	          this.stack = [];
	          break;
	         }
	         error = this.executeCommand(2, COMMAND_MAP.hstem);
	         break;
	        case (12 << 8) + 6:
	         if (seacAnalysisEnabled) {
	          this.seac = this.stack.splice(-4, 4);
	          error = this.executeCommand(0, COMMAND_MAP.endchar);
	         } else {
	          error = this.executeCommand(4, COMMAND_MAP.endchar);
	         }
	         break;
	        case (12 << 8) + 7:
	         if (this.stack.length < 4) {
	          error = true;
	          break;
	         }
	         var wy = this.stack.pop();
	         wx = this.stack.pop();
	         var sby = this.stack.pop();
	         sbx = this.stack.pop();
	         this.lsb = sbx;
	         this.width = wx;
	         this.stack.push(wx, sbx, sby);
	         error = this.executeCommand(3, COMMAND_MAP.rmoveto);
	         break;
	        case (12 << 8) + 12:
	         if (this.stack.length < 2) {
	          error = true;
	          break;
	         }
	         var num2 = this.stack.pop();
	         var num1 = this.stack.pop();
	         this.stack.push(num1 / num2);
	         break;
	        case (12 << 8) + 16:
	         if (this.stack.length < 2) {
	          error = true;
	          break;
	         }
	         subrNumber = this.stack.pop();
	         var numArgs = this.stack.pop();
	         if (subrNumber === 0 && numArgs === 3) {
	          var flexArgs = this.stack.splice(this.stack.length - 17, 17);
	          this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);
	          error = this.executeCommand(13, COMMAND_MAP.flex, true);
	          this.flexing = false;
	          this.stack.push(flexArgs[15], flexArgs[16]);
	         } else if (subrNumber === 1 && numArgs === 0) {
	          this.flexing = true;
	         }
	         break;
	        case (12 << 8) + 17:
	         break;
	        case (12 << 8) + 33:
	         this.stack = [];
	         break;
	        default:
	         warn('Unknown type 1 charstring command of "' + value + '"');
	         break;
	        }
	        if (error) {
	         break;
	        }
	        continue;
	       } else if (value <= 246) {
	        value = value - 139;
	       } else if (value <= 250) {
	        value = (value - 247) * 256 + encoded[++i] + 108;
	       } else if (value <= 254) {
	        value = -((value - 251) * 256) - encoded[++i] - 108;
	       } else {
	        value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;
	       }
	       this.stack.push(value);
	      }
	      return error;
	     },
	     executeCommand: function (howManyArgs, command, keepStack) {
	      var stackLength = this.stack.length;
	      if (howManyArgs > stackLength) {
	       return true;
	      }
	      var start = stackLength - howManyArgs;
	      for (var i = start; i < stackLength; i++) {
	       var value = this.stack[i];
	       if (value === (value | 0)) {
	        this.output.push(28, value >> 8 & 0xff, value & 0xff);
	       } else {
	        value = 65536 * value | 0;
	        this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);
	       }
	      }
	      this.output.push.apply(this.output, command);
	      if (keepStack) {
	       this.stack.splice(start, howManyArgs);
	      } else {
	       this.stack.length = 0;
	      }
	      return false;
	     }
	    };
	    return Type1CharString;
	   }();
	   var Type1Parser = function Type1ParserClosure() {
	    var EEXEC_ENCRYPT_KEY = 55665;
	    var CHAR_STRS_ENCRYPT_KEY = 4330;
	    function isHexDigit(code) {
	     return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;
	    }
	    function decrypt(data, key, discardNumber) {
	     if (discardNumber >= data.length) {
	      return new Uint8Array(0);
	     }
	     var r = key | 0, c1 = 52845, c2 = 22719, i, j;
	     for (i = 0; i < discardNumber; i++) {
	      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;
	     }
	     var count = data.length - discardNumber;
	     var decrypted = new Uint8Array(count);
	     for (i = discardNumber, j = 0; j < count; i++, j++) {
	      var value = data[i];
	      decrypted[j] = value ^ r >> 8;
	      r = (value + r) * c1 + c2 & (1 << 16) - 1;
	     }
	     return decrypted;
	    }
	    function decryptAscii(data, key, discardNumber) {
	     var r = key | 0, c1 = 52845, c2 = 22719;
	     var count = data.length, maybeLength = count >>> 1;
	     var decrypted = new Uint8Array(maybeLength);
	     var i, j;
	     for (i = 0, j = 0; i < count; i++) {
	      var digit1 = data[i];
	      if (!isHexDigit(digit1)) {
	       continue;
	      }
	      i++;
	      var digit2;
	      while (i < count && !isHexDigit(digit2 = data[i])) {
	       i++;
	      }
	      if (i < count) {
	       var value = parseInt(String.fromCharCode(digit1, digit2), 16);
	       decrypted[j++] = value ^ r >> 8;
	       r = (value + r) * c1 + c2 & (1 << 16) - 1;
	      }
	     }
	     return Array.prototype.slice.call(decrypted, discardNumber, j);
	    }
	    function isSpecial(c) {
	     return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;
	    }
	    function Type1Parser(stream, encrypted, seacAnalysisEnabled) {
	     if (encrypted) {
	      var data = stream.getBytes();
	      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));
	      stream = new Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));
	     }
	     this.seacAnalysisEnabled = !!seacAnalysisEnabled;
	     this.stream = stream;
	     this.nextChar();
	    }
	    Type1Parser.prototype = {
	     readNumberArray: function Type1Parser_readNumberArray() {
	      this.getToken();
	      var array = [];
	      while (true) {
	       var token = this.getToken();
	       if (token === null || token === ']' || token === '}') {
	        break;
	       }
	       array.push(parseFloat(token || 0));
	      }
	      return array;
	     },
	     readNumber: function Type1Parser_readNumber() {
	      var token = this.getToken();
	      return parseFloat(token || 0);
	     },
	     readInt: function Type1Parser_readInt() {
	      var token = this.getToken();
	      return parseInt(token || 0, 10) | 0;
	     },
	     readBoolean: function Type1Parser_readBoolean() {
	      var token = this.getToken();
	      return token === 'true' ? 1 : 0;
	     },
	     nextChar: function Type1_nextChar() {
	      return this.currentChar = this.stream.getByte();
	     },
	     getToken: function Type1Parser_getToken() {
	      var comment = false;
	      var ch = this.currentChar;
	      while (true) {
	       if (ch === -1) {
	        return null;
	       }
	       if (comment) {
	        if (ch === 0x0A || ch === 0x0D) {
	         comment = false;
	        }
	       } else if (ch === 0x25) {
	        comment = true;
	       } else if (!isSpace(ch)) {
	        break;
	       }
	       ch = this.nextChar();
	      }
	      if (isSpecial(ch)) {
	       this.nextChar();
	       return String.fromCharCode(ch);
	      }
	      var token = '';
	      do {
	       token += String.fromCharCode(ch);
	       ch = this.nextChar();
	      } while (ch >= 0 && !isSpace(ch) && !isSpecial(ch));
	      return token;
	     },
	     extractFontProgram: function Type1Parser_extractFontProgram() {
	      var stream = this.stream;
	      var subrs = [], charstrings = [];
	      var privateData = Object.create(null);
	      privateData['lenIV'] = 4;
	      var program = {
	       subrs: [],
	       charstrings: [],
	       properties: { 'privateData': privateData }
	      };
	      var token, length, data, lenIV, encoded;
	      while ((token = this.getToken()) !== null) {
	       if (token !== '/') {
	        continue;
	       }
	       token = this.getToken();
	       switch (token) {
	       case 'CharStrings':
	        this.getToken();
	        this.getToken();
	        this.getToken();
	        this.getToken();
	        while (true) {
	         token = this.getToken();
	         if (token === null || token === 'end') {
	          break;
	         }
	         if (token !== '/') {
	          continue;
	         }
	         var glyph = this.getToken();
	         length = this.readInt();
	         this.getToken();
	         data = stream.makeSubStream(stream.pos, length);
	         lenIV = program.properties.privateData['lenIV'];
	         encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);
	         stream.skip(length);
	         this.nextChar();
	         token = this.getToken();
	         if (token === 'noaccess') {
	          this.getToken();
	         }
	         charstrings.push({
	          glyph: glyph,
	          encoded: encoded
	         });
	        }
	        break;
	       case 'Subrs':
	        var num = this.readInt();
	        this.getToken();
	        while ((token = this.getToken()) === 'dup') {
	         var index = this.readInt();
	         length = this.readInt();
	         this.getToken();
	         data = stream.makeSubStream(stream.pos, length);
	         lenIV = program.properties.privateData['lenIV'];
	         encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);
	         stream.skip(length);
	         this.nextChar();
	         token = this.getToken();
	         if (token === 'noaccess') {
	          this.getToken();
	         }
	         subrs[index] = encoded;
	        }
	        break;
	       case 'BlueValues':
	       case 'OtherBlues':
	       case 'FamilyBlues':
	       case 'FamilyOtherBlues':
	        var blueArray = this.readNumberArray();
	        if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {
	         program.properties.privateData[token] = blueArray;
	        }
	        break;
	       case 'StemSnapH':
	       case 'StemSnapV':
	        program.properties.privateData[token] = this.readNumberArray();
	        break;
	       case 'StdHW':
	       case 'StdVW':
	        program.properties.privateData[token] = this.readNumberArray()[0];
	        break;
	       case 'BlueShift':
	       case 'lenIV':
	       case 'BlueFuzz':
	       case 'BlueScale':
	       case 'LanguageGroup':
	       case 'ExpansionFactor':
	        program.properties.privateData[token] = this.readNumber();
	        break;
	       case 'ForceBold':
	        program.properties.privateData[token] = this.readBoolean();
	        break;
	       }
	      }
	      for (var i = 0; i < charstrings.length; i++) {
	       glyph = charstrings[i].glyph;
	       encoded = charstrings[i].encoded;
	       var charString = new Type1CharString();
	       var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);
	       var output = charString.output;
	       if (error) {
	        output = [14];
	       }
	       program.charstrings.push({
	        glyphName: glyph,
	        charstring: output,
	        width: charString.width,
	        lsb: charString.lsb,
	        seac: charString.seac
	       });
	      }
	      return program;
	     },
	     extractFontHeader: function Type1Parser_extractFontHeader(properties) {
	      var token;
	      while ((token = this.getToken()) !== null) {
	       if (token !== '/') {
	        continue;
	       }
	       token = this.getToken();
	       switch (token) {
	       case 'FontMatrix':
	        var matrix = this.readNumberArray();
	        properties.fontMatrix = matrix;
	        break;
	       case 'Encoding':
	        var encodingArg = this.getToken();
	        var encoding;
	        if (!/^\d+$/.test(encodingArg)) {
	         encoding = getEncoding(encodingArg);
	        } else {
	         encoding = [];
	         var size = parseInt(encodingArg, 10) | 0;
	         this.getToken();
	         for (var j = 0; j < size; j++) {
	          token = this.getToken();
	          while (token !== 'dup' && token !== 'def') {
	           token = this.getToken();
	           if (token === null) {
	            return;
	           }
	          }
	          if (token === 'def') {
	           break;
	          }
	          var index = this.readInt();
	          this.getToken();
	          var glyph = this.getToken();
	          encoding[index] = glyph;
	          this.getToken();
	         }
	        }
	        properties.builtInEncoding = encoding;
	        break;
	       case 'FontBBox':
	        var fontBBox = this.readNumberArray();
	        properties.ascent = fontBBox[3];
	        properties.descent = fontBBox[1];
	        properties.ascentScaled = true;
	        break;
	       }
	      }
	     }
	    };
	    return Type1Parser;
	   }();
	   exports.Type1Parser = Type1Parser;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsDisplayPatternHelper = {}, root.pdfjsSharedUtil, root.pdfjsDisplayWebGL);
	  }(this, function (exports, sharedUtil, displayWebGL) {
	   var Util = sharedUtil.Util;
	   var info = sharedUtil.info;
	   var isArray = sharedUtil.isArray;
	   var error = sharedUtil.error;
	   var WebGLUtils = displayWebGL.WebGLUtils;
	   var ShadingIRs = {};
	   ShadingIRs.RadialAxial = {
	    fromIR: function RadialAxial_fromIR(raw) {
	     var type = raw[1];
	     var colorStops = raw[2];
	     var p0 = raw[3];
	     var p1 = raw[4];
	     var r0 = raw[5];
	     var r1 = raw[6];
	     return {
	      type: 'Pattern',
	      getPattern: function RadialAxial_getPattern(ctx) {
	       var grad;
	       if (type === 'axial') {
	        grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);
	       } else if (type === 'radial') {
	        grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);
	       }
	       for (var i = 0, ii = colorStops.length; i < ii; ++i) {
	        var c = colorStops[i];
	        grad.addColorStop(c[0], c[1]);
	       }
	       return grad;
	      }
	     };
	    }
	   };
	   var createMeshCanvas = function createMeshCanvasClosure() {
	    function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {
	     var coords = context.coords, colors = context.colors;
	     var bytes = data.data, rowSize = data.width * 4;
	     var tmp;
	     if (coords[p1 + 1] > coords[p2 + 1]) {
	      tmp = p1;
	      p1 = p2;
	      p2 = tmp;
	      tmp = c1;
	      c1 = c2;
	      c2 = tmp;
	     }
	     if (coords[p2 + 1] > coords[p3 + 1]) {
	      tmp = p2;
	      p2 = p3;
	      p3 = tmp;
	      tmp = c2;
	      c2 = c3;
	      c3 = tmp;
	     }
	     if (coords[p1 + 1] > coords[p2 + 1]) {
	      tmp = p1;
	      p1 = p2;
	      p2 = tmp;
	      tmp = c1;
	      c1 = c2;
	      c2 = tmp;
	     }
	     var x1 = (coords[p1] + context.offsetX) * context.scaleX;
	     var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;
	     var x2 = (coords[p2] + context.offsetX) * context.scaleX;
	     var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;
	     var x3 = (coords[p3] + context.offsetX) * context.scaleX;
	     var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;
	     if (y1 >= y3) {
	      return;
	     }
	     var c1r = colors[c1], c1g = colors[c1 + 1], c1b = colors[c1 + 2];
	     var c2r = colors[c2], c2g = colors[c2 + 1], c2b = colors[c2 + 2];
	     var c3r = colors[c3], c3g = colors[c3 + 1], c3b = colors[c3 + 2];
	     var minY = Math.round(y1), maxY = Math.round(y3);
	     var xa, car, cag, cab;
	     var xb, cbr, cbg, cbb;
	     var k;
	     for (var y = minY; y <= maxY; y++) {
	      if (y < y2) {
	       k = y < y1 ? 0 : y1 === y2 ? 1 : (y1 - y) / (y1 - y2);
	       xa = x1 - (x1 - x2) * k;
	       car = c1r - (c1r - c2r) * k;
	       cag = c1g - (c1g - c2g) * k;
	       cab = c1b - (c1b - c2b) * k;
	      } else {
	       k = y > y3 ? 1 : y2 === y3 ? 0 : (y2 - y) / (y2 - y3);
	       xa = x2 - (x2 - x3) * k;
	       car = c2r - (c2r - c3r) * k;
	       cag = c2g - (c2g - c3g) * k;
	       cab = c2b - (c2b - c3b) * k;
	      }
	      k = y < y1 ? 0 : y > y3 ? 1 : (y1 - y) / (y1 - y3);
	      xb = x1 - (x1 - x3) * k;
	      cbr = c1r - (c1r - c3r) * k;
	      cbg = c1g - (c1g - c3g) * k;
	      cbb = c1b - (c1b - c3b) * k;
	      var x1_ = Math.round(Math.min(xa, xb));
	      var x2_ = Math.round(Math.max(xa, xb));
	      var j = rowSize * y + x1_ * 4;
	      for (var x = x1_; x <= x2_; x++) {
	       k = (xa - x) / (xa - xb);
	       k = k < 0 ? 0 : k > 1 ? 1 : k;
	       bytes[j++] = car - (car - cbr) * k | 0;
	       bytes[j++] = cag - (cag - cbg) * k | 0;
	       bytes[j++] = cab - (cab - cbb) * k | 0;
	       bytes[j++] = 255;
	      }
	     }
	    }
	    function drawFigure(data, figure, context) {
	     var ps = figure.coords;
	     var cs = figure.colors;
	     var i, ii;
	     switch (figure.type) {
	     case 'lattice':
	      var verticesPerRow = figure.verticesPerRow;
	      var rows = Math.floor(ps.length / verticesPerRow) - 1;
	      var cols = verticesPerRow - 1;
	      for (i = 0; i < rows; i++) {
	       var q = i * verticesPerRow;
	       for (var j = 0; j < cols; j++, q++) {
	        drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);
	        drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);
	       }
	      }
	      break;
	     case 'triangles':
	      for (i = 0, ii = ps.length; i < ii; i += 3) {
	       drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);
	      }
	      break;
	     default:
	      error('illigal figure');
	      break;
	     }
	    }
	    function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases) {
	     var EXPECTED_SCALE = 1.1;
	     var MAX_PATTERN_SIZE = 3000;
	     var BORDER_SIZE = 2;
	     var offsetX = Math.floor(bounds[0]);
	     var offsetY = Math.floor(bounds[1]);
	     var boundsWidth = Math.ceil(bounds[2]) - offsetX;
	     var boundsHeight = Math.ceil(bounds[3]) - offsetY;
	     var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);
	     var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);
	     var scaleX = boundsWidth / width;
	     var scaleY = boundsHeight / height;
	     var context = {
	      coords: coords,
	      colors: colors,
	      offsetX: -offsetX,
	      offsetY: -offsetY,
	      scaleX: 1 / scaleX,
	      scaleY: 1 / scaleY
	     };
	     var paddedWidth = width + BORDER_SIZE * 2;
	     var paddedHeight = height + BORDER_SIZE * 2;
	     var canvas, tmpCanvas, i, ii;
	     if (WebGLUtils.isEnabled) {
	      canvas = WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);
	      tmpCanvas = cachedCanvases.getCanvas('mesh', paddedWidth, paddedHeight, false);
	      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);
	      canvas = tmpCanvas.canvas;
	     } else {
	      tmpCanvas = cachedCanvases.getCanvas('mesh', paddedWidth, paddedHeight, false);
	      var tmpCtx = tmpCanvas.context;
	      var data = tmpCtx.createImageData(width, height);
	      if (backgroundColor) {
	       var bytes = data.data;
	       for (i = 0, ii = bytes.length; i < ii; i += 4) {
	        bytes[i] = backgroundColor[0];
	        bytes[i + 1] = backgroundColor[1];
	        bytes[i + 2] = backgroundColor[2];
	        bytes[i + 3] = 255;
	       }
	      }
	      for (i = 0; i < figures.length; i++) {
	       drawFigure(data, figures[i], context);
	      }
	      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);
	      canvas = tmpCanvas.canvas;
	     }
	     return {
	      canvas: canvas,
	      offsetX: offsetX - BORDER_SIZE * scaleX,
	      offsetY: offsetY - BORDER_SIZE * scaleY,
	      scaleX: scaleX,
	      scaleY: scaleY
	     };
	    }
	    return createMeshCanvas;
	   }();
	   ShadingIRs.Mesh = {
	    fromIR: function Mesh_fromIR(raw) {
	     var coords = raw[2];
	     var colors = raw[3];
	     var figures = raw[4];
	     var bounds = raw[5];
	     var matrix = raw[6];
	     var background = raw[8];
	     return {
	      type: 'Pattern',
	      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {
	       var scale;
	       if (shadingFill) {
	        scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);
	       } else {
	        scale = Util.singularValueDecompose2dScale(owner.baseTransform);
	        if (matrix) {
	         var matrixScale = Util.singularValueDecompose2dScale(matrix);
	         scale = [
	          scale[0] * matrixScale[0],
	          scale[1] * matrixScale[1]
	         ];
	        }
	       }
	       var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases);
	       if (!shadingFill) {
	        ctx.setTransform.apply(ctx, owner.baseTransform);
	        if (matrix) {
	         ctx.transform.apply(ctx, matrix);
	        }
	       }
	       ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);
	       ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);
	       return ctx.createPattern(temporaryPatternCanvas.canvas, 'no-repeat');
	      }
	     };
	    }
	   };
	   ShadingIRs.Dummy = {
	    fromIR: function Dummy_fromIR() {
	     return {
	      type: 'Pattern',
	      getPattern: function Dummy_fromIR_getPattern() {
	       return 'hotpink';
	      }
	     };
	    }
	   };
	   function getShadingPatternFromIR(raw) {
	    var shadingIR = ShadingIRs[raw[0]];
	    if (!shadingIR) {
	     error('Unknown IR type: ' + raw[0]);
	    }
	    return shadingIR.fromIR(raw);
	   }
	   var TilingPattern = function TilingPatternClosure() {
	    var PaintType = {
	     COLORED: 1,
	     UNCOLORED: 2
	    };
	    var MAX_PATTERN_SIZE = 3000;
	    function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {
	     this.operatorList = IR[2];
	     this.matrix = IR[3] || [
	      1,
	      0,
	      0,
	      1,
	      0,
	      0
	     ];
	     this.bbox = IR[4];
	     this.xstep = IR[5];
	     this.ystep = IR[6];
	     this.paintType = IR[7];
	     this.tilingType = IR[8];
	     this.color = color;
	     this.canvasGraphicsFactory = canvasGraphicsFactory;
	     this.baseTransform = baseTransform;
	     this.type = 'Pattern';
	     this.ctx = ctx;
	    }
	    TilingPattern.prototype = {
	     createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {
	      var operatorList = this.operatorList;
	      var bbox = this.bbox;
	      var xstep = this.xstep;
	      var ystep = this.ystep;
	      var paintType = this.paintType;
	      var tilingType = this.tilingType;
	      var color = this.color;
	      var canvasGraphicsFactory = this.canvasGraphicsFactory;
	      info('TilingType: ' + tilingType);
	      var x0 = bbox[0], y0 = bbox[1], x1 = bbox[2], y1 = bbox[3];
	      var topLeft = [
	       x0,
	       y0
	      ];
	      var botRight = [
	       x0 + xstep,
	       y0 + ystep
	      ];
	      var width = botRight[0] - topLeft[0];
	      var height = botRight[1] - topLeft[1];
	      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);
	      var curMatrixScale = Util.singularValueDecompose2dScale(this.baseTransform);
	      var combinedScale = [
	       matrixScale[0] * curMatrixScale[0],
	       matrixScale[1] * curMatrixScale[1]
	      ];
	      width = Math.min(Math.ceil(Math.abs(width * combinedScale[0])), MAX_PATTERN_SIZE);
	      height = Math.min(Math.ceil(Math.abs(height * combinedScale[1])), MAX_PATTERN_SIZE);
	      var tmpCanvas = owner.cachedCanvases.getCanvas('pattern', width, height, true);
	      var tmpCtx = tmpCanvas.context;
	      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);
	      graphics.groupLevel = owner.groupLevel;
	      this.setFillAndStrokeStyleToContext(tmpCtx, paintType, color);
	      this.setScale(width, height, xstep, ystep);
	      this.transformToScale(graphics);
	      var tmpTranslate = [
	       1,
	       0,
	       0,
	       1,
	       -topLeft[0],
	       -topLeft[1]
	      ];
	      graphics.transform.apply(graphics, tmpTranslate);
	      this.clipBbox(graphics, bbox, x0, y0, x1, y1);
	      graphics.executeOperatorList(operatorList);
	      return tmpCanvas.canvas;
	     },
	     setScale: function TilingPattern_setScale(width, height, xstep, ystep) {
	      this.scale = [
	       width / xstep,
	       height / ystep
	      ];
	     },
	     transformToScale: function TilingPattern_transformToScale(graphics) {
	      var scale = this.scale;
	      var tmpScale = [
	       scale[0],
	       0,
	       0,
	       scale[1],
	       0,
	       0
	      ];
	      graphics.transform.apply(graphics, tmpScale);
	     },
	     scaleToContext: function TilingPattern_scaleToContext() {
	      var scale = this.scale;
	      this.ctx.scale(1 / scale[0], 1 / scale[1]);
	     },
	     clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {
	      if (bbox && isArray(bbox) && bbox.length === 4) {
	       var bboxWidth = x1 - x0;
	       var bboxHeight = y1 - y0;
	       graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);
	       graphics.clip();
	       graphics.endPath();
	      }
	     },
	     setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(context, paintType, color) {
	      switch (paintType) {
	      case PaintType.COLORED:
	       var ctx = this.ctx;
	       context.fillStyle = ctx.fillStyle;
	       context.strokeStyle = ctx.strokeStyle;
	       break;
	      case PaintType.UNCOLORED:
	       var cssColor = Util.makeCssRgb(color[0], color[1], color[2]);
	       context.fillStyle = cssColor;
	       context.strokeStyle = cssColor;
	       break;
	      default:
	       error('Unsupported paint type: ' + paintType);
	      }
	     },
	     getPattern: function TilingPattern_getPattern(ctx, owner) {
	      var temporaryPatternCanvas = this.createPatternCanvas(owner);
	      ctx = this.ctx;
	      ctx.setTransform.apply(ctx, this.baseTransform);
	      ctx.transform.apply(ctx, this.matrix);
	      this.scaleToContext();
	      return ctx.createPattern(temporaryPatternCanvas, 'repeat');
	     }
	    };
	    return TilingPattern;
	   }();
	   exports.getShadingPatternFromIR = getShadingPatternFromIR;
	   exports.TilingPattern = TilingPattern;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreCMap = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreParser);
	  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreParser) {
	   var Util = sharedUtil.Util;
	   var assert = sharedUtil.assert;
	   var warn = sharedUtil.warn;
	   var error = sharedUtil.error;
	   var isInt = sharedUtil.isInt;
	   var isString = sharedUtil.isString;
	   var MissingDataException = sharedUtil.MissingDataException;
	   var isEOF = corePrimitives.isEOF;
	   var isName = corePrimitives.isName;
	   var isCmd = corePrimitives.isCmd;
	   var isStream = corePrimitives.isStream;
	   var StringStream = coreStream.StringStream;
	   var Lexer = coreParser.Lexer;
	   var BUILT_IN_CMAPS = [
	    'Adobe-GB1-UCS2',
	    'Adobe-CNS1-UCS2',
	    'Adobe-Japan1-UCS2',
	    'Adobe-Korea1-UCS2',
	    '78-EUC-H',
	    '78-EUC-V',
	    '78-H',
	    '78-RKSJ-H',
	    '78-RKSJ-V',
	    '78-V',
	    '78ms-RKSJ-H',
	    '78ms-RKSJ-V',
	    '83pv-RKSJ-H',
	    '90ms-RKSJ-H',
	    '90ms-RKSJ-V',
	    '90msp-RKSJ-H',
	    '90msp-RKSJ-V',
	    '90pv-RKSJ-H',
	    '90pv-RKSJ-V',
	    'Add-H',
	    'Add-RKSJ-H',
	    'Add-RKSJ-V',
	    'Add-V',
	    'Adobe-CNS1-0',
	    'Adobe-CNS1-1',
	    'Adobe-CNS1-2',
	    'Adobe-CNS1-3',
	    'Adobe-CNS1-4',
	    'Adobe-CNS1-5',
	    'Adobe-CNS1-6',
	    'Adobe-GB1-0',
	    'Adobe-GB1-1',
	    'Adobe-GB1-2',
	    'Adobe-GB1-3',
	    'Adobe-GB1-4',
	    'Adobe-GB1-5',
	    'Adobe-Japan1-0',
	    'Adobe-Japan1-1',
	    'Adobe-Japan1-2',
	    'Adobe-Japan1-3',
	    'Adobe-Japan1-4',
	    'Adobe-Japan1-5',
	    'Adobe-Japan1-6',
	    'Adobe-Korea1-0',
	    'Adobe-Korea1-1',
	    'Adobe-Korea1-2',
	    'B5-H',
	    'B5-V',
	    'B5pc-H',
	    'B5pc-V',
	    'CNS-EUC-H',
	    'CNS-EUC-V',
	    'CNS1-H',
	    'CNS1-V',
	    'CNS2-H',
	    'CNS2-V',
	    'ETHK-B5-H',
	    'ETHK-B5-V',
	    'ETen-B5-H',
	    'ETen-B5-V',
	    'ETenms-B5-H',
	    'ETenms-B5-V',
	    'EUC-H',
	    'EUC-V',
	    'Ext-H',
	    'Ext-RKSJ-H',
	    'Ext-RKSJ-V',
	    'Ext-V',
	    'GB-EUC-H',
	    'GB-EUC-V',
	    'GB-H',
	    'GB-V',
	    'GBK-EUC-H',
	    'GBK-EUC-V',
	    'GBK2K-H',
	    'GBK2K-V',
	    'GBKp-EUC-H',
	    'GBKp-EUC-V',
	    'GBT-EUC-H',
	    'GBT-EUC-V',
	    'GBT-H',
	    'GBT-V',
	    'GBTpc-EUC-H',
	    'GBTpc-EUC-V',
	    'GBpc-EUC-H',
	    'GBpc-EUC-V',
	    'H',
	    'HKdla-B5-H',
	    'HKdla-B5-V',
	    'HKdlb-B5-H',
	    'HKdlb-B5-V',
	    'HKgccs-B5-H',
	    'HKgccs-B5-V',
	    'HKm314-B5-H',
	    'HKm314-B5-V',
	    'HKm471-B5-H',
	    'HKm471-B5-V',
	    'HKscs-B5-H',
	    'HKscs-B5-V',
	    'Hankaku',
	    'Hiragana',
	    'KSC-EUC-H',
	    'KSC-EUC-V',
	    'KSC-H',
	    'KSC-Johab-H',
	    'KSC-Johab-V',
	    'KSC-V',
	    'KSCms-UHC-H',
	    'KSCms-UHC-HW-H',
	    'KSCms-UHC-HW-V',
	    'KSCms-UHC-V',
	    'KSCpc-EUC-H',
	    'KSCpc-EUC-V',
	    'Katakana',
	    'NWP-H',
	    'NWP-V',
	    'RKSJ-H',
	    'RKSJ-V',
	    'Roman',
	    'UniCNS-UCS2-H',
	    'UniCNS-UCS2-V',
	    'UniCNS-UTF16-H',
	    'UniCNS-UTF16-V',
	    'UniCNS-UTF32-H',
	    'UniCNS-UTF32-V',
	    'UniCNS-UTF8-H',
	    'UniCNS-UTF8-V',
	    'UniGB-UCS2-H',
	    'UniGB-UCS2-V',
	    'UniGB-UTF16-H',
	    'UniGB-UTF16-V',
	    'UniGB-UTF32-H',
	    'UniGB-UTF32-V',
	    'UniGB-UTF8-H',
	    'UniGB-UTF8-V',
	    'UniJIS-UCS2-H',
	    'UniJIS-UCS2-HW-H',
	    'UniJIS-UCS2-HW-V',
	    'UniJIS-UCS2-V',
	    'UniJIS-UTF16-H',
	    'UniJIS-UTF16-V',
	    'UniJIS-UTF32-H',
	    'UniJIS-UTF32-V',
	    'UniJIS-UTF8-H',
	    'UniJIS-UTF8-V',
	    'UniJIS2004-UTF16-H',
	    'UniJIS2004-UTF16-V',
	    'UniJIS2004-UTF32-H',
	    'UniJIS2004-UTF32-V',
	    'UniJIS2004-UTF8-H',
	    'UniJIS2004-UTF8-V',
	    'UniJISPro-UCS2-HW-V',
	    'UniJISPro-UCS2-V',
	    'UniJISPro-UTF8-V',
	    'UniJISX0213-UTF32-H',
	    'UniJISX0213-UTF32-V',
	    'UniJISX02132004-UTF32-H',
	    'UniJISX02132004-UTF32-V',
	    'UniKS-UCS2-H',
	    'UniKS-UCS2-V',
	    'UniKS-UTF16-H',
	    'UniKS-UTF16-V',
	    'UniKS-UTF32-H',
	    'UniKS-UTF32-V',
	    'UniKS-UTF8-H',
	    'UniKS-UTF8-V',
	    'V',
	    'WP-Symbol'
	   ];
	   var CMap = function CMapClosure() {
	    function CMap(builtInCMap) {
	     this.codespaceRanges = [
	      [],
	      [],
	      [],
	      []
	     ];
	     this.numCodespaceRanges = 0;
	     this._map = [];
	     this.name = '';
	     this.vertical = false;
	     this.useCMap = null;
	     this.builtInCMap = builtInCMap;
	    }
	    CMap.prototype = {
	     addCodespaceRange: function (n, low, high) {
	      this.codespaceRanges[n - 1].push(low, high);
	      this.numCodespaceRanges++;
	     },
	     mapCidRange: function (low, high, dstLow) {
	      while (low <= high) {
	       this._map[low++] = dstLow++;
	      }
	     },
	     mapBfRange: function (low, high, dstLow) {
	      var lastByte = dstLow.length - 1;
	      while (low <= high) {
	       this._map[low++] = dstLow;
	       dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);
	      }
	     },
	     mapBfRangeToArray: function (low, high, array) {
	      var i = 0, ii = array.length;
	      while (low <= high && i < ii) {
	       this._map[low] = array[i++];
	       ++low;
	      }
	     },
	     mapOne: function (src, dst) {
	      this._map[src] = dst;
	     },
	     lookup: function (code) {
	      return this._map[code];
	     },
	     contains: function (code) {
	      return this._map[code] !== undefined;
	     },
	     forEach: function (callback) {
	      var map = this._map;
	      var length = map.length;
	      var i;
	      if (length <= 0x10000) {
	       for (i = 0; i < length; i++) {
	        if (map[i] !== undefined) {
	         callback(i, map[i]);
	        }
	       }
	      } else {
	       for (i in this._map) {
	        callback(i, map[i]);
	       }
	      }
	     },
	     charCodeOf: function (value) {
	      return this._map.indexOf(value);
	     },
	     getMap: function () {
	      return this._map;
	     },
	     readCharCode: function (str, offset, out) {
	      var c = 0;
	      var codespaceRanges = this.codespaceRanges;
	      var codespaceRangesLen = this.codespaceRanges.length;
	      for (var n = 0; n < codespaceRangesLen; n++) {
	       c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;
	       var codespaceRange = codespaceRanges[n];
	       for (var k = 0, kk = codespaceRange.length; k < kk;) {
	        var low = codespaceRange[k++];
	        var high = codespaceRange[k++];
	        if (c >= low && c <= high) {
	         out.charcode = c;
	         out.length = n + 1;
	         return;
	        }
	       }
	      }
	      out.charcode = 0;
	      out.length = 1;
	     },
	     get length() {
	      return this._map.length;
	     },
	     get isIdentityCMap() {
	      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {
	       return false;
	      }
	      if (this._map.length !== 0x10000) {
	       return false;
	      }
	      for (var i = 0; i < 0x10000; i++) {
	       if (this._map[i] !== i) {
	        return false;
	       }
	      }
	      return true;
	     }
	    };
	    return CMap;
	   }();
	   var IdentityCMap = function IdentityCMapClosure() {
	    function IdentityCMap(vertical, n) {
	     CMap.call(this);
	     this.vertical = vertical;
	     this.addCodespaceRange(n, 0, 0xffff);
	    }
	    Util.inherit(IdentityCMap, CMap, {});
	    IdentityCMap.prototype = {
	     addCodespaceRange: CMap.prototype.addCodespaceRange,
	     mapCidRange: function (low, high, dstLow) {
	      error('should not call mapCidRange');
	     },
	     mapBfRange: function (low, high, dstLow) {
	      error('should not call mapBfRange');
	     },
	     mapBfRangeToArray: function (low, high, array) {
	      error('should not call mapBfRangeToArray');
	     },
	     mapOne: function (src, dst) {
	      error('should not call mapCidOne');
	     },
	     lookup: function (code) {
	      return isInt(code) && code <= 0xffff ? code : undefined;
	     },
	     contains: function (code) {
	      return isInt(code) && code <= 0xffff;
	     },
	     forEach: function (callback) {
	      for (var i = 0; i <= 0xffff; i++) {
	       callback(i, i);
	      }
	     },
	     charCodeOf: function (value) {
	      return isInt(value) && value <= 0xffff ? value : -1;
	     },
	     getMap: function () {
	      var map = new Array(0x10000);
	      for (var i = 0; i <= 0xffff; i++) {
	       map[i] = i;
	      }
	      return map;
	     },
	     readCharCode: CMap.prototype.readCharCode,
	     get length() {
	      return 0x10000;
	     },
	     get isIdentityCMap() {
	      error('should not access .isIdentityCMap');
	     }
	    };
	    return IdentityCMap;
	   }();
	   var BinaryCMapReader = function BinaryCMapReaderClosure() {
	    function fetchBinaryData(url) {
	     return new Promise(function (resolve, reject) {
	      var request = new XMLHttpRequest();
	      request.open('GET', url, true);
	      request.responseType = 'arraybuffer';
	      request.onreadystatechange = function () {
	       if (request.readyState === XMLHttpRequest.DONE) {
	        if (!request.response || request.status !== 200 && request.status !== 0) {
	         reject(new Error('Unable to get binary cMap at: ' + url));
	        } else {
	         resolve(new Uint8Array(request.response));
	        }
	       }
	      };
	      request.send(null);
	     });
	    }
	    function hexToInt(a, size) {
	     var n = 0;
	     for (var i = 0; i <= size; i++) {
	      n = n << 8 | a[i];
	     }
	     return n >>> 0;
	    }
	    function hexToStr(a, size) {
	     if (size === 1) {
	      return String.fromCharCode(a[0], a[1]);
	     }
	     if (size === 3) {
	      return String.fromCharCode(a[0], a[1], a[2], a[3]);
	     }
	     return String.fromCharCode.apply(null, a.subarray(0, size + 1));
	    }
	    function addHex(a, b, size) {
	     var c = 0;
	     for (var i = size; i >= 0; i--) {
	      c += a[i] + b[i];
	      a[i] = c & 255;
	      c >>= 8;
	     }
	    }
	    function incHex(a, size) {
	     var c = 1;
	     for (var i = size; i >= 0 && c > 0; i--) {
	      c += a[i];
	      a[i] = c & 255;
	      c >>= 8;
	     }
	    }
	    var MAX_NUM_SIZE = 16;
	    var MAX_ENCODED_NUM_SIZE = 19;
	    function BinaryCMapStream(data) {
	     this.buffer = data;
	     this.pos = 0;
	     this.end = data.length;
	     this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);
	    }
	    BinaryCMapStream.prototype = {
	     readByte: function () {
	      if (this.pos >= this.end) {
	       return -1;
	      }
	      return this.buffer[this.pos++];
	     },
	     readNumber: function () {
	      var n = 0;
	      var last;
	      do {
	       var b = this.readByte();
	       if (b < 0) {
	        error('unexpected EOF in bcmap');
	       }
	       last = !(b & 0x80);
	       n = n << 7 | b & 0x7F;
	      } while (!last);
	      return n;
	     },
	     readSigned: function () {
	      var n = this.readNumber();
	      return n & 1 ? ~(n >>> 1) : n >>> 1;
	     },
	     readHex: function (num, size) {
	      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));
	      this.pos += size + 1;
	     },
	     readHexNumber: function (num, size) {
	      var last;
	      var stack = this.tmpBuf, sp = 0;
	      do {
	       var b = this.readByte();
	       if (b < 0) {
	        error('unexpected EOF in bcmap');
	       }
	       last = !(b & 0x80);
	       stack[sp++] = b & 0x7F;
	      } while (!last);
	      var i = size, buffer = 0, bufferSize = 0;
	      while (i >= 0) {
	       while (bufferSize < 8 && stack.length > 0) {
	        buffer = stack[--sp] << bufferSize | buffer;
	        bufferSize += 7;
	       }
	       num[i] = buffer & 255;
	       i--;
	       buffer >>= 8;
	       bufferSize -= 8;
	      }
	     },
	     readHexSigned: function (num, size) {
	      this.readHexNumber(num, size);
	      var sign = num[size] & 1 ? 255 : 0;
	      var c = 0;
	      for (var i = 0; i <= size; i++) {
	       c = (c & 1) << 8 | num[i];
	       num[i] = c >> 1 ^ sign;
	      }
	     },
	     readString: function () {
	      var len = this.readNumber();
	      var s = '';
	      for (var i = 0; i < len; i++) {
	       s += String.fromCharCode(this.readNumber());
	      }
	      return s;
	     }
	    };
	    function processBinaryCMap(url, cMap, extend) {
	     return fetchBinaryData(url).then(function (data) {
	      var stream = new BinaryCMapStream(data);
	      var header = stream.readByte();
	      cMap.vertical = !!(header & 1);
	      var useCMap = null;
	      var start = new Uint8Array(MAX_NUM_SIZE);
	      var end = new Uint8Array(MAX_NUM_SIZE);
	      var char = new Uint8Array(MAX_NUM_SIZE);
	      var charCode = new Uint8Array(MAX_NUM_SIZE);
	      var tmp = new Uint8Array(MAX_NUM_SIZE);
	      var code;
	      var b;
	      while ((b = stream.readByte()) >= 0) {
	       var type = b >> 5;
	       if (type === 7) {
	        switch (b & 0x1F) {
	        case 0:
	         stream.readString();
	         break;
	        case 1:
	         useCMap = stream.readString();
	         break;
	        }
	        continue;
	       }
	       var sequence = !!(b & 0x10);
	       var dataSize = b & 15;
	       assert(dataSize + 1 <= MAX_NUM_SIZE);
	       var ucs2DataSize = 1;
	       var subitemsCount = stream.readNumber();
	       var i;
	       switch (type) {
	       case 0:
	        stream.readHex(start, dataSize);
	        stream.readHexNumber(end, dataSize);
	        addHex(end, start, dataSize);
	        cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));
	        for (i = 1; i < subitemsCount; i++) {
	         incHex(end, dataSize);
	         stream.readHexNumber(start, dataSize);
	         addHex(start, end, dataSize);
	         stream.readHexNumber(end, dataSize);
	         addHex(end, start, dataSize);
	         cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));
	        }
	        break;
	       case 1:
	        stream.readHex(start, dataSize);
	        stream.readHexNumber(end, dataSize);
	        addHex(end, start, dataSize);
	        code = stream.readNumber();
	        for (i = 1; i < subitemsCount; i++) {
	         incHex(end, dataSize);
	         stream.readHexNumber(start, dataSize);
	         addHex(start, end, dataSize);
	         stream.readHexNumber(end, dataSize);
	         addHex(end, start, dataSize);
	         code = stream.readNumber();
	        }
	        break;
	       case 2:
	        stream.readHex(char, dataSize);
	        code = stream.readNumber();
	        cMap.mapOne(hexToInt(char, dataSize), code);
	        for (i = 1; i < subitemsCount; i++) {
	         incHex(char, dataSize);
	         if (!sequence) {
	          stream.readHexNumber(tmp, dataSize);
	          addHex(char, tmp, dataSize);
	         }
	         code = stream.readSigned() + (code + 1);
	         cMap.mapOne(hexToInt(char, dataSize), code);
	        }
	        break;
	       case 3:
	        stream.readHex(start, dataSize);
	        stream.readHexNumber(end, dataSize);
	        addHex(end, start, dataSize);
	        code = stream.readNumber();
	        cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);
	        for (i = 1; i < subitemsCount; i++) {
	         incHex(end, dataSize);
	         if (!sequence) {
	          stream.readHexNumber(start, dataSize);
	          addHex(start, end, dataSize);
	         } else {
	          start.set(end);
	         }
	         stream.readHexNumber(end, dataSize);
	         addHex(end, start, dataSize);
	         code = stream.readNumber();
	         cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);
	        }
	        break;
	       case 4:
	        stream.readHex(char, ucs2DataSize);
	        stream.readHex(charCode, dataSize);
	        cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));
	        for (i = 1; i < subitemsCount; i++) {
	         incHex(char, ucs2DataSize);
	         if (!sequence) {
	          stream.readHexNumber(tmp, ucs2DataSize);
	          addHex(char, tmp, ucs2DataSize);
	         }
	         incHex(charCode, dataSize);
	         stream.readHexSigned(tmp, dataSize);
	         addHex(charCode, tmp, dataSize);
	         cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));
	        }
	        break;
	       case 5:
	        stream.readHex(start, ucs2DataSize);
	        stream.readHexNumber(end, ucs2DataSize);
	        addHex(end, start, ucs2DataSize);
	        stream.readHex(charCode, dataSize);
	        cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));
	        for (i = 1; i < subitemsCount; i++) {
	         incHex(end, ucs2DataSize);
	         if (!sequence) {
	          stream.readHexNumber(start, ucs2DataSize);
	          addHex(start, end, ucs2DataSize);
	         } else {
	          start.set(end);
	         }
	         stream.readHexNumber(end, ucs2DataSize);
	         addHex(end, start, ucs2DataSize);
	         stream.readHex(charCode, dataSize);
	         cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));
	        }
	        break;
	       default:
	        error('Unknown type: ' + type);
	        break;
	       }
	      }
	      if (useCMap) {
	       return extend(useCMap);
	      }
	      return cMap;
	     });
	    }
	    function BinaryCMapReader() {
	    }
	    BinaryCMapReader.prototype = { read: processBinaryCMap };
	    return BinaryCMapReader;
	   }();
	   var CMapFactory = function CMapFactoryClosure() {
	    function strToInt(str) {
	     var a = 0;
	     for (var i = 0; i < str.length; i++) {
	      a = a << 8 | str.charCodeAt(i);
	     }
	     return a >>> 0;
	    }
	    function expectString(obj) {
	     if (!isString(obj)) {
	      error('Malformed CMap: expected string.');
	     }
	    }
	    function expectInt(obj) {
	     if (!isInt(obj)) {
	      error('Malformed CMap: expected int.');
	     }
	    }
	    function parseBfChar(cMap, lexer) {
	     while (true) {
	      var obj = lexer.getObj();
	      if (isEOF(obj)) {
	       break;
	      }
	      if (isCmd(obj, 'endbfchar')) {
	       return;
	      }
	      expectString(obj);
	      var src = strToInt(obj);
	      obj = lexer.getObj();
	      expectString(obj);
	      var dst = obj;
	      cMap.mapOne(src, dst);
	     }
	    }
	    function parseBfRange(cMap, lexer) {
	     while (true) {
	      var obj = lexer.getObj();
	      if (isEOF(obj)) {
	       break;
	      }
	      if (isCmd(obj, 'endbfrange')) {
	       return;
	      }
	      expectString(obj);
	      var low = strToInt(obj);
	      obj = lexer.getObj();
	      expectString(obj);
	      var high = strToInt(obj);
	      obj = lexer.getObj();
	      if (isInt(obj) || isString(obj)) {
	       var dstLow = isInt(obj) ? String.fromCharCode(obj) : obj;
	       cMap.mapBfRange(low, high, dstLow);
	      } else if (isCmd(obj, '[')) {
	       obj = lexer.getObj();
	       var array = [];
	       while (!isCmd(obj, ']') && !isEOF(obj)) {
	        array.push(obj);
	        obj = lexer.getObj();
	       }
	       cMap.mapBfRangeToArray(low, high, array);
	      } else {
	       break;
	      }
	     }
	     error('Invalid bf range.');
	    }
	    function parseCidChar(cMap, lexer) {
	     while (true) {
	      var obj = lexer.getObj();
	      if (isEOF(obj)) {
	       break;
	      }
	      if (isCmd(obj, 'endcidchar')) {
	       return;
	      }
	      expectString(obj);
	      var src = strToInt(obj);
	      obj = lexer.getObj();
	      expectInt(obj);
	      var dst = obj;
	      cMap.mapOne(src, dst);
	     }
	    }
	    function parseCidRange(cMap, lexer) {
	     while (true) {
	      var obj = lexer.getObj();
	      if (isEOF(obj)) {
	       break;
	      }
	      if (isCmd(obj, 'endcidrange')) {
	       return;
	      }
	      expectString(obj);
	      var low = strToInt(obj);
	      obj = lexer.getObj();
	      expectString(obj);
	      var high = strToInt(obj);
	      obj = lexer.getObj();
	      expectInt(obj);
	      var dstLow = obj;
	      cMap.mapCidRange(low, high, dstLow);
	     }
	    }
	    function parseCodespaceRange(cMap, lexer) {
	     while (true) {
	      var obj = lexer.getObj();
	      if (isEOF(obj)) {
	       break;
	      }
	      if (isCmd(obj, 'endcodespacerange')) {
	       return;
	      }
	      if (!isString(obj)) {
	       break;
	      }
	      var low = strToInt(obj);
	      obj = lexer.getObj();
	      if (!isString(obj)) {
	       break;
	      }
	      var high = strToInt(obj);
	      cMap.addCodespaceRange(obj.length, low, high);
	     }
	     error('Invalid codespace range.');
	    }
	    function parseWMode(cMap, lexer) {
	     var obj = lexer.getObj();
	     if (isInt(obj)) {
	      cMap.vertical = !!obj;
	     }
	    }
	    function parseCMapName(cMap, lexer) {
	     var obj = lexer.getObj();
	     if (isName(obj) && isString(obj.name)) {
	      cMap.name = obj.name;
	     }
	    }
	    function parseCMap(cMap, lexer, builtInCMapParams, useCMap) {
	     var previous;
	     var embededUseCMap;
	     objLoop:
	      while (true) {
	       try {
	        var obj = lexer.getObj();
	        if (isEOF(obj)) {
	         break;
	        } else if (isName(obj)) {
	         if (obj.name === 'WMode') {
	          parseWMode(cMap, lexer);
	         } else if (obj.name === 'CMapName') {
	          parseCMapName(cMap, lexer);
	         }
	         previous = obj;
	        } else if (isCmd(obj)) {
	         switch (obj.cmd) {
	         case 'endcmap':
	          break objLoop;
	         case 'usecmap':
	          if (isName(previous)) {
	           embededUseCMap = previous.name;
	          }
	          break;
	         case 'begincodespacerange':
	          parseCodespaceRange(cMap, lexer);
	          break;
	         case 'beginbfchar':
	          parseBfChar(cMap, lexer);
	          break;
	         case 'begincidchar':
	          parseCidChar(cMap, lexer);
	          break;
	         case 'beginbfrange':
	          parseBfRange(cMap, lexer);
	          break;
	         case 'begincidrange':
	          parseCidRange(cMap, lexer);
	          break;
	         }
	        }
	       } catch (ex) {
	        if (ex instanceof MissingDataException) {
	         throw ex;
	        }
	        warn('Invalid cMap data: ' + ex);
	        continue;
	       }
	      }
	     if (!useCMap && embededUseCMap) {
	      useCMap = embededUseCMap;
	     }
	     if (useCMap) {
	      return extendCMap(cMap, builtInCMapParams, useCMap);
	     }
	     return Promise.resolve(cMap);
	    }
	    function extendCMap(cMap, builtInCMapParams, useCMap) {
	     return createBuiltInCMap(useCMap, builtInCMapParams).then(function (newCMap) {
	      cMap.useCMap = newCMap;
	      if (cMap.numCodespaceRanges === 0) {
	       var useCodespaceRanges = cMap.useCMap.codespaceRanges;
	       for (var i = 0; i < useCodespaceRanges.length; i++) {
	        cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();
	       }
	       cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;
	      }
	      cMap.useCMap.forEach(function (key, value) {
	       if (!cMap.contains(key)) {
	        cMap.mapOne(key, cMap.useCMap.lookup(key));
	       }
	      });
	      return cMap;
	     });
	    }
	    function parseBinaryCMap(name, builtInCMapParams) {
	     var url = builtInCMapParams.url + name + '.bcmap';
	     var cMap = new CMap(true);
	     return new BinaryCMapReader().read(url, cMap, function (useCMap) {
	      return extendCMap(cMap, builtInCMapParams, useCMap);
	     });
	    }
	    function createBuiltInCMap(name, builtInCMapParams) {
	     if (name === 'Identity-H') {
	      return Promise.resolve(new IdentityCMap(false, 2));
	     } else if (name === 'Identity-V') {
	      return Promise.resolve(new IdentityCMap(true, 2));
	     }
	     if (BUILT_IN_CMAPS.indexOf(name) === -1) {
	      return Promise.reject(new Error('Unknown cMap name: ' + name));
	     }
	     assert(builtInCMapParams, 'built-in cMap parameters are not provided');
	     if (builtInCMapParams.packed) {
	      return parseBinaryCMap(name, builtInCMapParams);
	     }
	     return new Promise(function (resolve, reject) {
	      var url = builtInCMapParams.url + name;
	      var request = new XMLHttpRequest();
	      request.onreadystatechange = function () {
	       if (request.readyState === XMLHttpRequest.DONE) {
	        if (request.status === 200 || request.status === 0) {
	         var cMap = new CMap(true);
	         var lexer = new Lexer(new StringStream(request.responseText));
	         parseCMap(cMap, lexer, builtInCMapParams, null).then(function (parsedCMap) {
	          resolve(parsedCMap);
	         });
	        } else {
	         reject(new Error('Unable to get cMap at: ' + url));
	        }
	       }
	      };
	      request.open('GET', url, true);
	      request.send(null);
	     });
	    }
	    return {
	     create: function (encoding, builtInCMapParams, useCMap) {
	      if (isName(encoding)) {
	       return createBuiltInCMap(encoding.name, builtInCMapParams);
	      } else if (isStream(encoding)) {
	       var cMap = new CMap();
	       var lexer = new Lexer(encoding);
	       return parseCMap(cMap, lexer, builtInCMapParams, useCMap).then(function (parsedCMap) {
	        if (parsedCMap.isIdentityCMap) {
	         return createBuiltInCMap(parsedCMap.name, builtInCMapParams);
	        }
	        return parsedCMap;
	       });
	      }
	      return Promise.reject(new Error('Encoding required.'));
	     }
	    };
	   }();
	   exports.CMap = CMap;
	   exports.CMapFactory = CMapFactory;
	   exports.IdentityCMap = IdentityCMap;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreColorSpace = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreFunction);
	  }(this, function (exports, sharedUtil, corePrimitives, coreFunction) {
	   var error = sharedUtil.error;
	   var info = sharedUtil.info;
	   var isArray = sharedUtil.isArray;
	   var isString = sharedUtil.isString;
	   var shadow = sharedUtil.shadow;
	   var warn = sharedUtil.warn;
	   var isDict = corePrimitives.isDict;
	   var isName = corePrimitives.isName;
	   var isStream = corePrimitives.isStream;
	   var PDFFunction = coreFunction.PDFFunction;
	   var ColorSpace = function ColorSpaceClosure() {
	    function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {
	     var COMPONENTS = 3;
	     alpha01 = alpha01 !== 1 ? 0 : alpha01;
	     var xRatio = w1 / w2;
	     var yRatio = h1 / h2;
	     var i, j, py, newIndex = 0, oldIndex;
	     var xScaled = new Uint16Array(w2);
	     var w1Scanline = w1 * COMPONENTS;
	     for (i = 0; i < w2; i++) {
	      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;
	     }
	     for (i = 0; i < h2; i++) {
	      py = Math.floor(i * yRatio) * w1Scanline;
	      for (j = 0; j < w2; j++) {
	       oldIndex = py + xScaled[j];
	       dest[newIndex++] = src[oldIndex++];
	       dest[newIndex++] = src[oldIndex++];
	       dest[newIndex++] = src[oldIndex++];
	       newIndex += alpha01;
	      }
	     }
	    }
	    function ColorSpace() {
	     error('should not call ColorSpace constructor');
	    }
	    ColorSpace.prototype = {
	     getRgb: function ColorSpace_getRgb(src, srcOffset) {
	      var rgb = new Uint8Array(3);
	      this.getRgbItem(src, srcOffset, rgb, 0);
	      return rgb;
	     },
	     getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {
	      error('Should not call ColorSpace.getRgbItem');
	     },
	     getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {
	      error('Should not call ColorSpace.getRgbBuffer');
	     },
	     getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {
	      error('Should not call ColorSpace.getOutputLength');
	     },
	     isPassthrough: function ColorSpace_isPassthrough(bits) {
	      return false;
	     },
	     fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {
	      var count = originalWidth * originalHeight;
	      var rgbBuf = null;
	      var numComponentColors = 1 << bpc;
	      var needsResizing = originalHeight !== height || originalWidth !== width;
	      var i, ii;
	      if (this.isPassthrough(bpc)) {
	       rgbBuf = comps;
	      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {
	       var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);
	       var key;
	       for (i = 0; i < numComponentColors; i++) {
	        allColors[i] = i;
	       }
	       var colorMap = new Uint8Array(numComponentColors * 3);
	       this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);
	       var destPos, rgbPos;
	       if (!needsResizing) {
	        destPos = 0;
	        for (i = 0; i < count; ++i) {
	         key = comps[i] * 3;
	         dest[destPos++] = colorMap[key];
	         dest[destPos++] = colorMap[key + 1];
	         dest[destPos++] = colorMap[key + 2];
	         destPos += alpha01;
	        }
	       } else {
	        rgbBuf = new Uint8Array(count * 3);
	        rgbPos = 0;
	        for (i = 0; i < count; ++i) {
	         key = comps[i] * 3;
	         rgbBuf[rgbPos++] = colorMap[key];
	         rgbBuf[rgbPos++] = colorMap[key + 1];
	         rgbBuf[rgbPos++] = colorMap[key + 2];
	        }
	       }
	      } else {
	       if (!needsResizing) {
	        this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);
	       } else {
	        rgbBuf = new Uint8Array(count * 3);
	        this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);
	       }
	      }
	      if (rgbBuf) {
	       if (needsResizing) {
	        resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);
	       } else {
	        rgbPos = 0;
	        destPos = 0;
	        for (i = 0, ii = width * actualHeight; i < ii; i++) {
	         dest[destPos++] = rgbBuf[rgbPos++];
	         dest[destPos++] = rgbBuf[rgbPos++];
	         dest[destPos++] = rgbBuf[rgbPos++];
	         destPos += alpha01;
	        }
	       }
	      }
	     },
	     usesZeroToOneRange: true
	    };
	    ColorSpace.parse = function ColorSpace_parse(cs, xref, res) {
	     var IR = ColorSpace.parseToIR(cs, xref, res);
	     if (IR instanceof AlternateCS) {
	      return IR;
	     }
	     return ColorSpace.fromIR(IR);
	    };
	    ColorSpace.fromIR = function ColorSpace_fromIR(IR) {
	     var name = isArray(IR) ? IR[0] : IR;
	     var whitePoint, blackPoint, gamma;
	     switch (name) {
	     case 'DeviceGrayCS':
	      return this.singletons.gray;
	     case 'DeviceRgbCS':
	      return this.singletons.rgb;
	     case 'DeviceCmykCS':
	      return this.singletons.cmyk;
	     case 'CalGrayCS':
	      whitePoint = IR[1];
	      blackPoint = IR[2];
	      gamma = IR[3];
	      return new CalGrayCS(whitePoint, blackPoint, gamma);
	     case 'CalRGBCS':
	      whitePoint = IR[1];
	      blackPoint = IR[2];
	      gamma = IR[3];
	      var matrix = IR[4];
	      return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);
	     case 'PatternCS':
	      var basePatternCS = IR[1];
	      if (basePatternCS) {
	       basePatternCS = ColorSpace.fromIR(basePatternCS);
	      }
	      return new PatternCS(basePatternCS);
	     case 'IndexedCS':
	      var baseIndexedCS = IR[1];
	      var hiVal = IR[2];
	      var lookup = IR[3];
	      return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);
	     case 'AlternateCS':
	      var numComps = IR[1];
	      var alt = IR[2];
	      var tintFnIR = IR[3];
	      return new AlternateCS(numComps, ColorSpace.fromIR(alt), PDFFunction.fromIR(tintFnIR));
	     case 'LabCS':
	      whitePoint = IR[1];
	      blackPoint = IR[2];
	      var range = IR[3];
	      return new LabCS(whitePoint, blackPoint, range);
	     default:
	      error('Unknown name ' + name);
	     }
	     return null;
	    };
	    ColorSpace.parseToIR = function ColorSpace_parseToIR(cs, xref, res) {
	     if (isName(cs)) {
	      var colorSpaces = res.get('ColorSpace');
	      if (isDict(colorSpaces)) {
	       var refcs = colorSpaces.get(cs.name);
	       if (refcs) {
	        cs = refcs;
	       }
	      }
	     }
	     cs = xref.fetchIfRef(cs);
	     if (isName(cs)) {
	      switch (cs.name) {
	      case 'DeviceGray':
	      case 'G':
	       return 'DeviceGrayCS';
	      case 'DeviceRGB':
	      case 'RGB':
	       return 'DeviceRgbCS';
	      case 'DeviceCMYK':
	      case 'CMYK':
	       return 'DeviceCmykCS';
	      case 'Pattern':
	       return [
	        'PatternCS',
	        null
	       ];
	      default:
	       error('unrecognized colorspace ' + cs.name);
	      }
	     } else if (isArray(cs)) {
	      var mode = xref.fetchIfRef(cs[0]).name;
	      var numComps, params, alt, whitePoint, blackPoint, gamma;
	      switch (mode) {
	      case 'DeviceGray':
	      case 'G':
	       return 'DeviceGrayCS';
	      case 'DeviceRGB':
	      case 'RGB':
	       return 'DeviceRgbCS';
	      case 'DeviceCMYK':
	      case 'CMYK':
	       return 'DeviceCmykCS';
	      case 'CalGray':
	       params = xref.fetchIfRef(cs[1]);
	       whitePoint = params.getArray('WhitePoint');
	       blackPoint = params.getArray('BlackPoint');
	       gamma = params.get('Gamma');
	       return [
	        'CalGrayCS',
	        whitePoint,
	        blackPoint,
	        gamma
	       ];
	      case 'CalRGB':
	       params = xref.fetchIfRef(cs[1]);
	       whitePoint = params.getArray('WhitePoint');
	       blackPoint = params.getArray('BlackPoint');
	       gamma = params.getArray('Gamma');
	       var matrix = params.getArray('Matrix');
	       return [
	        'CalRGBCS',
	        whitePoint,
	        blackPoint,
	        gamma,
	        matrix
	       ];
	      case 'ICCBased':
	       var stream = xref.fetchIfRef(cs[1]);
	       var dict = stream.dict;
	       numComps = dict.get('N');
	       alt = dict.get('Alternate');
	       if (alt) {
	        var altIR = ColorSpace.parseToIR(alt, xref, res);
	        var altCS = ColorSpace.fromIR(altIR);
	        if (altCS.numComps === numComps) {
	         return altIR;
	        }
	        warn('ICCBased color space: Ignoring incorrect /Alternate entry.');
	       }
	       if (numComps === 1) {
	        return 'DeviceGrayCS';
	       } else if (numComps === 3) {
	        return 'DeviceRgbCS';
	       } else if (numComps === 4) {
	        return 'DeviceCmykCS';
	       }
	       break;
	      case 'Pattern':
	       var basePatternCS = cs[1] || null;
	       if (basePatternCS) {
	        basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res);
	       }
	       return [
	        'PatternCS',
	        basePatternCS
	       ];
	      case 'Indexed':
	      case 'I':
	       var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res);
	       var hiVal = xref.fetchIfRef(cs[2]) + 1;
	       var lookup = xref.fetchIfRef(cs[3]);
	       if (isStream(lookup)) {
	        lookup = lookup.getBytes();
	       }
	       return [
	        'IndexedCS',
	        baseIndexedCS,
	        hiVal,
	        lookup
	       ];
	      case 'Separation':
	      case 'DeviceN':
	       var name = xref.fetchIfRef(cs[1]);
	       numComps = isArray(name) ? name.length : 1;
	       alt = ColorSpace.parseToIR(cs[2], xref, res);
	       var tintFnIR = PDFFunction.getIR(xref, xref.fetchIfRef(cs[3]));
	       return [
	        'AlternateCS',
	        numComps,
	        alt,
	        tintFnIR
	       ];
	      case 'Lab':
	       params = xref.fetchIfRef(cs[1]);
	       whitePoint = params.getArray('WhitePoint');
	       blackPoint = params.getArray('BlackPoint');
	       var range = params.getArray('Range');
	       return [
	        'LabCS',
	        whitePoint,
	        blackPoint,
	        range
	       ];
	      default:
	       error('unimplemented color space object "' + mode + '"');
	      }
	     } else {
	      error('unrecognized color space object: "' + cs + '"');
	     }
	     return null;
	    };
	    ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {
	     if (!isArray(decode)) {
	      return true;
	     }
	     if (n * 2 !== decode.length) {
	      warn('The decode map is not the correct length');
	      return true;
	     }
	     for (var i = 0, ii = decode.length; i < ii; i += 2) {
	      if (decode[i] !== 0 || decode[i + 1] !== 1) {
	       return false;
	      }
	     }
	     return true;
	    };
	    ColorSpace.singletons = {
	     get gray() {
	      return shadow(this, 'gray', new DeviceGrayCS());
	     },
	     get rgb() {
	      return shadow(this, 'rgb', new DeviceRgbCS());
	     },
	     get cmyk() {
	      return shadow(this, 'cmyk', new DeviceCmykCS());
	     }
	    };
	    return ColorSpace;
	   }();
	   var AlternateCS = function AlternateCSClosure() {
	    function AlternateCS(numComps, base, tintFn) {
	     this.name = 'Alternate';
	     this.numComps = numComps;
	     this.defaultColor = new Float32Array(numComps);
	     for (var i = 0; i < numComps; ++i) {
	      this.defaultColor[i] = 1;
	     }
	     this.base = base;
	     this.tintFn = tintFn;
	     this.tmpBuf = new Float32Array(base.numComps);
	    }
	    AlternateCS.prototype = {
	     getRgb: ColorSpace.prototype.getRgb,
	     getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {
	      var tmpBuf = this.tmpBuf;
	      this.tintFn(src, srcOffset, tmpBuf, 0);
	      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);
	     },
	     getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {
	      var tintFn = this.tintFn;
	      var base = this.base;
	      var scale = 1 / ((1 << bits) - 1);
	      var baseNumComps = base.numComps;
	      var usesZeroToOneRange = base.usesZeroToOneRange;
	      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;
	      var pos = isPassthrough ? destOffset : 0;
	      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);
	      var numComps = this.numComps;
	      var scaled = new Float32Array(numComps);
	      var tinted = new Float32Array(baseNumComps);
	      var i, j;
	      for (i = 0; i < count; i++) {
	       for (j = 0; j < numComps; j++) {
	        scaled[j] = src[srcOffset++] * scale;
	       }
	       tintFn(scaled, 0, tinted, 0);
	       if (usesZeroToOneRange) {
	        for (j = 0; j < baseNumComps; j++) {
	         baseBuf[pos++] = tinted[j] * 255;
	        }
	       } else {
	        base.getRgbItem(tinted, 0, baseBuf, pos);
	        pos += baseNumComps;
	       }
	      }
	      if (!isPassthrough) {
	       base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);
	      }
	     },
	     getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {
	      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);
	     },
	     isPassthrough: ColorSpace.prototype.isPassthrough,
	     fillRgb: ColorSpace.prototype.fillRgb,
	     isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {
	      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);
	     },
	     usesZeroToOneRange: true
	    };
	    return AlternateCS;
	   }();
	   var PatternCS = function PatternCSClosure() {
	    function PatternCS(baseCS) {
	     this.name = 'Pattern';
	     this.base = baseCS;
	    }
	    PatternCS.prototype = {};
	    return PatternCS;
	   }();
	   var IndexedCS = function IndexedCSClosure() {
	    function IndexedCS(base, highVal, lookup) {
	     this.name = 'Indexed';
	     this.numComps = 1;
	     this.defaultColor = new Uint8Array(this.numComps);
	     this.base = base;
	     this.highVal = highVal;
	     var baseNumComps = base.numComps;
	     var length = baseNumComps * highVal;
	     if (isStream(lookup)) {
	      this.lookup = new Uint8Array(length);
	      var bytes = lookup.getBytes(length);
	      this.lookup.set(bytes);
	     } else if (isString(lookup)) {
	      this.lookup = new Uint8Array(length);
	      for (var i = 0; i < length; ++i) {
	       this.lookup[i] = lookup.charCodeAt(i);
	      }
	     } else if (lookup instanceof Uint8Array || lookup instanceof Array) {
	      this.lookup = lookup;
	     } else {
	      error('Unrecognized lookup table: ' + lookup);
	     }
	    }
	    IndexedCS.prototype = {
	     getRgb: ColorSpace.prototype.getRgb,
	     getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {
	      var numComps = this.base.numComps;
	      var start = src[srcOffset] * numComps;
	      this.base.getRgbItem(this.lookup, start, dest, destOffset);
	     },
	     getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {
	      var base = this.base;
	      var numComps = base.numComps;
	      var outputDelta = base.getOutputLength(numComps, alpha01);
	      var lookup = this.lookup;
	      for (var i = 0; i < count; ++i) {
	       var lookupPos = src[srcOffset++] * numComps;
	       base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);
	       destOffset += outputDelta;
	      }
	     },
	     getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {
	      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);
	     },
	     isPassthrough: ColorSpace.prototype.isPassthrough,
	     fillRgb: ColorSpace.prototype.fillRgb,
	     isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {
	      return true;
	     },
	     usesZeroToOneRange: true
	    };
	    return IndexedCS;
	   }();
	   var DeviceGrayCS = function DeviceGrayCSClosure() {
	    function DeviceGrayCS() {
	     this.name = 'DeviceGray';
	     this.numComps = 1;
	     this.defaultColor = new Float32Array(this.numComps);
	    }
	    DeviceGrayCS.prototype = {
	     getRgb: ColorSpace.prototype.getRgb,
	     getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {
	      var c = src[srcOffset] * 255 | 0;
	      c = c < 0 ? 0 : c > 255 ? 255 : c;
	      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;
	     },
	     getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {
	      var scale = 255 / ((1 << bits) - 1);
	      var j = srcOffset, q = destOffset;
	      for (var i = 0; i < count; ++i) {
	       var c = scale * src[j++] | 0;
	       dest[q++] = c;
	       dest[q++] = c;
	       dest[q++] = c;
	       q += alpha01;
	      }
	     },
	     getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {
	      return inputLength * (3 + alpha01);
	     },
	     isPassthrough: ColorSpace.prototype.isPassthrough,
	     fillRgb: ColorSpace.prototype.fillRgb,
	     isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {
	      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);
	     },
	     usesZeroToOneRange: true
	    };
	    return DeviceGrayCS;
	   }();
	   var DeviceRgbCS = function DeviceRgbCSClosure() {
	    function DeviceRgbCS() {
	     this.name = 'DeviceRGB';
	     this.numComps = 3;
	     this.defaultColor = new Float32Array(this.numComps);
	    }
	    DeviceRgbCS.prototype = {
	     getRgb: ColorSpace.prototype.getRgb,
	     getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {
	      var r = src[srcOffset] * 255 | 0;
	      var g = src[srcOffset + 1] * 255 | 0;
	      var b = src[srcOffset + 2] * 255 | 0;
	      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;
	      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;
	      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;
	     },
	     getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {
	      if (bits === 8 && alpha01 === 0) {
	       dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);
	       return;
	      }
	      var scale = 255 / ((1 << bits) - 1);
	      var j = srcOffset, q = destOffset;
	      for (var i = 0; i < count; ++i) {
	       dest[q++] = scale * src[j++] | 0;
	       dest[q++] = scale * src[j++] | 0;
	       dest[q++] = scale * src[j++] | 0;
	       q += alpha01;
	      }
	     },
	     getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {
	      return inputLength * (3 + alpha01) / 3 | 0;
	     },
	     isPassthrough: function DeviceRgbCS_isPassthrough(bits) {
	      return bits === 8;
	     },
	     fillRgb: ColorSpace.prototype.fillRgb,
	     isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {
	      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);
	     },
	     usesZeroToOneRange: true
	    };
	    return DeviceRgbCS;
	   }();
	   var DeviceCmykCS = function DeviceCmykCSClosure() {
	    function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {
	     var c = src[srcOffset + 0] * srcScale;
	     var m = src[srcOffset + 1] * srcScale;
	     var y = src[srcOffset + 2] * srcScale;
	     var k = src[srcOffset + 3] * srcScale;
	     var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;
	     var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;
	     var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;
	     dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;
	     dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;
	     dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;
	    }
	    function DeviceCmykCS() {
	     this.name = 'DeviceCMYK';
	     this.numComps = 4;
	     this.defaultColor = new Float32Array(this.numComps);
	     this.defaultColor[3] = 1;
	    }
	    DeviceCmykCS.prototype = {
	     getRgb: ColorSpace.prototype.getRgb,
	     getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {
	      convertToRgb(src, srcOffset, 1, dest, destOffset);
	     },
	     getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {
	      var scale = 1 / ((1 << bits) - 1);
	      for (var i = 0; i < count; i++) {
	       convertToRgb(src, srcOffset, scale, dest, destOffset);
	       srcOffset += 4;
	       destOffset += 3 + alpha01;
	      }
	     },
	     getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {
	      return inputLength / 4 * (3 + alpha01) | 0;
	     },
	     isPassthrough: ColorSpace.prototype.isPassthrough,
	     fillRgb: ColorSpace.prototype.fillRgb,
	     isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {
	      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);
	     },
	     usesZeroToOneRange: true
	    };
	    return DeviceCmykCS;
	   }();
	   var CalGrayCS = function CalGrayCSClosure() {
	    function CalGrayCS(whitePoint, blackPoint, gamma) {
	     this.name = 'CalGray';
	     this.numComps = 1;
	     this.defaultColor = new Float32Array(this.numComps);
	     if (!whitePoint) {
	      error('WhitePoint missing - required for color space CalGray');
	     }
	     blackPoint = blackPoint || [
	      0,
	      0,
	      0
	     ];
	     gamma = gamma || 1;
	     this.XW = whitePoint[0];
	     this.YW = whitePoint[1];
	     this.ZW = whitePoint[2];
	     this.XB = blackPoint[0];
	     this.YB = blackPoint[1];
	     this.ZB = blackPoint[2];
	     this.G = gamma;
	     if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {
	      error('Invalid WhitePoint components for ' + this.name + ', no fallback available');
	     }
	     if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {
	      info('Invalid BlackPoint for ' + this.name + ', falling back to default');
	      this.XB = this.YB = this.ZB = 0;
	     }
	     if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {
	      warn(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');
	     }
	     if (this.G < 1) {
	      info('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');
	      this.G = 1;
	     }
	    }
	    function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {
	     var A = src[srcOffset] * scale;
	     var AG = Math.pow(A, cs.G);
	     var L = cs.YW * AG;
	     var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;
	     dest[destOffset] = val;
	     dest[destOffset + 1] = val;
	     dest[destOffset + 2] = val;
	    }
	    CalGrayCS.prototype = {
	     getRgb: ColorSpace.prototype.getRgb,
	     getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {
	      convertToRgb(this, src, srcOffset, dest, destOffset, 1);
	     },
	     getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {
	      var scale = 1 / ((1 << bits) - 1);
	      for (var i = 0; i < count; ++i) {
	       convertToRgb(this, src, srcOffset, dest, destOffset, scale);
	       srcOffset += 1;
	       destOffset += 3 + alpha01;
	      }
	     },
	     getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {
	      return inputLength * (3 + alpha01);
	     },
	     isPassthrough: ColorSpace.prototype.isPassthrough,
	     fillRgb: ColorSpace.prototype.fillRgb,
	     isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {
	      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);
	     },
	     usesZeroToOneRange: true
	    };
	    return CalGrayCS;
	   }();
	   var CalRGBCS = function CalRGBCSClosure() {
	    var BRADFORD_SCALE_MATRIX = new Float32Array([
	     0.8951,
	     0.2664,
	     -0.1614,
	     -0.7502,
	     1.7135,
	     0.0367,
	     0.0389,
	     -0.0685,
	     1.0296
	    ]);
	    var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([
	     0.9869929,
	     -0.1470543,
	     0.1599627,
	     0.4323053,
	     0.5183603,
	     0.0492912,
	     -0.0085287,
	     0.0400428,
	     0.9684867
	    ]);
	    var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([
	     3.2404542,
	     -1.5371385,
	     -0.4985314,
	     -0.9692660,
	     1.8760108,
	     0.0415560,
	     0.0556434,
	     -0.2040259,
	     1.0572252
	    ]);
	    var FLAT_WHITEPOINT_MATRIX = new Float32Array([
	     1,
	     1,
	     1
	    ]);
	    var tempNormalizeMatrix = new Float32Array(3);
	    var tempConvertMatrix1 = new Float32Array(3);
	    var tempConvertMatrix2 = new Float32Array(3);
	    var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;
	    function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {
	     this.name = 'CalRGB';
	     this.numComps = 3;
	     this.defaultColor = new Float32Array(this.numComps);
	     if (!whitePoint) {
	      error('WhitePoint missing - required for color space CalRGB');
	     }
	     blackPoint = blackPoint || new Float32Array(3);
	     gamma = gamma || new Float32Array([
	      1,
	      1,
	      1
	     ]);
	     matrix = matrix || new Float32Array([
	      1,
	      0,
	      0,
	      0,
	      1,
	      0,
	      0,
	      0,
	      1
	     ]);
	     var XW = whitePoint[0];
	     var YW = whitePoint[1];
	     var ZW = whitePoint[2];
	     this.whitePoint = whitePoint;
	     var XB = blackPoint[0];
	     var YB = blackPoint[1];
	     var ZB = blackPoint[2];
	     this.blackPoint = blackPoint;
	     this.GR = gamma[0];
	     this.GG = gamma[1];
	     this.GB = gamma[2];
	     this.MXA = matrix[0];
	     this.MYA = matrix[1];
	     this.MZA = matrix[2];
	     this.MXB = matrix[3];
	     this.MYB = matrix[4];
	     this.MZB = matrix[5];
	     this.MXC = matrix[6];
	     this.MYC = matrix[7];
	     this.MZC = matrix[8];
	     if (XW < 0 || ZW < 0 || YW !== 1) {
	      error('Invalid WhitePoint components for ' + this.name + ', no fallback available');
	     }
	     if (XB < 0 || YB < 0 || ZB < 0) {
	      info('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');
	      this.blackPoint = new Float32Array(3);
	     }
	     if (this.GR < 0 || this.GG < 0 || this.GB < 0) {
	      info('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');
	      this.GR = this.GG = this.GB = 1;
	     }
	     if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {
	      info('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');
	      this.MXA = this.MYB = this.MZC = 1;
	      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;
	     }
	    }
	    function matrixProduct(a, b, result) {
	     result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
	     result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];
	     result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];
	    }
	    function convertToFlat(sourceWhitePoint, LMS, result) {
	     result[0] = LMS[0] * 1 / sourceWhitePoint[0];
	     result[1] = LMS[1] * 1 / sourceWhitePoint[1];
	     result[2] = LMS[2] * 1 / sourceWhitePoint[2];
	    }
	    function convertToD65(sourceWhitePoint, LMS, result) {
	     var D65X = 0.95047;
	     var D65Y = 1;
	     var D65Z = 1.08883;
	     result[0] = LMS[0] * D65X / sourceWhitePoint[0];
	     result[1] = LMS[1] * D65Y / sourceWhitePoint[1];
	     result[2] = LMS[2] * D65Z / sourceWhitePoint[2];
	    }
	    function sRGBTransferFunction(color) {
	     if (color <= 0.0031308) {
	      return adjustToRange(0, 1, 12.92 * color);
	     }
	     return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);
	    }
	    function adjustToRange(min, max, value) {
	     return Math.max(min, Math.min(max, value));
	    }
	    function decodeL(L) {
	     if (L < 0) {
	      return -decodeL(-L);
	     }
	     if (L > 8.0) {
	      return Math.pow((L + 16) / 116, 3);
	     }
	     return L * DECODE_L_CONSTANT;
	    }
	    function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {
	     if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {
	      result[0] = XYZ_Flat[0];
	      result[1] = XYZ_Flat[1];
	      result[2] = XYZ_Flat[2];
	      return;
	     }
	     var zeroDecodeL = decodeL(0);
	     var X_DST = zeroDecodeL;
	     var X_SRC = decodeL(sourceBlackPoint[0]);
	     var Y_DST = zeroDecodeL;
	     var Y_SRC = decodeL(sourceBlackPoint[1]);
	     var Z_DST = zeroDecodeL;
	     var Z_SRC = decodeL(sourceBlackPoint[2]);
	     var X_Scale = (1 - X_DST) / (1 - X_SRC);
	     var X_Offset = 1 - X_Scale;
	     var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);
	     var Y_Offset = 1 - Y_Scale;
	     var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);
	     var Z_Offset = 1 - Z_Scale;
	     result[0] = XYZ_Flat[0] * X_Scale + X_Offset;
	     result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;
	     result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;
	    }
	    function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {
	     if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {
	      result[0] = XYZ_In[0];
	      result[1] = XYZ_In[1];
	      result[2] = XYZ_In[2];
	      return;
	     }
	     var LMS = result;
	     matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);
	     var LMS_Flat = tempNormalizeMatrix;
	     convertToFlat(sourceWhitePoint, LMS, LMS_Flat);
	     matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);
	    }
	    function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {
	     var LMS = result;
	     matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);
	     var LMS_D65 = tempNormalizeMatrix;
	     convertToD65(sourceWhitePoint, LMS, LMS_D65);
	     matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);
	    }
	    function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {
	     var A = adjustToRange(0, 1, src[srcOffset] * scale);
	     var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);
	     var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);
	     var AGR = Math.pow(A, cs.GR);
	     var BGG = Math.pow(B, cs.GG);
	     var CGB = Math.pow(C, cs.GB);
	     var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;
	     var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;
	     var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;
	     var XYZ = tempConvertMatrix1;
	     XYZ[0] = X;
	     XYZ[1] = Y;
	     XYZ[2] = Z;
	     var XYZ_Flat = tempConvertMatrix2;
	     normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);
	     var XYZ_Black = tempConvertMatrix1;
	     compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);
	     var XYZ_D65 = tempConvertMatrix2;
	     normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);
	     var SRGB = tempConvertMatrix1;
	     matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);
	     var sR = sRGBTransferFunction(SRGB[0]);
	     var sG = sRGBTransferFunction(SRGB[1]);
	     var sB = sRGBTransferFunction(SRGB[2]);
	     dest[destOffset] = Math.round(sR * 255);
	     dest[destOffset + 1] = Math.round(sG * 255);
	     dest[destOffset + 2] = Math.round(sB * 255);
	    }
	    CalRGBCS.prototype = {
	     getRgb: function CalRGBCS_getRgb(src, srcOffset) {
	      var rgb = new Uint8Array(3);
	      this.getRgbItem(src, srcOffset, rgb, 0);
	      return rgb;
	     },
	     getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {
	      convertToRgb(this, src, srcOffset, dest, destOffset, 1);
	     },
	     getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {
	      var scale = 1 / ((1 << bits) - 1);
	      for (var i = 0; i < count; ++i) {
	       convertToRgb(this, src, srcOffset, dest, destOffset, scale);
	       srcOffset += 3;
	       destOffset += 3 + alpha01;
	      }
	     },
	     getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {
	      return inputLength * (3 + alpha01) / 3 | 0;
	     },
	     isPassthrough: ColorSpace.prototype.isPassthrough,
	     fillRgb: ColorSpace.prototype.fillRgb,
	     isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {
	      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);
	     },
	     usesZeroToOneRange: true
	    };
	    return CalRGBCS;
	   }();
	   var LabCS = function LabCSClosure() {
	    function LabCS(whitePoint, blackPoint, range) {
	     this.name = 'Lab';
	     this.numComps = 3;
	     this.defaultColor = new Float32Array(this.numComps);
	     if (!whitePoint) {
	      error('WhitePoint missing - required for color space Lab');
	     }
	     blackPoint = blackPoint || [
	      0,
	      0,
	      0
	     ];
	     range = range || [
	      -100,
	      100,
	      -100,
	      100
	     ];
	     this.XW = whitePoint[0];
	     this.YW = whitePoint[1];
	     this.ZW = whitePoint[2];
	     this.amin = range[0];
	     this.amax = range[1];
	     this.bmin = range[2];
	     this.bmax = range[3];
	     this.XB = blackPoint[0];
	     this.YB = blackPoint[1];
	     this.ZB = blackPoint[2];
	     if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {
	      error('Invalid WhitePoint components, no fallback available');
	     }
	     if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {
	      info('Invalid BlackPoint, falling back to default');
	      this.XB = this.YB = this.ZB = 0;
	     }
	     if (this.amin > this.amax || this.bmin > this.bmax) {
	      info('Invalid Range, falling back to defaults');
	      this.amin = -100;
	      this.amax = 100;
	      this.bmin = -100;
	      this.bmax = 100;
	     }
	    }
	    function fn_g(x) {
	     var result;
	     if (x >= 6 / 29) {
	      result = x * x * x;
	     } else {
	      result = 108 / 841 * (x - 4 / 29);
	     }
	     return result;
	    }
	    function decode(value, high1, low2, high2) {
	     return low2 + value * (high2 - low2) / high1;
	    }
	    function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {
	     var Ls = src[srcOffset];
	     var as = src[srcOffset + 1];
	     var bs = src[srcOffset + 2];
	     if (maxVal !== false) {
	      Ls = decode(Ls, maxVal, 0, 100);
	      as = decode(as, maxVal, cs.amin, cs.amax);
	      bs = decode(bs, maxVal, cs.bmin, cs.bmax);
	     }
	     as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;
	     bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;
	     var M = (Ls + 16) / 116;
	     var L = M + as / 500;
	     var N = M - bs / 200;
	     var X = cs.XW * fn_g(L);
	     var Y = cs.YW * fn_g(M);
	     var Z = cs.ZW * fn_g(N);
	     var r, g, b;
	     if (cs.ZW < 1) {
	      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;
	      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;
	      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;
	     } else {
	      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;
	      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;
	      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;
	     }
	     dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;
	     dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;
	     dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;
	    }
	    LabCS.prototype = {
	     getRgb: ColorSpace.prototype.getRgb,
	     getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {
	      convertToRgb(this, src, srcOffset, false, dest, destOffset);
	     },
	     getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {
	      var maxVal = (1 << bits) - 1;
	      for (var i = 0; i < count; i++) {
	       convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);
	       srcOffset += 3;
	       destOffset += 3 + alpha01;
	      }
	     },
	     getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {
	      return inputLength * (3 + alpha01) / 3 | 0;
	     },
	     isPassthrough: ColorSpace.prototype.isPassthrough,
	     fillRgb: ColorSpace.prototype.fillRgb,
	     isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {
	      return true;
	     },
	     usesZeroToOneRange: false
	    };
	    return LabCS;
	   }();
	   exports.ColorSpace = ColorSpace;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreFonts = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreGlyphList, root.pdfjsCoreFontRenderer, root.pdfjsCoreEncodings, root.pdfjsCoreStandardFonts, root.pdfjsCoreUnicode, root.pdfjsCoreType1Parser, root.pdfjsCoreCFFParser);
	  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreGlyphList, coreFontRenderer, coreEncodings, coreStandardFonts, coreUnicode, coreType1Parser, coreCFFParser) {
	   var FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;
	   var FontType = sharedUtil.FontType;
	   var assert = sharedUtil.assert;
	   var bytesToString = sharedUtil.bytesToString;
	   var error = sharedUtil.error;
	   var info = sharedUtil.info;
	   var isArray = sharedUtil.isArray;
	   var isInt = sharedUtil.isInt;
	   var isNum = sharedUtil.isNum;
	   var readUint32 = sharedUtil.readUint32;
	   var shadow = sharedUtil.shadow;
	   var string32 = sharedUtil.string32;
	   var warn = sharedUtil.warn;
	   var MissingDataException = sharedUtil.MissingDataException;
	   var isSpace = sharedUtil.isSpace;
	   var Stream = coreStream.Stream;
	   var getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;
	   var getDingbatsGlyphsUnicode = coreGlyphList.getDingbatsGlyphsUnicode;
	   var FontRendererFactory = coreFontRenderer.FontRendererFactory;
	   var StandardEncoding = coreEncodings.StandardEncoding;
	   var MacRomanEncoding = coreEncodings.MacRomanEncoding;
	   var SymbolSetEncoding = coreEncodings.SymbolSetEncoding;
	   var ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;
	   var getEncoding = coreEncodings.getEncoding;
	   var getStdFontMap = coreStandardFonts.getStdFontMap;
	   var getNonStdFontMap = coreStandardFonts.getNonStdFontMap;
	   var getGlyphMapForStandardFonts = coreStandardFonts.getGlyphMapForStandardFonts;
	   var getSupplementalGlyphMapForArialBlack = coreStandardFonts.getSupplementalGlyphMapForArialBlack;
	   var getUnicodeRangeFor = coreUnicode.getUnicodeRangeFor;
	   var mapSpecialUnicodeValues = coreUnicode.mapSpecialUnicodeValues;
	   var getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;
	   var Type1Parser = coreType1Parser.Type1Parser;
	   var CFFStandardStrings = coreCFFParser.CFFStandardStrings;
	   var CFFParser = coreCFFParser.CFFParser;
	   var CFFCompiler = coreCFFParser.CFFCompiler;
	   var CFF = coreCFFParser.CFF;
	   var CFFHeader = coreCFFParser.CFFHeader;
	   var CFFTopDict = coreCFFParser.CFFTopDict;
	   var CFFPrivateDict = coreCFFParser.CFFPrivateDict;
	   var CFFStrings = coreCFFParser.CFFStrings;
	   var CFFIndex = coreCFFParser.CFFIndex;
	   var CFFCharset = coreCFFParser.CFFCharset;
	   var PRIVATE_USE_OFFSET_START = 0xE000;
	   var PRIVATE_USE_OFFSET_END = 0xF8FF;
	   var SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;
	   var PDF_GLYPH_SPACE_UNITS = 1000;
	   var SEAC_ANALYSIS_ENABLED = false;
	   var FontFlags = {
	    FixedPitch: 1,
	    Serif: 2,
	    Symbolic: 4,
	    Script: 8,
	    Nonsymbolic: 32,
	    Italic: 64,
	    AllCap: 65536,
	    SmallCap: 131072,
	    ForceBold: 262144
	   };
	   var MacStandardGlyphOrdering = [
	    '.notdef',
	    '.null',
	    'nonmarkingreturn',
	    'space',
	    'exclam',
	    'quotedbl',
	    'numbersign',
	    'dollar',
	    'percent',
	    'ampersand',
	    'quotesingle',
	    'parenleft',
	    'parenright',
	    'asterisk',
	    'plus',
	    'comma',
	    'hyphen',
	    'period',
	    'slash',
	    'zero',
	    'one',
	    'two',
	    'three',
	    'four',
	    'five',
	    'six',
	    'seven',
	    'eight',
	    'nine',
	    'colon',
	    'semicolon',
	    'less',
	    'equal',
	    'greater',
	    'question',
	    'at',
	    'A',
	    'B',
	    'C',
	    'D',
	    'E',
	    'F',
	    'G',
	    'H',
	    'I',
	    'J',
	    'K',
	    'L',
	    'M',
	    'N',
	    'O',
	    'P',
	    'Q',
	    'R',
	    'S',
	    'T',
	    'U',
	    'V',
	    'W',
	    'X',
	    'Y',
	    'Z',
	    'bracketleft',
	    'backslash',
	    'bracketright',
	    'asciicircum',
	    'underscore',
	    'grave',
	    'a',
	    'b',
	    'c',
	    'd',
	    'e',
	    'f',
	    'g',
	    'h',
	    'i',
	    'j',
	    'k',
	    'l',
	    'm',
	    'n',
	    'o',
	    'p',
	    'q',
	    'r',
	    's',
	    't',
	    'u',
	    'v',
	    'w',
	    'x',
	    'y',
	    'z',
	    'braceleft',
	    'bar',
	    'braceright',
	    'asciitilde',
	    'Adieresis',
	    'Aring',
	    'Ccedilla',
	    'Eacute',
	    'Ntilde',
	    'Odieresis',
	    'Udieresis',
	    'aacute',
	    'agrave',
	    'acircumflex',
	    'adieresis',
	    'atilde',
	    'aring',
	    'ccedilla',
	    'eacute',
	    'egrave',
	    'ecircumflex',
	    'edieresis',
	    'iacute',
	    'igrave',
	    'icircumflex',
	    'idieresis',
	    'ntilde',
	    'oacute',
	    'ograve',
	    'ocircumflex',
	    'odieresis',
	    'otilde',
	    'uacute',
	    'ugrave',
	    'ucircumflex',
	    'udieresis',
	    'dagger',
	    'degree',
	    'cent',
	    'sterling',
	    'section',
	    'bullet',
	    'paragraph',
	    'germandbls',
	    'registered',
	    'copyright',
	    'trademark',
	    'acute',
	    'dieresis',
	    'notequal',
	    'AE',
	    'Oslash',
	    'infinity',
	    'plusminus',
	    'lessequal',
	    'greaterequal',
	    'yen',
	    'mu',
	    'partialdiff',
	    'summation',
	    'product',
	    'pi',
	    'integral',
	    'ordfeminine',
	    'ordmasculine',
	    'Omega',
	    'ae',
	    'oslash',
	    'questiondown',
	    'exclamdown',
	    'logicalnot',
	    'radical',
	    'florin',
	    'approxequal',
	    'Delta',
	    'guillemotleft',
	    'guillemotright',
	    'ellipsis',
	    'nonbreakingspace',
	    'Agrave',
	    'Atilde',
	    'Otilde',
	    'OE',
	    'oe',
	    'endash',
	    'emdash',
	    'quotedblleft',
	    'quotedblright',
	    'quoteleft',
	    'quoteright',
	    'divide',
	    'lozenge',
	    'ydieresis',
	    'Ydieresis',
	    'fraction',
	    'currency',
	    'guilsinglleft',
	    'guilsinglright',
	    'fi',
	    'fl',
	    'daggerdbl',
	    'periodcentered',
	    'quotesinglbase',
	    'quotedblbase',
	    'perthousand',
	    'Acircumflex',
	    'Ecircumflex',
	    'Aacute',
	    'Edieresis',
	    'Egrave',
	    'Iacute',
	    'Icircumflex',
	    'Idieresis',
	    'Igrave',
	    'Oacute',
	    'Ocircumflex',
	    'apple',
	    'Ograve',
	    'Uacute',
	    'Ucircumflex',
	    'Ugrave',
	    'dotlessi',
	    'circumflex',
	    'tilde',
	    'macron',
	    'breve',
	    'dotaccent',
	    'ring',
	    'cedilla',
	    'hungarumlaut',
	    'ogonek',
	    'caron',
	    'Lslash',
	    'lslash',
	    'Scaron',
	    'scaron',
	    'Zcaron',
	    'zcaron',
	    'brokenbar',
	    'Eth',
	    'eth',
	    'Yacute',
	    'yacute',
	    'Thorn',
	    'thorn',
	    'minus',
	    'multiply',
	    'onesuperior',
	    'twosuperior',
	    'threesuperior',
	    'onehalf',
	    'onequarter',
	    'threequarters',
	    'franc',
	    'Gbreve',
	    'gbreve',
	    'Idotaccent',
	    'Scedilla',
	    'scedilla',
	    'Cacute',
	    'cacute',
	    'Ccaron',
	    'ccaron',
	    'dcroat'
	   ];
	   function adjustWidths(properties) {
	    if (!properties.fontMatrix) {
	     return;
	    }
	    if (properties.fontMatrix[0] === FONT_IDENTITY_MATRIX[0]) {
	     return;
	    }
	    var scale = 0.001 / properties.fontMatrix[0];
	    var glyphsWidths = properties.widths;
	    for (var glyph in glyphsWidths) {
	     glyphsWidths[glyph] *= scale;
	    }
	    properties.defaultWidth *= scale;
	   }
	   function adjustToUnicode(properties, builtInEncoding) {
	    if (properties.hasIncludedToUnicodeMap) {
	     return;
	    }
	    if (properties.hasEncoding) {
	     return;
	    }
	    if (builtInEncoding === properties.defaultEncoding) {
	     return;
	    }
	    if (properties.toUnicode instanceof IdentityToUnicodeMap) {
	     return;
	    }
	    var toUnicode = [], glyphsUnicodeMap = getGlyphsUnicode();
	    for (var charCode in builtInEncoding) {
	     var glyphName = builtInEncoding[charCode];
	     var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);
	     if (unicode !== -1) {
	      toUnicode[charCode] = String.fromCharCode(unicode);
	     }
	    }
	    properties.toUnicode.amend(toUnicode);
	   }
	   function getFontType(type, subtype) {
	    switch (type) {
	    case 'Type1':
	     return subtype === 'Type1C' ? FontType.TYPE1C : FontType.TYPE1;
	    case 'CIDFontType0':
	     return subtype === 'CIDFontType0C' ? FontType.CIDFONTTYPE0C : FontType.CIDFONTTYPE0;
	    case 'OpenType':
	     return FontType.OPENTYPE;
	    case 'TrueType':
	     return FontType.TRUETYPE;
	    case 'CIDFontType2':
	     return FontType.CIDFONTTYPE2;
	    case 'MMType1':
	     return FontType.MMTYPE1;
	    case 'Type0':
	     return FontType.TYPE0;
	    default:
	     return FontType.UNKNOWN;
	    }
	   }
	   function recoverGlyphName(name, glyphsUnicodeMap) {
	    if (glyphsUnicodeMap[name] !== undefined) {
	     return name;
	    }
	    var unicode = getUnicodeForGlyph(name, glyphsUnicodeMap);
	    if (unicode !== -1) {
	     for (var key in glyphsUnicodeMap) {
	      if (glyphsUnicodeMap[key] === unicode) {
	       return key;
	      }
	     }
	    }
	    info('Unable to recover a standard glyph name for: ' + name);
	    return name;
	   }
	   var Glyph = function GlyphClosure() {
	    function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {
	     this.fontChar = fontChar;
	     this.unicode = unicode;
	     this.accent = accent;
	     this.width = width;
	     this.vmetric = vmetric;
	     this.operatorListId = operatorListId;
	     this.isSpace = isSpace;
	     this.isInFont = isInFont;
	    }
	    Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {
	     return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;
	    };
	    return Glyph;
	   }();
	   var ToUnicodeMap = function ToUnicodeMapClosure() {
	    function ToUnicodeMap(cmap) {
	     this._map = cmap;
	    }
	    ToUnicodeMap.prototype = {
	     get length() {
	      return this._map.length;
	     },
	     forEach: function (callback) {
	      for (var charCode in this._map) {
	       callback(charCode, this._map[charCode].charCodeAt(0));
	      }
	     },
	     has: function (i) {
	      return this._map[i] !== undefined;
	     },
	     get: function (i) {
	      return this._map[i];
	     },
	     charCodeOf: function (v) {
	      return this._map.indexOf(v);
	     },
	     amend: function (map) {
	      for (var charCode in map) {
	       this._map[charCode] = map[charCode];
	      }
	     }
	    };
	    return ToUnicodeMap;
	   }();
	   var IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {
	    function IdentityToUnicodeMap(firstChar, lastChar) {
	     this.firstChar = firstChar;
	     this.lastChar = lastChar;
	    }
	    IdentityToUnicodeMap.prototype = {
	     get length() {
	      return this.lastChar + 1 - this.firstChar;
	     },
	     forEach: function (callback) {
	      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {
	       callback(i, i);
	      }
	     },
	     has: function (i) {
	      return this.firstChar <= i && i <= this.lastChar;
	     },
	     get: function (i) {
	      if (this.firstChar <= i && i <= this.lastChar) {
	       return String.fromCharCode(i);
	      }
	      return undefined;
	     },
	     charCodeOf: function (v) {
	      return isInt(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;
	     },
	     amend: function (map) {
	      error('Should not call amend()');
	     }
	    };
	    return IdentityToUnicodeMap;
	   }();
	   var OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {
	    function writeInt16(dest, offset, num) {
	     dest[offset] = num >> 8 & 0xFF;
	     dest[offset + 1] = num & 0xFF;
	    }
	    function writeInt32(dest, offset, num) {
	     dest[offset] = num >> 24 & 0xFF;
	     dest[offset + 1] = num >> 16 & 0xFF;
	     dest[offset + 2] = num >> 8 & 0xFF;
	     dest[offset + 3] = num & 0xFF;
	    }
	    function writeData(dest, offset, data) {
	     var i, ii;
	     if (data instanceof Uint8Array) {
	      dest.set(data, offset);
	     } else if (typeof data === 'string') {
	      for (i = 0, ii = data.length; i < ii; i++) {
	       dest[offset++] = data.charCodeAt(i) & 0xFF;
	      }
	     } else {
	      for (i = 0, ii = data.length; i < ii; i++) {
	       dest[offset++] = data[i] & 0xFF;
	      }
	     }
	    }
	    function OpenTypeFileBuilder(sfnt) {
	     this.sfnt = sfnt;
	     this.tables = Object.create(null);
	    }
	    OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {
	     var maxPower2 = 1, log2 = 0;
	     while ((maxPower2 ^ entriesCount) > maxPower2) {
	      maxPower2 <<= 1;
	      log2++;
	     }
	     var searchRange = maxPower2 * entrySize;
	     return {
	      range: searchRange,
	      entry: log2,
	      rangeShift: entrySize * entriesCount - searchRange
	     };
	    };
	    var OTF_HEADER_SIZE = 12;
	    var OTF_TABLE_ENTRY_SIZE = 16;
	    OpenTypeFileBuilder.prototype = {
	     toArray: function OpenTypeFileBuilder_toArray() {
	      var sfnt = this.sfnt;
	      var tables = this.tables;
	      var tablesNames = Object.keys(tables);
	      tablesNames.sort();
	      var numTables = tablesNames.length;
	      var i, j, jj, table, tableName;
	      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;
	      var tableOffsets = [offset];
	      for (i = 0; i < numTables; i++) {
	       table = tables[tablesNames[i]];
	       var paddedLength = (table.length + 3 & ~3) >>> 0;
	       offset += paddedLength;
	       tableOffsets.push(offset);
	      }
	      var file = new Uint8Array(offset);
	      for (i = 0; i < numTables; i++) {
	       table = tables[tablesNames[i]];
	       writeData(file, tableOffsets[i], table);
	      }
	      if (sfnt === 'true') {
	       sfnt = string32(0x00010000);
	      }
	      file[0] = sfnt.charCodeAt(0) & 0xFF;
	      file[1] = sfnt.charCodeAt(1) & 0xFF;
	      file[2] = sfnt.charCodeAt(2) & 0xFF;
	      file[3] = sfnt.charCodeAt(3) & 0xFF;
	      writeInt16(file, 4, numTables);
	      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);
	      writeInt16(file, 6, searchParams.range);
	      writeInt16(file, 8, searchParams.entry);
	      writeInt16(file, 10, searchParams.rangeShift);
	      offset = OTF_HEADER_SIZE;
	      for (i = 0; i < numTables; i++) {
	       tableName = tablesNames[i];
	       file[offset] = tableName.charCodeAt(0) & 0xFF;
	       file[offset + 1] = tableName.charCodeAt(1) & 0xFF;
	       file[offset + 2] = tableName.charCodeAt(2) & 0xFF;
	       file[offset + 3] = tableName.charCodeAt(3) & 0xFF;
	       var checksum = 0;
	       for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {
	        var quad = readUint32(file, j);
	        checksum = checksum + quad >>> 0;
	       }
	       writeInt32(file, offset + 4, checksum);
	       writeInt32(file, offset + 8, tableOffsets[i]);
	       writeInt32(file, offset + 12, tables[tableName].length);
	       offset += OTF_TABLE_ENTRY_SIZE;
	      }
	      return file;
	     },
	     addTable: function OpenTypeFileBuilder_addTable(tag, data) {
	      if (tag in this.tables) {
	       throw new Error('Table ' + tag + ' already exists');
	      }
	      this.tables[tag] = data;
	     }
	    };
	    return OpenTypeFileBuilder;
	   }();
	   var ProblematicCharRanges = new Int32Array([
	    0x0000,
	    0x0020,
	    0x007F,
	    0x00A1,
	    0x00AD,
	    0x00AE,
	    0x0600,
	    0x0780,
	    0x08A0,
	    0x10A0,
	    0x1780,
	    0x1800,
	    0x1C00,
	    0x1C50,
	    0x2000,
	    0x2010,
	    0x2011,
	    0x2012,
	    0x2028,
	    0x2030,
	    0x205F,
	    0x2070,
	    0x25CC,
	    0x25CD,
	    0x3000,
	    0x3001,
	    0xAA60,
	    0xAA80,
	    0xFFF0,
	    0x10000
	   ]);
	   var Font = function FontClosure() {
	    function Font(name, file, properties) {
	     var charCode, glyphName, unicode;
	     this.name = name;
	     this.loadedName = properties.loadedName;
	     this.isType3Font = properties.isType3Font;
	     this.sizes = [];
	     this.missingFile = false;
	     this.glyphCache = Object.create(null);
	     var names = name.split('+');
	     names = names.length > 1 ? names[1] : names[0];
	     names = names.split(/[-,_]/g)[0];
	     this.isSerifFont = !!(properties.flags & FontFlags.Serif);
	     this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);
	     this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);
	     var type = properties.type;
	     var subtype = properties.subtype;
	     this.type = type;
	     this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';
	     this.differences = properties.differences;
	     this.widths = properties.widths;
	     this.defaultWidth = properties.defaultWidth;
	     this.composite = properties.composite;
	     this.wideChars = properties.wideChars;
	     this.cMap = properties.cMap;
	     this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;
	     this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;
	     this.fontMatrix = properties.fontMatrix;
	     this.bbox = properties.bbox;
	     this.toUnicode = properties.toUnicode;
	     this.toFontChar = [];
	     if (properties.type === 'Type3') {
	      for (charCode = 0; charCode < 256; charCode++) {
	       this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];
	      }
	      this.fontType = FontType.TYPE3;
	      return;
	     }
	     this.cidEncoding = properties.cidEncoding;
	     this.vertical = properties.vertical;
	     if (this.vertical) {
	      this.vmetrics = properties.vmetrics;
	      this.defaultVMetrics = properties.defaultVMetrics;
	     }
	     var glyphsUnicodeMap;
	     if (!file || file.isEmpty) {
	      if (file) {
	       warn('Font file is empty in "' + name + '" (' + this.loadedName + ')');
	      }
	      this.missingFile = true;
	      var fontName = name.replace(/[,_]/g, '-');
	      var stdFontMap = getStdFontMap(), nonStdFontMap = getNonStdFontMap();
	      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);
	      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;
	      this.bold = fontName.search(/bold/gi) !== -1;
	      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;
	      this.black = name.search(/Black/g) !== -1;
	      this.remeasure = Object.keys(this.widths).length > 0;
	      if (isStandardFont && type === 'CIDFontType2' && properties.cidEncoding.indexOf('Identity-') === 0) {
	       var GlyphMapForStandardFonts = getGlyphMapForStandardFonts();
	       var map = [];
	       for (charCode in GlyphMapForStandardFonts) {
	        map[+charCode] = GlyphMapForStandardFonts[charCode];
	       }
	       if (/Arial-?Black/i.test(name)) {
	        var SupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack();
	        for (charCode in SupplementalGlyphMapForArialBlack) {
	         map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];
	        }
	       }
	       var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;
	       if (!isIdentityUnicode) {
	        this.toUnicode.forEach(function (charCode, unicodeCharCode) {
	         map[+charCode] = unicodeCharCode;
	        });
	       }
	       this.toFontChar = map;
	       this.toUnicode = new ToUnicodeMap(map);
	      } else if (/Symbol/i.test(fontName)) {
	       this.toFontChar = buildToFontChar(SymbolSetEncoding, getGlyphsUnicode(), properties.differences);
	      } else if (/Dingbats/i.test(fontName)) {
	       if (/Wingdings/i.test(name)) {
	        warn('Non-embedded Wingdings font, falling back to ZapfDingbats.');
	       }
	       this.toFontChar = buildToFontChar(ZapfDingbatsEncoding, getDingbatsGlyphsUnicode(), properties.differences);
	      } else if (isStandardFont) {
	       this.toFontChar = buildToFontChar(properties.defaultEncoding, getGlyphsUnicode(), properties.differences);
	      } else {
	       glyphsUnicodeMap = getGlyphsUnicode();
	       this.toUnicode.forEach(function (charCode, unicodeCharCode) {
	        if (!this.composite) {
	         glyphName = properties.differences[charCode] || properties.defaultEncoding[charCode];
	         unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);
	         if (unicode !== -1) {
	          unicodeCharCode = unicode;
	         }
	        }
	        this.toFontChar[charCode] = unicodeCharCode;
	       }.bind(this));
	      }
	      this.loadedName = fontName.split('-')[0];
	      this.loading = false;
	      this.fontType = getFontType(type, subtype);
	      return;
	     }
	     if (subtype === 'Type1C') {
	      if (type !== 'Type1' && type !== 'MMType1') {
	       if (isTrueTypeFile(file)) {
	        subtype = 'TrueType';
	       } else {
	        type = 'Type1';
	       }
	      } else if (isOpenTypeFile(file)) {
	       type = subtype = 'OpenType';
	      }
	     }
	     if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {
	      type = 'CIDFontType0';
	     }
	     if (subtype === 'OpenType') {
	      type = 'OpenType';
	     }
	     if (type === 'CIDFontType0') {
	      if (isType1File(file)) {
	       subtype = 'CIDFontType0';
	      } else if (isOpenTypeFile(file)) {
	       type = subtype = 'OpenType';
	      } else {
	       subtype = 'CIDFontType0C';
	      }
	     }
	     var data;
	     switch (type) {
	     case 'MMType1':
	      info('MMType1 font (' + name + '), falling back to Type1.');
	     case 'Type1':
	     case 'CIDFontType0':
	      this.mimetype = 'font/opentype';
	      var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);
	      adjustWidths(properties);
	      data = this.convert(name, cff, properties);
	      break;
	     case 'OpenType':
	     case 'TrueType':
	     case 'CIDFontType2':
	      this.mimetype = 'font/opentype';
	      data = this.checkAndRepair(name, file, properties);
	      if (this.isOpenType) {
	       adjustWidths(properties);
	       type = 'OpenType';
	      }
	      break;
	     default:
	      error('Font ' + type + ' is not supported');
	      break;
	     }
	     this.data = data;
	     this.fontType = getFontType(type, subtype);
	     this.fontMatrix = properties.fontMatrix;
	     this.widths = properties.widths;
	     this.defaultWidth = properties.defaultWidth;
	     this.toUnicode = properties.toUnicode;
	     this.encoding = properties.baseEncoding;
	     this.seacMap = properties.seacMap;
	     this.loading = true;
	    }
	    Font.getFontID = function () {
	     var ID = 1;
	     return function Font_getFontID() {
	      return String(ID++);
	     };
	    }();
	    function int16(b0, b1) {
	     return (b0 << 8) + b1;
	    }
	    function signedInt16(b0, b1) {
	     var value = (b0 << 8) + b1;
	     return value & 1 << 15 ? value - 0x10000 : value;
	    }
	    function int32(b0, b1, b2, b3) {
	     return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;
	    }
	    function string16(value) {
	     return String.fromCharCode(value >> 8 & 0xff, value & 0xff);
	    }
	    function safeString16(value) {
	     value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;
	     return String.fromCharCode(value >> 8 & 0xff, value & 0xff);
	    }
	    function isTrueTypeFile(file) {
	     var header = file.peekBytes(4);
	     return readUint32(header, 0) === 0x00010000;
	    }
	    function isOpenTypeFile(file) {
	     var header = file.peekBytes(4);
	     return bytesToString(header) === 'OTTO';
	    }
	    function isType1File(file) {
	     var header = file.peekBytes(2);
	     if (header[0] === 0x25 && header[1] === 0x21) {
	      return true;
	     }
	     if (header[0] === 0x80 && header[1] === 0x01) {
	      return true;
	     }
	     return false;
	    }
	    function buildToFontChar(encoding, glyphsUnicodeMap, differences) {
	     var toFontChar = [], unicode;
	     for (var i = 0, ii = encoding.length; i < ii; i++) {
	      unicode = getUnicodeForGlyph(encoding[i], glyphsUnicodeMap);
	      if (unicode !== -1) {
	       toFontChar[i] = unicode;
	      }
	     }
	     for (var charCode in differences) {
	      unicode = getUnicodeForGlyph(differences[charCode], glyphsUnicodeMap);
	      if (unicode !== -1) {
	       toFontChar[+charCode] = unicode;
	      }
	     }
	     return toFontChar;
	    }
	    function isProblematicUnicodeLocation(code) {
	     var i = 0, j = ProblematicCharRanges.length - 1;
	     while (i < j) {
	      var c = i + j + 1 >> 1;
	      if (code < ProblematicCharRanges[c]) {
	       j = c - 1;
	      } else {
	       i = c;
	      }
	     }
	     return !(i & 1);
	    }
	    function adjustMapping(charCodeToGlyphId, properties) {
	     var toUnicode = properties.toUnicode;
	     var isSymbolic = !!(properties.flags & FontFlags.Symbolic);
	     var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;
	     var newMap = Object.create(null);
	     var toFontChar = [];
	     var usedFontCharCodes = [];
	     var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;
	     for (var originalCharCode in charCodeToGlyphId) {
	      originalCharCode |= 0;
	      var glyphId = charCodeToGlyphId[originalCharCode];
	      var fontCharCode = originalCharCode;
	      var hasUnicodeValue = false;
	      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {
	       hasUnicodeValue = true;
	       var unicode = toUnicode.get(fontCharCode);
	       if (unicode.length === 1) {
	        fontCharCode = unicode.charCodeAt(0);
	       }
	      }
	      if ((usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END) {
	       do {
	        fontCharCode = nextAvailableFontCharCode++;
	        if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {
	         fontCharCode = 0xF020;
	         nextAvailableFontCharCode = fontCharCode + 1;
	        }
	       } while (usedFontCharCodes[fontCharCode] !== undefined && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END);
	      }
	      newMap[fontCharCode] = glyphId;
	      toFontChar[originalCharCode] = fontCharCode;
	      usedFontCharCodes[fontCharCode] = true;
	     }
	     return {
	      toFontChar: toFontChar,
	      charCodeToGlyphId: newMap,
	      nextAvailableFontCharCode: nextAvailableFontCharCode
	     };
	    }
	    function getRanges(glyphs, numGlyphs) {
	     var codes = [];
	     for (var charCode in glyphs) {
	      if (glyphs[charCode] >= numGlyphs) {
	       continue;
	      }
	      codes.push({
	       fontCharCode: charCode | 0,
	       glyphId: glyphs[charCode]
	      });
	     }
	     codes.sort(function fontGetRangesSort(a, b) {
	      return a.fontCharCode - b.fontCharCode;
	     });
	     var ranges = [];
	     var length = codes.length;
	     for (var n = 0; n < length;) {
	      var start = codes[n].fontCharCode;
	      var codeIndices = [codes[n].glyphId];
	      ++n;
	      var end = start;
	      while (n < length && end + 1 === codes[n].fontCharCode) {
	       codeIndices.push(codes[n].glyphId);
	       ++end;
	       ++n;
	       if (end === 0xFFFF) {
	        break;
	       }
	      }
	      ranges.push([
	       start,
	       end,
	       codeIndices
	      ]);
	     }
	     return ranges;
	    }
	    function createCmapTable(glyphs, numGlyphs) {
	     var ranges = getRanges(glyphs, numGlyphs);
	     var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;
	     var cmap = '\x00\x00' + string16(numTables) + '\x00\x03' + '\x00\x01' + string32(4 + numTables * 8);
	     var i, ii, j, jj;
	     for (i = ranges.length - 1; i >= 0; --i) {
	      if (ranges[i][0] <= 0xFFFF) {
	       break;
	      }
	     }
	     var bmpLength = i + 1;
	     if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {
	      ranges[i][1] = 0xFFFE;
	     }
	     var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;
	     var segCount = bmpLength + trailingRangesCount;
	     var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);
	     var startCount = '';
	     var endCount = '';
	     var idDeltas = '';
	     var idRangeOffsets = '';
	     var glyphsIds = '';
	     var bias = 0;
	     var range, start, end, codes;
	     for (i = 0, ii = bmpLength; i < ii; i++) {
	      range = ranges[i];
	      start = range[0];
	      end = range[1];
	      startCount += string16(start);
	      endCount += string16(end);
	      codes = range[2];
	      var contiguous = true;
	      for (j = 1, jj = codes.length; j < jj; ++j) {
	       if (codes[j] !== codes[j - 1] + 1) {
	        contiguous = false;
	        break;
	       }
	      }
	      if (!contiguous) {
	       var offset = (segCount - i) * 2 + bias * 2;
	       bias += end - start + 1;
	       idDeltas += string16(0);
	       idRangeOffsets += string16(offset);
	       for (j = 0, jj = codes.length; j < jj; ++j) {
	        glyphsIds += string16(codes[j]);
	       }
	      } else {
	       var startCode = codes[0];
	       idDeltas += string16(startCode - start & 0xFFFF);
	       idRangeOffsets += string16(0);
	      }
	     }
	     if (trailingRangesCount > 0) {
	      endCount += '\xFF\xFF';
	      startCount += '\xFF\xFF';
	      idDeltas += '\x00\x01';
	      idRangeOffsets += '\x00\x00';
	     }
	     var format314 = '\x00\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\x00\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;
	     var format31012 = '';
	     var header31012 = '';
	     if (numTables > 1) {
	      cmap += '\x00\x03' + '\x00\x0A' + string32(4 + numTables * 8 + 4 + format314.length);
	      format31012 = '';
	      for (i = 0, ii = ranges.length; i < ii; i++) {
	       range = ranges[i];
	       start = range[0];
	       codes = range[2];
	       var code = codes[0];
	       for (j = 1, jj = codes.length; j < jj; ++j) {
	        if (codes[j] !== codes[j - 1] + 1) {
	         end = range[0] + j - 1;
	         format31012 += string32(start) + string32(end) + string32(code);
	         start = end + 1;
	         code = codes[j];
	        }
	       }
	       format31012 += string32(start) + string32(range[1]) + string32(code);
	      }
	      header31012 = '\x00\x0C' + '\x00\x00' + string32(format31012.length + 16) + '\x00\x00\x00\x00' + string32(format31012.length / 12);
	     }
	     return cmap + '\x00\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;
	    }
	    function validateOS2Table(os2) {
	     var stream = new Stream(os2.data);
	     var version = stream.getUint16();
	     stream.getBytes(60);
	     var selection = stream.getUint16();
	     if (version < 4 && selection & 0x0300) {
	      return false;
	     }
	     var firstChar = stream.getUint16();
	     var lastChar = stream.getUint16();
	     if (firstChar > lastChar) {
	      return false;
	     }
	     stream.getBytes(6);
	     var usWinAscent = stream.getUint16();
	     if (usWinAscent === 0) {
	      return false;
	     }
	     os2.data[8] = os2.data[9] = 0;
	     return true;
	    }
	    function createOS2Table(properties, charstrings, override) {
	     override = override || {
	      unitsPerEm: 0,
	      yMax: 0,
	      yMin: 0,
	      ascent: 0,
	      descent: 0
	     };
	     var ulUnicodeRange1 = 0;
	     var ulUnicodeRange2 = 0;
	     var ulUnicodeRange3 = 0;
	     var ulUnicodeRange4 = 0;
	     var firstCharIndex = null;
	     var lastCharIndex = 0;
	     if (charstrings) {
	      for (var code in charstrings) {
	       code |= 0;
	       if (firstCharIndex > code || !firstCharIndex) {
	        firstCharIndex = code;
	       }
	       if (lastCharIndex < code) {
	        lastCharIndex = code;
	       }
	       var position = getUnicodeRangeFor(code);
	       if (position < 32) {
	        ulUnicodeRange1 |= 1 << position;
	       } else if (position < 64) {
	        ulUnicodeRange2 |= 1 << position - 32;
	       } else if (position < 96) {
	        ulUnicodeRange3 |= 1 << position - 64;
	       } else if (position < 123) {
	        ulUnicodeRange4 |= 1 << position - 96;
	       } else {
	        error('Unicode ranges Bits > 123 are reserved for internal usage');
	       }
	      }
	     } else {
	      firstCharIndex = 0;
	      lastCharIndex = 255;
	     }
	     var bbox = properties.bbox || [
	      0,
	      0,
	      0,
	      0
	     ];
	     var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];
	     var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;
	     var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));
	     var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));
	     if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {
	      typoDescent = -typoDescent;
	     }
	     var winAscent = override.yMax || typoAscent;
	     var winDescent = -override.yMin || -typoDescent;
	     return '\x00\x03' + '\x02\x24' + '\x01\xF4' + '\x00\x05' + '\x00\x00' + '\x02\x8A' + '\x02\xBB' + '\x00\x00' + '\x00\x8C' + '\x02\x8A' + '\x02\xBB' + '\x00\x00' + '\x01\xDF' + '\x00\x31' + '\x01\x02' + '\x00\x00' + '\x00\x00\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\x00\x00\x00\x00\x00\x00' + string32(ulUnicodeRange1) + string32(ulUnicodeRange2) + string32(ulUnicodeRange3) + string32(ulUnicodeRange4) + '\x2A\x32\x31\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\x00\x64' + string16(winAscent) + string16(winDescent) + '\x00\x00\x00\x00' + '\x00\x00\x00\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\x00\x03';
	    }
	    function createPostTable(properties) {
	     var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));
	     return '\x00\x03\x00\x00' + string32(angle) + '\x00\x00' + '\x00\x00' + string32(properties.fixedPitch) + '\x00\x00\x00\x00' + '\x00\x00\x00\x00' + '\x00\x00\x00\x00' + '\x00\x00\x00\x00';
	    }
	    function createNameTable(name, proto) {
	     if (!proto) {
	      proto = [
	       [],
	       []
	      ];
	     }
	     var strings = [
	      proto[0][0] || 'Original licence',
	      proto[0][1] || name,
	      proto[0][2] || 'Unknown',
	      proto[0][3] || 'uniqueID',
	      proto[0][4] || name,
	      proto[0][5] || 'Version 0.11',
	      proto[0][6] || '',
	      proto[0][7] || 'Unknown',
	      proto[0][8] || 'Unknown',
	      proto[0][9] || 'Unknown'
	     ];
	     var stringsUnicode = [];
	     var i, ii, j, jj, str;
	     for (i = 0, ii = strings.length; i < ii; i++) {
	      str = proto[1][i] || strings[i];
	      var strBufUnicode = [];
	      for (j = 0, jj = str.length; j < jj; j++) {
	       strBufUnicode.push(string16(str.charCodeAt(j)));
	      }
	      stringsUnicode.push(strBufUnicode.join(''));
	     }
	     var names = [
	      strings,
	      stringsUnicode
	     ];
	     var platforms = [
	      '\x00\x01',
	      '\x00\x03'
	     ];
	     var encodings = [
	      '\x00\x00',
	      '\x00\x01'
	     ];
	     var languages = [
	      '\x00\x00',
	      '\x04\x09'
	     ];
	     var namesRecordCount = strings.length * platforms.length;
	     var nameTable = '\x00\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);
	     var strOffset = 0;
	     for (i = 0, ii = platforms.length; i < ii; i++) {
	      var strs = names[i];
	      for (j = 0, jj = strs.length; j < jj; j++) {
	       str = strs[j];
	       var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);
	       nameTable += nameRecord;
	       strOffset += str.length;
	      }
	     }
	     nameTable += strings.join('') + stringsUnicode.join('');
	     return nameTable;
	    }
	    Font.prototype = {
	     name: null,
	     font: null,
	     mimetype: null,
	     encoding: null,
	     get renderer() {
	      var renderer = FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);
	      return shadow(this, 'renderer', renderer);
	     },
	     exportData: function Font_exportData() {
	      var data = {};
	      for (var i in this) {
	       if (this.hasOwnProperty(i)) {
	        data[i] = this[i];
	       }
	      }
	      return data;
	     },
	     checkAndRepair: function Font_checkAndRepair(name, font, properties) {
	      function readTableEntry(file) {
	       var tag = bytesToString(file.getBytes(4));
	       var checksum = file.getInt32() >>> 0;
	       var offset = file.getInt32() >>> 0;
	       var length = file.getInt32() >>> 0;
	       var previousPosition = file.pos;
	       file.pos = file.start ? file.start : 0;
	       file.skip(offset);
	       var data = file.getBytes(length);
	       file.pos = previousPosition;
	       if (tag === 'head') {
	        data[8] = data[9] = data[10] = data[11] = 0;
	        data[17] |= 0x20;
	       }
	       return {
	        tag: tag,
	        checksum: checksum,
	        length: length,
	        offset: offset,
	        data: data
	       };
	      }
	      function readOpenTypeHeader(ttf) {
	       return {
	        version: bytesToString(ttf.getBytes(4)),
	        numTables: ttf.getUint16(),
	        searchRange: ttf.getUint16(),
	        entrySelector: ttf.getUint16(),
	        rangeShift: ttf.getUint16()
	       };
	      }
	      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {
	       if (!cmap) {
	        warn('No cmap table available.');
	        return {
	         platformId: -1,
	         encodingId: -1,
	         mappings: [],
	         hasShortCmap: false
	        };
	       }
	       var segment;
	       var start = (font.start ? font.start : 0) + cmap.offset;
	       font.pos = start;
	       var version = font.getUint16();
	       var numTables = font.getUint16();
	       var potentialTable;
	       var canBreak = false;
	       for (var i = 0; i < numTables; i++) {
	        var platformId = font.getUint16();
	        var encodingId = font.getUint16();
	        var offset = font.getInt32() >>> 0;
	        var useTable = false;
	        if (platformId === 0 && encodingId === 0) {
	         useTable = true;
	        } else if (platformId === 1 && encodingId === 0) {
	         useTable = true;
	        } else if (platformId === 3 && encodingId === 1 && (!isSymbolicFont && hasEncoding || !potentialTable)) {
	         useTable = true;
	         if (!isSymbolicFont) {
	          canBreak = true;
	         }
	        } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {
	         useTable = true;
	         canBreak = true;
	        }
	        if (useTable) {
	         potentialTable = {
	          platformId: platformId,
	          encodingId: encodingId,
	          offset: offset
	         };
	        }
	        if (canBreak) {
	         break;
	        }
	       }
	       if (potentialTable) {
	        font.pos = start + potentialTable.offset;
	       }
	       if (!potentialTable || font.peekByte() === -1) {
	        warn('Could not find a preferred cmap table.');
	        return {
	         platformId: -1,
	         encodingId: -1,
	         mappings: [],
	         hasShortCmap: false
	        };
	       }
	       var format = font.getUint16();
	       var length = font.getUint16();
	       var language = font.getUint16();
	       var hasShortCmap = false;
	       var mappings = [];
	       var j, glyphId;
	       if (format === 0) {
	        for (j = 0; j < 256; j++) {
	         var index = font.getByte();
	         if (!index) {
	          continue;
	         }
	         mappings.push({
	          charCode: j,
	          glyphId: index
	         });
	        }
	        hasShortCmap = true;
	       } else if (format === 4) {
	        var segCount = font.getUint16() >> 1;
	        font.getBytes(6);
	        var segIndex, segments = [];
	        for (segIndex = 0; segIndex < segCount; segIndex++) {
	         segments.push({ end: font.getUint16() });
	        }
	        font.getUint16();
	        for (segIndex = 0; segIndex < segCount; segIndex++) {
	         segments[segIndex].start = font.getUint16();
	        }
	        for (segIndex = 0; segIndex < segCount; segIndex++) {
	         segments[segIndex].delta = font.getUint16();
	        }
	        var offsetsCount = 0;
	        for (segIndex = 0; segIndex < segCount; segIndex++) {
	         segment = segments[segIndex];
	         var rangeOffset = font.getUint16();
	         if (!rangeOffset) {
	          segment.offsetIndex = -1;
	          continue;
	         }
	         var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);
	         segment.offsetIndex = offsetIndex;
	         offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);
	        }
	        var offsets = [];
	        for (j = 0; j < offsetsCount; j++) {
	         offsets.push(font.getUint16());
	        }
	        for (segIndex = 0; segIndex < segCount; segIndex++) {
	         segment = segments[segIndex];
	         start = segment.start;
	         var end = segment.end;
	         var delta = segment.delta;
	         offsetIndex = segment.offsetIndex;
	         for (j = start; j <= end; j++) {
	          if (j === 0xFFFF) {
	           continue;
	          }
	          glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];
	          glyphId = glyphId + delta & 0xFFFF;
	          if (glyphId === 0) {
	           continue;
	          }
	          mappings.push({
	           charCode: j,
	           glyphId: glyphId
	          });
	         }
	        }
	       } else if (format === 6) {
	        var firstCode = font.getUint16();
	        var entryCount = font.getUint16();
	        for (j = 0; j < entryCount; j++) {
	         glyphId = font.getUint16();
	         var charCode = firstCode + j;
	         mappings.push({
	          charCode: charCode,
	          glyphId: glyphId
	         });
	        }
	       } else {
	        warn('cmap table has unsupported format: ' + format);
	        return {
	         platformId: -1,
	         encodingId: -1,
	         mappings: [],
	         hasShortCmap: false
	        };
	       }
	       mappings.sort(function (a, b) {
	        return a.charCode - b.charCode;
	       });
	       for (i = 1; i < mappings.length; i++) {
	        if (mappings[i - 1].charCode === mappings[i].charCode) {
	         mappings.splice(i, 1);
	         i--;
	        }
	       }
	       return {
	        platformId: potentialTable.platformId,
	        encodingId: potentialTable.encodingId,
	        mappings: mappings,
	        hasShortCmap: hasShortCmap
	       };
	      }
	      function sanitizeMetrics(font, header, metrics, numGlyphs) {
	       if (!header) {
	        if (metrics) {
	         metrics.data = null;
	        }
	        return;
	       }
	       font.pos = (font.start ? font.start : 0) + header.offset;
	       font.pos += header.length - 2;
	       var numOfMetrics = font.getUint16();
	       if (numOfMetrics > numGlyphs) {
	        info('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');
	        numOfMetrics = numGlyphs;
	        header.data[34] = (numOfMetrics & 0xff00) >> 8;
	        header.data[35] = numOfMetrics & 0x00ff;
	       }
	       var numOfSidebearings = numGlyphs - numOfMetrics;
	       var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);
	       if (numMissing > 0) {
	        var entries = new Uint8Array(metrics.length + numMissing * 2);
	        entries.set(metrics.data);
	        metrics.data = entries;
	       }
	      }
	      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {
	       if (sourceEnd - sourceStart <= 12) {
	        return 0;
	       }
	       var glyf = source.subarray(sourceStart, sourceEnd);
	       var contoursCount = glyf[0] << 8 | glyf[1];
	       if (contoursCount & 0x8000) {
	        dest.set(glyf, destStart);
	        return glyf.length;
	       }
	       var i, j = 10, flagsCount = 0;
	       for (i = 0; i < contoursCount; i++) {
	        var endPoint = glyf[j] << 8 | glyf[j + 1];
	        flagsCount = endPoint + 1;
	        j += 2;
	       }
	       var instructionsStart = j;
	       var instructionsLength = glyf[j] << 8 | glyf[j + 1];
	       j += 2 + instructionsLength;
	       var instructionsEnd = j;
	       var coordinatesLength = 0;
	       for (i = 0; i < flagsCount; i++) {
	        var flag = glyf[j++];
	        if (flag & 0xC0) {
	         glyf[j - 1] = flag & 0x3F;
	        }
	        var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);
	        coordinatesLength += xyLength;
	        if (flag & 8) {
	         var repeat = glyf[j++];
	         i += repeat;
	         coordinatesLength += repeat * xyLength;
	        }
	       }
	       if (coordinatesLength === 0) {
	        return 0;
	       }
	       var glyphDataLength = j + coordinatesLength;
	       if (glyphDataLength > glyf.length) {
	        return 0;
	       }
	       if (!hintsValid && instructionsLength > 0) {
	        dest.set(glyf.subarray(0, instructionsStart), destStart);
	        dest.set([
	         0,
	         0
	        ], destStart + instructionsStart);
	        dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);
	        glyphDataLength -= instructionsLength;
	        if (glyf.length - glyphDataLength > 3) {
	         glyphDataLength = glyphDataLength + 3 & ~3;
	        }
	        return glyphDataLength;
	       }
	       if (glyf.length - glyphDataLength > 3) {
	        glyphDataLength = glyphDataLength + 3 & ~3;
	        dest.set(glyf.subarray(0, glyphDataLength), destStart);
	        return glyphDataLength;
	       }
	       dest.set(glyf, destStart);
	       return glyf.length;
	      }
	      function sanitizeHead(head, numGlyphs, locaLength) {
	       var data = head.data;
	       var version = int32(data[0], data[1], data[2], data[3]);
	       if (version >> 16 !== 1) {
	        info('Attempting to fix invalid version in head table: ' + version);
	        data[0] = 0;
	        data[1] = 1;
	        data[2] = 0;
	        data[3] = 0;
	       }
	       var indexToLocFormat = int16(data[50], data[51]);
	       if (indexToLocFormat < 0 || indexToLocFormat > 1) {
	        info('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);
	        var numGlyphsPlusOne = numGlyphs + 1;
	        if (locaLength === numGlyphsPlusOne << 1) {
	         data[50] = 0;
	         data[51] = 0;
	        } else if (locaLength === numGlyphsPlusOne << 2) {
	         data[50] = 0;
	         data[51] = 1;
	        } else {
	         warn('Could not fix indexToLocFormat: ' + indexToLocFormat);
	        }
	       }
	      }
	      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry) {
	       var itemSize, itemDecode, itemEncode;
	       if (isGlyphLocationsLong) {
	        itemSize = 4;
	        itemDecode = function fontItemDecodeLong(data, offset) {
	         return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];
	        };
	        itemEncode = function fontItemEncodeLong(data, offset, value) {
	         data[offset] = value >>> 24 & 0xFF;
	         data[offset + 1] = value >> 16 & 0xFF;
	         data[offset + 2] = value >> 8 & 0xFF;
	         data[offset + 3] = value & 0xFF;
	        };
	       } else {
	        itemSize = 2;
	        itemDecode = function fontItemDecode(data, offset) {
	         return data[offset] << 9 | data[offset + 1] << 1;
	        };
	        itemEncode = function fontItemEncode(data, offset, value) {
	         data[offset] = value >> 9 & 0xFF;
	         data[offset + 1] = value >> 1 & 0xFF;
	        };
	       }
	       var locaData = loca.data;
	       var locaDataSize = itemSize * (1 + numGlyphs);
	       if (locaData.length !== locaDataSize) {
	        locaData = new Uint8Array(locaDataSize);
	        locaData.set(loca.data.subarray(0, locaDataSize));
	        loca.data = locaData;
	       }
	       var oldGlyfData = glyf.data;
	       var oldGlyfDataLength = oldGlyfData.length;
	       var newGlyfData = new Uint8Array(oldGlyfDataLength);
	       var startOffset = itemDecode(locaData, 0);
	       var writeOffset = 0;
	       var missingGlyphData = Object.create(null);
	       itemEncode(locaData, 0, writeOffset);
	       var i, j;
	       for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {
	        var endOffset = itemDecode(locaData, j);
	        if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {
	         endOffset = oldGlyfDataLength;
	        }
	        if (endOffset > oldGlyfDataLength) {
	         itemEncode(locaData, j, writeOffset);
	         startOffset = endOffset;
	         continue;
	        }
	        if (startOffset === endOffset) {
	         missingGlyphData[i] = true;
	        }
	        var newLength = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);
	        writeOffset += newLength;
	        itemEncode(locaData, j, writeOffset);
	        startOffset = endOffset;
	       }
	       if (writeOffset === 0) {
	        var simpleGlyph = new Uint8Array([
	         0,
	         1,
	         0,
	         0,
	         0,
	         0,
	         0,
	         0,
	         0,
	         0,
	         0,
	         0,
	         0,
	         0,
	         49,
	         0
	        ]);
	        for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {
	         itemEncode(locaData, j, simpleGlyph.length);
	        }
	        glyf.data = simpleGlyph;
	        return missingGlyphData;
	       }
	       if (dupFirstEntry) {
	        var firstEntryLength = itemDecode(locaData, itemSize);
	        if (newGlyfData.length > firstEntryLength + writeOffset) {
	         glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);
	        } else {
	         glyf.data = new Uint8Array(firstEntryLength + writeOffset);
	         glyf.data.set(newGlyfData.subarray(0, writeOffset));
	        }
	        glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);
	        itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);
	       } else {
	        glyf.data = newGlyfData.subarray(0, writeOffset);
	       }
	       return missingGlyphData;
	      }
	      function readPostScriptTable(post, properties, maxpNumGlyphs) {
	       var start = (font.start ? font.start : 0) + post.offset;
	       font.pos = start;
	       var length = post.length, end = start + length;
	       var version = font.getInt32();
	       font.getBytes(28);
	       var glyphNames;
	       var valid = true;
	       var i;
	       switch (version) {
	       case 0x00010000:
	        glyphNames = MacStandardGlyphOrdering;
	        break;
	       case 0x00020000:
	        var numGlyphs = font.getUint16();
	        if (numGlyphs !== maxpNumGlyphs) {
	         valid = false;
	         break;
	        }
	        var glyphNameIndexes = [];
	        for (i = 0; i < numGlyphs; ++i) {
	         var index = font.getUint16();
	         if (index >= 32768) {
	          valid = false;
	          break;
	         }
	         glyphNameIndexes.push(index);
	        }
	        if (!valid) {
	         break;
	        }
	        var customNames = [];
	        var strBuf = [];
	        while (font.pos < end) {
	         var stringLength = font.getByte();
	         strBuf.length = stringLength;
	         for (i = 0; i < stringLength; ++i) {
	          strBuf[i] = String.fromCharCode(font.getByte());
	         }
	         customNames.push(strBuf.join(''));
	        }
	        glyphNames = [];
	        for (i = 0; i < numGlyphs; ++i) {
	         var j = glyphNameIndexes[i];
	         if (j < 258) {
	          glyphNames.push(MacStandardGlyphOrdering[j]);
	          continue;
	         }
	         glyphNames.push(customNames[j - 258]);
	        }
	        break;
	       case 0x00030000:
	        break;
	       default:
	        warn('Unknown/unsupported post table version ' + version);
	        valid = false;
	        if (properties.defaultEncoding) {
	         glyphNames = properties.defaultEncoding;
	        }
	        break;
	       }
	       properties.glyphNames = glyphNames;
	       return valid;
	      }
	      function readNameTable(nameTable) {
	       var start = (font.start ? font.start : 0) + nameTable.offset;
	       font.pos = start;
	       var names = [
	        [],
	        []
	       ];
	       var length = nameTable.length, end = start + length;
	       var format = font.getUint16();
	       var FORMAT_0_HEADER_LENGTH = 6;
	       if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {
	        return names;
	       }
	       var numRecords = font.getUint16();
	       var stringsStart = font.getUint16();
	       var records = [];
	       var NAME_RECORD_LENGTH = 12;
	       var i, ii;
	       for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {
	        var r = {
	         platform: font.getUint16(),
	         encoding: font.getUint16(),
	         language: font.getUint16(),
	         name: font.getUint16(),
	         length: font.getUint16(),
	         offset: font.getUint16()
	        };
	        if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {
	         records.push(r);
	        }
	       }
	       for (i = 0, ii = records.length; i < ii; i++) {
	        var record = records[i];
	        if (record.length <= 0) {
	         continue;
	        }
	        var pos = start + stringsStart + record.offset;
	        if (pos + record.length > end) {
	         continue;
	        }
	        font.pos = pos;
	        var nameIndex = record.name;
	        if (record.encoding) {
	         var str = '';
	         for (var j = 0, jj = record.length; j < jj; j += 2) {
	          str += String.fromCharCode(font.getUint16());
	         }
	         names[1][nameIndex] = str;
	        } else {
	         names[0][nameIndex] = bytesToString(font.getBytes(record.length));
	        }
	       }
	       return names;
	      }
	      var TTOpsStackDeltas = [
	       0,
	       0,
	       0,
	       0,
	       0,
	       0,
	       0,
	       0,
	       -2,
	       -2,
	       -2,
	       -2,
	       0,
	       0,
	       -2,
	       -5,
	       -1,
	       -1,
	       -1,
	       -1,
	       -1,
	       -1,
	       -1,
	       -1,
	       0,
	       0,
	       -1,
	       0,
	       -1,
	       -1,
	       -1,
	       -1,
	       1,
	       -1,
	       -999,
	       0,
	       1,
	       0,
	       -1,
	       -2,
	       0,
	       -1,
	       -2,
	       -1,
	       -1,
	       0,
	       -1,
	       -1,
	       0,
	       0,
	       -999,
	       -999,
	       -1,
	       -1,
	       -1,
	       -1,
	       -2,
	       -999,
	       -2,
	       -2,
	       -999,
	       0,
	       -2,
	       -2,
	       0,
	       0,
	       -2,
	       0,
	       -2,
	       0,
	       0,
	       0,
	       -2,
	       -1,
	       -1,
	       1,
	       1,
	       0,
	       0,
	       -1,
	       -1,
	       -1,
	       -1,
	       -1,
	       -1,
	       -1,
	       0,
	       0,
	       -1,
	       0,
	       -1,
	       -1,
	       0,
	       -999,
	       -1,
	       -1,
	       -1,
	       -1,
	       -1,
	       -1,
	       0,
	       0,
	       0,
	       0,
	       0,
	       0,
	       0,
	       0,
	       0,
	       0,
	       0,
	       0,
	       -2,
	       -999,
	       -999,
	       -999,
	       -999,
	       -999,
	       -1,
	       -1,
	       -2,
	       -2,
	       0,
	       0,
	       0,
	       0,
	       -1,
	       -1,
	       -999,
	       -2,
	       -2,
	       0,
	       0,
	       -1,
	       -2,
	       -2,
	       0,
	       0,
	       0,
	       -1,
	       -1,
	       -1,
	       -2
	      ];
	      function sanitizeTTProgram(table, ttContext) {
	       var data = table.data;
	       var i = 0, j, n, b, funcId, pc, lastEndf = 0, lastDeff = 0;
	       var stack = [];
	       var callstack = [];
	       var functionsCalled = [];
	       var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;
	       var inFDEF = false, ifLevel = 0, inELSE = 0;
	       for (var ii = data.length; i < ii;) {
	        var op = data[i++];
	        if (op === 0x40) {
	         n = data[i++];
	         if (inFDEF || inELSE) {
	          i += n;
	         } else {
	          for (j = 0; j < n; j++) {
	           stack.push(data[i++]);
	          }
	         }
	        } else if (op === 0x41) {
	         n = data[i++];
	         if (inFDEF || inELSE) {
	          i += n * 2;
	         } else {
	          for (j = 0; j < n; j++) {
	           b = data[i++];
	           stack.push(b << 8 | data[i++]);
	          }
	         }
	        } else if ((op & 0xF8) === 0xB0) {
	         n = op - 0xB0 + 1;
	         if (inFDEF || inELSE) {
	          i += n;
	         } else {
	          for (j = 0; j < n; j++) {
	           stack.push(data[i++]);
	          }
	         }
	        } else if ((op & 0xF8) === 0xB8) {
	         n = op - 0xB8 + 1;
	         if (inFDEF || inELSE) {
	          i += n * 2;
	         } else {
	          for (j = 0; j < n; j++) {
	           b = data[i++];
	           stack.push(b << 8 | data[i++]);
	          }
	         }
	        } else if (op === 0x2B && !tooComplexToFollowFunctions) {
	         if (!inFDEF && !inELSE) {
	          funcId = stack[stack.length - 1];
	          ttContext.functionsUsed[funcId] = true;
	          if (funcId in ttContext.functionsStackDeltas) {
	           stack.length += ttContext.functionsStackDeltas[funcId];
	          } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {
	           callstack.push({
	            data: data,
	            i: i,
	            stackTop: stack.length - 1
	           });
	           functionsCalled.push(funcId);
	           pc = ttContext.functionsDefined[funcId];
	           if (!pc) {
	            warn('TT: CALL non-existent function');
	            ttContext.hintsValid = false;
	            return;
	           }
	           data = pc.data;
	           i = pc.i;
	          }
	         }
	        } else if (op === 0x2C && !tooComplexToFollowFunctions) {
	         if (inFDEF || inELSE) {
	          warn('TT: nested FDEFs not allowed');
	          tooComplexToFollowFunctions = true;
	         }
	         inFDEF = true;
	         lastDeff = i;
	         funcId = stack.pop();
	         ttContext.functionsDefined[funcId] = {
	          data: data,
	          i: i
	         };
	        } else if (op === 0x2D) {
	         if (inFDEF) {
	          inFDEF = false;
	          lastEndf = i;
	         } else {
	          pc = callstack.pop();
	          if (!pc) {
	           warn('TT: ENDF bad stack');
	           ttContext.hintsValid = false;
	           return;
	          }
	          funcId = functionsCalled.pop();
	          data = pc.data;
	          i = pc.i;
	          ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;
	         }
	        } else if (op === 0x89) {
	         if (inFDEF || inELSE) {
	          warn('TT: nested IDEFs not allowed');
	          tooComplexToFollowFunctions = true;
	         }
	         inFDEF = true;
	         lastDeff = i;
	        } else if (op === 0x58) {
	         ++ifLevel;
	        } else if (op === 0x1B) {
	         inELSE = ifLevel;
	        } else if (op === 0x59) {
	         if (inELSE === ifLevel) {
	          inELSE = 0;
	         }
	         --ifLevel;
	        } else if (op === 0x1C) {
	         if (!inFDEF && !inELSE) {
	          var offset = stack[stack.length - 1];
	          if (offset > 0) {
	           i += offset - 1;
	          }
	         }
	        }
	        if (!inFDEF && !inELSE) {
	         var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;
	         if (op >= 0x71 && op <= 0x75) {
	          n = stack.pop();
	          if (!isNaN(n)) {
	           stackDelta = -n * 2;
	          }
	         }
	         while (stackDelta < 0 && stack.length > 0) {
	          stack.pop();
	          stackDelta++;
	         }
	         while (stackDelta > 0) {
	          stack.push(NaN);
	          stackDelta--;
	         }
	        }
	       }
	       ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;
	       var content = [data];
	       if (i > data.length) {
	        content.push(new Uint8Array(i - data.length));
	       }
	       if (lastDeff > lastEndf) {
	        warn('TT: complementing a missing function tail');
	        content.push(new Uint8Array([
	         0x22,
	         0x2D
	        ]));
	       }
	       foldTTTable(table, content);
	      }
	      function checkInvalidFunctions(ttContext, maxFunctionDefs) {
	       if (ttContext.tooComplexToFollowFunctions) {
	        return;
	       }
	       if (ttContext.functionsDefined.length > maxFunctionDefs) {
	        warn('TT: more functions defined than expected');
	        ttContext.hintsValid = false;
	        return;
	       }
	       for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {
	        if (j > maxFunctionDefs) {
	         warn('TT: invalid function id: ' + j);
	         ttContext.hintsValid = false;
	         return;
	        }
	        if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {
	         warn('TT: undefined function: ' + j);
	         ttContext.hintsValid = false;
	         return;
	        }
	       }
	      }
	      function foldTTTable(table, content) {
	       if (content.length > 1) {
	        var newLength = 0;
	        var j, jj;
	        for (j = 0, jj = content.length; j < jj; j++) {
	         newLength += content[j].length;
	        }
	        newLength = newLength + 3 & ~3;
	        var result = new Uint8Array(newLength);
	        var pos = 0;
	        for (j = 0, jj = content.length; j < jj; j++) {
	         result.set(content[j], pos);
	         pos += content[j].length;
	        }
	        table.data = result;
	        table.length = newLength;
	       }
	      }
	      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {
	       var ttContext = {
	        functionsDefined: [],
	        functionsUsed: [],
	        functionsStackDeltas: [],
	        tooComplexToFollowFunctions: false,
	        hintsValid: true
	       };
	       if (fpgm) {
	        sanitizeTTProgram(fpgm, ttContext);
	       }
	       if (prep) {
	        sanitizeTTProgram(prep, ttContext);
	       }
	       if (fpgm) {
	        checkInvalidFunctions(ttContext, maxFunctionDefs);
	       }
	       if (cvt && cvt.length & 1) {
	        var cvtData = new Uint8Array(cvt.length + 1);
	        cvtData.set(cvt.data);
	        cvt.data = cvtData;
	       }
	       return ttContext.hintsValid;
	      }
	      font = new Stream(new Uint8Array(font.getBytes()));
	      var VALID_TABLES = [
	       'OS/2',
	       'cmap',
	       'head',
	       'hhea',
	       'hmtx',
	       'maxp',
	       'name',
	       'post',
	       'loca',
	       'glyf',
	       'fpgm',
	       'prep',
	       'cvt ',
	       'CFF '
	      ];
	      var header = readOpenTypeHeader(font);
	      var numTables = header.numTables;
	      var cff, cffFile;
	      var tables = Object.create(null);
	      tables['OS/2'] = null;
	      tables['cmap'] = null;
	      tables['head'] = null;
	      tables['hhea'] = null;
	      tables['hmtx'] = null;
	      tables['maxp'] = null;
	      tables['name'] = null;
	      tables['post'] = null;
	      var table;
	      for (var i = 0; i < numTables; i++) {
	       table = readTableEntry(font);
	       if (VALID_TABLES.indexOf(table.tag) < 0) {
	        continue;
	       }
	       if (table.length === 0) {
	        continue;
	       }
	       tables[table.tag] = table;
	      }
	      var isTrueType = !tables['CFF '];
	      if (!isTrueType) {
	       if (header.version === 'OTTO' && !properties.composite || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {
	        cffFile = new Stream(tables['CFF '].data);
	        cff = new CFFFont(cffFile, properties);
	        adjustWidths(properties);
	        return this.convert(name, cff, properties);
	       }
	       delete tables['glyf'];
	       delete tables['loca'];
	       delete tables['fpgm'];
	       delete tables['prep'];
	       delete tables['cvt '];
	       this.isOpenType = true;
	      } else {
	       if (!tables['loca']) {
	        error('Required "loca" table is not found');
	       }
	       if (!tables['glyf']) {
	        warn('Required "glyf" table is not found -- trying to recover.');
	        tables['glyf'] = {
	         tag: 'glyf',
	         data: new Uint8Array(0)
	        };
	       }
	       this.isOpenType = false;
	      }
	      if (!tables['maxp']) {
	       error('Required "maxp" table is not found');
	      }
	      font.pos = (font.start || 0) + tables['maxp'].offset;
	      var version = font.getInt32();
	      var numGlyphs = font.getUint16();
	      var maxFunctionDefs = 0;
	      if (version >= 0x00010000 && tables['maxp'].length >= 22) {
	       font.pos += 8;
	       var maxZones = font.getUint16();
	       if (maxZones > 2) {
	        tables['maxp'].data[14] = 0;
	        tables['maxp'].data[15] = 2;
	       }
	       font.pos += 4;
	       maxFunctionDefs = font.getUint16();
	      }
	      var dupFirstEntry = false;
	      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\u0000') {
	       dupFirstEntry = true;
	       numGlyphs++;
	       tables['maxp'].data[4] = numGlyphs >> 8;
	       tables['maxp'].data[5] = numGlyphs & 255;
	      }
	      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);
	      if (!hintsValid) {
	       delete tables['fpgm'];
	       delete tables['prep'];
	       delete tables['cvt '];
	      }
	      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);
	      if (!tables['head']) {
	       error('Required "head" table is not found');
	      }
	      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);
	      var missingGlyphs = Object.create(null);
	      if (isTrueType) {
	       var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);
	       missingGlyphs = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry);
	      }
	      if (!tables['hhea']) {
	       error('Required "hhea" table is not found');
	      }
	      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {
	       tables['hhea'].data[10] = 0xFF;
	       tables['hhea'].data[11] = 0xFF;
	      }
	      var metricsOverride = {
	       unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),
	       yMax: int16(tables['head'].data[42], tables['head'].data[43]),
	       yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),
	       ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),
	       descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])
	      };
	      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;
	      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;
	      if (tables['post']) {
	       var valid = readPostScriptTable(tables['post'], properties, numGlyphs);
	       if (!valid) {
	        tables['post'] = null;
	       }
	      }
	      var charCodeToGlyphId = [], charCode;
	      var toUnicode = properties.toUnicode, widths = properties.widths;
	      var skipToUnicode = toUnicode instanceof IdentityToUnicodeMap || toUnicode.length === 0x10000;
	      function hasGlyph(glyphId, charCode, widthCode) {
	       if (!missingGlyphs[glyphId]) {
	        return true;
	       }
	       if (!skipToUnicode && charCode >= 0 && toUnicode.has(charCode)) {
	        return true;
	       }
	       if (widths && widthCode >= 0 && isNum(widths[widthCode])) {
	        return true;
	       }
	       return false;
	      }
	      if (properties.composite) {
	       var cidToGidMap = properties.cidToGidMap || [];
	       var isCidToGidMapEmpty = cidToGidMap.length === 0;
	       properties.cMap.forEach(function (charCode, cid) {
	        assert(cid <= 0xffff, 'Max size of CID is 65,535');
	        var glyphId = -1;
	        if (isCidToGidMapEmpty) {
	         glyphId = cid;
	        } else if (cidToGidMap[cid] !== undefined) {
	         glyphId = cidToGidMap[cid];
	        }
	        if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId, charCode, cid)) {
	         charCodeToGlyphId[charCode] = glyphId;
	        }
	       });
	       if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {
	        charCodeToGlyphId[0] = numGlyphs - 1;
	       }
	      } else {
	       var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);
	       var cmapPlatformId = cmapTable.platformId;
	       var cmapEncodingId = cmapTable.encodingId;
	       var cmapMappings = cmapTable.mappings;
	       var cmapMappingsLength = cmapMappings.length;
	       if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!getEncoding(properties.baseEncodingName)) {
	        var baseEncoding = [];
	        if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {
	         baseEncoding = getEncoding(properties.baseEncodingName);
	        }
	        var glyphsUnicodeMap = getGlyphsUnicode();
	        for (charCode = 0; charCode < 256; charCode++) {
	         var glyphName, standardGlyphName;
	         if (this.differences && charCode in this.differences) {
	          glyphName = this.differences[charCode];
	         } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {
	          glyphName = baseEncoding[charCode];
	         } else {
	          glyphName = StandardEncoding[charCode];
	         }
	         if (!glyphName) {
	          continue;
	         }
	         standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);
	         var unicodeOrCharCode, isUnicode = false;
	         if (cmapPlatformId === 3 && cmapEncodingId === 1) {
	          unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];
	          isUnicode = true;
	         } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {
	          unicodeOrCharCode = MacRomanEncoding.indexOf(standardGlyphName);
	         }
	         var found = false;
	         for (i = 0; i < cmapMappingsLength; ++i) {
	          if (cmapMappings[i].charCode !== unicodeOrCharCode) {
	           continue;
	          }
	          var code = isUnicode ? charCode : unicodeOrCharCode;
	          if (hasGlyph(cmapMappings[i].glyphId, code, -1)) {
	           charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;
	           found = true;
	           break;
	          }
	         }
	         if (!found && properties.glyphNames) {
	          var glyphId = properties.glyphNames.indexOf(glyphName);
	          if (glyphId === -1 && standardGlyphName !== glyphName) {
	           glyphId = properties.glyphNames.indexOf(standardGlyphName);
	          }
	          if (glyphId > 0 && hasGlyph(glyphId, -1, -1)) {
	           charCodeToGlyphId[charCode] = glyphId;
	           found = true;
	          }
	         }
	         if (!found) {
	          charCodeToGlyphId[charCode] = 0;
	         }
	        }
	       } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {
	        for (i = 0; i < cmapMappingsLength; ++i) {
	         charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;
	        }
	       } else {
	        for (i = 0; i < cmapMappingsLength; ++i) {
	         charCode = cmapMappings[i].charCode & 0xFF;
	         charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;
	        }
	       }
	      }
	      if (charCodeToGlyphId.length === 0) {
	       charCodeToGlyphId[0] = 0;
	      }
	      var newMapping = adjustMapping(charCodeToGlyphId, properties);
	      this.toFontChar = newMapping.toFontChar;
	      tables['cmap'] = {
	       tag: 'cmap',
	       data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)
	      };
	      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {
	       tables['OS/2'] = {
	        tag: 'OS/2',
	        data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)
	       };
	      }
	      if (!tables['post']) {
	       tables['post'] = {
	        tag: 'post',
	        data: createPostTable(properties)
	       };
	      }
	      if (!isTrueType) {
	       try {
	        cffFile = new Stream(tables['CFF '].data);
	        var parser = new CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);
	        cff = parser.parse();
	        var compiler = new CFFCompiler(cff);
	        tables['CFF '].data = compiler.compile();
	       } catch (e) {
	        warn('Failed to compile font ' + properties.loadedName);
	       }
	      }
	      if (!tables['name']) {
	       tables['name'] = {
	        tag: 'name',
	        data: createNameTable(this.name)
	       };
	      } else {
	       var namePrototype = readNameTable(tables['name']);
	       tables['name'].data = createNameTable(name, namePrototype);
	      }
	      var builder = new OpenTypeFileBuilder(header.version);
	      for (var tableTag in tables) {
	       builder.addTable(tableTag, tables[tableTag].data);
	      }
	      return builder.toArray();
	     },
	     convert: function Font_convert(fontName, font, properties) {
	      properties.fixedPitch = false;
	      if (properties.builtInEncoding) {
	       adjustToUnicode(properties, properties.builtInEncoding);
	      }
	      var mapping = font.getGlyphMapping(properties);
	      var newMapping = adjustMapping(mapping, properties);
	      this.toFontChar = newMapping.toFontChar;
	      var numGlyphs = font.numGlyphs;
	      function getCharCodes(charCodeToGlyphId, glyphId) {
	       var charCodes = null;
	       for (var charCode in charCodeToGlyphId) {
	        if (glyphId === charCodeToGlyphId[charCode]) {
	         if (!charCodes) {
	          charCodes = [];
	         }
	         charCodes.push(charCode | 0);
	        }
	       }
	       return charCodes;
	      }
	      function createCharCode(charCodeToGlyphId, glyphId) {
	       for (var charCode in charCodeToGlyphId) {
	        if (glyphId === charCodeToGlyphId[charCode]) {
	         return charCode | 0;
	        }
	       }
	       newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;
	       return newMapping.nextAvailableFontCharCode++;
	      }
	      var seacs = font.seacs;
	      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {
	       var matrix = properties.fontMatrix || FONT_IDENTITY_MATRIX;
	       var charset = font.getCharset();
	       var seacMap = Object.create(null);
	       for (var glyphId in seacs) {
	        glyphId |= 0;
	        var seac = seacs[glyphId];
	        var baseGlyphName = StandardEncoding[seac[2]];
	        var accentGlyphName = StandardEncoding[seac[3]];
	        var baseGlyphId = charset.indexOf(baseGlyphName);
	        var accentGlyphId = charset.indexOf(accentGlyphName);
	        if (baseGlyphId < 0 || accentGlyphId < 0) {
	         continue;
	        }
	        var accentOffset = {
	         x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],
	         y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]
	        };
	        var charCodes = getCharCodes(mapping, glyphId);
	        if (!charCodes) {
	         continue;
	        }
	        for (var i = 0, ii = charCodes.length; i < ii; i++) {
	         var charCode = charCodes[i];
	         var charCodeToGlyphId = newMapping.charCodeToGlyphId;
	         var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);
	         var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);
	         seacMap[charCode] = {
	          baseFontCharCode: baseFontCharCode,
	          accentFontCharCode: accentFontCharCode,
	          accentOffset: accentOffset
	         };
	        }
	       }
	       properties.seacMap = seacMap;
	      }
	      var unitsPerEm = 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];
	      var builder = new OpenTypeFileBuilder('\x4F\x54\x54\x4F');
	      builder.addTable('CFF ', font.data);
	      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));
	      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));
	      builder.addTable('head', '\x00\x01\x00\x00' + '\x00\x00\x10\x00' + '\x00\x00\x00\x00' + '\x5F\x0F\x3C\xF5' + '\x00\x00' + safeString16(unitsPerEm) + '\x00\x00\x00\x00\x9e\x0b\x7e\x27' + '\x00\x00\x00\x00\x9e\x0b\x7e\x27' + '\x00\x00' + safeString16(properties.descent) + '\x0F\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\x00\x11' + '\x00\x00' + '\x00\x00' + '\x00\x00');
	      builder.addTable('hhea', '\x00\x01\x00\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\x00\x00' + '\xFF\xFF' + '\x00\x00' + '\x00\x00' + '\x00\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\x00\x00' + '\x00\x00' + '\x00\x00' + '\x00\x00' + '\x00\x00' + '\x00\x00' + string16(numGlyphs));
	      builder.addTable('hmtx', function fontFieldsHmtx() {
	       var charstrings = font.charstrings;
	       var cffWidths = font.cff ? font.cff.widths : null;
	       var hmtx = '\x00\x00\x00\x00';
	       for (var i = 1, ii = numGlyphs; i < ii; i++) {
	        var width = 0;
	        if (charstrings) {
	         var charstring = charstrings[i - 1];
	         width = 'width' in charstring ? charstring.width : 0;
	        } else if (cffWidths) {
	         width = Math.ceil(cffWidths[i] || 0);
	        }
	        hmtx += string16(width) + string16(0);
	       }
	       return hmtx;
	      }());
	      builder.addTable('maxp', '\x00\x00\x50\x00' + string16(numGlyphs));
	      builder.addTable('name', createNameTable(fontName));
	      builder.addTable('post', createPostTable(properties));
	      return builder.toArray();
	     },
	     get spaceWidth() {
	      if ('_shadowWidth' in this) {
	       return this._shadowWidth;
	      }
	      var possibleSpaceReplacements = [
	       'space',
	       'minus',
	       'one',
	       'i',
	       'I'
	      ];
	      var width;
	      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {
	       var glyphName = possibleSpaceReplacements[i];
	       if (glyphName in this.widths) {
	        width = this.widths[glyphName];
	        break;
	       }
	       var glyphsUnicodeMap = getGlyphsUnicode();
	       var glyphUnicode = glyphsUnicodeMap[glyphName];
	       var charcode = 0;
	       if (this.composite) {
	        if (this.cMap.contains(glyphUnicode)) {
	         charcode = this.cMap.lookup(glyphUnicode);
	        }
	       }
	       if (!charcode && this.toUnicode) {
	        charcode = this.toUnicode.charCodeOf(glyphUnicode);
	       }
	       if (charcode <= 0) {
	        charcode = glyphUnicode;
	       }
	       width = this.widths[charcode];
	       if (width) {
	        break;
	       }
	      }
	      width = width || this.defaultWidth;
	      this._shadowWidth = width;
	      return width;
	     },
	     charToGlyph: function Font_charToGlyph(charcode, isSpace) {
	      var fontCharCode, width, operatorListId;
	      var widthCode = charcode;
	      if (this.cMap && this.cMap.contains(charcode)) {
	       widthCode = this.cMap.lookup(charcode);
	      }
	      width = this.widths[widthCode];
	      width = isNum(width) ? width : this.defaultWidth;
	      var vmetric = this.vmetrics && this.vmetrics[widthCode];
	      var unicode = this.toUnicode.get(charcode) || charcode;
	      if (typeof unicode === 'number') {
	       unicode = String.fromCharCode(unicode);
	      }
	      var isInFont = charcode in this.toFontChar;
	      fontCharCode = this.toFontChar[charcode] || charcode;
	      if (this.missingFile) {
	       fontCharCode = mapSpecialUnicodeValues(fontCharCode);
	      }
	      if (this.isType3Font) {
	       operatorListId = fontCharCode;
	      }
	      var accent = null;
	      if (this.seacMap && this.seacMap[charcode]) {
	       isInFont = true;
	       var seac = this.seacMap[charcode];
	       fontCharCode = seac.baseFontCharCode;
	       accent = {
	        fontChar: String.fromCharCode(seac.accentFontCharCode),
	        offset: seac.accentOffset
	       };
	      }
	      var fontChar = String.fromCharCode(fontCharCode);
	      var glyph = this.glyphCache[charcode];
	      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {
	       glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);
	       this.glyphCache[charcode] = glyph;
	      }
	      return glyph;
	     },
	     charsToGlyphs: function Font_charsToGlyphs(chars) {
	      var charsCache = this.charsCache;
	      var glyphs, glyph, charcode;
	      if (charsCache) {
	       glyphs = charsCache[chars];
	       if (glyphs) {
	        return glyphs;
	       }
	      }
	      if (!charsCache) {
	       charsCache = this.charsCache = Object.create(null);
	      }
	      glyphs = [];
	      var charsCacheKey = chars;
	      var i = 0, ii;
	      if (this.cMap) {
	       var c = Object.create(null);
	       while (i < chars.length) {
	        this.cMap.readCharCode(chars, i, c);
	        charcode = c.charcode;
	        var length = c.length;
	        i += length;
	        var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;
	        glyph = this.charToGlyph(charcode, isSpace);
	        glyphs.push(glyph);
	       }
	      } else {
	       for (i = 0, ii = chars.length; i < ii; ++i) {
	        charcode = chars.charCodeAt(i);
	        glyph = this.charToGlyph(charcode, charcode === 0x20);
	        glyphs.push(glyph);
	       }
	      }
	      return charsCache[charsCacheKey] = glyphs;
	     }
	    };
	    return Font;
	   }();
	   var ErrorFont = function ErrorFontClosure() {
	    function ErrorFont(error) {
	     this.error = error;
	     this.loadedName = 'g_font_error';
	     this.loading = false;
	    }
	    ErrorFont.prototype = {
	     charsToGlyphs: function ErrorFont_charsToGlyphs() {
	      return [];
	     },
	     exportData: function ErrorFont_exportData() {
	      return { error: this.error };
	     }
	    };
	    return ErrorFont;
	   }();
	   function type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {
	    var charCodeToGlyphId = Object.create(null);
	    var glyphId, charCode, baseEncoding;
	    var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);
	    if (properties.baseEncodingName) {
	     baseEncoding = getEncoding(properties.baseEncodingName);
	     for (charCode = 0; charCode < baseEncoding.length; charCode++) {
	      glyphId = glyphNames.indexOf(baseEncoding[charCode]);
	      if (glyphId >= 0) {
	       charCodeToGlyphId[charCode] = glyphId;
	      } else {
	       charCodeToGlyphId[charCode] = 0;
	      }
	     }
	    } else if (isSymbolicFont) {
	     for (charCode in builtInEncoding) {
	      charCodeToGlyphId[charCode] = builtInEncoding[charCode];
	     }
	    } else {
	     baseEncoding = StandardEncoding;
	     for (charCode = 0; charCode < baseEncoding.length; charCode++) {
	      glyphId = glyphNames.indexOf(baseEncoding[charCode]);
	      if (glyphId >= 0) {
	       charCodeToGlyphId[charCode] = glyphId;
	      } else {
	       charCodeToGlyphId[charCode] = 0;
	      }
	     }
	    }
	    var differences = properties.differences, glyphsUnicodeMap;
	    if (differences) {
	     for (charCode in differences) {
	      var glyphName = differences[charCode];
	      glyphId = glyphNames.indexOf(glyphName);
	      if (glyphId === -1) {
	       if (!glyphsUnicodeMap) {
	        glyphsUnicodeMap = getGlyphsUnicode();
	       }
	       var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);
	       if (standardGlyphName !== glyphName) {
	        glyphId = glyphNames.indexOf(standardGlyphName);
	       }
	      }
	      if (glyphId >= 0) {
	       charCodeToGlyphId[charCode] = glyphId;
	      } else {
	       charCodeToGlyphId[charCode] = 0;
	      }
	     }
	    }
	    return charCodeToGlyphId;
	   }
	   var Type1Font = function Type1FontClosure() {
	    function findBlock(streamBytes, signature, startIndex) {
	     var streamBytesLength = streamBytes.length;
	     var signatureLength = signature.length;
	     var scanLength = streamBytesLength - signatureLength;
	     var i = startIndex, j, found = false;
	     while (i < scanLength) {
	      j = 0;
	      while (j < signatureLength && streamBytes[i + j] === signature[j]) {
	       j++;
	      }
	      if (j >= signatureLength) {
	       i += j;
	       while (i < streamBytesLength && isSpace(streamBytes[i])) {
	        i++;
	       }
	       found = true;
	       break;
	      }
	      i++;
	     }
	     return {
	      found: found,
	      length: i
	     };
	    }
	    function getHeaderBlock(stream, suggestedLength) {
	     var EEXEC_SIGNATURE = [
	      0x65,
	      0x65,
	      0x78,
	      0x65,
	      0x63
	     ];
	     var streamStartPos = stream.pos;
	     var headerBytes, headerBytesLength, block;
	     try {
	      headerBytes = stream.getBytes(suggestedLength);
	      headerBytesLength = headerBytes.length;
	     } catch (ex) {
	      if (ex instanceof MissingDataException) {
	       throw ex;
	      }
	     }
	     if (headerBytesLength === suggestedLength) {
	      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);
	      if (block.found && block.length === suggestedLength) {
	       return {
	        stream: new Stream(headerBytes),
	        length: suggestedLength
	       };
	      }
	     }
	     warn('Invalid "Length1" property in Type1 font -- trying to recover.');
	     stream.pos = streamStartPos;
	     var SCAN_BLOCK_LENGTH = 2048;
	     var actualLength;
	     while (true) {
	      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);
	      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);
	      if (block.length === 0) {
	       break;
	      }
	      stream.pos += block.length;
	      if (block.found) {
	       actualLength = stream.pos - streamStartPos;
	       break;
	      }
	     }
	     stream.pos = streamStartPos;
	     if (actualLength) {
	      return {
	       stream: new Stream(stream.getBytes(actualLength)),
	       length: actualLength
	      };
	     }
	     warn('Unable to recover "Length1" property in Type1 font -- using as is.');
	     return {
	      stream: new Stream(stream.getBytes(suggestedLength)),
	      length: suggestedLength
	     };
	    }
	    function getEexecBlock(stream, suggestedLength) {
	     var eexecBytes = stream.getBytes();
	     return {
	      stream: new Stream(eexecBytes),
	      length: eexecBytes.length
	     };
	    }
	    function Type1Font(name, file, properties) {
	     var PFB_HEADER_SIZE = 6;
	     var headerBlockLength = properties.length1;
	     var eexecBlockLength = properties.length2;
	     var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);
	     var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;
	     if (pfbHeaderPresent) {
	      file.skip(PFB_HEADER_SIZE);
	      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];
	     }
	     var headerBlock = getHeaderBlock(file, headerBlockLength);
	     headerBlockLength = headerBlock.length;
	     var headerBlockParser = new Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);
	     headerBlockParser.extractFontHeader(properties);
	     if (pfbHeaderPresent) {
	      pfbHeader = file.getBytes(PFB_HEADER_SIZE);
	      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];
	     }
	     var eexecBlock = getEexecBlock(file, eexecBlockLength);
	     eexecBlockLength = eexecBlock.length;
	     var eexecBlockParser = new Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);
	     var data = eexecBlockParser.extractFontProgram();
	     for (var info in data.properties) {
	      properties[info] = data.properties[info];
	     }
	     var charstrings = data.charstrings;
	     var type2Charstrings = this.getType2Charstrings(charstrings);
	     var subrs = this.getType2Subrs(data.subrs);
	     this.charstrings = charstrings;
	     this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);
	     this.seacs = this.getSeacs(data.charstrings);
	    }
	    Type1Font.prototype = {
	     get numGlyphs() {
	      return this.charstrings.length + 1;
	     },
	     getCharset: function Type1Font_getCharset() {
	      var charset = ['.notdef'];
	      var charstrings = this.charstrings;
	      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {
	       charset.push(charstrings[glyphId].glyphName);
	      }
	      return charset;
	     },
	     getGlyphMapping: function Type1Font_getGlyphMapping(properties) {
	      var charstrings = this.charstrings;
	      var glyphNames = ['.notdef'], glyphId;
	      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {
	       glyphNames.push(charstrings[glyphId].glyphName);
	      }
	      var encoding = properties.builtInEncoding;
	      if (encoding) {
	       var builtInEncoding = Object.create(null);
	       for (var charCode in encoding) {
	        glyphId = glyphNames.indexOf(encoding[charCode]);
	        if (glyphId >= 0) {
	         builtInEncoding[charCode] = glyphId;
	        }
	       }
	      }
	      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);
	     },
	     getSeacs: function Type1Font_getSeacs(charstrings) {
	      var i, ii;
	      var seacMap = [];
	      for (i = 0, ii = charstrings.length; i < ii; i++) {
	       var charstring = charstrings[i];
	       if (charstring.seac) {
	        seacMap[i + 1] = charstring.seac;
	       }
	      }
	      return seacMap;
	     },
	     getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {
	      var type2Charstrings = [];
	      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {
	       type2Charstrings.push(type1Charstrings[i].charstring);
	      }
	      return type2Charstrings;
	     },
	     getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {
	      var bias = 0;
	      var count = type1Subrs.length;
	      if (count < 1133) {
	       bias = 107;
	      } else if (count < 33769) {
	       bias = 1131;
	      } else {
	       bias = 32768;
	      }
	      var type2Subrs = [];
	      var i;
	      for (i = 0; i < bias; i++) {
	       type2Subrs.push([0x0B]);
	      }
	      for (i = 0; i < count; i++) {
	       type2Subrs.push(type1Subrs[i]);
	      }
	      return type2Subrs;
	     },
	     wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {
	      var cff = new CFF();
	      cff.header = new CFFHeader(1, 0, 4, 4);
	      cff.names = [name];
	      var topDict = new CFFTopDict();
	      topDict.setByName('version', 391);
	      topDict.setByName('Notice', 392);
	      topDict.setByName('FullName', 393);
	      topDict.setByName('FamilyName', 394);
	      topDict.setByName('Weight', 395);
	      topDict.setByName('Encoding', null);
	      topDict.setByName('FontMatrix', properties.fontMatrix);
	      topDict.setByName('FontBBox', properties.bbox);
	      topDict.setByName('charset', null);
	      topDict.setByName('CharStrings', null);
	      topDict.setByName('Private', null);
	      cff.topDict = topDict;
	      var strings = new CFFStrings();
	      strings.add('Version 0.11');
	      strings.add('See original notice');
	      strings.add(name);
	      strings.add(name);
	      strings.add('Medium');
	      cff.strings = strings;
	      cff.globalSubrIndex = new CFFIndex();
	      var count = glyphs.length;
	      var charsetArray = [0];
	      var i, ii;
	      for (i = 0; i < count; i++) {
	       var index = CFFStandardStrings.indexOf(charstrings[i].glyphName);
	       if (index === -1) {
	        index = 0;
	       }
	       charsetArray.push(index >> 8 & 0xff, index & 0xff);
	      }
	      cff.charset = new CFFCharset(false, 0, [], charsetArray);
	      var charStringsIndex = new CFFIndex();
	      charStringsIndex.add([
	       0x8B,
	       0x0E
	      ]);
	      for (i = 0; i < count; i++) {
	       var glyph = glyphs[i];
	       if (glyph.length === 0) {
	        charStringsIndex.add([
	         0x8B,
	         0x0E
	        ]);
	        continue;
	       }
	       charStringsIndex.add(glyph);
	      }
	      cff.charStrings = charStringsIndex;
	      var privateDict = new CFFPrivateDict();
	      privateDict.setByName('Subrs', null);
	      var fields = [
	       'BlueValues',
	       'OtherBlues',
	       'FamilyBlues',
	       'FamilyOtherBlues',
	       'StemSnapH',
	       'StemSnapV',
	       'BlueShift',
	       'BlueFuzz',
	       'BlueScale',
	       'LanguageGroup',
	       'ExpansionFactor',
	       'ForceBold',
	       'StdHW',
	       'StdVW'
	      ];
	      for (i = 0, ii = fields.length; i < ii; i++) {
	       var field = fields[i];
	       if (!(field in properties.privateData)) {
	        continue;
	       }
	       var value = properties.privateData[field];
	       if (isArray(value)) {
	        for (var j = value.length - 1; j > 0; j--) {
	         value[j] -= value[j - 1];
	        }
	       }
	       privateDict.setByName(field, value);
	      }
	      cff.topDict.privateDict = privateDict;
	      var subrIndex = new CFFIndex();
	      for (i = 0, ii = subrs.length; i < ii; i++) {
	       subrIndex.add(subrs[i]);
	      }
	      privateDict.subrsIndex = subrIndex;
	      var compiler = new CFFCompiler(cff);
	      return compiler.compile();
	     }
	    };
	    return Type1Font;
	   }();
	   var CFFFont = function CFFFontClosure() {
	    function CFFFont(file, properties) {
	     this.properties = properties;
	     var parser = new CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);
	     this.cff = parser.parse();
	     var compiler = new CFFCompiler(this.cff);
	     this.seacs = this.cff.seacs;
	     try {
	      this.data = compiler.compile();
	     } catch (e) {
	      warn('Failed to compile font ' + properties.loadedName);
	      this.data = file;
	     }
	    }
	    CFFFont.prototype = {
	     get numGlyphs() {
	      return this.cff.charStrings.count;
	     },
	     getCharset: function CFFFont_getCharset() {
	      return this.cff.charset.charset;
	     },
	     getGlyphMapping: function CFFFont_getGlyphMapping() {
	      var cff = this.cff;
	      var properties = this.properties;
	      var charsets = cff.charset.charset;
	      var charCodeToGlyphId;
	      var glyphId;
	      if (properties.composite) {
	       charCodeToGlyphId = Object.create(null);
	       if (cff.isCIDFont) {
	        for (glyphId = 0; glyphId < charsets.length; glyphId++) {
	         var cid = charsets[glyphId];
	         var charCode = properties.cMap.charCodeOf(cid);
	         charCodeToGlyphId[charCode] = glyphId;
	        }
	       } else {
	        for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {
	         charCodeToGlyphId[glyphId] = glyphId;
	        }
	       }
	       return charCodeToGlyphId;
	      }
	      var encoding = cff.encoding ? cff.encoding.encoding : null;
	      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);
	      return charCodeToGlyphId;
	     }
	    };
	    return CFFFont;
	   }();
	   (function checkSeacSupport() {
	    if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {
	     SEAC_ANALYSIS_ENABLED = true;
	    }
	   }());
	   (function checkChromeWindows() {
	    if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {
	     SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;
	    }
	   }());
	   exports.ErrorFont = ErrorFont;
	   exports.Font = Font;
	   exports.FontFlags = FontFlags;
	   exports.IdentityToUnicodeMap = IdentityToUnicodeMap;
	   exports.ToUnicodeMap = ToUnicodeMap;
	   exports.getFontType = getFontType;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsDisplayCanvas = {}, root.pdfjsSharedUtil, root.pdfjsDisplayDOMUtils, root.pdfjsDisplayPatternHelper, root.pdfjsDisplayWebGL);
	  }(this, function (exports, sharedUtil, displayDOMUtils, displayPatternHelper, displayWebGL) {
	   var FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;
	   var IDENTITY_MATRIX = sharedUtil.IDENTITY_MATRIX;
	   var ImageKind = sharedUtil.ImageKind;
	   var OPS = sharedUtil.OPS;
	   var TextRenderingMode = sharedUtil.TextRenderingMode;
	   var Uint32ArrayView = sharedUtil.Uint32ArrayView;
	   var Util = sharedUtil.Util;
	   var assert = sharedUtil.assert;
	   var info = sharedUtil.info;
	   var isNum = sharedUtil.isNum;
	   var isArray = sharedUtil.isArray;
	   var isLittleEndian = sharedUtil.isLittleEndian;
	   var error = sharedUtil.error;
	   var shadow = sharedUtil.shadow;
	   var warn = sharedUtil.warn;
	   var TilingPattern = displayPatternHelper.TilingPattern;
	   var getShadingPatternFromIR = displayPatternHelper.getShadingPatternFromIR;
	   var WebGLUtils = displayWebGL.WebGLUtils;
	   var hasCanvasTypedArrays = displayDOMUtils.hasCanvasTypedArrays;
	   var MIN_FONT_SIZE = 16;
	   var MAX_FONT_SIZE = 100;
	   var MAX_GROUP_SIZE = 4096;
	   var MIN_WIDTH_FACTOR = 0.65;
	   var COMPILE_TYPE3_GLYPHS = true;
	   var MAX_SIZE_TO_COMPILE = 1000;
	   var FULL_CHUNK_HEIGHT = 16;
	   var HasCanvasTypedArraysCached = {
	    get value() {
	     return shadow(HasCanvasTypedArraysCached, 'value', hasCanvasTypedArrays());
	    }
	   };
	   var IsLittleEndianCached = {
	    get value() {
	     return shadow(IsLittleEndianCached, 'value', isLittleEndian());
	    }
	   };
	   function createScratchCanvas(width, height) {
	    var canvas = document.createElement('canvas');
	    canvas.width = width;
	    canvas.height = height;
	    return canvas;
	   }
	   function addContextCurrentTransform(ctx) {
	    if (!ctx.mozCurrentTransform) {
	     ctx._originalSave = ctx.save;
	     ctx._originalRestore = ctx.restore;
	     ctx._originalRotate = ctx.rotate;
	     ctx._originalScale = ctx.scale;
	     ctx._originalTranslate = ctx.translate;
	     ctx._originalTransform = ctx.transform;
	     ctx._originalSetTransform = ctx.setTransform;
	     ctx._transformMatrix = ctx._transformMatrix || [
	      1,
	      0,
	      0,
	      1,
	      0,
	      0
	     ];
	     ctx._transformStack = [];
	     Object.defineProperty(ctx, 'mozCurrentTransform', {
	      get: function getCurrentTransform() {
	       return this._transformMatrix;
	      }
	     });
	     Object.defineProperty(ctx, 'mozCurrentTransformInverse', {
	      get: function getCurrentTransformInverse() {
	       var m = this._transformMatrix;
	       var a = m[0], b = m[1], c = m[2], d = m[3], e = m[4], f = m[5];
	       var ad_bc = a * d - b * c;
	       var bc_ad = b * c - a * d;
	       return [
	        d / ad_bc,
	        b / bc_ad,
	        c / bc_ad,
	        a / ad_bc,
	        (d * e - c * f) / bc_ad,
	        (b * e - a * f) / ad_bc
	       ];
	      }
	     });
	     ctx.save = function ctxSave() {
	      var old = this._transformMatrix;
	      this._transformStack.push(old);
	      this._transformMatrix = old.slice(0, 6);
	      this._originalSave();
	     };
	     ctx.restore = function ctxRestore() {
	      var prev = this._transformStack.pop();
	      if (prev) {
	       this._transformMatrix = prev;
	       this._originalRestore();
	      }
	     };
	     ctx.translate = function ctxTranslate(x, y) {
	      var m = this._transformMatrix;
	      m[4] = m[0] * x + m[2] * y + m[4];
	      m[5] = m[1] * x + m[3] * y + m[5];
	      this._originalTranslate(x, y);
	     };
	     ctx.scale = function ctxScale(x, y) {
	      var m = this._transformMatrix;
	      m[0] = m[0] * x;
	      m[1] = m[1] * x;
	      m[2] = m[2] * y;
	      m[3] = m[3] * y;
	      this._originalScale(x, y);
	     };
	     ctx.transform = function ctxTransform(a, b, c, d, e, f) {
	      var m = this._transformMatrix;
	      this._transformMatrix = [
	       m[0] * a + m[2] * b,
	       m[1] * a + m[3] * b,
	       m[0] * c + m[2] * d,
	       m[1] * c + m[3] * d,
	       m[0] * e + m[2] * f + m[4],
	       m[1] * e + m[3] * f + m[5]
	      ];
	      ctx._originalTransform(a, b, c, d, e, f);
	     };
	     ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {
	      this._transformMatrix = [
	       a,
	       b,
	       c,
	       d,
	       e,
	       f
	      ];
	      ctx._originalSetTransform(a, b, c, d, e, f);
	     };
	     ctx.rotate = function ctxRotate(angle) {
	      var cosValue = Math.cos(angle);
	      var sinValue = Math.sin(angle);
	      var m = this._transformMatrix;
	      this._transformMatrix = [
	       m[0] * cosValue + m[2] * sinValue,
	       m[1] * cosValue + m[3] * sinValue,
	       m[0] * -sinValue + m[2] * cosValue,
	       m[1] * -sinValue + m[3] * cosValue,
	       m[4],
	       m[5]
	      ];
	      this._originalRotate(angle);
	     };
	    }
	   }
	   var CachedCanvases = function CachedCanvasesClosure() {
	    function CachedCanvases() {
	     this.cache = Object.create(null);
	    }
	    CachedCanvases.prototype = {
	     getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {
	      var canvasEntry;
	      if (this.cache[id] !== undefined) {
	       canvasEntry = this.cache[id];
	       canvasEntry.canvas.width = width;
	       canvasEntry.canvas.height = height;
	       canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);
	      } else {
	       var canvas = createScratchCanvas(width, height);
	       var ctx = canvas.getContext('2d');
	       if (trackTransform) {
	        addContextCurrentTransform(ctx);
	       }
	       this.cache[id] = canvasEntry = {
	        canvas: canvas,
	        context: ctx
	       };
	      }
	      return canvasEntry;
	     },
	     clear: function () {
	      for (var id in this.cache) {
	       var canvasEntry = this.cache[id];
	       canvasEntry.canvas.width = 0;
	       canvasEntry.canvas.height = 0;
	       delete this.cache[id];
	      }
	     }
	    };
	    return CachedCanvases;
	   }();
	   function compileType3Glyph(imgData) {
	    var POINT_TO_PROCESS_LIMIT = 1000;
	    var width = imgData.width, height = imgData.height;
	    var i, j, j0, width1 = width + 1;
	    var points = new Uint8Array(width1 * (height + 1));
	    var POINT_TYPES = new Uint8Array([
	     0,
	     2,
	     4,
	     0,
	     1,
	     0,
	     5,
	     4,
	     8,
	     10,
	     0,
	     8,
	     0,
	     2,
	     1,
	     0
	    ]);
	    var lineSize = width + 7 & ~7, data0 = imgData.data;
	    var data = new Uint8Array(lineSize * height), pos = 0, ii;
	    for (i = 0, ii = data0.length; i < ii; i++) {
	     var mask = 128, elem = data0[i];
	     while (mask > 0) {
	      data[pos++] = elem & mask ? 0 : 255;
	      mask >>= 1;
	     }
	    }
	    var count = 0;
	    pos = 0;
	    if (data[pos] !== 0) {
	     points[0] = 1;
	     ++count;
	    }
	    for (j = 1; j < width; j++) {
	     if (data[pos] !== data[pos + 1]) {
	      points[j] = data[pos] ? 2 : 1;
	      ++count;
	     }
	     pos++;
	    }
	    if (data[pos] !== 0) {
	     points[j] = 2;
	     ++count;
	    }
	    for (i = 1; i < height; i++) {
	     pos = i * lineSize;
	     j0 = i * width1;
	     if (data[pos - lineSize] !== data[pos]) {
	      points[j0] = data[pos] ? 1 : 8;
	      ++count;
	     }
	     var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);
	     for (j = 1; j < width; j++) {
	      sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);
	      if (POINT_TYPES[sum]) {
	       points[j0 + j] = POINT_TYPES[sum];
	       ++count;
	      }
	      pos++;
	     }
	     if (data[pos - lineSize] !== data[pos]) {
	      points[j0 + j] = data[pos] ? 2 : 4;
	      ++count;
	     }
	     if (count > POINT_TO_PROCESS_LIMIT) {
	      return null;
	     }
	    }
	    pos = lineSize * (height - 1);
	    j0 = i * width1;
	    if (data[pos] !== 0) {
	     points[j0] = 8;
	     ++count;
	    }
	    for (j = 1; j < width; j++) {
	     if (data[pos] !== data[pos + 1]) {
	      points[j0 + j] = data[pos] ? 4 : 8;
	      ++count;
	     }
	     pos++;
	    }
	    if (data[pos] !== 0) {
	     points[j0 + j] = 4;
	     ++count;
	    }
	    if (count > POINT_TO_PROCESS_LIMIT) {
	     return null;
	    }
	    var steps = new Int32Array([
	     0,
	     width1,
	     -1,
	     0,
	     -width1,
	     0,
	     0,
	     0,
	     1
	    ]);
	    var outlines = [];
	    for (i = 0; count && i <= height; i++) {
	     var p = i * width1;
	     var end = p + width;
	     while (p < end && !points[p]) {
	      p++;
	     }
	     if (p === end) {
	      continue;
	     }
	     var coords = [
	      p % width1,
	      i
	     ];
	     var type = points[p], p0 = p, pp;
	     do {
	      var step = steps[type];
	      do {
	       p += step;
	      } while (!points[p]);
	      pp = points[p];
	      if (pp !== 5 && pp !== 10) {
	       type = pp;
	       points[p] = 0;
	      } else {
	       type = pp & 0x33 * type >> 4;
	       points[p] &= type >> 2 | type << 2;
	      }
	      coords.push(p % width1);
	      coords.push(p / width1 | 0);
	      --count;
	     } while (p0 !== p);
	     outlines.push(coords);
	     --i;
	    }
	    var drawOutline = function (c) {
	     c.save();
	     c.scale(1 / width, -1 / height);
	     c.translate(0, -height);
	     c.beginPath();
	     for (var i = 0, ii = outlines.length; i < ii; i++) {
	      var o = outlines[i];
	      c.moveTo(o[0], o[1]);
	      for (var j = 2, jj = o.length; j < jj; j += 2) {
	       c.lineTo(o[j], o[j + 1]);
	      }
	     }
	     c.fill();
	     c.beginPath();
	     c.restore();
	    };
	    return drawOutline;
	   }
	   var CanvasExtraState = function CanvasExtraStateClosure() {
	    function CanvasExtraState(old) {
	     this.alphaIsShape = false;
	     this.fontSize = 0;
	     this.fontSizeScale = 1;
	     this.textMatrix = IDENTITY_MATRIX;
	     this.textMatrixScale = 1;
	     this.fontMatrix = FONT_IDENTITY_MATRIX;
	     this.leading = 0;
	     this.x = 0;
	     this.y = 0;
	     this.lineX = 0;
	     this.lineY = 0;
	     this.charSpacing = 0;
	     this.wordSpacing = 0;
	     this.textHScale = 1;
	     this.textRenderingMode = TextRenderingMode.FILL;
	     this.textRise = 0;
	     this.fillColor = '#000000';
	     this.strokeColor = '#000000';
	     this.patternFill = false;
	     this.fillAlpha = 1;
	     this.strokeAlpha = 1;
	     this.lineWidth = 1;
	     this.activeSMask = null;
	     this.resumeSMaskCtx = null;
	     this.old = old;
	    }
	    CanvasExtraState.prototype = {
	     clone: function CanvasExtraState_clone() {
	      return Object.create(this);
	     },
	     setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {
	      this.x = x;
	      this.y = y;
	     }
	    };
	    return CanvasExtraState;
	   }();
	   var CanvasGraphics = function CanvasGraphicsClosure() {
	    var EXECUTION_TIME = 15;
	    var EXECUTION_STEPS = 10;
	    function CanvasGraphics(canvasCtx, commonObjs, objs, imageLayer) {
	     this.ctx = canvasCtx;
	     this.current = new CanvasExtraState();
	     this.stateStack = [];
	     this.pendingClip = null;
	     this.pendingEOFill = false;
	     this.res = null;
	     this.xobjs = null;
	     this.commonObjs = commonObjs;
	     this.objs = objs;
	     this.imageLayer = imageLayer;
	     this.groupStack = [];
	     this.processingType3 = null;
	     this.baseTransform = null;
	     this.baseTransformStack = [];
	     this.groupLevel = 0;
	     this.smaskStack = [];
	     this.smaskCounter = 0;
	     this.tempSMask = null;
	     this.cachedCanvases = new CachedCanvases();
	     if (canvasCtx) {
	      addContextCurrentTransform(canvasCtx);
	     }
	     this.cachedGetSinglePixelWidth = null;
	    }
	    function putBinaryImageData(ctx, imgData) {
	     if (typeof ImageData !== 'undefined' && imgData instanceof ImageData) {
	      ctx.putImageData(imgData, 0, 0);
	      return;
	     }
	     var height = imgData.height, width = imgData.width;
	     var partialChunkHeight = height % FULL_CHUNK_HEIGHT;
	     var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;
	     var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;
	     var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);
	     var srcPos = 0, destPos;
	     var src = imgData.data;
	     var dest = chunkImgData.data;
	     var i, j, thisChunkHeight, elemsInThisChunk;
	     if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {
	      var srcLength = src.byteLength;
	      var dest32 = HasCanvasTypedArraysCached.value ? new Uint32Array(dest.buffer) : new Uint32ArrayView(dest);
	      var dest32DataLength = dest32.length;
	      var fullSrcDiff = width + 7 >> 3;
	      var white = 0xFFFFFFFF;
	      var black = IsLittleEndianCached.value || !HasCanvasTypedArraysCached.value ? 0xFF000000 : 0x000000FF;
	      for (i = 0; i < totalChunks; i++) {
	       thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;
	       destPos = 0;
	       for (j = 0; j < thisChunkHeight; j++) {
	        var srcDiff = srcLength - srcPos;
	        var k = 0;
	        var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;
	        var kEndUnrolled = kEnd & ~7;
	        var mask = 0;
	        var srcByte = 0;
	        for (; k < kEndUnrolled; k += 8) {
	         srcByte = src[srcPos++];
	         dest32[destPos++] = srcByte & 128 ? white : black;
	         dest32[destPos++] = srcByte & 64 ? white : black;
	         dest32[destPos++] = srcByte & 32 ? white : black;
	         dest32[destPos++] = srcByte & 16 ? white : black;
	         dest32[destPos++] = srcByte & 8 ? white : black;
	         dest32[destPos++] = srcByte & 4 ? white : black;
	         dest32[destPos++] = srcByte & 2 ? white : black;
	         dest32[destPos++] = srcByte & 1 ? white : black;
	        }
	        for (; k < kEnd; k++) {
	         if (mask === 0) {
	          srcByte = src[srcPos++];
	          mask = 128;
	         }
	         dest32[destPos++] = srcByte & mask ? white : black;
	         mask >>= 1;
	        }
	       }
	       while (destPos < dest32DataLength) {
	        dest32[destPos++] = 0;
	       }
	       ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);
	      }
	     } else if (imgData.kind === ImageKind.RGBA_32BPP) {
	      j = 0;
	      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;
	      for (i = 0; i < fullChunks; i++) {
	       dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));
	       srcPos += elemsInThisChunk;
	       ctx.putImageData(chunkImgData, 0, j);
	       j += FULL_CHUNK_HEIGHT;
	      }
	      if (i < totalChunks) {
	       elemsInThisChunk = width * partialChunkHeight * 4;
	       dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));
	       ctx.putImageData(chunkImgData, 0, j);
	      }
	     } else if (imgData.kind === ImageKind.RGB_24BPP) {
	      thisChunkHeight = FULL_CHUNK_HEIGHT;
	      elemsInThisChunk = width * thisChunkHeight;
	      for (i = 0; i < totalChunks; i++) {
	       if (i >= fullChunks) {
	        thisChunkHeight = partialChunkHeight;
	        elemsInThisChunk = width * thisChunkHeight;
	       }
	       destPos = 0;
	       for (j = elemsInThisChunk; j--;) {
	        dest[destPos++] = src[srcPos++];
	        dest[destPos++] = src[srcPos++];
	        dest[destPos++] = src[srcPos++];
	        dest[destPos++] = 255;
	       }
	       ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);
	      }
	     } else {
	      error('bad image kind: ' + imgData.kind);
	     }
	    }
	    function putBinaryImageMask(ctx, imgData) {
	     var height = imgData.height, width = imgData.width;
	     var partialChunkHeight = height % FULL_CHUNK_HEIGHT;
	     var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;
	     var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;
	     var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);
	     var srcPos = 0;
	     var src = imgData.data;
	     var dest = chunkImgData.data;
	     for (var i = 0; i < totalChunks; i++) {
	      var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;
	      var destPos = 3;
	      for (var j = 0; j < thisChunkHeight; j++) {
	       var mask = 0;
	       for (var k = 0; k < width; k++) {
	        if (!mask) {
	         var elem = src[srcPos++];
	         mask = 128;
	        }
	        dest[destPos] = elem & mask ? 0 : 255;
	        destPos += 4;
	        mask >>= 1;
	       }
	      }
	      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);
	     }
	    }
	    function copyCtxState(sourceCtx, destCtx) {
	     var properties = [
	      'strokeStyle',
	      'fillStyle',
	      'fillRule',
	      'globalAlpha',
	      'lineWidth',
	      'lineCap',
	      'lineJoin',
	      'miterLimit',
	      'globalCompositeOperation',
	      'font'
	     ];
	     for (var i = 0, ii = properties.length; i < ii; i++) {
	      var property = properties[i];
	      if (sourceCtx[property] !== undefined) {
	       destCtx[property] = sourceCtx[property];
	      }
	     }
	     if (sourceCtx.setLineDash !== undefined) {
	      destCtx.setLineDash(sourceCtx.getLineDash());
	      destCtx.lineDashOffset = sourceCtx.lineDashOffset;
	     }
	    }
	    function composeSMaskBackdrop(bytes, r0, g0, b0) {
	     var length = bytes.length;
	     for (var i = 3; i < length; i += 4) {
	      var alpha = bytes[i];
	      if (alpha === 0) {
	       bytes[i - 3] = r0;
	       bytes[i - 2] = g0;
	       bytes[i - 1] = b0;
	      } else if (alpha < 255) {
	       var alpha_ = 255 - alpha;
	       bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;
	       bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;
	       bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;
	      }
	     }
	    }
	    function composeSMaskAlpha(maskData, layerData, transferMap) {
	     var length = maskData.length;
	     var scale = 1 / 255;
	     for (var i = 3; i < length; i += 4) {
	      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];
	      layerData[i] = layerData[i] * alpha * scale | 0;
	     }
	    }
	    function composeSMaskLuminosity(maskData, layerData, transferMap) {
	     var length = maskData.length;
	     for (var i = 3; i < length; i += 4) {
	      var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;
	      layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;
	     }
	    }
	    function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {
	     var hasBackdrop = !!backdrop;
	     var r0 = hasBackdrop ? backdrop[0] : 0;
	     var g0 = hasBackdrop ? backdrop[1] : 0;
	     var b0 = hasBackdrop ? backdrop[2] : 0;
	     var composeFn;
	     if (subtype === 'Luminosity') {
	      composeFn = composeSMaskLuminosity;
	     } else {
	      composeFn = composeSMaskAlpha;
	     }
	     var PIXELS_TO_PROCESS = 1048576;
	     var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));
	     for (var row = 0; row < height; row += chunkSize) {
	      var chunkHeight = Math.min(chunkSize, height - row);
	      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);
	      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);
	      if (hasBackdrop) {
	       composeSMaskBackdrop(maskData.data, r0, g0, b0);
	      }
	      composeFn(maskData.data, layerData.data, transferMap);
	      maskCtx.putImageData(layerData, 0, row);
	     }
	    }
	    function composeSMask(ctx, smask, layerCtx) {
	     var mask = smask.canvas;
	     var maskCtx = smask.context;
	     ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);
	     var backdrop = smask.backdrop || null;
	     if (!smask.transferMap && WebGLUtils.isEnabled) {
	      var composed = WebGLUtils.composeSMask(layerCtx.canvas, mask, {
	       subtype: smask.subtype,
	       backdrop: backdrop
	      });
	      ctx.setTransform(1, 0, 0, 1, 0, 0);
	      ctx.drawImage(composed, smask.offsetX, smask.offsetY);
	      return;
	     }
	     genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);
	     ctx.drawImage(mask, 0, 0);
	    }
	    var LINE_CAP_STYLES = [
	     'butt',
	     'round',
	     'square'
	    ];
	    var LINE_JOIN_STYLES = [
	     'miter',
	     'round',
	     'bevel'
	    ];
	    var NORMAL_CLIP = {};
	    var EO_CLIP = {};
	    CanvasGraphics.prototype = {
	     beginDrawing: function CanvasGraphics_beginDrawing(transform, viewport, transparency) {
	      var width = this.ctx.canvas.width;
	      var height = this.ctx.canvas.height;
	      this.ctx.save();
	      this.ctx.fillStyle = 'rgb(255, 255, 255)';
	      this.ctx.fillRect(0, 0, width, height);
	      this.ctx.restore();
	      if (transparency) {
	       var transparentCanvas = this.cachedCanvases.getCanvas('transparent', width, height, true);
	       this.compositeCtx = this.ctx;
	       this.transparentCanvas = transparentCanvas.canvas;
	       this.ctx = transparentCanvas.context;
	       this.ctx.save();
	       this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);
	      }
	      this.ctx.save();
	      if (transform) {
	       this.ctx.transform.apply(this.ctx, transform);
	      }
	      this.ctx.transform.apply(this.ctx, viewport.transform);
	      this.baseTransform = this.ctx.mozCurrentTransform.slice();
	      if (this.imageLayer) {
	       this.imageLayer.beginLayout();
	      }
	     },
	     executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {
	      var argsArray = operatorList.argsArray;
	      var fnArray = operatorList.fnArray;
	      var i = executionStartIdx || 0;
	      var argsArrayLen = argsArray.length;
	      if (argsArrayLen === i) {
	       return i;
	      }
	      var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === 'function';
	      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;
	      var steps = 0;
	      var commonObjs = this.commonObjs;
	      var objs = this.objs;
	      var fnId;
	      while (true) {
	       if (stepper !== undefined && i === stepper.nextBreakPoint) {
	        stepper.breakIt(i, continueCallback);
	        return i;
	       }
	       fnId = fnArray[i];
	       if (fnId !== OPS.dependency) {
	        this[fnId].apply(this, argsArray[i]);
	       } else {
	        var deps = argsArray[i];
	        for (var n = 0, nn = deps.length; n < nn; n++) {
	         var depObjId = deps[n];
	         var common = depObjId[0] === 'g' && depObjId[1] === '_';
	         var objsPool = common ? commonObjs : objs;
	         if (!objsPool.isResolved(depObjId)) {
	          objsPool.get(depObjId, continueCallback);
	          return i;
	         }
	        }
	       }
	       i++;
	       if (i === argsArrayLen) {
	        return i;
	       }
	       if (chunkOperations && ++steps > EXECUTION_STEPS) {
	        if (Date.now() > endTime) {
	         continueCallback();
	         return i;
	        }
	        steps = 0;
	       }
	      }
	     },
	     endDrawing: function CanvasGraphics_endDrawing() {
	      if (this.current.activeSMask !== null) {
	       this.endSMaskGroup();
	      }
	      this.ctx.restore();
	      if (this.transparentCanvas) {
	       this.ctx = this.compositeCtx;
	       this.ctx.save();
	       this.ctx.setTransform(1, 0, 0, 1, 0, 0);
	       this.ctx.drawImage(this.transparentCanvas, 0, 0);
	       this.ctx.restore();
	       this.transparentCanvas = null;
	      }
	      this.cachedCanvases.clear();
	      WebGLUtils.clear();
	      if (this.imageLayer) {
	       this.imageLayer.endLayout();
	      }
	     },
	     setLineWidth: function CanvasGraphics_setLineWidth(width) {
	      this.current.lineWidth = width;
	      this.ctx.lineWidth = width;
	     },
	     setLineCap: function CanvasGraphics_setLineCap(style) {
	      this.ctx.lineCap = LINE_CAP_STYLES[style];
	     },
	     setLineJoin: function CanvasGraphics_setLineJoin(style) {
	      this.ctx.lineJoin = LINE_JOIN_STYLES[style];
	     },
	     setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {
	      this.ctx.miterLimit = limit;
	     },
	     setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {
	      var ctx = this.ctx;
	      if (ctx.setLineDash !== undefined) {
	       ctx.setLineDash(dashArray);
	       ctx.lineDashOffset = dashPhase;
	      }
	     },
	     setRenderingIntent: function CanvasGraphics_setRenderingIntent(intent) {
	     },
	     setFlatness: function CanvasGraphics_setFlatness(flatness) {
	     },
	     setGState: function CanvasGraphics_setGState(states) {
	      for (var i = 0, ii = states.length; i < ii; i++) {
	       var state = states[i];
	       var key = state[0];
	       var value = state[1];
	       switch (key) {
	       case 'LW':
	        this.setLineWidth(value);
	        break;
	       case 'LC':
	        this.setLineCap(value);
	        break;
	       case 'LJ':
	        this.setLineJoin(value);
	        break;
	       case 'ML':
	        this.setMiterLimit(value);
	        break;
	       case 'D':
	        this.setDash(value[0], value[1]);
	        break;
	       case 'RI':
	        this.setRenderingIntent(value);
	        break;
	       case 'FL':
	        this.setFlatness(value);
	        break;
	       case 'Font':
	        this.setFont(value[0], value[1]);
	        break;
	       case 'CA':
	        this.current.strokeAlpha = state[1];
	        break;
	       case 'ca':
	        this.current.fillAlpha = state[1];
	        this.ctx.globalAlpha = state[1];
	        break;
	       case 'BM':
	        if (value && value.name && value.name !== 'Normal') {
	         var mode = value.name.replace(/([A-Z])/g, function (c) {
	          return '-' + c.toLowerCase();
	         }).substring(1);
	         this.ctx.globalCompositeOperation = mode;
	         if (this.ctx.globalCompositeOperation !== mode) {
	          warn('globalCompositeOperation "' + mode + '" is not supported');
	         }
	        } else {
	         this.ctx.globalCompositeOperation = 'source-over';
	        }
	        break;
	       case 'SMask':
	        if (this.current.activeSMask) {
	         if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {
	          this.suspendSMaskGroup();
	         } else {
	          this.endSMaskGroup();
	         }
	        }
	        this.current.activeSMask = value ? this.tempSMask : null;
	        if (this.current.activeSMask) {
	         this.beginSMaskGroup();
	        }
	        this.tempSMask = null;
	        break;
	       }
	      }
	     },
	     beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {
	      var activeSMask = this.current.activeSMask;
	      var drawnWidth = activeSMask.canvas.width;
	      var drawnHeight = activeSMask.canvas.height;
	      var cacheId = 'smaskGroupAt' + this.groupLevel;
	      var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);
	      var currentCtx = this.ctx;
	      var currentTransform = currentCtx.mozCurrentTransform;
	      this.ctx.save();
	      var groupCtx = scratchCanvas.context;
	      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);
	      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);
	      groupCtx.transform.apply(groupCtx, currentTransform);
	      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;
	      copyCtxState(currentCtx, groupCtx);
	      this.ctx = groupCtx;
	      this.setGState([
	       [
	        'BM',
	        'Normal'
	       ],
	       [
	        'ca',
	        1
	       ],
	       [
	        'CA',
	        1
	       ]
	      ]);
	      this.groupStack.push(currentCtx);
	      this.groupLevel++;
	     },
	     suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {
	      var groupCtx = this.ctx;
	      this.groupLevel--;
	      this.ctx = this.groupStack.pop();
	      composeSMask(this.ctx, this.current.activeSMask, groupCtx);
	      this.ctx.restore();
	      this.ctx.save();
	      copyCtxState(groupCtx, this.ctx);
	      this.current.resumeSMaskCtx = groupCtx;
	      var deltaTransform = Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);
	      this.ctx.transform.apply(this.ctx, deltaTransform);
	      groupCtx.save();
	      groupCtx.setTransform(1, 0, 0, 1, 0, 0);
	      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);
	      groupCtx.restore();
	     },
	     resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {
	      var groupCtx = this.current.resumeSMaskCtx;
	      var currentCtx = this.ctx;
	      this.ctx = groupCtx;
	      this.groupStack.push(currentCtx);
	      this.groupLevel++;
	     },
	     endSMaskGroup: function CanvasGraphics_endSMaskGroup() {
	      var groupCtx = this.ctx;
	      this.groupLevel--;
	      this.ctx = this.groupStack.pop();
	      composeSMask(this.ctx, this.current.activeSMask, groupCtx);
	      this.ctx.restore();
	      copyCtxState(groupCtx, this.ctx);
	      var deltaTransform = Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);
	      this.ctx.transform.apply(this.ctx, deltaTransform);
	     },
	     save: function CanvasGraphics_save() {
	      this.ctx.save();
	      var old = this.current;
	      this.stateStack.push(old);
	      this.current = old.clone();
	      this.current.resumeSMaskCtx = null;
	     },
	     restore: function CanvasGraphics_restore() {
	      if (this.current.resumeSMaskCtx) {
	       this.resumeSMaskGroup();
	      }
	      if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {
	       this.endSMaskGroup();
	      }
	      if (this.stateStack.length !== 0) {
	       this.current = this.stateStack.pop();
	       this.ctx.restore();
	       this.pendingClip = null;
	       this.cachedGetSinglePixelWidth = null;
	      }
	     },
	     transform: function CanvasGraphics_transform(a, b, c, d, e, f) {
	      this.ctx.transform(a, b, c, d, e, f);
	      this.cachedGetSinglePixelWidth = null;
	     },
	     constructPath: function CanvasGraphics_constructPath(ops, args) {
	      var ctx = this.ctx;
	      var current = this.current;
	      var x = current.x, y = current.y;
	      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {
	       switch (ops[i] | 0) {
	       case OPS.rectangle:
	        x = args[j++];
	        y = args[j++];
	        var width = args[j++];
	        var height = args[j++];
	        if (width === 0) {
	         width = this.getSinglePixelWidth();
	        }
	        if (height === 0) {
	         height = this.getSinglePixelWidth();
	        }
	        var xw = x + width;
	        var yh = y + height;
	        this.ctx.moveTo(x, y);
	        this.ctx.lineTo(xw, y);
	        this.ctx.lineTo(xw, yh);
	        this.ctx.lineTo(x, yh);
	        this.ctx.lineTo(x, y);
	        this.ctx.closePath();
	        break;
	       case OPS.moveTo:
	        x = args[j++];
	        y = args[j++];
	        ctx.moveTo(x, y);
	        break;
	       case OPS.lineTo:
	        x = args[j++];
	        y = args[j++];
	        ctx.lineTo(x, y);
	        break;
	       case OPS.curveTo:
	        x = args[j + 4];
	        y = args[j + 5];
	        ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);
	        j += 6;
	        break;
	       case OPS.curveTo2:
	        ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);
	        x = args[j + 2];
	        y = args[j + 3];
	        j += 4;
	        break;
	       case OPS.curveTo3:
	        x = args[j + 2];
	        y = args[j + 3];
	        ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);
	        j += 4;
	        break;
	       case OPS.closePath:
	        ctx.closePath();
	        break;
	       }
	      }
	      current.setCurrentPoint(x, y);
	     },
	     closePath: function CanvasGraphics_closePath() {
	      this.ctx.closePath();
	     },
	     stroke: function CanvasGraphics_stroke(consumePath) {
	      consumePath = typeof consumePath !== 'undefined' ? consumePath : true;
	      var ctx = this.ctx;
	      var strokeColor = this.current.strokeColor;
	      ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth);
	      ctx.globalAlpha = this.current.strokeAlpha;
	      if (strokeColor && strokeColor.hasOwnProperty('type') && strokeColor.type === 'Pattern') {
	       ctx.save();
	       ctx.strokeStyle = strokeColor.getPattern(ctx, this);
	       ctx.stroke();
	       ctx.restore();
	      } else {
	       ctx.stroke();
	      }
	      if (consumePath) {
	       this.consumePath();
	      }
	      ctx.globalAlpha = this.current.fillAlpha;
	     },
	     closeStroke: function CanvasGraphics_closeStroke() {
	      this.closePath();
	      this.stroke();
	     },
	     fill: function CanvasGraphics_fill(consumePath) {
	      consumePath = typeof consumePath !== 'undefined' ? consumePath : true;
	      var ctx = this.ctx;
	      var fillColor = this.current.fillColor;
	      var isPatternFill = this.current.patternFill;
	      var needRestore = false;
	      if (isPatternFill) {
	       ctx.save();
	       if (this.baseTransform) {
	        ctx.setTransform.apply(ctx, this.baseTransform);
	       }
	       ctx.fillStyle = fillColor.getPattern(ctx, this);
	       needRestore = true;
	      }
	      if (this.pendingEOFill) {
	       ctx.fill('evenodd');
	       this.pendingEOFill = false;
	      } else {
	       ctx.fill();
	      }
	      if (needRestore) {
	       ctx.restore();
	      }
	      if (consumePath) {
	       this.consumePath();
	      }
	     },
	     eoFill: function CanvasGraphics_eoFill() {
	      this.pendingEOFill = true;
	      this.fill();
	     },
	     fillStroke: function CanvasGraphics_fillStroke() {
	      this.fill(false);
	      this.stroke(false);
	      this.consumePath();
	     },
	     eoFillStroke: function CanvasGraphics_eoFillStroke() {
	      this.pendingEOFill = true;
	      this.fillStroke();
	     },
	     closeFillStroke: function CanvasGraphics_closeFillStroke() {
	      this.closePath();
	      this.fillStroke();
	     },
	     closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {
	      this.pendingEOFill = true;
	      this.closePath();
	      this.fillStroke();
	     },
	     endPath: function CanvasGraphics_endPath() {
	      this.consumePath();
	     },
	     clip: function CanvasGraphics_clip() {
	      this.pendingClip = NORMAL_CLIP;
	     },
	     eoClip: function CanvasGraphics_eoClip() {
	      this.pendingClip = EO_CLIP;
	     },
	     beginText: function CanvasGraphics_beginText() {
	      this.current.textMatrix = IDENTITY_MATRIX;
	      this.current.textMatrixScale = 1;
	      this.current.x = this.current.lineX = 0;
	      this.current.y = this.current.lineY = 0;
	     },
	     endText: function CanvasGraphics_endText() {
	      var paths = this.pendingTextPaths;
	      var ctx = this.ctx;
	      if (paths === undefined) {
	       ctx.beginPath();
	       return;
	      }
	      ctx.save();
	      ctx.beginPath();
	      for (var i = 0; i < paths.length; i++) {
	       var path = paths[i];
	       ctx.setTransform.apply(ctx, path.transform);
	       ctx.translate(path.x, path.y);
	       path.addToPath(ctx, path.fontSize);
	      }
	      ctx.restore();
	      ctx.clip();
	      ctx.beginPath();
	      delete this.pendingTextPaths;
	     },
	     setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {
	      this.current.charSpacing = spacing;
	     },
	     setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {
	      this.current.wordSpacing = spacing;
	     },
	     setHScale: function CanvasGraphics_setHScale(scale) {
	      this.current.textHScale = scale / 100;
	     },
	     setLeading: function CanvasGraphics_setLeading(leading) {
	      this.current.leading = -leading;
	     },
	     setFont: function CanvasGraphics_setFont(fontRefName, size) {
	      var fontObj = this.commonObjs.get(fontRefName);
	      var current = this.current;
	      if (!fontObj) {
	       error('Can\'t find font for ' + fontRefName);
	      }
	      current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : FONT_IDENTITY_MATRIX;
	      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {
	       warn('Invalid font matrix for font ' + fontRefName);
	      }
	      if (size < 0) {
	       size = -size;
	       current.fontDirection = -1;
	      } else {
	       current.fontDirection = 1;
	      }
	      this.current.font = fontObj;
	      this.current.fontSize = size;
	      if (fontObj.isType3Font) {
	       return;
	      }
	      var name = fontObj.loadedName || 'sans-serif';
	      var bold = fontObj.black ? '900' : fontObj.bold ? 'bold' : 'normal';
	      var italic = fontObj.italic ? 'italic' : 'normal';
	      var typeface = '"' + name + '", ' + fontObj.fallbackName;
	      var browserFontSize = size < MIN_FONT_SIZE ? MIN_FONT_SIZE : size > MAX_FONT_SIZE ? MAX_FONT_SIZE : size;
	      this.current.fontSizeScale = size / browserFontSize;
	      var rule = italic + ' ' + bold + ' ' + browserFontSize + 'px ' + typeface;
	      this.ctx.font = rule;
	     },
	     setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {
	      this.current.textRenderingMode = mode;
	     },
	     setTextRise: function CanvasGraphics_setTextRise(rise) {
	      this.current.textRise = rise;
	     },
	     moveText: function CanvasGraphics_moveText(x, y) {
	      this.current.x = this.current.lineX += x;
	      this.current.y = this.current.lineY += y;
	     },
	     setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {
	      this.setLeading(-y);
	      this.moveText(x, y);
	     },
	     setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {
	      this.current.textMatrix = [
	       a,
	       b,
	       c,
	       d,
	       e,
	       f
	      ];
	      this.current.textMatrixScale = Math.sqrt(a * a + b * b);
	      this.current.x = this.current.lineX = 0;
	      this.current.y = this.current.lineY = 0;
	     },
	     nextLine: function CanvasGraphics_nextLine() {
	      this.moveText(0, this.current.leading);
	     },
	     paintChar: function CanvasGraphics_paintChar(character, x, y) {
	      var ctx = this.ctx;
	      var current = this.current;
	      var font = current.font;
	      var textRenderingMode = current.textRenderingMode;
	      var fontSize = current.fontSize / current.fontSizeScale;
	      var fillStrokeMode = textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;
	      var isAddToPathSet = !!(textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG);
	      var addToPath;
	      if (font.disableFontFace || isAddToPathSet) {
	       addToPath = font.getPathGenerator(this.commonObjs, character);
	      }
	      if (font.disableFontFace) {
	       ctx.save();
	       ctx.translate(x, y);
	       ctx.beginPath();
	       addToPath(ctx, fontSize);
	       if (fillStrokeMode === TextRenderingMode.FILL || fillStrokeMode === TextRenderingMode.FILL_STROKE) {
	        ctx.fill();
	       }
	       if (fillStrokeMode === TextRenderingMode.STROKE || fillStrokeMode === TextRenderingMode.FILL_STROKE) {
	        ctx.stroke();
	       }
	       ctx.restore();
	      } else {
	       if (fillStrokeMode === TextRenderingMode.FILL || fillStrokeMode === TextRenderingMode.FILL_STROKE) {
	        ctx.fillText(character, x, y);
	       }
	       if (fillStrokeMode === TextRenderingMode.STROKE || fillStrokeMode === TextRenderingMode.FILL_STROKE) {
	        ctx.strokeText(character, x, y);
	       }
	      }
	      if (isAddToPathSet) {
	       var paths = this.pendingTextPaths || (this.pendingTextPaths = []);
	       paths.push({
	        transform: ctx.mozCurrentTransform,
	        x: x,
	        y: y,
	        fontSize: fontSize,
	        addToPath: addToPath
	       });
	      }
	     },
	     get isFontSubpixelAAEnabled() {
	      var ctx = document.createElement('canvas').getContext('2d');
	      ctx.scale(1.5, 1);
	      ctx.fillText('I', 0, 10);
	      var data = ctx.getImageData(0, 0, 10, 10).data;
	      var enabled = false;
	      for (var i = 3; i < data.length; i += 4) {
	       if (data[i] > 0 && data[i] < 255) {
	        enabled = true;
	        break;
	       }
	      }
	      return shadow(this, 'isFontSubpixelAAEnabled', enabled);
	     },
	     showText: function CanvasGraphics_showText(glyphs) {
	      var current = this.current;
	      var font = current.font;
	      if (font.isType3Font) {
	       return this.showType3Text(glyphs);
	      }
	      var fontSize = current.fontSize;
	      if (fontSize === 0) {
	       return;
	      }
	      var ctx = this.ctx;
	      var fontSizeScale = current.fontSizeScale;
	      var charSpacing = current.charSpacing;
	      var wordSpacing = current.wordSpacing;
	      var fontDirection = current.fontDirection;
	      var textHScale = current.textHScale * fontDirection;
	      var glyphsLength = glyphs.length;
	      var vertical = font.vertical;
	      var spacingDir = vertical ? 1 : -1;
	      var defaultVMetrics = font.defaultVMetrics;
	      var widthAdvanceScale = fontSize * current.fontMatrix[0];
	      var simpleFillText = current.textRenderingMode === TextRenderingMode.FILL && !font.disableFontFace;
	      ctx.save();
	      ctx.transform.apply(ctx, current.textMatrix);
	      ctx.translate(current.x, current.y + current.textRise);
	      if (current.patternFill) {
	       ctx.fillStyle = current.fillColor.getPattern(ctx, this);
	      }
	      if (fontDirection > 0) {
	       ctx.scale(textHScale, -1);
	      } else {
	       ctx.scale(textHScale, 1);
	      }
	      var lineWidth = current.lineWidth;
	      var scale = current.textMatrixScale;
	      if (scale === 0 || lineWidth === 0) {
	       var fillStrokeMode = current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;
	       if (fillStrokeMode === TextRenderingMode.STROKE || fillStrokeMode === TextRenderingMode.FILL_STROKE) {
	        this.cachedGetSinglePixelWidth = null;
	        lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;
	       }
	      } else {
	       lineWidth /= scale;
	      }
	      if (fontSizeScale !== 1.0) {
	       ctx.scale(fontSizeScale, fontSizeScale);
	       lineWidth /= fontSizeScale;
	      }
	      ctx.lineWidth = lineWidth;
	      var x = 0, i;
	      for (i = 0; i < glyphsLength; ++i) {
	       var glyph = glyphs[i];
	       if (isNum(glyph)) {
	        x += spacingDir * glyph * fontSize / 1000;
	        continue;
	       }
	       var restoreNeeded = false;
	       var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;
	       var character = glyph.fontChar;
	       var accent = glyph.accent;
	       var scaledX, scaledY, scaledAccentX, scaledAccentY;
	       var width = glyph.width;
	       if (vertical) {
	        var vmetric, vx, vy;
	        vmetric = glyph.vmetric || defaultVMetrics;
	        vx = glyph.vmetric ? vmetric[1] : width * 0.5;
	        vx = -vx * widthAdvanceScale;
	        vy = vmetric[2] * widthAdvanceScale;
	        width = vmetric ? -vmetric[0] : width;
	        scaledX = vx / fontSizeScale;
	        scaledY = (x + vy) / fontSizeScale;
	       } else {
	        scaledX = x / fontSizeScale;
	        scaledY = 0;
	       }
	       if (font.remeasure && width > 0) {
	        var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;
	        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {
	         var characterScaleX = width / measuredWidth;
	         restoreNeeded = true;
	         ctx.save();
	         ctx.scale(characterScaleX, 1);
	         scaledX /= characterScaleX;
	        } else if (width !== measuredWidth) {
	         scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;
	        }
	       }
	       if (glyph.isInFont || font.missingFile) {
	        if (simpleFillText && !accent) {
	         ctx.fillText(character, scaledX, scaledY);
	        } else {
	         this.paintChar(character, scaledX, scaledY);
	         if (accent) {
	          scaledAccentX = scaledX + accent.offset.x / fontSizeScale;
	          scaledAccentY = scaledY - accent.offset.y / fontSizeScale;
	          this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY);
	         }
	        }
	       }
	       var charWidth = width * widthAdvanceScale + spacing * fontDirection;
	       x += charWidth;
	       if (restoreNeeded) {
	        ctx.restore();
	       }
	      }
	      if (vertical) {
	       current.y -= x * textHScale;
	      } else {
	       current.x += x * textHScale;
	      }
	      ctx.restore();
	     },
	     showType3Text: function CanvasGraphics_showType3Text(glyphs) {
	      var ctx = this.ctx;
	      var current = this.current;
	      var font = current.font;
	      var fontSize = current.fontSize;
	      var fontDirection = current.fontDirection;
	      var spacingDir = font.vertical ? 1 : -1;
	      var charSpacing = current.charSpacing;
	      var wordSpacing = current.wordSpacing;
	      var textHScale = current.textHScale * fontDirection;
	      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;
	      var glyphsLength = glyphs.length;
	      var isTextInvisible = current.textRenderingMode === TextRenderingMode.INVISIBLE;
	      var i, glyph, width, spacingLength;
	      if (isTextInvisible || fontSize === 0) {
	       return;
	      }
	      this.cachedGetSinglePixelWidth = null;
	      ctx.save();
	      ctx.transform.apply(ctx, current.textMatrix);
	      ctx.translate(current.x, current.y);
	      ctx.scale(textHScale, fontDirection);
	      for (i = 0; i < glyphsLength; ++i) {
	       glyph = glyphs[i];
	       if (isNum(glyph)) {
	        spacingLength = spacingDir * glyph * fontSize / 1000;
	        this.ctx.translate(spacingLength, 0);
	        current.x += spacingLength * textHScale;
	        continue;
	       }
	       var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;
	       var operatorList = font.charProcOperatorList[glyph.operatorListId];
	       if (!operatorList) {
	        warn('Type3 character \"' + glyph.operatorListId + '\" is not available');
	        continue;
	       }
	       this.processingType3 = glyph;
	       this.save();
	       ctx.scale(fontSize, fontSize);
	       ctx.transform.apply(ctx, fontMatrix);
	       this.executeOperatorList(operatorList);
	       this.restore();
	       var transformed = Util.applyTransform([
	        glyph.width,
	        0
	       ], fontMatrix);
	       width = transformed[0] * fontSize + spacing;
	       ctx.translate(width, 0);
	       current.x += width * textHScale;
	      }
	      ctx.restore();
	      this.processingType3 = null;
	     },
	     setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {
	     },
	     setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {
	      this.ctx.rect(llx, lly, urx - llx, ury - lly);
	      this.clip();
	      this.endPath();
	     },
	     getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {
	      var pattern;
	      if (IR[0] === 'TilingPattern') {
	       var color = IR[1];
	       var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();
	       var self = this;
	       var canvasGraphicsFactory = {
	        createCanvasGraphics: function (ctx) {
	         return new CanvasGraphics(ctx, self.commonObjs, self.objs);
	        }
	       };
	       pattern = new TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);
	      } else {
	       pattern = getShadingPatternFromIR(IR);
	      }
	      return pattern;
	     },
	     setStrokeColorN: function CanvasGraphics_setStrokeColorN() {
	      this.current.strokeColor = this.getColorN_Pattern(arguments);
	     },
	     setFillColorN: function CanvasGraphics_setFillColorN() {
	      this.current.fillColor = this.getColorN_Pattern(arguments);
	      this.current.patternFill = true;
	     },
	     setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {
	      var color = Util.makeCssRgb(r, g, b);
	      this.ctx.strokeStyle = color;
	      this.current.strokeColor = color;
	     },
	     setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {
	      var color = Util.makeCssRgb(r, g, b);
	      this.ctx.fillStyle = color;
	      this.current.fillColor = color;
	      this.current.patternFill = false;
	     },
	     shadingFill: function CanvasGraphics_shadingFill(patternIR) {
	      var ctx = this.ctx;
	      this.save();
	      var pattern = getShadingPatternFromIR(patternIR);
	      ctx.fillStyle = pattern.getPattern(ctx, this, true);
	      var inv = ctx.mozCurrentTransformInverse;
	      if (inv) {
	       var canvas = ctx.canvas;
	       var width = canvas.width;
	       var height = canvas.height;
	       var bl = Util.applyTransform([
	        0,
	        0
	       ], inv);
	       var br = Util.applyTransform([
	        0,
	        height
	       ], inv);
	       var ul = Util.applyTransform([
	        width,
	        0
	       ], inv);
	       var ur = Util.applyTransform([
	        width,
	        height
	       ], inv);
	       var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);
	       var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);
	       var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);
	       var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);
	       this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);
	      } else {
	       this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);
	      }
	      this.restore();
	     },
	     beginInlineImage: function CanvasGraphics_beginInlineImage() {
	      error('Should not call beginInlineImage');
	     },
	     beginImageData: function CanvasGraphics_beginImageData() {
	      error('Should not call beginImageData');
	     },
	     paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {
	      this.save();
	      this.baseTransformStack.push(this.baseTransform);
	      if (isArray(matrix) && matrix.length === 6) {
	       this.transform.apply(this, matrix);
	      }
	      this.baseTransform = this.ctx.mozCurrentTransform;
	      if (isArray(bbox) && bbox.length === 4) {
	       var width = bbox[2] - bbox[0];
	       var height = bbox[3] - bbox[1];
	       this.ctx.rect(bbox[0], bbox[1], width, height);
	       this.clip();
	       this.endPath();
	      }
	     },
	     paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {
	      this.restore();
	      this.baseTransform = this.baseTransformStack.pop();
	     },
	     beginGroup: function CanvasGraphics_beginGroup(group) {
	      this.save();
	      var currentCtx = this.ctx;
	      if (!group.isolated) {
	       info('TODO: Support non-isolated groups.');
	      }
	      if (group.knockout) {
	       warn('Knockout groups not supported.');
	      }
	      var currentTransform = currentCtx.mozCurrentTransform;
	      if (group.matrix) {
	       currentCtx.transform.apply(currentCtx, group.matrix);
	      }
	      assert(group.bbox, 'Bounding box is required.');
	      var bounds = Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);
	      var canvasBounds = [
	       0,
	       0,
	       currentCtx.canvas.width,
	       currentCtx.canvas.height
	      ];
	      bounds = Util.intersect(bounds, canvasBounds) || [
	       0,
	       0,
	       0,
	       0
	      ];
	      var offsetX = Math.floor(bounds[0]);
	      var offsetY = Math.floor(bounds[1]);
	      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);
	      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);
	      var scaleX = 1, scaleY = 1;
	      if (drawnWidth > MAX_GROUP_SIZE) {
	       scaleX = drawnWidth / MAX_GROUP_SIZE;
	       drawnWidth = MAX_GROUP_SIZE;
	      }
	      if (drawnHeight > MAX_GROUP_SIZE) {
	       scaleY = drawnHeight / MAX_GROUP_SIZE;
	       drawnHeight = MAX_GROUP_SIZE;
	      }
	      var cacheId = 'groupAt' + this.groupLevel;
	      if (group.smask) {
	       cacheId += '_smask_' + this.smaskCounter++ % 2;
	      }
	      var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);
	      var groupCtx = scratchCanvas.context;
	      groupCtx.scale(1 / scaleX, 1 / scaleY);
	      groupCtx.translate(-offsetX, -offsetY);
	      groupCtx.transform.apply(groupCtx, currentTransform);
	      if (group.smask) {
	       this.smaskStack.push({
	        canvas: scratchCanvas.canvas,
	        context: groupCtx,
	        offsetX: offsetX,
	        offsetY: offsetY,
	        scaleX: scaleX,
	        scaleY: scaleY,
	        subtype: group.smask.subtype,
	        backdrop: group.smask.backdrop,
	        transferMap: group.smask.transferMap || null,
	        startTransformInverse: null
	       });
	      } else
	       {
	        currentCtx.setTransform(1, 0, 0, 1, 0, 0);
	        currentCtx.translate(offsetX, offsetY);
	        currentCtx.scale(scaleX, scaleY);
	       }
	      copyCtxState(currentCtx, groupCtx);
	      this.ctx = groupCtx;
	      this.setGState([
	       [
	        'BM',
	        'Normal'
	       ],
	       [
	        'ca',
	        1
	       ],
	       [
	        'CA',
	        1
	       ]
	      ]);
	      this.groupStack.push(currentCtx);
	      this.groupLevel++;
	      this.current.activeSMask = null;
	     },
	     endGroup: function CanvasGraphics_endGroup(group) {
	      this.groupLevel--;
	      var groupCtx = this.ctx;
	      this.ctx = this.groupStack.pop();
	      if (this.ctx.imageSmoothingEnabled !== undefined) {
	       this.ctx.imageSmoothingEnabled = false;
	      } else {
	       this.ctx.mozImageSmoothingEnabled = false;
	      }
	      if (group.smask) {
	       this.tempSMask = this.smaskStack.pop();
	      } else {
	       this.ctx.drawImage(groupCtx.canvas, 0, 0);
	      }
	      this.restore();
	     },
	     beginAnnotations: function CanvasGraphics_beginAnnotations() {
	      this.save();
	      this.current = new CanvasExtraState();
	      if (this.baseTransform) {
	       this.ctx.setTransform.apply(this.ctx, this.baseTransform);
	      }
	     },
	     endAnnotations: function CanvasGraphics_endAnnotations() {
	      this.restore();
	     },
	     beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {
	      this.save();
	      if (isArray(rect) && rect.length === 4) {
	       var width = rect[2] - rect[0];
	       var height = rect[3] - rect[1];
	       this.ctx.rect(rect[0], rect[1], width, height);
	       this.clip();
	       this.endPath();
	      }
	      this.transform.apply(this, transform);
	      this.transform.apply(this, matrix);
	     },
	     endAnnotation: function CanvasGraphics_endAnnotation() {
	      this.restore();
	     },
	     paintJpegXObject: function CanvasGraphics_paintJpegXObject(objId, w, h) {
	      var domImage = this.objs.get(objId);
	      if (!domImage) {
	       warn('Dependent image isn\'t ready yet');
	       return;
	      }
	      this.save();
	      var ctx = this.ctx;
	      ctx.scale(1 / w, -1 / h);
	      ctx.drawImage(domImage, 0, 0, domImage.width, domImage.height, 0, -h, w, h);
	      if (this.imageLayer) {
	       var currentTransform = ctx.mozCurrentTransformInverse;
	       var position = this.getCanvasPosition(0, 0);
	       this.imageLayer.appendImage({
	        objId: objId,
	        left: position[0],
	        top: position[1],
	        width: w / currentTransform[0],
	        height: h / currentTransform[3]
	       });
	      }
	      this.restore();
	     },
	     paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {
	      var ctx = this.ctx;
	      var width = img.width, height = img.height;
	      var fillColor = this.current.fillColor;
	      var isPatternFill = this.current.patternFill;
	      var glyph = this.processingType3;
	      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {
	       if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {
	        glyph.compiled = compileType3Glyph({
	         data: img.data,
	         width: width,
	         height: height
	        });
	       } else {
	        glyph.compiled = null;
	       }
	      }
	      if (glyph && glyph.compiled) {
	       glyph.compiled(ctx);
	       return;
	      }
	      var maskCanvas = this.cachedCanvases.getCanvas('maskCanvas', width, height);
	      var maskCtx = maskCanvas.context;
	      maskCtx.save();
	      putBinaryImageMask(maskCtx, img);
	      maskCtx.globalCompositeOperation = 'source-in';
	      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;
	      maskCtx.fillRect(0, 0, width, height);
	      maskCtx.restore();
	      this.paintInlineImageXObject(maskCanvas.canvas);
	     },
	     paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(imgData, scaleX, scaleY, positions) {
	      var width = imgData.width;
	      var height = imgData.height;
	      var fillColor = this.current.fillColor;
	      var isPatternFill = this.current.patternFill;
	      var maskCanvas = this.cachedCanvases.getCanvas('maskCanvas', width, height);
	      var maskCtx = maskCanvas.context;
	      maskCtx.save();
	      putBinaryImageMask(maskCtx, imgData);
	      maskCtx.globalCompositeOperation = 'source-in';
	      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;
	      maskCtx.fillRect(0, 0, width, height);
	      maskCtx.restore();
	      var ctx = this.ctx;
	      for (var i = 0, ii = positions.length; i < ii; i += 2) {
	       ctx.save();
	       ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);
	       ctx.scale(1, -1);
	       ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);
	       ctx.restore();
	      }
	     },
	     paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {
	      var ctx = this.ctx;
	      var fillColor = this.current.fillColor;
	      var isPatternFill = this.current.patternFill;
	      for (var i = 0, ii = images.length; i < ii; i++) {
	       var image = images[i];
	       var width = image.width, height = image.height;
	       var maskCanvas = this.cachedCanvases.getCanvas('maskCanvas', width, height);
	       var maskCtx = maskCanvas.context;
	       maskCtx.save();
	       putBinaryImageMask(maskCtx, image);
	       maskCtx.globalCompositeOperation = 'source-in';
	       maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;
	       maskCtx.fillRect(0, 0, width, height);
	       maskCtx.restore();
	       ctx.save();
	       ctx.transform.apply(ctx, image.transform);
	       ctx.scale(1, -1);
	       ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);
	       ctx.restore();
	      }
	     },
	     paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {
	      var imgData = this.objs.get(objId);
	      if (!imgData) {
	       warn('Dependent image isn\'t ready yet');
	       return;
	      }
	      this.paintInlineImageXObject(imgData);
	     },
	     paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {
	      var imgData = this.objs.get(objId);
	      if (!imgData) {
	       warn('Dependent image isn\'t ready yet');
	       return;
	      }
	      var width = imgData.width;
	      var height = imgData.height;
	      var map = [];
	      for (var i = 0, ii = positions.length; i < ii; i += 2) {
	       map.push({
	        transform: [
	         scaleX,
	         0,
	         0,
	         scaleY,
	         positions[i],
	         positions[i + 1]
	        ],
	        x: 0,
	        y: 0,
	        w: width,
	        h: height
	       });
	      }
	      this.paintInlineImageXObjectGroup(imgData, map);
	     },
	     paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {
	      var width = imgData.width;
	      var height = imgData.height;
	      var ctx = this.ctx;
	      this.save();
	      ctx.scale(1 / width, -1 / height);
	      var currentTransform = ctx.mozCurrentTransformInverse;
	      var a = currentTransform[0], b = currentTransform[1];
	      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);
	      var c = currentTransform[2], d = currentTransform[3];
	      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);
	      var imgToPaint, tmpCanvas;
	      if (imgData instanceof HTMLElement || !imgData.data) {
	       imgToPaint = imgData;
	      } else {
	       tmpCanvas = this.cachedCanvases.getCanvas('inlineImage', width, height);
	       var tmpCtx = tmpCanvas.context;
	       putBinaryImageData(tmpCtx, imgData);
	       imgToPaint = tmpCanvas.canvas;
	      }
	      var paintWidth = width, paintHeight = height;
	      var tmpCanvasId = 'prescale1';
	      while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {
	       var newWidth = paintWidth, newHeight = paintHeight;
	       if (widthScale > 2 && paintWidth > 1) {
	        newWidth = Math.ceil(paintWidth / 2);
	        widthScale /= paintWidth / newWidth;
	       }
	       if (heightScale > 2 && paintHeight > 1) {
	        newHeight = Math.ceil(paintHeight / 2);
	        heightScale /= paintHeight / newHeight;
	       }
	       tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);
	       tmpCtx = tmpCanvas.context;
	       tmpCtx.clearRect(0, 0, newWidth, newHeight);
	       tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);
	       imgToPaint = tmpCanvas.canvas;
	       paintWidth = newWidth;
	       paintHeight = newHeight;
	       tmpCanvasId = tmpCanvasId === 'prescale1' ? 'prescale2' : 'prescale1';
	      }
	      ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);
	      if (this.imageLayer) {
	       var position = this.getCanvasPosition(0, -height);
	       this.imageLayer.appendImage({
	        imgData: imgData,
	        left: position[0],
	        top: position[1],
	        width: width / currentTransform[0],
	        height: height / currentTransform[3]
	       });
	      }
	      this.restore();
	     },
	     paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {
	      var ctx = this.ctx;
	      var w = imgData.width;
	      var h = imgData.height;
	      var tmpCanvas = this.cachedCanvases.getCanvas('inlineImage', w, h);
	      var tmpCtx = tmpCanvas.context;
	      putBinaryImageData(tmpCtx, imgData);
	      for (var i = 0, ii = map.length; i < ii; i++) {
	       var entry = map[i];
	       ctx.save();
	       ctx.transform.apply(ctx, entry.transform);
	       ctx.scale(1, -1);
	       ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);
	       if (this.imageLayer) {
	        var position = this.getCanvasPosition(entry.x, entry.y);
	        this.imageLayer.appendImage({
	         imgData: imgData,
	         left: position[0],
	         top: position[1],
	         width: w,
	         height: h
	        });
	       }
	       ctx.restore();
	      }
	     },
	     paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {
	      this.ctx.fillRect(0, 0, 1, 1);
	     },
	     paintXObject: function CanvasGraphics_paintXObject() {
	      warn('Unsupported \'paintXObject\' command.');
	     },
	     markPoint: function CanvasGraphics_markPoint(tag) {
	     },
	     markPointProps: function CanvasGraphics_markPointProps(tag, properties) {
	     },
	     beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {
	     },
	     beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {
	     },
	     endMarkedContent: function CanvasGraphics_endMarkedContent() {
	     },
	     beginCompat: function CanvasGraphics_beginCompat() {
	     },
	     endCompat: function CanvasGraphics_endCompat() {
	     },
	     consumePath: function CanvasGraphics_consumePath() {
	      var ctx = this.ctx;
	      if (this.pendingClip) {
	       if (this.pendingClip === EO_CLIP) {
	        ctx.clip('evenodd');
	       } else {
	        ctx.clip();
	       }
	       this.pendingClip = null;
	      }
	      ctx.beginPath();
	     },
	     getSinglePixelWidth: function CanvasGraphics_getSinglePixelWidth(scale) {
	      if (this.cachedGetSinglePixelWidth === null) {
	       this.ctx.save();
	       var inverse = this.ctx.mozCurrentTransformInverse;
	       this.ctx.restore();
	       this.cachedGetSinglePixelWidth = Math.sqrt(Math.max(inverse[0] * inverse[0] + inverse[1] * inverse[1], inverse[2] * inverse[2] + inverse[3] * inverse[3]));
	      }
	      return this.cachedGetSinglePixelWidth;
	     },
	     getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {
	      var transform = this.ctx.mozCurrentTransform;
	      return [
	       transform[0] * x + transform[2] * y + transform[4],
	       transform[1] * x + transform[3] * y + transform[5]
	      ];
	     }
	    };
	    for (var op in OPS) {
	     CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];
	    }
	    return CanvasGraphics;
	   }();
	   exports.CanvasGraphics = CanvasGraphics;
	   exports.createScratchCanvas = createScratchCanvas;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreImage = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreColorSpace, root.pdfjsCoreStream, root.pdfjsCoreJpx);
	  }(this, function (exports, sharedUtil, corePrimitives, coreColorSpace, coreStream, coreJpx) {
	   var ImageKind = sharedUtil.ImageKind;
	   var assert = sharedUtil.assert;
	   var error = sharedUtil.error;
	   var info = sharedUtil.info;
	   var isArray = sharedUtil.isArray;
	   var warn = sharedUtil.warn;
	   var Name = corePrimitives.Name;
	   var isStream = corePrimitives.isStream;
	   var ColorSpace = coreColorSpace.ColorSpace;
	   var DecodeStream = coreStream.DecodeStream;
	   var JpegStream = coreStream.JpegStream;
	   var JpxImage = coreJpx.JpxImage;
	   var PDFImage = function PDFImageClosure() {
	    function handleImageData(image, nativeDecoder) {
	     if (nativeDecoder && nativeDecoder.canDecode(image)) {
	      return nativeDecoder.decode(image);
	     }
	     return Promise.resolve(image);
	    }
	    function decodeAndClamp(value, addend, coefficient, max) {
	     value = addend + value * coefficient;
	     return value < 0 ? 0 : value > max ? max : value;
	    }
	    function resizeImageMask(src, bpc, w1, h1, w2, h2) {
	     var length = w2 * h2;
	     var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);
	     var xRatio = w1 / w2;
	     var yRatio = h1 / h2;
	     var i, j, py, newIndex = 0, oldIndex;
	     var xScaled = new Uint16Array(w2);
	     var w1Scanline = w1;
	     for (i = 0; i < w2; i++) {
	      xScaled[i] = Math.floor(i * xRatio);
	     }
	     for (i = 0; i < h2; i++) {
	      py = Math.floor(i * yRatio) * w1Scanline;
	      for (j = 0; j < w2; j++) {
	       oldIndex = py + xScaled[j];
	       dest[newIndex++] = src[oldIndex];
	      }
	     }
	     return dest;
	    }
	    function PDFImage(xref, res, image, inline, smask, mask, isMask) {
	     this.image = image;
	     var dict = image.dict;
	     if (dict.has('Filter')) {
	      var filter = dict.get('Filter').name;
	      if (filter === 'JPXDecode') {
	       var jpxImage = new JpxImage();
	       jpxImage.parseImageProperties(image.stream);
	       image.stream.reset();
	       image.bitsPerComponent = jpxImage.bitsPerComponent;
	       image.numComps = jpxImage.componentsCount;
	      } else if (filter === 'JBIG2Decode') {
	       image.bitsPerComponent = 1;
	       image.numComps = 1;
	      }
	     }
	     this.width = dict.get('Width', 'W');
	     this.height = dict.get('Height', 'H');
	     if (this.width < 1 || this.height < 1) {
	      error('Invalid image width: ' + this.width + ' or height: ' + this.height);
	     }
	     this.interpolate = dict.get('Interpolate', 'I') || false;
	     this.imageMask = dict.get('ImageMask', 'IM') || false;
	     this.matte = dict.get('Matte') || false;
	     var bitsPerComponent = image.bitsPerComponent;
	     if (!bitsPerComponent) {
	      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');
	      if (!bitsPerComponent) {
	       if (this.imageMask) {
	        bitsPerComponent = 1;
	       } else {
	        error('Bits per component missing in image: ' + this.imageMask);
	       }
	      }
	     }
	     this.bpc = bitsPerComponent;
	     if (!this.imageMask) {
	      var colorSpace = dict.get('ColorSpace', 'CS');
	      if (!colorSpace) {
	       info('JPX images (which do not require color spaces)');
	       switch (image.numComps) {
	       case 1:
	        colorSpace = Name.get('DeviceGray');
	        break;
	       case 3:
	        colorSpace = Name.get('DeviceRGB');
	        break;
	       case 4:
	        colorSpace = Name.get('DeviceCMYK');
	        break;
	       default:
	        error('JPX images with ' + this.numComps + ' color components not supported.');
	       }
	      }
	      this.colorSpace = ColorSpace.parse(colorSpace, xref, res);
	      this.numComps = this.colorSpace.numComps;
	     }
	     this.decode = dict.getArray('Decode', 'D');
	     this.needsDecode = false;
	     if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !ColorSpace.isDefaultDecode(this.decode, 1))) {
	      this.needsDecode = true;
	      var max = (1 << bitsPerComponent) - 1;
	      this.decodeCoefficients = [];
	      this.decodeAddends = [];
	      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {
	       var dmin = this.decode[i];
	       var dmax = this.decode[i + 1];
	       this.decodeCoefficients[j] = dmax - dmin;
	       this.decodeAddends[j] = max * dmin;
	      }
	     }
	     if (smask) {
	      this.smask = new PDFImage(xref, res, smask, false);
	     } else if (mask) {
	      if (isStream(mask)) {
	       var maskDict = mask.dict, imageMask = maskDict.get('ImageMask', 'IM');
	       if (!imageMask) {
	        warn('Ignoring /Mask in image without /ImageMask.');
	       } else {
	        this.mask = new PDFImage(xref, res, mask, false, null, null, true);
	       }
	      } else {
	       this.mask = mask;
	      }
	     }
	    }
	    PDFImage.buildImage = function PDFImage_buildImage(handler, xref, res, image, inline, nativeDecoder) {
	     var imagePromise = handleImageData(image, nativeDecoder);
	     var smaskPromise;
	     var maskPromise;
	     var smask = image.dict.get('SMask');
	     var mask = image.dict.get('Mask');
	     if (smask) {
	      smaskPromise = handleImageData(smask, nativeDecoder);
	      maskPromise = Promise.resolve(null);
	     } else {
	      smaskPromise = Promise.resolve(null);
	      if (mask) {
	       if (isStream(mask)) {
	        maskPromise = handleImageData(mask, nativeDecoder);
	       } else if (isArray(mask)) {
	        maskPromise = Promise.resolve(mask);
	       } else {
	        warn('Unsupported mask format.');
	        maskPromise = Promise.resolve(null);
	       }
	      } else {
	       maskPromise = Promise.resolve(null);
	      }
	     }
	     return Promise.all([
	      imagePromise,
	      smaskPromise,
	      maskPromise
	     ]).then(function (results) {
	      var imageData = results[0];
	      var smaskData = results[1];
	      var maskData = results[2];
	      return new PDFImage(xref, res, imageData, inline, smaskData, maskData);
	     });
	    };
	    PDFImage.createMask = function PDFImage_createMask(imgArray, width, height, imageIsFromDecodeStream, inverseDecode) {
	     var computedLength = (width + 7 >> 3) * height;
	     var actualLength = imgArray.byteLength;
	     var haveFullData = computedLength === actualLength;
	     var data, i;
	     if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {
	      data = imgArray;
	     } else if (!inverseDecode) {
	      data = new Uint8Array(actualLength);
	      data.set(imgArray);
	     } else {
	      data = new Uint8Array(computedLength);
	      data.set(imgArray);
	      for (i = actualLength; i < computedLength; i++) {
	       data[i] = 0xff;
	      }
	     }
	     if (inverseDecode) {
	      for (i = 0; i < actualLength; i++) {
	       data[i] = ~data[i];
	      }
	     }
	     return {
	      data: data,
	      width: width,
	      height: height
	     };
	    };
	    PDFImage.prototype = {
	     get drawWidth() {
	      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);
	     },
	     get drawHeight() {
	      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);
	     },
	     decodeBuffer: function PDFImage_decodeBuffer(buffer) {
	      var bpc = this.bpc;
	      var numComps = this.numComps;
	      var decodeAddends = this.decodeAddends;
	      var decodeCoefficients = this.decodeCoefficients;
	      var max = (1 << bpc) - 1;
	      var i, ii;
	      if (bpc === 1) {
	       for (i = 0, ii = buffer.length; i < ii; i++) {
	        buffer[i] = +!buffer[i];
	       }
	       return;
	      }
	      var index = 0;
	      for (i = 0, ii = this.width * this.height; i < ii; i++) {
	       for (var j = 0; j < numComps; j++) {
	        buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);
	        index++;
	       }
	      }
	     },
	     getComponents: function PDFImage_getComponents(buffer) {
	      var bpc = this.bpc;
	      if (bpc === 8) {
	       return buffer;
	      }
	      var width = this.width;
	      var height = this.height;
	      var numComps = this.numComps;
	      var length = width * height * numComps;
	      var bufferPos = 0;
	      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);
	      var rowComps = width * numComps;
	      var max = (1 << bpc) - 1;
	      var i = 0, ii, buf;
	      if (bpc === 1) {
	       var mask, loop1End, loop2End;
	       for (var j = 0; j < height; j++) {
	        loop1End = i + (rowComps & ~7);
	        loop2End = i + rowComps;
	        while (i < loop1End) {
	         buf = buffer[bufferPos++];
	         output[i] = buf >> 7 & 1;
	         output[i + 1] = buf >> 6 & 1;
	         output[i + 2] = buf >> 5 & 1;
	         output[i + 3] = buf >> 4 & 1;
	         output[i + 4] = buf >> 3 & 1;
	         output[i + 5] = buf >> 2 & 1;
	         output[i + 6] = buf >> 1 & 1;
	         output[i + 7] = buf & 1;
	         i += 8;
	        }
	        if (i < loop2End) {
	         buf = buffer[bufferPos++];
	         mask = 128;
	         while (i < loop2End) {
	          output[i++] = +!!(buf & mask);
	          mask >>= 1;
	         }
	        }
	       }
	      } else {
	       var bits = 0;
	       buf = 0;
	       for (i = 0, ii = length; i < ii; ++i) {
	        if (i % rowComps === 0) {
	         buf = 0;
	         bits = 0;
	        }
	        while (bits < bpc) {
	         buf = buf << 8 | buffer[bufferPos++];
	         bits += 8;
	        }
	        var remainingBits = bits - bpc;
	        var value = buf >> remainingBits;
	        output[i] = value < 0 ? 0 : value > max ? max : value;
	        buf = buf & (1 << remainingBits) - 1;
	        bits = remainingBits;
	       }
	      }
	      return output;
	     },
	     fillOpacity: function PDFImage_fillOpacity(rgbaBuf, width, height, actualHeight, image) {
	      var smask = this.smask;
	      var mask = this.mask;
	      var alphaBuf, sw, sh, i, ii, j;
	      if (smask) {
	       sw = smask.width;
	       sh = smask.height;
	       alphaBuf = new Uint8Array(sw * sh);
	       smask.fillGrayBuffer(alphaBuf);
	       if (sw !== width || sh !== height) {
	        alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);
	       }
	      } else if (mask) {
	       if (mask instanceof PDFImage) {
	        sw = mask.width;
	        sh = mask.height;
	        alphaBuf = new Uint8Array(sw * sh);
	        mask.numComps = 1;
	        mask.fillGrayBuffer(alphaBuf);
	        for (i = 0, ii = sw * sh; i < ii; ++i) {
	         alphaBuf[i] = 255 - alphaBuf[i];
	        }
	        if (sw !== width || sh !== height) {
	         alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);
	        }
	       } else if (isArray(mask)) {
	        alphaBuf = new Uint8Array(width * height);
	        var numComps = this.numComps;
	        for (i = 0, ii = width * height; i < ii; ++i) {
	         var opacity = 0;
	         var imageOffset = i * numComps;
	         for (j = 0; j < numComps; ++j) {
	          var color = image[imageOffset + j];
	          var maskOffset = j * 2;
	          if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {
	           opacity = 255;
	           break;
	          }
	         }
	         alphaBuf[i] = opacity;
	        }
	       } else {
	        error('Unknown mask format.');
	       }
	      }
	      if (alphaBuf) {
	       for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {
	        rgbaBuf[j] = alphaBuf[i];
	       }
	      } else {
	       for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {
	        rgbaBuf[j] = 255;
	       }
	      }
	     },
	     undoPreblend: function PDFImage_undoPreblend(buffer, width, height) {
	      var matte = this.smask && this.smask.matte;
	      if (!matte) {
	       return;
	      }
	      var matteRgb = this.colorSpace.getRgb(matte, 0);
	      var matteR = matteRgb[0];
	      var matteG = matteRgb[1];
	      var matteB = matteRgb[2];
	      var length = width * height * 4;
	      var r, g, b;
	      for (var i = 0; i < length; i += 4) {
	       var alpha = buffer[i + 3];
	       if (alpha === 0) {
	        buffer[i] = 255;
	        buffer[i + 1] = 255;
	        buffer[i + 2] = 255;
	        continue;
	       }
	       var k = 255 / alpha;
	       r = (buffer[i] - matteR) * k + matteR;
	       g = (buffer[i + 1] - matteG) * k + matteG;
	       b = (buffer[i + 2] - matteB) * k + matteB;
	       buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;
	       buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;
	       buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;
	      }
	     },
	     createImageData: function PDFImage_createImageData(forceRGBA) {
	      var drawWidth = this.drawWidth;
	      var drawHeight = this.drawHeight;
	      var imgData = {
	       width: drawWidth,
	       height: drawHeight
	      };
	      var numComps = this.numComps;
	      var originalWidth = this.width;
	      var originalHeight = this.height;
	      var bpc = this.bpc;
	      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;
	      var imgArray;
	      if (!forceRGBA) {
	       var kind;
	       if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {
	        kind = ImageKind.GRAYSCALE_1BPP;
	       } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {
	        kind = ImageKind.RGB_24BPP;
	       }
	       if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {
	        imgData.kind = kind;
	        imgArray = this.getImageBytes(originalHeight * rowBytes);
	        if (this.image instanceof DecodeStream) {
	         imgData.data = imgArray;
	        } else {
	         var newArray = new Uint8Array(imgArray.length);
	         newArray.set(imgArray);
	         imgData.data = newArray;
	        }
	        if (this.needsDecode) {
	         assert(kind === ImageKind.GRAYSCALE_1BPP);
	         var buffer = imgData.data;
	         for (var i = 0, ii = buffer.length; i < ii; i++) {
	          buffer[i] ^= 0xff;
	         }
	        }
	        return imgData;
	       }
	       if (this.image instanceof JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {
	        imgData.kind = ImageKind.RGB_24BPP;
	        imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);
	        return imgData;
	       }
	      }
	      imgArray = this.getImageBytes(originalHeight * rowBytes);
	      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;
	      var comps = this.getComponents(imgArray);
	      var alpha01, maybeUndoPreblend;
	      if (!forceRGBA && !this.smask && !this.mask) {
	       imgData.kind = ImageKind.RGB_24BPP;
	       imgData.data = new Uint8Array(drawWidth * drawHeight * 3);
	       alpha01 = 0;
	       maybeUndoPreblend = false;
	      } else {
	       imgData.kind = ImageKind.RGBA_32BPP;
	       imgData.data = new Uint8Array(drawWidth * drawHeight * 4);
	       alpha01 = 1;
	       maybeUndoPreblend = true;
	       this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);
	      }
	      if (this.needsDecode) {
	       this.decodeBuffer(comps);
	      }
	      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);
	      if (maybeUndoPreblend) {
	       this.undoPreblend(imgData.data, drawWidth, actualHeight);
	      }
	      return imgData;
	     },
	     fillGrayBuffer: function PDFImage_fillGrayBuffer(buffer) {
	      var numComps = this.numComps;
	      if (numComps !== 1) {
	       error('Reading gray scale from a color image: ' + numComps);
	      }
	      var width = this.width;
	      var height = this.height;
	      var bpc = this.bpc;
	      var rowBytes = width * numComps * bpc + 7 >> 3;
	      var imgArray = this.getImageBytes(height * rowBytes);
	      var comps = this.getComponents(imgArray);
	      var i, length;
	      if (bpc === 1) {
	       length = width * height;
	       if (this.needsDecode) {
	        for (i = 0; i < length; ++i) {
	         buffer[i] = comps[i] - 1 & 255;
	        }
	       } else {
	        for (i = 0; i < length; ++i) {
	         buffer[i] = -comps[i] & 255;
	        }
	       }
	       return;
	      }
	      if (this.needsDecode) {
	       this.decodeBuffer(comps);
	      }
	      length = width * height;
	      var scale = 255 / ((1 << bpc) - 1);
	      for (i = 0; i < length; ++i) {
	       buffer[i] = scale * comps[i] | 0;
	      }
	     },
	     getImageBytes: function PDFImage_getImageBytes(length, drawWidth, drawHeight, forceRGB) {
	      this.image.reset();
	      this.image.drawWidth = drawWidth || this.width;
	      this.image.drawHeight = drawHeight || this.height;
	      this.image.forceRGB = !!forceRGB;
	      return this.image.getBytes(length);
	     }
	    };
	    return PDFImage;
	   }();
	   exports.PDFImage = PDFImage;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreObj = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreCrypto, root.pdfjsCoreParser, root.pdfjsCoreChunkedStream, root.pdfjsCoreColorSpace);
	  }(this, function (exports, sharedUtil, corePrimitives, coreCrypto, coreParser, coreChunkedStream, coreColorSpace) {
	   var InvalidPDFException = sharedUtil.InvalidPDFException;
	   var MissingDataException = sharedUtil.MissingDataException;
	   var XRefParseException = sharedUtil.XRefParseException;
	   var assert = sharedUtil.assert;
	   var bytesToString = sharedUtil.bytesToString;
	   var createPromiseCapability = sharedUtil.createPromiseCapability;
	   var error = sharedUtil.error;
	   var info = sharedUtil.info;
	   var isArray = sharedUtil.isArray;
	   var isBool = sharedUtil.isBool;
	   var isInt = sharedUtil.isInt;
	   var isString = sharedUtil.isString;
	   var shadow = sharedUtil.shadow;
	   var stringToPDFString = sharedUtil.stringToPDFString;
	   var stringToUTF8String = sharedUtil.stringToUTF8String;
	   var warn = sharedUtil.warn;
	   var createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;
	   var Util = sharedUtil.Util;
	   var Ref = corePrimitives.Ref;
	   var RefSet = corePrimitives.RefSet;
	   var RefSetCache = corePrimitives.RefSetCache;
	   var isName = corePrimitives.isName;
	   var isCmd = corePrimitives.isCmd;
	   var isDict = corePrimitives.isDict;
	   var isRef = corePrimitives.isRef;
	   var isRefsEqual = corePrimitives.isRefsEqual;
	   var isStream = corePrimitives.isStream;
	   var CipherTransformFactory = coreCrypto.CipherTransformFactory;
	   var Lexer = coreParser.Lexer;
	   var Parser = coreParser.Parser;
	   var ChunkedStream = coreChunkedStream.ChunkedStream;
	   var ColorSpace = coreColorSpace.ColorSpace;
	   var Catalog = function CatalogClosure() {
	    function Catalog(pdfManager, xref, pageFactory) {
	     this.pdfManager = pdfManager;
	     this.xref = xref;
	     this.catDict = xref.getCatalogObj();
	     this.fontCache = new RefSetCache();
	     assert(isDict(this.catDict), 'catalog object is not a dictionary');
	     this.pageFactory = pageFactory;
	     this.pagePromises = [];
	    }
	    Catalog.prototype = {
	     get metadata() {
	      var streamRef = this.catDict.getRaw('Metadata');
	      if (!isRef(streamRef)) {
	       return shadow(this, 'metadata', null);
	      }
	      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;
	      var stream = this.xref.fetch(streamRef, !encryptMetadata);
	      var metadata;
	      if (stream && isDict(stream.dict)) {
	       var type = stream.dict.get('Type');
	       var subtype = stream.dict.get('Subtype');
	       if (isName(type, 'Metadata') && isName(subtype, 'XML')) {
	        try {
	         metadata = stringToUTF8String(bytesToString(stream.getBytes()));
	        } catch (e) {
	         info('Skipping invalid metadata.');
	        }
	       }
	      }
	      return shadow(this, 'metadata', metadata);
	     },
	     get toplevelPagesDict() {
	      var pagesObj = this.catDict.get('Pages');
	      assert(isDict(pagesObj), 'invalid top-level pages dictionary');
	      return shadow(this, 'toplevelPagesDict', pagesObj);
	     },
	     get documentOutline() {
	      var obj = null;
	      try {
	       obj = this.readDocumentOutline();
	      } catch (ex) {
	       if (ex instanceof MissingDataException) {
	        throw ex;
	       }
	       warn('Unable to read document outline');
	      }
	      return shadow(this, 'documentOutline', obj);
	     },
	     readDocumentOutline: function Catalog_readDocumentOutline() {
	      var obj = this.catDict.get('Outlines');
	      if (!isDict(obj)) {
	       return null;
	      }
	      obj = obj.getRaw('First');
	      if (!isRef(obj)) {
	       return null;
	      }
	      var root = { items: [] };
	      var queue = [{
	        obj: obj,
	        parent: root
	       }];
	      var processed = new RefSet();
	      processed.put(obj);
	      var xref = this.xref, blackColor = new Uint8Array(3);
	      while (queue.length > 0) {
	       var i = queue.shift();
	       var outlineDict = xref.fetchIfRef(i.obj);
	       if (outlineDict === null) {
	        continue;
	       }
	       assert(outlineDict.has('Title'), 'Invalid outline item');
	       var data = {
	        url: null,
	        dest: null
	       };
	       Catalog.parseDestDictionary({
	        destDict: outlineDict,
	        resultObj: data,
	        docBaseUrl: this.pdfManager.docBaseUrl
	       });
	       var title = outlineDict.get('Title');
	       var flags = outlineDict.get('F') || 0;
	       var color = outlineDict.getArray('C'), rgbColor = blackColor;
	       if (isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {
	        rgbColor = ColorSpace.singletons.rgb.getRgb(color, 0);
	       }
	       var outlineItem = {
	        dest: data.dest,
	        url: data.url,
	        unsafeUrl: data.unsafeUrl,
	        newWindow: data.newWindow,
	        title: stringToPDFString(title),
	        color: rgbColor,
	        count: outlineDict.get('Count'),
	        bold: !!(flags & 2),
	        italic: !!(flags & 1),
	        items: []
	       };
	       i.parent.items.push(outlineItem);
	       obj = outlineDict.getRaw('First');
	       if (isRef(obj) && !processed.has(obj)) {
	        queue.push({
	         obj: obj,
	         parent: outlineItem
	        });
	        processed.put(obj);
	       }
	       obj = outlineDict.getRaw('Next');
	       if (isRef(obj) && !processed.has(obj)) {
	        queue.push({
	         obj: obj,
	         parent: i.parent
	        });
	        processed.put(obj);
	       }
	      }
	      return root.items.length > 0 ? root.items : null;
	     },
	     get numPages() {
	      var obj = this.toplevelPagesDict.get('Count');
	      assert(isInt(obj), 'page count in top level pages object is not an integer');
	      return shadow(this, 'num', obj);
	     },
	     get destinations() {
	      function fetchDestination(dest) {
	       return isDict(dest) ? dest.get('D') : dest;
	      }
	      var xref = this.xref;
	      var dests = {}, nameTreeRef, nameDictionaryRef;
	      var obj = this.catDict.get('Names');
	      if (obj && obj.has('Dests')) {
	       nameTreeRef = obj.getRaw('Dests');
	      } else if (this.catDict.has('Dests')) {
	       nameDictionaryRef = this.catDict.get('Dests');
	      }
	      if (nameDictionaryRef) {
	       obj = nameDictionaryRef;
	       obj.forEach(function catalogForEach(key, value) {
	        if (!value) {
	         return;
	        }
	        dests[key] = fetchDestination(value);
	       });
	      }
	      if (nameTreeRef) {
	       var nameTree = new NameTree(nameTreeRef, xref);
	       var names = nameTree.getAll();
	       for (var name in names) {
	        dests[name] = fetchDestination(names[name]);
	       }
	      }
	      return shadow(this, 'destinations', dests);
	     },
	     getDestination: function Catalog_getDestination(destinationId) {
	      function fetchDestination(dest) {
	       return isDict(dest) ? dest.get('D') : dest;
	      }
	      var xref = this.xref;
	      var dest = null, nameTreeRef, nameDictionaryRef;
	      var obj = this.catDict.get('Names');
	      if (obj && obj.has('Dests')) {
	       nameTreeRef = obj.getRaw('Dests');
	      } else if (this.catDict.has('Dests')) {
	       nameDictionaryRef = this.catDict.get('Dests');
	      }
	      if (nameDictionaryRef) {
	       var value = nameDictionaryRef.get(destinationId);
	       if (value) {
	        dest = fetchDestination(value);
	       }
	      }
	      if (nameTreeRef) {
	       var nameTree = new NameTree(nameTreeRef, xref);
	       dest = fetchDestination(nameTree.get(destinationId));
	      }
	      return dest;
	     },
	     get pageLabels() {
	      var obj = null;
	      try {
	       obj = this.readPageLabels();
	      } catch (ex) {
	       if (ex instanceof MissingDataException) {
	        throw ex;
	       }
	       warn('Unable to read page labels.');
	      }
	      return shadow(this, 'pageLabels', obj);
	     },
	     readPageLabels: function Catalog_readPageLabels() {
	      var obj = this.catDict.getRaw('PageLabels');
	      if (!obj) {
	       return null;
	      }
	      var pageLabels = new Array(this.numPages);
	      var style = null;
	      var prefix = '';
	      var numberTree = new NumberTree(obj, this.xref);
	      var nums = numberTree.getAll();
	      var currentLabel = '', currentIndex = 1;
	      for (var i = 0, ii = this.numPages; i < ii; i++) {
	       if (i in nums) {
	        var labelDict = nums[i];
	        assert(isDict(labelDict), 'The PageLabel is not a dictionary.');
	        var type = labelDict.get('Type');
	        assert(!type || isName(type, 'PageLabel'), 'Invalid type in PageLabel dictionary.');
	        var s = labelDict.get('S');
	        assert(!s || isName(s), 'Invalid style in PageLabel dictionary.');
	        style = s ? s.name : null;
	        var p = labelDict.get('P');
	        assert(!p || isString(p), 'Invalid prefix in PageLabel dictionary.');
	        prefix = p ? stringToPDFString(p) : '';
	        var st = labelDict.get('St');
	        assert(!st || isInt(st) && st >= 1, 'Invalid start in PageLabel dictionary.');
	        currentIndex = st || 1;
	       }
	       switch (style) {
	       case 'D':
	        currentLabel = currentIndex;
	        break;
	       case 'R':
	       case 'r':
	        currentLabel = Util.toRoman(currentIndex, style === 'r');
	        break;
	       case 'A':
	       case 'a':
	        var LIMIT = 26;
	        var A_UPPER_CASE = 0x41, A_LOWER_CASE = 0x61;
	        var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;
	        var letterIndex = currentIndex - 1;
	        var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);
	        var charBuf = [];
	        for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {
	         charBuf.push(character);
	        }
	        currentLabel = charBuf.join('');
	        break;
	       default:
	        assert(!style, 'Invalid style "' + style + '" in PageLabel dictionary.');
	       }
	       pageLabels[i] = prefix + currentLabel;
	       currentLabel = '';
	       currentIndex++;
	      }
	      return pageLabels;
	     },
	     get attachments() {
	      var xref = this.xref;
	      var attachments = null, nameTreeRef;
	      var obj = this.catDict.get('Names');
	      if (obj) {
	       nameTreeRef = obj.getRaw('EmbeddedFiles');
	      }
	      if (nameTreeRef) {
	       var nameTree = new NameTree(nameTreeRef, xref);
	       var names = nameTree.getAll();
	       for (var name in names) {
	        var fs = new FileSpec(names[name], xref);
	        if (!attachments) {
	         attachments = Object.create(null);
	        }
	        attachments[stringToPDFString(name)] = fs.serializable;
	       }
	      }
	      return shadow(this, 'attachments', attachments);
	     },
	     get javaScript() {
	      var xref = this.xref;
	      var obj = this.catDict.get('Names');
	      var javaScript = [];
	      function appendIfJavaScriptDict(jsDict) {
	       var type = jsDict.get('S');
	       if (!isName(type, 'JavaScript')) {
	        return;
	       }
	       var js = jsDict.get('JS');
	       if (isStream(js)) {
	        js = bytesToString(js.getBytes());
	       } else if (!isString(js)) {
	        return;
	       }
	       javaScript.push(stringToPDFString(js));
	      }
	      if (obj && obj.has('JavaScript')) {
	       var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);
	       var names = nameTree.getAll();
	       for (var name in names) {
	        var jsDict = names[name];
	        if (isDict(jsDict)) {
	         appendIfJavaScriptDict(jsDict);
	        }
	       }
	      }
	      var openactionDict = this.catDict.get('OpenAction');
	      if (isDict(openactionDict, 'Action')) {
	       var actionType = openactionDict.get('S');
	       if (isName(actionType, 'Named')) {
	        var action = openactionDict.get('N');
	        if (isName(action, 'Print')) {
	         javaScript.push('print({});');
	        }
	       } else {
	        appendIfJavaScriptDict(openactionDict);
	       }
	      }
	      return shadow(this, 'javaScript', javaScript);
	     },
	     cleanup: function Catalog_cleanup() {
	      var promises = [];
	      this.fontCache.forEach(function (promise) {
	       promises.push(promise);
	      });
	      return Promise.all(promises).then(function (translatedFonts) {
	       for (var i = 0, ii = translatedFonts.length; i < ii; i++) {
	        var font = translatedFonts[i].dict;
	        delete font.translated;
	       }
	       this.fontCache.clear();
	      }.bind(this));
	     },
	     getPage: function Catalog_getPage(pageIndex) {
	      if (!(pageIndex in this.pagePromises)) {
	       this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (a) {
	        var dict = a[0];
	        var ref = a[1];
	        return this.pageFactory.createPage(pageIndex, dict, ref, this.fontCache);
	       }.bind(this));
	      }
	      return this.pagePromises[pageIndex];
	     },
	     getPageDict: function Catalog_getPageDict(pageIndex) {
	      var capability = createPromiseCapability();
	      var nodesToVisit = [this.catDict.getRaw('Pages')];
	      var currentPageIndex = 0;
	      var xref = this.xref;
	      var checkAllKids = false;
	      function next() {
	       while (nodesToVisit.length) {
	        var currentNode = nodesToVisit.pop();
	        if (isRef(currentNode)) {
	         xref.fetchAsync(currentNode).then(function (obj) {
	          if (isDict(obj, 'Page') || isDict(obj) && !obj.has('Kids')) {
	           if (pageIndex === currentPageIndex) {
	            capability.resolve([
	             obj,
	             currentNode
	            ]);
	           } else {
	            currentPageIndex++;
	            next();
	           }
	           return;
	          }
	          nodesToVisit.push(obj);
	          next();
	         }, capability.reject);
	         return;
	        }
	        assert(isDict(currentNode), 'page dictionary kid reference points to wrong type of object');
	        var count = currentNode.get('Count');
	        if (count === 0) {
	         checkAllKids = true;
	        }
	        if (currentPageIndex + count <= pageIndex) {
	         currentPageIndex += count;
	         continue;
	        }
	        var kids = currentNode.get('Kids');
	        assert(isArray(kids), 'page dictionary kids object is not an array');
	        if (!checkAllKids && count === kids.length) {
	         nodesToVisit = [kids[pageIndex - currentPageIndex]];
	         currentPageIndex = pageIndex;
	         continue;
	        } else {
	         for (var last = kids.length - 1; last >= 0; last--) {
	          nodesToVisit.push(kids[last]);
	         }
	        }
	       }
	       capability.reject('Page index ' + pageIndex + ' not found.');
	      }
	      next();
	      return capability.promise;
	     },
	     getPageIndex: function Catalog_getPageIndex(pageRef) {
	      var xref = this.xref;
	      function pagesBeforeRef(kidRef) {
	       var total = 0;
	       var parentRef;
	       return xref.fetchAsync(kidRef).then(function (node) {
	        if (isRefsEqual(kidRef, pageRef) && !isDict(node, 'Page') && !(isDict(node) && !node.has('Type') && node.has('Contents'))) {
	         throw new Error('The reference does not point to a /Page Dict.');
	        }
	        if (!node) {
	         return null;
	        }
	        assert(isDict(node), 'node must be a Dict.');
	        parentRef = node.getRaw('Parent');
	        return node.getAsync('Parent');
	       }).then(function (parent) {
	        if (!parent) {
	         return null;
	        }
	        assert(isDict(parent), 'parent must be a Dict.');
	        return parent.getAsync('Kids');
	       }).then(function (kids) {
	        if (!kids) {
	         return null;
	        }
	        var kidPromises = [];
	        var found = false;
	        for (var i = 0; i < kids.length; i++) {
	         var kid = kids[i];
	         assert(isRef(kid), 'kid must be a Ref.');
	         if (kid.num === kidRef.num) {
	          found = true;
	          break;
	         }
	         kidPromises.push(xref.fetchAsync(kid).then(function (kid) {
	          if (kid.has('Count')) {
	           var count = kid.get('Count');
	           total += count;
	          } else {
	           total++;
	          }
	         }));
	        }
	        if (!found) {
	         error('kid ref not found in parents kids');
	        }
	        return Promise.all(kidPromises).then(function () {
	         return [
	          total,
	          parentRef
	         ];
	        });
	       });
	      }
	      var total = 0;
	      function next(ref) {
	       return pagesBeforeRef(ref).then(function (args) {
	        if (!args) {
	         return total;
	        }
	        var count = args[0];
	        var parentRef = args[1];
	        total += count;
	        return next(parentRef);
	       });
	      }
	      return next(pageRef);
	     }
	    };
	    Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {
	     function addDefaultProtocolToUrl(url) {
	      if (url.indexOf('www.') === 0) {
	       return 'http://' + url;
	      }
	      return url;
	     }
	     function tryConvertUrlEncoding(url) {
	      try {
	       return stringToUTF8String(url);
	      } catch (e) {
	       return url;
	      }
	     }
	     var destDict = params.destDict;
	     if (!isDict(destDict)) {
	      warn('Catalog_parseDestDictionary: "destDict" must be a dictionary.');
	      return;
	     }
	     var resultObj = params.resultObj;
	     if (typeof resultObj !== 'object') {
	      warn('Catalog_parseDestDictionary: "resultObj" must be an object.');
	      return;
	     }
	     var docBaseUrl = params.docBaseUrl || null;
	     var action = destDict.get('A'), url, dest;
	     if (isDict(action)) {
	      var linkType = action.get('S').name;
	      switch (linkType) {
	      case 'URI':
	       url = action.get('URI');
	       if (isName(url)) {
	        url = '/' + url.name;
	       } else if (isString(url)) {
	        url = addDefaultProtocolToUrl(url);
	       }
	       break;
	      case 'GoTo':
	       dest = action.get('D');
	       break;
	      case 'Launch':
	      case 'GoToR':
	       var urlDict = action.get('F');
	       if (isDict(urlDict)) {
	        url = urlDict.get('F') || null;
	       } else if (isString(urlDict)) {
	        url = urlDict;
	       }
	       var remoteDest = action.get('D');
	       if (remoteDest) {
	        if (isName(remoteDest)) {
	         remoteDest = remoteDest.name;
	        }
	        if (isString(url)) {
	         var baseUrl = url.split('#')[0];
	         if (isString(remoteDest)) {
	          url = baseUrl + '#' + (/^\d+$/.test(remoteDest) ? 'nameddest=' : '') + remoteDest;
	         } else if (isArray(remoteDest)) {
	          url = baseUrl + '#' + JSON.stringify(remoteDest);
	         }
	        }
	       }
	       var newWindow = action.get('NewWindow');
	       if (isBool(newWindow)) {
	        resultObj.newWindow = newWindow;
	       }
	       break;
	      case 'Named':
	       var namedAction = action.get('N');
	       if (isName(namedAction)) {
	        resultObj.action = namedAction.name;
	       }
	       break;
	      case 'JavaScript':
	       var jsAction = action.get('JS'), js;
	       if (isStream(jsAction)) {
	        js = bytesToString(jsAction.getBytes());
	       } else if (isString(jsAction)) {
	        js = jsAction;
	       }
	       if (js) {
	        var URL_OPEN_METHODS = [
	         'app.launchURL',
	         'window.open'
	        ];
	        var regex = new RegExp('^(?:' + URL_OPEN_METHODS.join('|') + ')' + '\\((?:\'|\")(\\S+)(?:\'|\")(?:,|\\))');
	        var jsUrl = regex.exec(stringToPDFString(js), 'i');
	        if (jsUrl && jsUrl[1]) {
	         url = jsUrl[1];
	         break;
	        }
	       }
	      default:
	       warn('Catalog_parseDestDictionary: Unrecognized link type "' + linkType + '".');
	       break;
	      }
	     } else if (destDict.has('Dest')) {
	      dest = destDict.get('Dest');
	     }
	     if (isString(url)) {
	      url = tryConvertUrlEncoding(url);
	      var absoluteUrl = createValidAbsoluteUrl(url, docBaseUrl);
	      if (absoluteUrl) {
	       resultObj.url = absoluteUrl.href;
	      }
	      resultObj.unsafeUrl = url;
	     }
	     if (dest) {
	      if (isName(dest)) {
	       dest = dest.name;
	      }
	      if (isString(dest) || isArray(dest)) {
	       resultObj.dest = dest;
	      }
	     }
	    };
	    return Catalog;
	   }();
	   var XRef = function XRefClosure() {
	    function XRef(stream, pdfManager) {
	     this.stream = stream;
	     this.pdfManager = pdfManager;
	     this.entries = [];
	     this.xrefstms = Object.create(null);
	     this.cache = [];
	     this.stats = {
	      streamTypes: [],
	      fontTypes: []
	     };
	    }
	    XRef.prototype = {
	     setStartXRef: function XRef_setStartXRef(startXRef) {
	      this.startXRefQueue = [startXRef];
	     },
	     parse: function XRef_parse(recoveryMode) {
	      var trailerDict;
	      if (!recoveryMode) {
	       trailerDict = this.readXRef();
	      } else {
	       warn('Indexing all PDF objects');
	       trailerDict = this.indexObjects();
	      }
	      trailerDict.assignXref(this);
	      this.trailer = trailerDict;
	      var encrypt = trailerDict.get('Encrypt');
	      if (isDict(encrypt)) {
	       var ids = trailerDict.get('ID');
	       var fileId = ids && ids.length ? ids[0] : '';
	       encrypt.suppressEncryption = true;
	       this.encrypt = new CipherTransformFactory(encrypt, fileId, this.pdfManager.password);
	      }
	      if (!(this.root = trailerDict.get('Root'))) {
	       error('Invalid root reference');
	      }
	     },
	     processXRefTable: function XRef_processXRefTable(parser) {
	      if (!('tableState' in this)) {
	       this.tableState = {
	        entryNum: 0,
	        streamPos: parser.lexer.stream.pos,
	        parserBuf1: parser.buf1,
	        parserBuf2: parser.buf2
	       };
	      }
	      var obj = this.readXRefTable(parser);
	      if (!isCmd(obj, 'trailer')) {
	       error('Invalid XRef table: could not find trailer dictionary');
	      }
	      var dict = parser.getObj();
	      if (!isDict(dict) && dict.dict) {
	       dict = dict.dict;
	      }
	      if (!isDict(dict)) {
	       error('Invalid XRef table: could not parse trailer dictionary');
	      }
	      delete this.tableState;
	      return dict;
	     },
	     readXRefTable: function XRef_readXRefTable(parser) {
	      var stream = parser.lexer.stream;
	      var tableState = this.tableState;
	      stream.pos = tableState.streamPos;
	      parser.buf1 = tableState.parserBuf1;
	      parser.buf2 = tableState.parserBuf2;
	      var obj;
	      while (true) {
	       if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {
	        if (isCmd(obj = parser.getObj(), 'trailer')) {
	         break;
	        }
	        tableState.firstEntryNum = obj;
	        tableState.entryCount = parser.getObj();
	       }
	       var first = tableState.firstEntryNum;
	       var count = tableState.entryCount;
	       if (!isInt(first) || !isInt(count)) {
	        error('Invalid XRef table: wrong types in subsection header');
	       }
	       for (var i = tableState.entryNum; i < count; i++) {
	        tableState.streamPos = stream.pos;
	        tableState.entryNum = i;
	        tableState.parserBuf1 = parser.buf1;
	        tableState.parserBuf2 = parser.buf2;
	        var entry = {};
	        entry.offset = parser.getObj();
	        entry.gen = parser.getObj();
	        var type = parser.getObj();
	        if (isCmd(type, 'f')) {
	         entry.free = true;
	        } else if (isCmd(type, 'n')) {
	         entry.uncompressed = true;
	        }
	        if (!isInt(entry.offset) || !isInt(entry.gen) || !(entry.free || entry.uncompressed)) {
	         error('Invalid entry in XRef subsection: ' + first + ', ' + count);
	        }
	        if (i === 0 && entry.free && first === 1) {
	         first = 0;
	        }
	        if (!this.entries[i + first]) {
	         this.entries[i + first] = entry;
	        }
	       }
	       tableState.entryNum = 0;
	       tableState.streamPos = stream.pos;
	       tableState.parserBuf1 = parser.buf1;
	       tableState.parserBuf2 = parser.buf2;
	       delete tableState.firstEntryNum;
	       delete tableState.entryCount;
	      }
	      if (this.entries[0] && !this.entries[0].free) {
	       error('Invalid XRef table: unexpected first object');
	      }
	      return obj;
	     },
	     processXRefStream: function XRef_processXRefStream(stream) {
	      if (!('streamState' in this)) {
	       var streamParameters = stream.dict;
	       var byteWidths = streamParameters.get('W');
	       var range = streamParameters.get('Index');
	       if (!range) {
	        range = [
	         0,
	         streamParameters.get('Size')
	        ];
	       }
	       this.streamState = {
	        entryRanges: range,
	        byteWidths: byteWidths,
	        entryNum: 0,
	        streamPos: stream.pos
	       };
	      }
	      this.readXRefStream(stream);
	      delete this.streamState;
	      return stream.dict;
	     },
	     readXRefStream: function XRef_readXRefStream(stream) {
	      var i, j;
	      var streamState = this.streamState;
	      stream.pos = streamState.streamPos;
	      var byteWidths = streamState.byteWidths;
	      var typeFieldWidth = byteWidths[0];
	      var offsetFieldWidth = byteWidths[1];
	      var generationFieldWidth = byteWidths[2];
	      var entryRanges = streamState.entryRanges;
	      while (entryRanges.length > 0) {
	       var first = entryRanges[0];
	       var n = entryRanges[1];
	       if (!isInt(first) || !isInt(n)) {
	        error('Invalid XRef range fields: ' + first + ', ' + n);
	       }
	       if (!isInt(typeFieldWidth) || !isInt(offsetFieldWidth) || !isInt(generationFieldWidth)) {
	        error('Invalid XRef entry fields length: ' + first + ', ' + n);
	       }
	       for (i = streamState.entryNum; i < n; ++i) {
	        streamState.entryNum = i;
	        streamState.streamPos = stream.pos;
	        var type = 0, offset = 0, generation = 0;
	        for (j = 0; j < typeFieldWidth; ++j) {
	         type = type << 8 | stream.getByte();
	        }
	        if (typeFieldWidth === 0) {
	         type = 1;
	        }
	        for (j = 0; j < offsetFieldWidth; ++j) {
	         offset = offset << 8 | stream.getByte();
	        }
	        for (j = 0; j < generationFieldWidth; ++j) {
	         generation = generation << 8 | stream.getByte();
	        }
	        var entry = {};
	        entry.offset = offset;
	        entry.gen = generation;
	        switch (type) {
	        case 0:
	         entry.free = true;
	         break;
	        case 1:
	         entry.uncompressed = true;
	         break;
	        case 2:
	         break;
	        default:
	         error('Invalid XRef entry type: ' + type);
	        }
	        if (!this.entries[first + i]) {
	         this.entries[first + i] = entry;
	        }
	       }
	       streamState.entryNum = 0;
	       streamState.streamPos = stream.pos;
	       entryRanges.splice(0, 2);
	      }
	     },
	     indexObjects: function XRef_indexObjects() {
	      var TAB = 0x9, LF = 0xA, CR = 0xD, SPACE = 0x20;
	      var PERCENT = 0x25, LT = 0x3C;
	      function readToken(data, offset) {
	       var token = '', ch = data[offset];
	       while (ch !== LF && ch !== CR && ch !== LT) {
	        if (++offset >= data.length) {
	         break;
	        }
	        token += String.fromCharCode(ch);
	        ch = data[offset];
	       }
	       return token;
	      }
	      function skipUntil(data, offset, what) {
	       var length = what.length, dataLength = data.length;
	       var skipped = 0;
	       while (offset < dataLength) {
	        var i = 0;
	        while (i < length && data[offset + i] === what[i]) {
	         ++i;
	        }
	        if (i >= length) {
	         break;
	        }
	        offset++;
	        skipped++;
	       }
	       return skipped;
	      }
	      var objRegExp = /^(\d+)\s+(\d+)\s+obj\b/;
	      var trailerBytes = new Uint8Array([
	       116,
	       114,
	       97,
	       105,
	       108,
	       101,
	       114
	      ]);
	      var startxrefBytes = new Uint8Array([
	       115,
	       116,
	       97,
	       114,
	       116,
	       120,
	       114,
	       101,
	       102
	      ]);
	      var endobjBytes = new Uint8Array([
	       101,
	       110,
	       100,
	       111,
	       98,
	       106
	      ]);
	      var xrefBytes = new Uint8Array([
	       47,
	       88,
	       82,
	       101,
	       102
	      ]);
	      this.entries.length = 0;
	      var stream = this.stream;
	      stream.pos = 0;
	      var buffer = stream.getBytes();
	      var position = stream.start, length = buffer.length;
	      var trailers = [], xrefStms = [];
	      while (position < length) {
	       var ch = buffer[position];
	       if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {
	        ++position;
	        continue;
	       }
	       if (ch === PERCENT) {
	        do {
	         ++position;
	         if (position >= length) {
	          break;
	         }
	         ch = buffer[position];
	        } while (ch !== LF && ch !== CR);
	        continue;
	       }
	       var token = readToken(buffer, position);
	       var m;
	       if (token.indexOf('xref') === 0 && (token.length === 4 || /\s/.test(token[4]))) {
	        position += skipUntil(buffer, position, trailerBytes);
	        trailers.push(position);
	        position += skipUntil(buffer, position, startxrefBytes);
	       } else if (m = objRegExp.exec(token)) {
	        if (typeof this.entries[m[1]] === 'undefined') {
	         this.entries[m[1]] = {
	          offset: position - stream.start,
	          gen: m[2] | 0,
	          uncompressed: true
	         };
	        }
	        var contentLength = skipUntil(buffer, position, endobjBytes) + 7;
	        var content = buffer.subarray(position, position + contentLength);
	        var xrefTagOffset = skipUntil(content, 0, xrefBytes);
	        if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {
	         xrefStms.push(position - stream.start);
	         this.xrefstms[position - stream.start] = 1;
	        }
	        position += contentLength;
	       } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\s/.test(token[7]))) {
	        trailers.push(position);
	        position += skipUntil(buffer, position, startxrefBytes);
	       } else {
	        position += token.length + 1;
	       }
	      }
	      var i, ii;
	      for (i = 0, ii = xrefStms.length; i < ii; ++i) {
	       this.startXRefQueue.push(xrefStms[i]);
	       this.readXRef(true);
	      }
	      var dict;
	      for (i = 0, ii = trailers.length; i < ii; ++i) {
	       stream.pos = trailers[i];
	       var parser = new Parser(new Lexer(stream), true, this, true);
	       var obj = parser.getObj();
	       if (!isCmd(obj, 'trailer')) {
	        continue;
	       }
	       dict = parser.getObj();
	       if (!isDict(dict)) {
	        continue;
	       }
	       if (dict.has('ID')) {
	        return dict;
	       }
	      }
	      if (dict) {
	       return dict;
	      }
	      throw new InvalidPDFException('Invalid PDF structure');
	     },
	     readXRef: function XRef_readXRef(recoveryMode) {
	      var stream = this.stream;
	      try {
	       while (this.startXRefQueue.length) {
	        var startXRef = this.startXRefQueue[0];
	        stream.pos = startXRef + stream.start;
	        var parser = new Parser(new Lexer(stream), true, this);
	        var obj = parser.getObj();
	        var dict;
	        if (isCmd(obj, 'xref')) {
	         dict = this.processXRefTable(parser);
	         if (!this.topDict) {
	          this.topDict = dict;
	         }
	         obj = dict.get('XRefStm');
	         if (isInt(obj)) {
	          var pos = obj;
	          if (!(pos in this.xrefstms)) {
	           this.xrefstms[pos] = 1;
	           this.startXRefQueue.push(pos);
	          }
	         }
	        } else if (isInt(obj)) {
	         if (!isInt(parser.getObj()) || !isCmd(parser.getObj(), 'obj') || !isStream(obj = parser.getObj())) {
	          error('Invalid XRef stream');
	         }
	         dict = this.processXRefStream(obj);
	         if (!this.topDict) {
	          this.topDict = dict;
	         }
	         if (!dict) {
	          error('Failed to read XRef stream');
	         }
	        } else {
	         error('Invalid XRef stream header');
	        }
	        obj = dict.get('Prev');
	        if (isInt(obj)) {
	         this.startXRefQueue.push(obj);
	        } else if (isRef(obj)) {
	         this.startXRefQueue.push(obj.num);
	        }
	        this.startXRefQueue.shift();
	       }
	       return this.topDict;
	      } catch (e) {
	       if (e instanceof MissingDataException) {
	        throw e;
	       }
	       info('(while reading XRef): ' + e);
	      }
	      if (recoveryMode) {
	       return;
	      }
	      throw new XRefParseException();
	     },
	     getEntry: function XRef_getEntry(i) {
	      var xrefEntry = this.entries[i];
	      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {
	       return xrefEntry;
	      }
	      return null;
	     },
	     fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {
	      if (!isRef(obj)) {
	       return obj;
	      }
	      return this.fetch(obj, suppressEncryption);
	     },
	     fetch: function XRef_fetch(ref, suppressEncryption) {
	      assert(isRef(ref), 'ref object is not a reference');
	      var num = ref.num;
	      if (num in this.cache) {
	       var cacheEntry = this.cache[num];
	       return cacheEntry;
	      }
	      var xrefEntry = this.getEntry(num);
	      if (xrefEntry === null) {
	       return this.cache[num] = null;
	      }
	      if (xrefEntry.uncompressed) {
	       xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);
	      } else {
	       xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);
	      }
	      if (isDict(xrefEntry)) {
	       xrefEntry.objId = ref.toString();
	      } else if (isStream(xrefEntry)) {
	       xrefEntry.dict.objId = ref.toString();
	      }
	      return xrefEntry;
	     },
	     fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {
	      var gen = ref.gen;
	      var num = ref.num;
	      if (xrefEntry.gen !== gen) {
	       error('inconsistent generation in XRef');
	      }
	      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);
	      var parser = new Parser(new Lexer(stream), true, this);
	      var obj1 = parser.getObj();
	      var obj2 = parser.getObj();
	      var obj3 = parser.getObj();
	      if (!isInt(obj1) || parseInt(obj1, 10) !== num || !isInt(obj2) || parseInt(obj2, 10) !== gen || !isCmd(obj3)) {
	       error('bad XRef entry');
	      }
	      if (!isCmd(obj3, 'obj')) {
	       if (obj3.cmd.indexOf('obj') === 0) {
	        num = parseInt(obj3.cmd.substring(3), 10);
	        if (!isNaN(num)) {
	         return num;
	        }
	       }
	       error('bad XRef entry');
	      }
	      if (this.encrypt && !suppressEncryption) {
	       xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));
	      } else {
	       xrefEntry = parser.getObj();
	      }
	      if (!isStream(xrefEntry)) {
	       this.cache[num] = xrefEntry;
	      }
	      return xrefEntry;
	     },
	     fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {
	      var tableOffset = xrefEntry.offset;
	      var stream = this.fetch(new Ref(tableOffset, 0));
	      if (!isStream(stream)) {
	       error('bad ObjStm stream');
	      }
	      var first = stream.dict.get('First');
	      var n = stream.dict.get('N');
	      if (!isInt(first) || !isInt(n)) {
	       error('invalid first and n parameters for ObjStm stream');
	      }
	      var parser = new Parser(new Lexer(stream), false, this);
	      parser.allowStreams = true;
	      var i, entries = [], num, nums = [];
	      for (i = 0; i < n; ++i) {
	       num = parser.getObj();
	       if (!isInt(num)) {
	        error('invalid object number in the ObjStm stream: ' + num);
	       }
	       nums.push(num);
	       var offset = parser.getObj();
	       if (!isInt(offset)) {
	        error('invalid object offset in the ObjStm stream: ' + offset);
	       }
	      }
	      for (i = 0; i < n; ++i) {
	       entries.push(parser.getObj());
	       if (isCmd(parser.buf1, 'endobj')) {
	        parser.shift();
	       }
	       num = nums[i];
	       var entry = this.entries[num];
	       if (entry && entry.offset === tableOffset && entry.gen === i) {
	        this.cache[num] = entries[i];
	       }
	      }
	      xrefEntry = entries[xrefEntry.gen];
	      if (xrefEntry === undefined) {
	       error('bad XRef entry for compressed object');
	      }
	      return xrefEntry;
	     },
	     fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {
	      if (!isRef(obj)) {
	       return Promise.resolve(obj);
	      }
	      return this.fetchAsync(obj, suppressEncryption);
	     },
	     fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {
	      var streamManager = this.stream.manager;
	      var xref = this;
	      return new Promise(function tryFetch(resolve, reject) {
	       try {
	        resolve(xref.fetch(ref, suppressEncryption));
	       } catch (e) {
	        if (e instanceof MissingDataException) {
	         streamManager.requestRange(e.begin, e.end).then(function () {
	          tryFetch(resolve, reject);
	         }, reject);
	         return;
	        }
	        reject(e);
	       }
	      });
	     },
	     getCatalogObj: function XRef_getCatalogObj() {
	      return this.root;
	     }
	    };
	    return XRef;
	   }();
	   var NameOrNumberTree = function NameOrNumberTreeClosure() {
	    function NameOrNumberTree(root, xref) {
	     throw new Error('Cannot initialize NameOrNumberTree.');
	    }
	    NameOrNumberTree.prototype = {
	     getAll: function NameOrNumberTree_getAll() {
	      var dict = Object.create(null);
	      if (!this.root) {
	       return dict;
	      }
	      var xref = this.xref;
	      var processed = new RefSet();
	      processed.put(this.root);
	      var queue = [this.root];
	      while (queue.length > 0) {
	       var i, n;
	       var obj = xref.fetchIfRef(queue.shift());
	       if (!isDict(obj)) {
	        continue;
	       }
	       if (obj.has('Kids')) {
	        var kids = obj.get('Kids');
	        for (i = 0, n = kids.length; i < n; i++) {
	         var kid = kids[i];
	         assert(!processed.has(kid), 'Duplicate entry in "' + this._type + '" tree.');
	         queue.push(kid);
	         processed.put(kid);
	        }
	        continue;
	       }
	       var entries = obj.get(this._type);
	       if (isArray(entries)) {
	        for (i = 0, n = entries.length; i < n; i += 2) {
	         dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);
	        }
	       }
	      }
	      return dict;
	     },
	     get: function NameOrNumberTree_get(key) {
	      if (!this.root) {
	       return null;
	      }
	      var xref = this.xref;
	      var kidsOrEntries = xref.fetchIfRef(this.root);
	      var loopCount = 0;
	      var MAX_LEVELS = 10;
	      var l, r, m;
	      while (kidsOrEntries.has('Kids')) {
	       if (++loopCount > MAX_LEVELS) {
	        warn('Search depth limit reached for "' + this._type + '" tree.');
	        return null;
	       }
	       var kids = kidsOrEntries.get('Kids');
	       if (!isArray(kids)) {
	        return null;
	       }
	       l = 0;
	       r = kids.length - 1;
	       while (l <= r) {
	        m = l + r >> 1;
	        var kid = xref.fetchIfRef(kids[m]);
	        var limits = kid.get('Limits');
	        if (key < xref.fetchIfRef(limits[0])) {
	         r = m - 1;
	        } else if (key > xref.fetchIfRef(limits[1])) {
	         l = m + 1;
	        } else {
	         kidsOrEntries = xref.fetchIfRef(kids[m]);
	         break;
	        }
	       }
	       if (l > r) {
	        return null;
	       }
	      }
	      var entries = kidsOrEntries.get(this._type);
	      if (isArray(entries)) {
	       l = 0;
	       r = entries.length - 2;
	       while (l <= r) {
	        m = l + r & ~1;
	        var currentKey = xref.fetchIfRef(entries[m]);
	        if (key < currentKey) {
	         r = m - 2;
	        } else if (key > currentKey) {
	         l = m + 2;
	        } else {
	         return xref.fetchIfRef(entries[m + 1]);
	        }
	       }
	      }
	      return null;
	     }
	    };
	    return NameOrNumberTree;
	   }();
	   var NameTree = function NameTreeClosure() {
	    function NameTree(root, xref) {
	     this.root = root;
	     this.xref = xref;
	     this._type = 'Names';
	    }
	    Util.inherit(NameTree, NameOrNumberTree, {});
	    return NameTree;
	   }();
	   var NumberTree = function NumberTreeClosure() {
	    function NumberTree(root, xref) {
	     this.root = root;
	     this.xref = xref;
	     this._type = 'Nums';
	    }
	    Util.inherit(NumberTree, NameOrNumberTree, {});
	    return NumberTree;
	   }();
	   var FileSpec = function FileSpecClosure() {
	    function FileSpec(root, xref) {
	     if (!root || !isDict(root)) {
	      return;
	     }
	     this.xref = xref;
	     this.root = root;
	     if (root.has('FS')) {
	      this.fs = root.get('FS');
	     }
	     this.description = root.has('Desc') ? stringToPDFString(root.get('Desc')) : '';
	     if (root.has('RF')) {
	      warn('Related file specifications are not supported');
	     }
	     this.contentAvailable = true;
	     if (!root.has('EF')) {
	      this.contentAvailable = false;
	      warn('Non-embedded file specifications are not supported');
	     }
	    }
	    function pickPlatformItem(dict) {
	     if (dict.has('UF')) {
	      return dict.get('UF');
	     } else if (dict.has('F')) {
	      return dict.get('F');
	     } else if (dict.has('Unix')) {
	      return dict.get('Unix');
	     } else if (dict.has('Mac')) {
	      return dict.get('Mac');
	     } else if (dict.has('DOS')) {
	      return dict.get('DOS');
	     }
	     return null;
	    }
	    FileSpec.prototype = {
	     get filename() {
	      if (!this._filename && this.root) {
	       var filename = pickPlatformItem(this.root) || 'unnamed';
	       this._filename = stringToPDFString(filename).replace(/\\\\/g, '\\').replace(/\\\//g, '/').replace(/\\/g, '/');
	      }
	      return this._filename;
	     },
	     get content() {
	      if (!this.contentAvailable) {
	       return null;
	      }
	      if (!this.contentRef && this.root) {
	       this.contentRef = pickPlatformItem(this.root.get('EF'));
	      }
	      var content = null;
	      if (this.contentRef) {
	       var xref = this.xref;
	       var fileObj = xref.fetchIfRef(this.contentRef);
	       if (fileObj && isStream(fileObj)) {
	        content = fileObj.getBytes();
	       } else {
	        warn('Embedded file specification points to non-existing/invalid ' + 'content');
	       }
	      } else {
	       warn('Embedded file specification does not have a content');
	      }
	      return content;
	     },
	     get serializable() {
	      return {
	       filename: this.filename,
	       content: this.content
	      };
	     }
	    };
	    return FileSpec;
	   }();
	   var ObjectLoader = function () {
	    function mayHaveChildren(value) {
	     return isRef(value) || isDict(value) || isArray(value) || isStream(value);
	    }
	    function addChildren(node, nodesToVisit) {
	     var value;
	     if (isDict(node) || isStream(node)) {
	      var map;
	      if (isDict(node)) {
	       map = node.map;
	      } else {
	       map = node.dict.map;
	      }
	      for (var key in map) {
	       value = map[key];
	       if (mayHaveChildren(value)) {
	        nodesToVisit.push(value);
	       }
	      }
	     } else if (isArray(node)) {
	      for (var i = 0, ii = node.length; i < ii; i++) {
	       value = node[i];
	       if (mayHaveChildren(value)) {
	        nodesToVisit.push(value);
	       }
	      }
	     }
	    }
	    function ObjectLoader(obj, keys, xref) {
	     this.obj = obj;
	     this.keys = keys;
	     this.xref = xref;
	     this.refSet = null;
	     this.capability = null;
	    }
	    ObjectLoader.prototype = {
	     load: function ObjectLoader_load() {
	      var keys = this.keys;
	      this.capability = createPromiseCapability();
	      if (!(this.xref.stream instanceof ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {
	       this.capability.resolve();
	       return this.capability.promise;
	      }
	      this.refSet = new RefSet();
	      var nodesToVisit = [];
	      for (var i = 0; i < keys.length; i++) {
	       nodesToVisit.push(this.obj[keys[i]]);
	      }
	      this._walk(nodesToVisit);
	      return this.capability.promise;
	     },
	     _walk: function ObjectLoader_walk(nodesToVisit) {
	      var nodesToRevisit = [];
	      var pendingRequests = [];
	      while (nodesToVisit.length) {
	       var currentNode = nodesToVisit.pop();
	       if (isRef(currentNode)) {
	        if (this.refSet.has(currentNode)) {
	         continue;
	        }
	        try {
	         var ref = currentNode;
	         this.refSet.put(ref);
	         currentNode = this.xref.fetch(currentNode);
	        } catch (e) {
	         if (!(e instanceof MissingDataException)) {
	          throw e;
	         }
	         nodesToRevisit.push(currentNode);
	         pendingRequests.push({
	          begin: e.begin,
	          end: e.end
	         });
	        }
	       }
	       if (currentNode && currentNode.getBaseStreams) {
	        var baseStreams = currentNode.getBaseStreams();
	        var foundMissingData = false;
	        for (var i = 0; i < baseStreams.length; i++) {
	         var stream = baseStreams[i];
	         if (stream.getMissingChunks && stream.getMissingChunks().length) {
	          foundMissingData = true;
	          pendingRequests.push({
	           begin: stream.start,
	           end: stream.end
	          });
	         }
	        }
	        if (foundMissingData) {
	         nodesToRevisit.push(currentNode);
	        }
	       }
	       addChildren(currentNode, nodesToVisit);
	      }
	      if (pendingRequests.length) {
	       this.xref.stream.manager.requestRanges(pendingRequests).then(function pendingRequestCallback() {
	        nodesToVisit = nodesToRevisit;
	        for (var i = 0; i < nodesToRevisit.length; i++) {
	         var node = nodesToRevisit[i];
	         if (isRef(node)) {
	          this.refSet.remove(node);
	         }
	        }
	        this._walk(nodesToVisit);
	       }.bind(this), this.capability.reject);
	       return;
	      }
	      this.refSet = null;
	      this.capability.resolve();
	     }
	    };
	    return ObjectLoader;
	   }();
	   exports.Catalog = Catalog;
	   exports.ObjectLoader = ObjectLoader;
	   exports.XRef = XRef;
	   exports.FileSpec = FileSpec;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCorePattern = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreFunction, root.pdfjsCoreColorSpace);
	  }(this, function (exports, sharedUtil, corePrimitives, coreFunction, coreColorSpace) {
	   var UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;
	   var MissingDataException = sharedUtil.MissingDataException;
	   var Util = sharedUtil.Util;
	   var assert = sharedUtil.assert;
	   var error = sharedUtil.error;
	   var info = sharedUtil.info;
	   var warn = sharedUtil.warn;
	   var isStream = corePrimitives.isStream;
	   var PDFFunction = coreFunction.PDFFunction;
	   var ColorSpace = coreColorSpace.ColorSpace;
	   var ShadingType = {
	    FUNCTION_BASED: 1,
	    AXIAL: 2,
	    RADIAL: 3,
	    FREE_FORM_MESH: 4,
	    LATTICE_FORM_MESH: 5,
	    COONS_PATCH_MESH: 6,
	    TENSOR_PATCH_MESH: 7
	   };
	   var Pattern = function PatternClosure() {
	    function Pattern() {
	     error('should not call Pattern constructor');
	    }
	    Pattern.prototype = {
	     getPattern: function Pattern_getPattern(ctx) {
	      error('Should not call Pattern.getStyle: ' + ctx);
	     }
	    };
	    Pattern.parseShading = function Pattern_parseShading(shading, matrix, xref, res, handler) {
	     var dict = isStream(shading) ? shading.dict : shading;
	     var type = dict.get('ShadingType');
	     try {
	      switch (type) {
	      case ShadingType.AXIAL:
	      case ShadingType.RADIAL:
	       return new Shadings.RadialAxial(dict, matrix, xref, res);
	      case ShadingType.FREE_FORM_MESH:
	      case ShadingType.LATTICE_FORM_MESH:
	      case ShadingType.COONS_PATCH_MESH:
	      case ShadingType.TENSOR_PATCH_MESH:
	       return new Shadings.Mesh(shading, matrix, xref, res);
	      default:
	       throw new Error('Unsupported ShadingType: ' + type);
	      }
	     } catch (ex) {
	      if (ex instanceof MissingDataException) {
	       throw ex;
	      }
	      handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.shadingPattern });
	      warn(ex);
	      return new Shadings.Dummy();
	     }
	    };
	    return Pattern;
	   }();
	   var Shadings = {};
	   Shadings.SMALL_NUMBER = 1e-6;
	   Shadings.RadialAxial = function RadialAxialClosure() {
	    function RadialAxial(dict, matrix, xref, res) {
	     this.matrix = matrix;
	     this.coordsArr = dict.getArray('Coords');
	     this.shadingType = dict.get('ShadingType');
	     this.type = 'Pattern';
	     var cs = dict.get('ColorSpace', 'CS');
	     cs = ColorSpace.parse(cs, xref, res);
	     this.cs = cs;
	     var t0 = 0.0, t1 = 1.0;
	     if (dict.has('Domain')) {
	      var domainArr = dict.getArray('Domain');
	      t0 = domainArr[0];
	      t1 = domainArr[1];
	     }
	     var extendStart = false, extendEnd = false;
	     if (dict.has('Extend')) {
	      var extendArr = dict.getArray('Extend');
	      extendStart = extendArr[0];
	      extendEnd = extendArr[1];
	     }
	     if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {
	      var x1 = this.coordsArr[0];
	      var y1 = this.coordsArr[1];
	      var r1 = this.coordsArr[2];
	      var x2 = this.coordsArr[3];
	      var y2 = this.coordsArr[4];
	      var r2 = this.coordsArr[5];
	      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
	      if (r1 <= r2 + distance && r2 <= r1 + distance) {
	       warn('Unsupported radial gradient.');
	      }
	     }
	     this.extendStart = extendStart;
	     this.extendEnd = extendEnd;
	     var fnObj = dict.get('Function');
	     var fn = PDFFunction.parseArray(xref, fnObj);
	     var diff = t1 - t0;
	     var step = diff / 10;
	     var colorStops = this.colorStops = [];
	     if (t0 >= t1 || step <= 0) {
	      info('Bad shading domain.');
	      return;
	     }
	     var color = new Float32Array(cs.numComps), ratio = new Float32Array(1);
	     var rgbColor;
	     for (var i = t0; i <= t1; i += step) {
	      ratio[0] = i;
	      fn(ratio, 0, color, 0);
	      rgbColor = cs.getRgb(color, 0);
	      var cssColor = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);
	      colorStops.push([
	       (i - t0) / diff,
	       cssColor
	      ]);
	     }
	     var background = 'transparent';
	     if (dict.has('Background')) {
	      rgbColor = cs.getRgb(dict.get('Background'), 0);
	      background = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);
	     }
	     if (!extendStart) {
	      colorStops.unshift([
	       0,
	       background
	      ]);
	      colorStops[1][0] += Shadings.SMALL_NUMBER;
	     }
	     if (!extendEnd) {
	      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;
	      colorStops.push([
	       1,
	       background
	      ]);
	     }
	     this.colorStops = colorStops;
	    }
	    RadialAxial.prototype = {
	     getIR: function RadialAxial_getIR() {
	      var coordsArr = this.coordsArr;
	      var shadingType = this.shadingType;
	      var type, p0, p1, r0, r1;
	      if (shadingType === ShadingType.AXIAL) {
	       p0 = [
	        coordsArr[0],
	        coordsArr[1]
	       ];
	       p1 = [
	        coordsArr[2],
	        coordsArr[3]
	       ];
	       r0 = null;
	       r1 = null;
	       type = 'axial';
	      } else if (shadingType === ShadingType.RADIAL) {
	       p0 = [
	        coordsArr[0],
	        coordsArr[1]
	       ];
	       p1 = [
	        coordsArr[3],
	        coordsArr[4]
	       ];
	       r0 = coordsArr[2];
	       r1 = coordsArr[5];
	       type = 'radial';
	      } else {
	       error('getPattern type unknown: ' + shadingType);
	      }
	      var matrix = this.matrix;
	      if (matrix) {
	       p0 = Util.applyTransform(p0, matrix);
	       p1 = Util.applyTransform(p1, matrix);
	       if (shadingType === ShadingType.RADIAL) {
	        var scale = Util.singularValueDecompose2dScale(matrix);
	        r0 *= scale[0];
	        r1 *= scale[1];
	       }
	      }
	      return [
	       'RadialAxial',
	       type,
	       this.colorStops,
	       p0,
	       p1,
	       r0,
	       r1
	      ];
	     }
	    };
	    return RadialAxial;
	   }();
	   Shadings.Mesh = function MeshClosure() {
	    function MeshStreamReader(stream, context) {
	     this.stream = stream;
	     this.context = context;
	     this.buffer = 0;
	     this.bufferLength = 0;
	     var numComps = context.numComps;
	     this.tmpCompsBuf = new Float32Array(numComps);
	     var csNumComps = context.colorSpace.numComps;
	     this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;
	    }
	    MeshStreamReader.prototype = {
	     get hasData() {
	      if (this.stream.end) {
	       return this.stream.pos < this.stream.end;
	      }
	      if (this.bufferLength > 0) {
	       return true;
	      }
	      var nextByte = this.stream.getByte();
	      if (nextByte < 0) {
	       return false;
	      }
	      this.buffer = nextByte;
	      this.bufferLength = 8;
	      return true;
	     },
	     readBits: function MeshStreamReader_readBits(n) {
	      var buffer = this.buffer;
	      var bufferLength = this.bufferLength;
	      if (n === 32) {
	       if (bufferLength === 0) {
	        return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;
	       }
	       buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();
	       var nextByte = this.stream.getByte();
	       this.buffer = nextByte & (1 << bufferLength) - 1;
	       return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;
	      }
	      if (n === 8 && bufferLength === 0) {
	       return this.stream.getByte();
	      }
	      while (bufferLength < n) {
	       buffer = buffer << 8 | this.stream.getByte();
	       bufferLength += 8;
	      }
	      bufferLength -= n;
	      this.bufferLength = bufferLength;
	      this.buffer = buffer & (1 << bufferLength) - 1;
	      return buffer >> bufferLength;
	     },
	     align: function MeshStreamReader_align() {
	      this.buffer = 0;
	      this.bufferLength = 0;
	     },
	     readFlag: function MeshStreamReader_readFlag() {
	      return this.readBits(this.context.bitsPerFlag);
	     },
	     readCoordinate: function MeshStreamReader_readCoordinate() {
	      var bitsPerCoordinate = this.context.bitsPerCoordinate;
	      var xi = this.readBits(bitsPerCoordinate);
	      var yi = this.readBits(bitsPerCoordinate);
	      var decode = this.context.decode;
	      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;
	      return [
	       xi * scale * (decode[1] - decode[0]) + decode[0],
	       yi * scale * (decode[3] - decode[2]) + decode[2]
	      ];
	     },
	     readComponents: function MeshStreamReader_readComponents() {
	      var numComps = this.context.numComps;
	      var bitsPerComponent = this.context.bitsPerComponent;
	      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;
	      var decode = this.context.decode;
	      var components = this.tmpCompsBuf;
	      for (var i = 0, j = 4; i < numComps; i++, j += 2) {
	       var ci = this.readBits(bitsPerComponent);
	       components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];
	      }
	      var color = this.tmpCsCompsBuf;
	      if (this.context.colorFn) {
	       this.context.colorFn(components, 0, color, 0);
	      }
	      return this.context.colorSpace.getRgb(color, 0);
	     }
	    };
	    function decodeType4Shading(mesh, reader) {
	     var coords = mesh.coords;
	     var colors = mesh.colors;
	     var operators = [];
	     var ps = [];
	     var verticesLeft = 0;
	     while (reader.hasData) {
	      var f = reader.readFlag();
	      var coord = reader.readCoordinate();
	      var color = reader.readComponents();
	      if (verticesLeft === 0) {
	       assert(0 <= f && f <= 2, 'Unknown type4 flag');
	       switch (f) {
	       case 0:
	        verticesLeft = 3;
	        break;
	       case 1:
	        ps.push(ps[ps.length - 2], ps[ps.length - 1]);
	        verticesLeft = 1;
	        break;
	       case 2:
	        ps.push(ps[ps.length - 3], ps[ps.length - 1]);
	        verticesLeft = 1;
	        break;
	       }
	       operators.push(f);
	      }
	      ps.push(coords.length);
	      coords.push(coord);
	      colors.push(color);
	      verticesLeft--;
	      reader.align();
	     }
	     mesh.figures.push({
	      type: 'triangles',
	      coords: new Int32Array(ps),
	      colors: new Int32Array(ps)
	     });
	    }
	    function decodeType5Shading(mesh, reader, verticesPerRow) {
	     var coords = mesh.coords;
	     var colors = mesh.colors;
	     var ps = [];
	     while (reader.hasData) {
	      var coord = reader.readCoordinate();
	      var color = reader.readComponents();
	      ps.push(coords.length);
	      coords.push(coord);
	      colors.push(color);
	     }
	     mesh.figures.push({
	      type: 'lattice',
	      coords: new Int32Array(ps),
	      colors: new Int32Array(ps),
	      verticesPerRow: verticesPerRow
	     });
	    }
	    var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;
	    var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;
	    var TRIANGLE_DENSITY = 20;
	    var getB = function getBClosure() {
	     function buildB(count) {
	      var lut = [];
	      for (var i = 0; i <= count; i++) {
	       var t = i / count, t_ = 1 - t;
	       lut.push(new Float32Array([
	        t_ * t_ * t_,
	        3 * t * t_ * t_,
	        3 * t * t * t_,
	        t * t * t
	       ]));
	      }
	      return lut;
	     }
	     var cache = [];
	     return function getB(count) {
	      if (!cache[count]) {
	       cache[count] = buildB(count);
	      }
	      return cache[count];
	     };
	    }();
	    function buildFigureFromPatch(mesh, index) {
	     var figure = mesh.figures[index];
	     assert(figure.type === 'patch', 'Unexpected patch mesh figure');
	     var coords = mesh.coords, colors = mesh.colors;
	     var pi = figure.coords;
	     var ci = figure.colors;
	     var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);
	     var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);
	     var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);
	     var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);
	     var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));
	     splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));
	     var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));
	     splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));
	     var verticesPerRow = splitXBy + 1;
	     var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);
	     var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);
	     var k = 0;
	     var cl = new Uint8Array(3), cr = new Uint8Array(3);
	     var c0 = colors[ci[0]], c1 = colors[ci[1]], c2 = colors[ci[2]], c3 = colors[ci[3]];
	     var bRow = getB(splitYBy), bCol = getB(splitXBy);
	     for (var row = 0; row <= splitYBy; row++) {
	      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;
	      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;
	      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;
	      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;
	      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;
	      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;
	      for (var col = 0; col <= splitXBy; col++, k++) {
	       if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {
	        continue;
	       }
	       var x = 0, y = 0;
	       var q = 0;
	       for (var i = 0; i <= 3; i++) {
	        for (var j = 0; j <= 3; j++, q++) {
	         var m = bRow[row][i] * bCol[col][j];
	         x += coords[pi[q]][0] * m;
	         y += coords[pi[q]][1] * m;
	        }
	       }
	       figureCoords[k] = coords.length;
	       coords.push([
	        x,
	        y
	       ]);
	       figureColors[k] = colors.length;
	       var newColor = new Uint8Array(3);
	       newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;
	       newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;
	       newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;
	       colors.push(newColor);
	      }
	     }
	     figureCoords[0] = pi[0];
	     figureColors[0] = ci[0];
	     figureCoords[splitXBy] = pi[3];
	     figureColors[splitXBy] = ci[1];
	     figureCoords[verticesPerRow * splitYBy] = pi[12];
	     figureColors[verticesPerRow * splitYBy] = ci[2];
	     figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];
	     figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];
	     mesh.figures[index] = {
	      type: 'lattice',
	      coords: figureCoords,
	      colors: figureColors,
	      verticesPerRow: verticesPerRow
	     };
	    }
	    function decodeType6Shading(mesh, reader) {
	     var coords = mesh.coords;
	     var colors = mesh.colors;
	     var ps = new Int32Array(16);
	     var cs = new Int32Array(4);
	     while (reader.hasData) {
	      var f = reader.readFlag();
	      assert(0 <= f && f <= 3, 'Unknown type6 flag');
	      var i, ii;
	      var pi = coords.length;
	      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {
	       coords.push(reader.readCoordinate());
	      }
	      var ci = colors.length;
	      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {
	       colors.push(reader.readComponents());
	      }
	      var tmp1, tmp2, tmp3, tmp4;
	      switch (f) {
	      case 0:
	       ps[12] = pi + 3;
	       ps[13] = pi + 4;
	       ps[14] = pi + 5;
	       ps[15] = pi + 6;
	       ps[8] = pi + 2;
	       ps[11] = pi + 7;
	       ps[4] = pi + 1;
	       ps[7] = pi + 8;
	       ps[0] = pi;
	       ps[1] = pi + 11;
	       ps[2] = pi + 10;
	       ps[3] = pi + 9;
	       cs[2] = ci + 1;
	       cs[3] = ci + 2;
	       cs[0] = ci;
	       cs[1] = ci + 3;
	       break;
	      case 1:
	       tmp1 = ps[12];
	       tmp2 = ps[13];
	       tmp3 = ps[14];
	       tmp4 = ps[15];
	       ps[12] = tmp4;
	       ps[13] = pi + 0;
	       ps[14] = pi + 1;
	       ps[15] = pi + 2;
	       ps[8] = tmp3;
	       ps[11] = pi + 3;
	       ps[4] = tmp2;
	       ps[7] = pi + 4;
	       ps[0] = tmp1;
	       ps[1] = pi + 7;
	       ps[2] = pi + 6;
	       ps[3] = pi + 5;
	       tmp1 = cs[2];
	       tmp2 = cs[3];
	       cs[2] = tmp2;
	       cs[3] = ci;
	       cs[0] = tmp1;
	       cs[1] = ci + 1;
	       break;
	      case 2:
	       tmp1 = ps[15];
	       tmp2 = ps[11];
	       ps[12] = ps[3];
	       ps[13] = pi + 0;
	       ps[14] = pi + 1;
	       ps[15] = pi + 2;
	       ps[8] = ps[7];
	       ps[11] = pi + 3;
	       ps[4] = tmp2;
	       ps[7] = pi + 4;
	       ps[0] = tmp1;
	       ps[1] = pi + 7;
	       ps[2] = pi + 6;
	       ps[3] = pi + 5;
	       tmp1 = cs[3];
	       cs[2] = cs[1];
	       cs[3] = ci;
	       cs[0] = tmp1;
	       cs[1] = ci + 1;
	       break;
	      case 3:
	       ps[12] = ps[0];
	       ps[13] = pi + 0;
	       ps[14] = pi + 1;
	       ps[15] = pi + 2;
	       ps[8] = ps[1];
	       ps[11] = pi + 3;
	       ps[4] = ps[2];
	       ps[7] = pi + 4;
	       ps[0] = ps[3];
	       ps[1] = pi + 7;
	       ps[2] = pi + 6;
	       ps[3] = pi + 5;
	       cs[2] = cs[0];
	       cs[3] = ci;
	       cs[0] = cs[1];
	       cs[1] = ci + 1;
	       break;
	      }
	      ps[5] = coords.length;
	      coords.push([
	       (-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9,
	       (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9
	      ]);
	      ps[6] = coords.length;
	      coords.push([
	       (-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9,
	       (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9
	      ]);
	      ps[9] = coords.length;
	      coords.push([
	       (-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9,
	       (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9
	      ]);
	      ps[10] = coords.length;
	      coords.push([
	       (-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9,
	       (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9
	      ]);
	      mesh.figures.push({
	       type: 'patch',
	       coords: new Int32Array(ps),
	       colors: new Int32Array(cs)
	      });
	     }
	    }
	    function decodeType7Shading(mesh, reader) {
	     var coords = mesh.coords;
	     var colors = mesh.colors;
	     var ps = new Int32Array(16);
	     var cs = new Int32Array(4);
	     while (reader.hasData) {
	      var f = reader.readFlag();
	      assert(0 <= f && f <= 3, 'Unknown type7 flag');
	      var i, ii;
	      var pi = coords.length;
	      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {
	       coords.push(reader.readCoordinate());
	      }
	      var ci = colors.length;
	      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {
	       colors.push(reader.readComponents());
	      }
	      var tmp1, tmp2, tmp3, tmp4;
	      switch (f) {
	      case 0:
	       ps[12] = pi + 3;
	       ps[13] = pi + 4;
	       ps[14] = pi + 5;
	       ps[15] = pi + 6;
	       ps[8] = pi + 2;
	       ps[9] = pi + 13;
	       ps[10] = pi + 14;
	       ps[11] = pi + 7;
	       ps[4] = pi + 1;
	       ps[5] = pi + 12;
	       ps[6] = pi + 15;
	       ps[7] = pi + 8;
	       ps[0] = pi;
	       ps[1] = pi + 11;
	       ps[2] = pi + 10;
	       ps[3] = pi + 9;
	       cs[2] = ci + 1;
	       cs[3] = ci + 2;
	       cs[0] = ci;
	       cs[1] = ci + 3;
	       break;
	      case 1:
	       tmp1 = ps[12];
	       tmp2 = ps[13];
	       tmp3 = ps[14];
	       tmp4 = ps[15];
	       ps[12] = tmp4;
	       ps[13] = pi + 0;
	       ps[14] = pi + 1;
	       ps[15] = pi + 2;
	       ps[8] = tmp3;
	       ps[9] = pi + 9;
	       ps[10] = pi + 10;
	       ps[11] = pi + 3;
	       ps[4] = tmp2;
	       ps[5] = pi + 8;
	       ps[6] = pi + 11;
	       ps[7] = pi + 4;
	       ps[0] = tmp1;
	       ps[1] = pi + 7;
	       ps[2] = pi + 6;
	       ps[3] = pi + 5;
	       tmp1 = cs[2];
	       tmp2 = cs[3];
	       cs[2] = tmp2;
	       cs[3] = ci;
	       cs[0] = tmp1;
	       cs[1] = ci + 1;
	       break;
	      case 2:
	       tmp1 = ps[15];
	       tmp2 = ps[11];
	       ps[12] = ps[3];
	       ps[13] = pi + 0;
	       ps[14] = pi + 1;
	       ps[15] = pi + 2;
	       ps[8] = ps[7];
	       ps[9] = pi + 9;
	       ps[10] = pi + 10;
	       ps[11] = pi + 3;
	       ps[4] = tmp2;
	       ps[5] = pi + 8;
	       ps[6] = pi + 11;
	       ps[7] = pi + 4;
	       ps[0] = tmp1;
	       ps[1] = pi + 7;
	       ps[2] = pi + 6;
	       ps[3] = pi + 5;
	       tmp1 = cs[3];
	       cs[2] = cs[1];
	       cs[3] = ci;
	       cs[0] = tmp1;
	       cs[1] = ci + 1;
	       break;
	      case 3:
	       ps[12] = ps[0];
	       ps[13] = pi + 0;
	       ps[14] = pi + 1;
	       ps[15] = pi + 2;
	       ps[8] = ps[1];
	       ps[9] = pi + 9;
	       ps[10] = pi + 10;
	       ps[11] = pi + 3;
	       ps[4] = ps[2];
	       ps[5] = pi + 8;
	       ps[6] = pi + 11;
	       ps[7] = pi + 4;
	       ps[0] = ps[3];
	       ps[1] = pi + 7;
	       ps[2] = pi + 6;
	       ps[3] = pi + 5;
	       cs[2] = cs[0];
	       cs[3] = ci;
	       cs[0] = cs[1];
	       cs[1] = ci + 1;
	       break;
	      }
	      mesh.figures.push({
	       type: 'patch',
	       coords: new Int32Array(ps),
	       colors: new Int32Array(cs)
	      });
	     }
	    }
	    function updateBounds(mesh) {
	     var minX = mesh.coords[0][0], minY = mesh.coords[0][1], maxX = minX, maxY = minY;
	     for (var i = 1, ii = mesh.coords.length; i < ii; i++) {
	      var x = mesh.coords[i][0], y = mesh.coords[i][1];
	      minX = minX > x ? x : minX;
	      minY = minY > y ? y : minY;
	      maxX = maxX < x ? x : maxX;
	      maxY = maxY < y ? y : maxY;
	     }
	     mesh.bounds = [
	      minX,
	      minY,
	      maxX,
	      maxY
	     ];
	    }
	    function packData(mesh) {
	     var i, ii, j, jj;
	     var coords = mesh.coords;
	     var coordsPacked = new Float32Array(coords.length * 2);
	     for (i = 0, j = 0, ii = coords.length; i < ii; i++) {
	      var xy = coords[i];
	      coordsPacked[j++] = xy[0];
	      coordsPacked[j++] = xy[1];
	     }
	     mesh.coords = coordsPacked;
	     var colors = mesh.colors;
	     var colorsPacked = new Uint8Array(colors.length * 3);
	     for (i = 0, j = 0, ii = colors.length; i < ii; i++) {
	      var c = colors[i];
	      colorsPacked[j++] = c[0];
	      colorsPacked[j++] = c[1];
	      colorsPacked[j++] = c[2];
	     }
	     mesh.colors = colorsPacked;
	     var figures = mesh.figures;
	     for (i = 0, ii = figures.length; i < ii; i++) {
	      var figure = figures[i], ps = figure.coords, cs = figure.colors;
	      for (j = 0, jj = ps.length; j < jj; j++) {
	       ps[j] *= 2;
	       cs[j] *= 3;
	      }
	     }
	    }
	    function Mesh(stream, matrix, xref, res) {
	     assert(isStream(stream), 'Mesh data is not a stream');
	     var dict = stream.dict;
	     this.matrix = matrix;
	     this.shadingType = dict.get('ShadingType');
	     this.type = 'Pattern';
	     this.bbox = dict.getArray('BBox');
	     var cs = dict.get('ColorSpace', 'CS');
	     cs = ColorSpace.parse(cs, xref, res);
	     this.cs = cs;
	     this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;
	     var fnObj = dict.get('Function');
	     var fn = fnObj ? PDFFunction.parseArray(xref, fnObj) : null;
	     this.coords = [];
	     this.colors = [];
	     this.figures = [];
	     var decodeContext = {
	      bitsPerCoordinate: dict.get('BitsPerCoordinate'),
	      bitsPerComponent: dict.get('BitsPerComponent'),
	      bitsPerFlag: dict.get('BitsPerFlag'),
	      decode: dict.getArray('Decode'),
	      colorFn: fn,
	      colorSpace: cs,
	      numComps: fn ? 1 : cs.numComps
	     };
	     var reader = new MeshStreamReader(stream, decodeContext);
	     var patchMesh = false;
	     switch (this.shadingType) {
	     case ShadingType.FREE_FORM_MESH:
	      decodeType4Shading(this, reader);
	      break;
	     case ShadingType.LATTICE_FORM_MESH:
	      var verticesPerRow = dict.get('VerticesPerRow') | 0;
	      assert(verticesPerRow >= 2, 'Invalid VerticesPerRow');
	      decodeType5Shading(this, reader, verticesPerRow);
	      break;
	     case ShadingType.COONS_PATCH_MESH:
	      decodeType6Shading(this, reader);
	      patchMesh = true;
	      break;
	     case ShadingType.TENSOR_PATCH_MESH:
	      decodeType7Shading(this, reader);
	      patchMesh = true;
	      break;
	     default:
	      error('Unsupported mesh type.');
	      break;
	     }
	     if (patchMesh) {
	      updateBounds(this);
	      for (var i = 0, ii = this.figures.length; i < ii; i++) {
	       buildFigureFromPatch(this, i);
	      }
	     }
	     updateBounds(this);
	     packData(this);
	    }
	    Mesh.prototype = {
	     getIR: function Mesh_getIR() {
	      return [
	       'Mesh',
	       this.shadingType,
	       this.coords,
	       this.colors,
	       this.figures,
	       this.bounds,
	       this.matrix,
	       this.bbox,
	       this.background
	      ];
	     }
	    };
	    return Mesh;
	   }();
	   Shadings.Dummy = function DummyClosure() {
	    function Dummy() {
	     this.type = 'Pattern';
	    }
	    Dummy.prototype = {
	     getIR: function Dummy_getIR() {
	      return ['Dummy'];
	     }
	    };
	    return Dummy;
	   }();
	   function getTilingPatternIR(operatorList, dict, args) {
	    var matrix = dict.getArray('Matrix');
	    var bbox = dict.getArray('BBox');
	    var xstep = dict.get('XStep');
	    var ystep = dict.get('YStep');
	    var paintType = dict.get('PaintType');
	    var tilingType = dict.get('TilingType');
	    return [
	     'TilingPattern',
	     args,
	     operatorList,
	     matrix,
	     bbox,
	     xstep,
	     ystep,
	     paintType,
	     tilingType
	    ];
	   }
	   exports.Pattern = Pattern;
	   exports.getTilingPatternIR = getTilingPatternIR;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsDisplayAPI = {}, root.pdfjsSharedUtil, root.pdfjsDisplayFontLoader, root.pdfjsDisplayCanvas, root.pdfjsDisplayMetadata, root.pdfjsDisplayDOMUtils);
	  }(this, function (exports, sharedUtil, displayFontLoader, displayCanvas, displayMetadata, displayDOMUtils, amdRequire) {
	   var InvalidPDFException = sharedUtil.InvalidPDFException;
	   var MessageHandler = sharedUtil.MessageHandler;
	   var MissingPDFException = sharedUtil.MissingPDFException;
	   var PageViewport = sharedUtil.PageViewport;
	   var PasswordResponses = sharedUtil.PasswordResponses;
	   var PasswordException = sharedUtil.PasswordException;
	   var StatTimer = sharedUtil.StatTimer;
	   var UnexpectedResponseException = sharedUtil.UnexpectedResponseException;
	   var UnknownErrorException = sharedUtil.UnknownErrorException;
	   var Util = sharedUtil.Util;
	   var createPromiseCapability = sharedUtil.createPromiseCapability;
	   var error = sharedUtil.error;
	   var deprecated = sharedUtil.deprecated;
	   var getVerbosityLevel = sharedUtil.getVerbosityLevel;
	   var info = sharedUtil.info;
	   var isInt = sharedUtil.isInt;
	   var isArray = sharedUtil.isArray;
	   var isArrayBuffer = sharedUtil.isArrayBuffer;
	   var isSameOrigin = sharedUtil.isSameOrigin;
	   var loadJpegStream = sharedUtil.loadJpegStream;
	   var stringToBytes = sharedUtil.stringToBytes;
	   var globalScope = sharedUtil.globalScope;
	   var warn = sharedUtil.warn;
	   var FontFaceObject = displayFontLoader.FontFaceObject;
	   var FontLoader = displayFontLoader.FontLoader;
	   var CanvasGraphics = displayCanvas.CanvasGraphics;
	   var createScratchCanvas = displayCanvas.createScratchCanvas;
	   var Metadata = displayMetadata.Metadata;
	   var getDefaultSetting = displayDOMUtils.getDefaultSetting;
	   var DEFAULT_RANGE_CHUNK_SIZE = 65536;
	   var isWorkerDisabled = false;
	   var workerSrc;
	   var isPostMessageTransfersDisabled = false;
	   var fakeWorkerFilesLoader = null;
	   var useRequireEnsure = false;
	   function getDocument(src, pdfDataRangeTransport, passwordCallback, progressCallback) {
	    var task = new PDFDocumentLoadingTask();
	    if (arguments.length > 1) {
	     deprecated('getDocument is called with pdfDataRangeTransport, ' + 'passwordCallback or progressCallback argument');
	    }
	    if (pdfDataRangeTransport) {
	     if (!(pdfDataRangeTransport instanceof PDFDataRangeTransport)) {
	      pdfDataRangeTransport = Object.create(pdfDataRangeTransport);
	      pdfDataRangeTransport.length = src.length;
	      pdfDataRangeTransport.initialData = src.initialData;
	      if (!pdfDataRangeTransport.abort) {
	       pdfDataRangeTransport.abort = function () {
	       };
	      }
	     }
	     src = Object.create(src);
	     src.range = pdfDataRangeTransport;
	    }
	    task.onPassword = passwordCallback || null;
	    task.onProgress = progressCallback || null;
	    var source;
	    if (typeof src === 'string') {
	     source = { url: src };
	    } else if (isArrayBuffer(src)) {
	     source = { data: src };
	    } else if (src instanceof PDFDataRangeTransport) {
	     source = { range: src };
	    } else {
	     if (typeof src !== 'object') {
	      error('Invalid parameter in getDocument, need either Uint8Array, ' + 'string or a parameter object');
	     }
	     if (!src.url && !src.data && !src.range) {
	      error('Invalid parameter object: need either .data, .range or .url');
	     }
	     source = src;
	    }
	    var params = {};
	    var rangeTransport = null;
	    var worker = null;
	    for (var key in source) {
	     if (key === 'url' && typeof window !== 'undefined') {
	      params[key] = new URL(source[key], window.location).href;
	      continue;
	     } else if (key === 'range') {
	      rangeTransport = source[key];
	      continue;
	     } else if (key === 'worker') {
	      worker = source[key];
	      continue;
	     } else if (key === 'data' && !(source[key] instanceof Uint8Array)) {
	      var pdfBytes = source[key];
	      if (typeof pdfBytes === 'string') {
	       params[key] = stringToBytes(pdfBytes);
	      } else if (typeof pdfBytes === 'object' && pdfBytes !== null && !isNaN(pdfBytes.length)) {
	       params[key] = new Uint8Array(pdfBytes);
	      } else if (isArrayBuffer(pdfBytes)) {
	       params[key] = new Uint8Array(pdfBytes);
	      } else {
	       error('Invalid PDF binary data: either typed array, string or ' + 'array-like object is expected in the data property.');
	      }
	      continue;
	     }
	     params[key] = source[key];
	    }
	    params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;
	    if (!worker) {
	     worker = new PDFWorker();
	     task._worker = worker;
	    }
	    var docId = task.docId;
	    worker.promise.then(function () {
	     if (task.destroyed) {
	      throw new Error('Loading aborted');
	     }
	     return _fetchDocument(worker, params, rangeTransport, docId).then(function (workerId) {
	      if (task.destroyed) {
	       throw new Error('Loading aborted');
	      }
	      var messageHandler = new MessageHandler(docId, workerId, worker.port);
	      var transport = new WorkerTransport(messageHandler, task, rangeTransport);
	      task._transport = transport;
	      messageHandler.send('Ready', null);
	     });
	    }).catch(task._capability.reject);
	    return task;
	   }
	   function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {
	    if (worker.destroyed) {
	     return Promise.reject(new Error('Worker was destroyed'));
	    }
	    source.disableAutoFetch = getDefaultSetting('disableAutoFetch');
	    source.disableStream = getDefaultSetting('disableStream');
	    source.chunkedViewerLoading = !!pdfDataRangeTransport;
	    if (pdfDataRangeTransport) {
	     source.length = pdfDataRangeTransport.length;
	     source.initialData = pdfDataRangeTransport.initialData;
	    }
	    return worker.messageHandler.sendWithPromise('GetDocRequest', {
	     docId: docId,
	     source: source,
	     disableRange: getDefaultSetting('disableRange'),
	     maxImageSize: getDefaultSetting('maxImageSize'),
	     cMapUrl: getDefaultSetting('cMapUrl'),
	     cMapPacked: getDefaultSetting('cMapPacked'),
	     disableFontFace: getDefaultSetting('disableFontFace'),
	     disableCreateObjectURL: getDefaultSetting('disableCreateObjectURL'),
	     postMessageTransfers: getDefaultSetting('postMessageTransfers') && !isPostMessageTransfersDisabled,
	     docBaseUrl: source.docBaseUrl
	    }).then(function (workerId) {
	     if (worker.destroyed) {
	      throw new Error('Worker was destroyed');
	     }
	     return workerId;
	    });
	   }
	   var PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {
	    var nextDocumentId = 0;
	    function PDFDocumentLoadingTask() {
	     this._capability = createPromiseCapability();
	     this._transport = null;
	     this._worker = null;
	     this.docId = 'd' + nextDocumentId++;
	     this.destroyed = false;
	     this.onPassword = null;
	     this.onProgress = null;
	     this.onUnsupportedFeature = null;
	    }
	    PDFDocumentLoadingTask.prototype = {
	     get promise() {
	      return this._capability.promise;
	     },
	     destroy: function () {
	      this.destroyed = true;
	      var transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();
	      return transportDestroyed.then(function () {
	       this._transport = null;
	       if (this._worker) {
	        this._worker.destroy();
	        this._worker = null;
	       }
	      }.bind(this));
	     },
	     then: function PDFDocumentLoadingTask_then(onFulfilled, onRejected) {
	      return this.promise.then.apply(this.promise, arguments);
	     }
	    };
	    return PDFDocumentLoadingTask;
	   }();
	   var PDFDataRangeTransport = function pdfDataRangeTransportClosure() {
	    function PDFDataRangeTransport(length, initialData) {
	     this.length = length;
	     this.initialData = initialData;
	     this._rangeListeners = [];
	     this._progressListeners = [];
	     this._progressiveReadListeners = [];
	     this._readyCapability = createPromiseCapability();
	    }
	    PDFDataRangeTransport.prototype = {
	     addRangeListener: function PDFDataRangeTransport_addRangeListener(listener) {
	      this._rangeListeners.push(listener);
	     },
	     addProgressListener: function PDFDataRangeTransport_addProgressListener(listener) {
	      this._progressListeners.push(listener);
	     },
	     addProgressiveReadListener: function PDFDataRangeTransport_addProgressiveReadListener(listener) {
	      this._progressiveReadListeners.push(listener);
	     },
	     onDataRange: function PDFDataRangeTransport_onDataRange(begin, chunk) {
	      var listeners = this._rangeListeners;
	      for (var i = 0, n = listeners.length; i < n; ++i) {
	       listeners[i](begin, chunk);
	      }
	     },
	     onDataProgress: function PDFDataRangeTransport_onDataProgress(loaded) {
	      this._readyCapability.promise.then(function () {
	       var listeners = this._progressListeners;
	       for (var i = 0, n = listeners.length; i < n; ++i) {
	        listeners[i](loaded);
	       }
	      }.bind(this));
	     },
	     onDataProgressiveRead: function PDFDataRangeTransport_onDataProgress(chunk) {
	      this._readyCapability.promise.then(function () {
	       var listeners = this._progressiveReadListeners;
	       for (var i = 0, n = listeners.length; i < n; ++i) {
	        listeners[i](chunk);
	       }
	      }.bind(this));
	     },
	     transportReady: function PDFDataRangeTransport_transportReady() {
	      this._readyCapability.resolve();
	     },
	     requestDataRange: function PDFDataRangeTransport_requestDataRange(begin, end) {
	      throw new Error('Abstract method PDFDataRangeTransport.requestDataRange');
	     },
	     abort: function PDFDataRangeTransport_abort() {
	     }
	    };
	    return PDFDataRangeTransport;
	   }();
	   var PDFDocumentProxy = function PDFDocumentProxyClosure() {
	    function PDFDocumentProxy(pdfInfo, transport, loadingTask) {
	     this.pdfInfo = pdfInfo;
	     this.transport = transport;
	     this.loadingTask = loadingTask;
	    }
	    PDFDocumentProxy.prototype = {
	     get numPages() {
	      return this.pdfInfo.numPages;
	     },
	     get fingerprint() {
	      return this.pdfInfo.fingerprint;
	     },
	     getPage: function PDFDocumentProxy_getPage(pageNumber) {
	      return this.transport.getPage(pageNumber);
	     },
	     getPageIndex: function PDFDocumentProxy_getPageIndex(ref) {
	      return this.transport.getPageIndex(ref);
	     },
	     getDestinations: function PDFDocumentProxy_getDestinations() {
	      return this.transport.getDestinations();
	     },
	     getDestination: function PDFDocumentProxy_getDestination(id) {
	      return this.transport.getDestination(id);
	     },
	     getPageLabels: function PDFDocumentProxy_getPageLabels() {
	      return this.transport.getPageLabels();
	     },
	     getAttachments: function PDFDocumentProxy_getAttachments() {
	      return this.transport.getAttachments();
	     },
	     getJavaScript: function PDFDocumentProxy_getJavaScript() {
	      return this.transport.getJavaScript();
	     },
	     getOutline: function PDFDocumentProxy_getOutline() {
	      return this.transport.getOutline();
	     },
	     getMetadata: function PDFDocumentProxy_getMetadata() {
	      return this.transport.getMetadata();
	     },
	     getData: function PDFDocumentProxy_getData() {
	      return this.transport.getData();
	     },
	     getDownloadInfo: function PDFDocumentProxy_getDownloadInfo() {
	      return this.transport.downloadInfoCapability.promise;
	     },
	     getStats: function PDFDocumentProxy_getStats() {
	      return this.transport.getStats();
	     },
	     cleanup: function PDFDocumentProxy_cleanup() {
	      this.transport.startCleanup();
	     },
	     destroy: function PDFDocumentProxy_destroy() {
	      return this.loadingTask.destroy();
	     }
	    };
	    return PDFDocumentProxy;
	   }();
	   var PDFPageProxy = function PDFPageProxyClosure() {
	    function PDFPageProxy(pageIndex, pageInfo, transport) {
	     this.pageIndex = pageIndex;
	     this.pageInfo = pageInfo;
	     this.transport = transport;
	     this.stats = new StatTimer();
	     this.stats.enabled = getDefaultSetting('enableStats');
	     this.commonObjs = transport.commonObjs;
	     this.objs = new PDFObjects();
	     this.cleanupAfterRender = false;
	     this.pendingCleanup = false;
	     this.intentStates = Object.create(null);
	     this.destroyed = false;
	    }
	    PDFPageProxy.prototype = {
	     get pageNumber() {
	      return this.pageIndex + 1;
	     },
	     get rotate() {
	      return this.pageInfo.rotate;
	     },
	     get ref() {
	      return this.pageInfo.ref;
	     },
	     get userUnit() {
	      return this.pageInfo.userUnit;
	     },
	     get view() {
	      return this.pageInfo.view;
	     },
	     getViewport: function PDFPageProxy_getViewport(scale, rotate) {
	      if (arguments.length < 2) {
	       rotate = this.rotate;
	      }
	      return new PageViewport(this.view, scale, rotate, 0, 0);
	     },
	     getAnnotations: function PDFPageProxy_getAnnotations(params) {
	      var intent = params && params.intent || null;
	      if (!this.annotationsPromise || this.annotationsIntent !== intent) {
	       this.annotationsPromise = this.transport.getAnnotations(this.pageIndex, intent);
	       this.annotationsIntent = intent;
	      }
	      return this.annotationsPromise;
	     },
	     render: function PDFPageProxy_render(params) {
	      var stats = this.stats;
	      stats.time('Overall');
	      this.pendingCleanup = false;
	      var renderingIntent = params.intent === 'print' ? 'print' : 'display';
	      var renderInteractiveForms = params.renderInteractiveForms === true ? true : false;
	      if (!this.intentStates[renderingIntent]) {
	       this.intentStates[renderingIntent] = Object.create(null);
	      }
	      var intentState = this.intentStates[renderingIntent];
	      if (!intentState.displayReadyCapability) {
	       intentState.receivingOperatorList = true;
	       intentState.displayReadyCapability = createPromiseCapability();
	       intentState.operatorList = {
	        fnArray: [],
	        argsArray: [],
	        lastChunk: false
	       };
	       this.stats.time('Page Request');
	       this.transport.messageHandler.send('RenderPageRequest', {
	        pageIndex: this.pageNumber - 1,
	        intent: renderingIntent,
	        renderInteractiveForms: renderInteractiveForms
	       });
	      }
	      var internalRenderTask = new InternalRenderTask(complete, params, this.objs, this.commonObjs, intentState.operatorList, this.pageNumber);
	      internalRenderTask.useRequestAnimationFrame = renderingIntent !== 'print';
	      if (!intentState.renderTasks) {
	       intentState.renderTasks = [];
	      }
	      intentState.renderTasks.push(internalRenderTask);
	      var renderTask = internalRenderTask.task;
	      if (params.continueCallback) {
	       deprecated('render is used with continueCallback parameter');
	       renderTask.onContinue = params.continueCallback;
	      }
	      var self = this;
	      intentState.displayReadyCapability.promise.then(function pageDisplayReadyPromise(transparency) {
	       if (self.pendingCleanup) {
	        complete();
	        return;
	       }
	       stats.time('Rendering');
	       internalRenderTask.initializeGraphics(transparency);
	       internalRenderTask.operatorListChanged();
	      }, function pageDisplayReadPromiseError(reason) {
	       complete(reason);
	      });
	      function complete(error) {
	       var i = intentState.renderTasks.indexOf(internalRenderTask);
	       if (i >= 0) {
	        intentState.renderTasks.splice(i, 1);
	       }
	       if (self.cleanupAfterRender) {
	        self.pendingCleanup = true;
	       }
	       self._tryCleanup();
	       if (error) {
	        internalRenderTask.capability.reject(error);
	       } else {
	        internalRenderTask.capability.resolve();
	       }
	       stats.timeEnd('Rendering');
	       stats.timeEnd('Overall');
	      }
	      return renderTask;
	     },
	     getOperatorList: function PDFPageProxy_getOperatorList() {
	      function operatorListChanged() {
	       if (intentState.operatorList.lastChunk) {
	        intentState.opListReadCapability.resolve(intentState.operatorList);
	        var i = intentState.renderTasks.indexOf(opListTask);
	        if (i >= 0) {
	         intentState.renderTasks.splice(i, 1);
	        }
	       }
	      }
	      var renderingIntent = 'oplist';
	      if (!this.intentStates[renderingIntent]) {
	       this.intentStates[renderingIntent] = Object.create(null);
	      }
	      var intentState = this.intentStates[renderingIntent];
	      var opListTask;
	      if (!intentState.opListReadCapability) {
	       opListTask = {};
	       opListTask.operatorListChanged = operatorListChanged;
	       intentState.receivingOperatorList = true;
	       intentState.opListReadCapability = createPromiseCapability();
	       intentState.renderTasks = [];
	       intentState.renderTasks.push(opListTask);
	       intentState.operatorList = {
	        fnArray: [],
	        argsArray: [],
	        lastChunk: false
	       };
	       this.transport.messageHandler.send('RenderPageRequest', {
	        pageIndex: this.pageIndex,
	        intent: renderingIntent
	       });
	      }
	      return intentState.opListReadCapability.promise;
	     },
	     getTextContent: function PDFPageProxy_getTextContent(params) {
	      return this.transport.messageHandler.sendWithPromise('GetTextContent', {
	       pageIndex: this.pageNumber - 1,
	       normalizeWhitespace: params && params.normalizeWhitespace === true ? true : false,
	       combineTextItems: params && params.disableCombineTextItems === true ? false : true
	      });
	     },
	     _destroy: function PDFPageProxy_destroy() {
	      this.destroyed = true;
	      this.transport.pageCache[this.pageIndex] = null;
	      var waitOn = [];
	      Object.keys(this.intentStates).forEach(function (intent) {
	       if (intent === 'oplist') {
	        return;
	       }
	       var intentState = this.intentStates[intent];
	       intentState.renderTasks.forEach(function (renderTask) {
	        var renderCompleted = renderTask.capability.promise.catch(function () {
	        });
	        waitOn.push(renderCompleted);
	        renderTask.cancel();
	       });
	      }, this);
	      this.objs.clear();
	      this.annotationsPromise = null;
	      this.pendingCleanup = false;
	      return Promise.all(waitOn);
	     },
	     destroy: function () {
	      deprecated('page destroy method, use cleanup() instead');
	      this.cleanup();
	     },
	     cleanup: function PDFPageProxy_cleanup() {
	      this.pendingCleanup = true;
	      this._tryCleanup();
	     },
	     _tryCleanup: function PDFPageProxy_tryCleanup() {
	      if (!this.pendingCleanup || Object.keys(this.intentStates).some(function (intent) {
	        var intentState = this.intentStates[intent];
	        return intentState.renderTasks.length !== 0 || intentState.receivingOperatorList;
	       }, this)) {
	       return;
	      }
	      Object.keys(this.intentStates).forEach(function (intent) {
	       delete this.intentStates[intent];
	      }, this);
	      this.objs.clear();
	      this.annotationsPromise = null;
	      this.pendingCleanup = false;
	     },
	     _startRenderPage: function PDFPageProxy_startRenderPage(transparency, intent) {
	      var intentState = this.intentStates[intent];
	      if (intentState.displayReadyCapability) {
	       intentState.displayReadyCapability.resolve(transparency);
	      }
	     },
	     _renderPageChunk: function PDFPageProxy_renderPageChunk(operatorListChunk, intent) {
	      var intentState = this.intentStates[intent];
	      var i, ii;
	      for (i = 0, ii = operatorListChunk.length; i < ii; i++) {
	       intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);
	       intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);
	      }
	      intentState.operatorList.lastChunk = operatorListChunk.lastChunk;
	      for (i = 0; i < intentState.renderTasks.length; i++) {
	       intentState.renderTasks[i].operatorListChanged();
	      }
	      if (operatorListChunk.lastChunk) {
	       intentState.receivingOperatorList = false;
	       this._tryCleanup();
	      }
	     }
	    };
	    return PDFPageProxy;
	   }();
	   var PDFWorker = function PDFWorkerClosure() {
	    var nextFakeWorkerId = 0;
	    function getWorkerSrc() {
	     if (typeof workerSrc !== 'undefined') {
	      return workerSrc;
	     }
	     if (getDefaultSetting('workerSrc')) {
	      return getDefaultSetting('workerSrc');
	     }
	     if (pdfjsFilePath) {
	      return pdfjsFilePath.replace(/\.js$/i, '.worker.js');
	     }
	     error('No PDFJS.workerSrc specified');
	    }
	    var fakeWorkerFilesLoadedCapability;
	    function setupFakeWorkerGlobal() {
	     var WorkerMessageHandler;
	     if (fakeWorkerFilesLoadedCapability) {
	      return fakeWorkerFilesLoadedCapability.promise;
	     }
	     fakeWorkerFilesLoadedCapability = createPromiseCapability();
	     WorkerMessageHandler = pdfjsLibs.pdfjsCoreWorker.WorkerMessageHandler;
	     fakeWorkerFilesLoadedCapability.resolve(WorkerMessageHandler);
	     return fakeWorkerFilesLoadedCapability.promise;
	    }
	    function FakeWorkerPort(defer) {
	     this._listeners = [];
	     this._defer = defer;
	     this._deferred = Promise.resolve(undefined);
	    }
	    FakeWorkerPort.prototype = {
	     postMessage: function (obj, transfers) {
	      function cloneValue(value) {
	       if (typeof value !== 'object' || value === null) {
	        return value;
	       }
	       if (cloned.has(value)) {
	        return cloned.get(value);
	       }
	       var result;
	       var buffer;
	       if ((buffer = value.buffer) && isArrayBuffer(buffer)) {
	        var transferable = transfers && transfers.indexOf(buffer) >= 0;
	        if (value === buffer) {
	         result = value;
	        } else if (transferable) {
	         result = new value.constructor(buffer, value.byteOffset, value.byteLength);
	        } else {
	         result = new value.constructor(value);
	        }
	        cloned.set(value, result);
	        return result;
	       }
	       result = isArray(value) ? [] : {};
	       cloned.set(value, result);
	       for (var i in value) {
	        var desc, p = value;
	        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {
	         p = Object.getPrototypeOf(p);
	        }
	        if (typeof desc.value === 'undefined' || typeof desc.value === 'function') {
	         continue;
	        }
	        result[i] = cloneValue(desc.value);
	       }
	       return result;
	      }
	      if (!this._defer) {
	       this._listeners.forEach(function (listener) {
	        listener.call(this, { data: obj });
	       }, this);
	       return;
	      }
	      var cloned = new WeakMap();
	      var e = { data: cloneValue(obj) };
	      this._deferred.then(function () {
	       this._listeners.forEach(function (listener) {
	        listener.call(this, e);
	       }, this);
	      }.bind(this));
	     },
	     addEventListener: function (name, listener) {
	      this._listeners.push(listener);
	     },
	     removeEventListener: function (name, listener) {
	      var i = this._listeners.indexOf(listener);
	      this._listeners.splice(i, 1);
	     },
	     terminate: function () {
	      this._listeners = [];
	     }
	    };
	    function createCDNWrapper(url) {
	     var wrapper = 'importScripts(\'' + url + '\');';
	     return URL.createObjectURL(new Blob([wrapper]));
	    }
	    function PDFWorker(name) {
	     this.name = name;
	     this.destroyed = false;
	     this._readyCapability = createPromiseCapability();
	     this._port = null;
	     this._webWorker = null;
	     this._messageHandler = null;
	     this._initialize();
	    }
	    PDFWorker.prototype = {
	     get promise() {
	      return this._readyCapability.promise;
	     },
	     get port() {
	      return this._port;
	     },
	     get messageHandler() {
	      return this._messageHandler;
	     },
	     _initialize: function PDFWorker_initialize() {
	      this._setupFakeWorker();
	     },
	     _setupFakeWorker: function PDFWorker_setupFakeWorker() {
	      if (!isWorkerDisabled && !getDefaultSetting('disableWorker')) {
	       warn('Setting up fake worker.');
	       isWorkerDisabled = true;
	      }
	      setupFakeWorkerGlobal().then(function (WorkerMessageHandler) {
	       if (this.destroyed) {
	        this._readyCapability.reject(new Error('Worker was destroyed'));
	        return;
	       }
	       var isTypedArraysPresent = Uint8Array !== Float32Array;
	       var port = new FakeWorkerPort(isTypedArraysPresent);
	       this._port = port;
	       var id = 'fake' + nextFakeWorkerId++;
	       var workerHandler = new MessageHandler(id + '_worker', id, port);
	       WorkerMessageHandler.setup(workerHandler, port);
	       var messageHandler = new MessageHandler(id, id + '_worker', port);
	       this._messageHandler = messageHandler;
	       this._readyCapability.resolve();
	      }.bind(this));
	     },
	     destroy: function PDFWorker_destroy() {
	      this.destroyed = true;
	      if (this._webWorker) {
	       this._webWorker.terminate();
	       this._webWorker = null;
	      }
	      this._port = null;
	      if (this._messageHandler) {
	       this._messageHandler.destroy();
	       this._messageHandler = null;
	      }
	     }
	    };
	    return PDFWorker;
	   }();
	   var WorkerTransport = function WorkerTransportClosure() {
	    function WorkerTransport(messageHandler, loadingTask, pdfDataRangeTransport) {
	     this.messageHandler = messageHandler;
	     this.loadingTask = loadingTask;
	     this.pdfDataRangeTransport = pdfDataRangeTransport;
	     this.commonObjs = new PDFObjects();
	     this.fontLoader = new FontLoader(loadingTask.docId);
	     this.destroyed = false;
	     this.destroyCapability = null;
	     this._passwordCapability = null;
	     this.pageCache = [];
	     this.pagePromises = [];
	     this.downloadInfoCapability = createPromiseCapability();
	     this.setupMessageHandler();
	    }
	    WorkerTransport.prototype = {
	     destroy: function WorkerTransport_destroy() {
	      if (this.destroyCapability) {
	       return this.destroyCapability.promise;
	      }
	      this.destroyed = true;
	      this.destroyCapability = createPromiseCapability();
	      if (this._passwordCapability) {
	       this._passwordCapability.reject(new Error('Worker was destroyed during onPassword callback'));
	      }
	      var waitOn = [];
	      this.pageCache.forEach(function (page) {
	       if (page) {
	        waitOn.push(page._destroy());
	       }
	      });
	      this.pageCache = [];
	      this.pagePromises = [];
	      var self = this;
	      var terminated = this.messageHandler.sendWithPromise('Terminate', null);
	      waitOn.push(terminated);
	      Promise.all(waitOn).then(function () {
	       self.fontLoader.clear();
	       if (self.pdfDataRangeTransport) {
	        self.pdfDataRangeTransport.abort();
	        self.pdfDataRangeTransport = null;
	       }
	       if (self.messageHandler) {
	        self.messageHandler.destroy();
	        self.messageHandler = null;
	       }
	       self.destroyCapability.resolve();
	      }, this.destroyCapability.reject);
	      return this.destroyCapability.promise;
	     },
	     setupMessageHandler: function WorkerTransport_setupMessageHandler() {
	      var messageHandler = this.messageHandler;
	      var loadingTask = this.loadingTask;
	      var pdfDataRangeTransport = this.pdfDataRangeTransport;
	      if (pdfDataRangeTransport) {
	       pdfDataRangeTransport.addRangeListener(function (begin, chunk) {
	        messageHandler.send('OnDataRange', {
	         begin: begin,
	         chunk: chunk
	        });
	       });
	       pdfDataRangeTransport.addProgressListener(function (loaded) {
	        messageHandler.send('OnDataProgress', { loaded: loaded });
	       });
	       pdfDataRangeTransport.addProgressiveReadListener(function (chunk) {
	        messageHandler.send('OnDataRange', { chunk: chunk });
	       });
	       messageHandler.on('RequestDataRange', function transportDataRange(data) {
	        pdfDataRangeTransport.requestDataRange(data.begin, data.end);
	       }, this);
	      }
	      messageHandler.on('GetDoc', function transportDoc(data) {
	       var pdfInfo = data.pdfInfo;
	       this.numPages = data.pdfInfo.numPages;
	       var loadingTask = this.loadingTask;
	       var pdfDocument = new PDFDocumentProxy(pdfInfo, this, loadingTask);
	       this.pdfDocument = pdfDocument;
	       loadingTask._capability.resolve(pdfDocument);
	      }, this);
	      messageHandler.on('PasswordRequest', function transportPasswordRequest(exception) {
	       this._passwordCapability = createPromiseCapability();
	       if (loadingTask.onPassword) {
	        var updatePassword = function (password) {
	         this._passwordCapability.resolve({ password: password });
	        }.bind(this);
	        loadingTask.onPassword(updatePassword, exception.code);
	       } else {
	        this._passwordCapability.reject(new PasswordException(exception.message, exception.code));
	       }
	       return this._passwordCapability.promise;
	      }, this);
	      messageHandler.on('PasswordException', function transportPasswordException(exception) {
	       loadingTask._capability.reject(new PasswordException(exception.message, exception.code));
	      }, this);
	      messageHandler.on('InvalidPDF', function transportInvalidPDF(exception) {
	       this.loadingTask._capability.reject(new InvalidPDFException(exception.message));
	      }, this);
	      messageHandler.on('MissingPDF', function transportMissingPDF(exception) {
	       this.loadingTask._capability.reject(new MissingPDFException(exception.message));
	      }, this);
	      messageHandler.on('UnexpectedResponse', function transportUnexpectedResponse(exception) {
	       this.loadingTask._capability.reject(new UnexpectedResponseException(exception.message, exception.status));
	      }, this);
	      messageHandler.on('UnknownError', function transportUnknownError(exception) {
	       this.loadingTask._capability.reject(new UnknownErrorException(exception.message, exception.details));
	      }, this);
	      messageHandler.on('DataLoaded', function transportPage(data) {
	       this.downloadInfoCapability.resolve(data);
	      }, this);
	      messageHandler.on('PDFManagerReady', function transportPage(data) {
	       if (this.pdfDataRangeTransport) {
	        this.pdfDataRangeTransport.transportReady();
	       }
	      }, this);
	      messageHandler.on('StartRenderPage', function transportRender(data) {
	       if (this.destroyed) {
	        return;
	       }
	       var page = this.pageCache[data.pageIndex];
	       page.stats.timeEnd('Page Request');
	       page._startRenderPage(data.transparency, data.intent);
	      }, this);
	      messageHandler.on('RenderPageChunk', function transportRender(data) {
	       if (this.destroyed) {
	        return;
	       }
	       var page = this.pageCache[data.pageIndex];
	       page._renderPageChunk(data.operatorList, data.intent);
	      }, this);
	      messageHandler.on('commonobj', function transportObj(data) {
	       if (this.destroyed) {
	        return;
	       }
	       var id = data[0];
	       var type = data[1];
	       if (this.commonObjs.hasData(id)) {
	        return;
	       }
	       switch (type) {
	       case 'Font':
	        var exportedData = data[2];
	        if ('error' in exportedData) {
	         var exportedError = exportedData.error;
	         warn('Error during font loading: ' + exportedError);
	         this.commonObjs.resolve(id, exportedError);
	         break;
	        }
	        var fontRegistry = null;
	        if (getDefaultSetting('pdfBug') && globalScope.FontInspector && globalScope['FontInspector'].enabled) {
	         fontRegistry = {
	          registerFont: function (font, url) {
	           globalScope['FontInspector'].fontAdded(font, url);
	          }
	         };
	        }
	        var font = new FontFaceObject(exportedData, {
	         isEvalSuported: getDefaultSetting('isEvalSupported'),
	         disableFontFace: getDefaultSetting('disableFontFace'),
	         fontRegistry: fontRegistry
	        });
	        this.fontLoader.bind([font], function fontReady(fontObjs) {
	         this.commonObjs.resolve(id, font);
	        }.bind(this));
	        break;
	       case 'FontPath':
	        this.commonObjs.resolve(id, data[2]);
	        break;
	       default:
	        error('Got unknown common object type ' + type);
	       }
	      }, this);
	      messageHandler.on('obj', function transportObj(data) {
	       if (this.destroyed) {
	        return;
	       }
	       var id = data[0];
	       var pageIndex = data[1];
	       var type = data[2];
	       var pageProxy = this.pageCache[pageIndex];
	       var imageData;
	       if (pageProxy.objs.hasData(id)) {
	        return;
	       }
	       switch (type) {
	       case 'JpegStream':
	        imageData = data[3];
	        loadJpegStream(id, imageData, pageProxy.objs);
	        break;
	       case 'Image':
	        imageData = data[3];
	        pageProxy.objs.resolve(id, imageData);
	        var MAX_IMAGE_SIZE_TO_STORE = 8000000;
	        if (imageData && 'data' in imageData && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {
	         pageProxy.cleanupAfterRender = true;
	        }
	        break;
	       default:
	        error('Got unknown object type ' + type);
	       }
	      }, this);
	      messageHandler.on('DocProgress', function transportDocProgress(data) {
	       if (this.destroyed) {
	        return;
	       }
	       var loadingTask = this.loadingTask;
	       if (loadingTask.onProgress) {
	        loadingTask.onProgress({
	         loaded: data.loaded,
	         total: data.total
	        });
	       }
	      }, this);
	      messageHandler.on('PageError', function transportError(data) {
	       if (this.destroyed) {
	        return;
	       }
	       var page = this.pageCache[data.pageNum - 1];
	       var intentState = page.intentStates[data.intent];
	       if (intentState.displayReadyCapability) {
	        intentState.displayReadyCapability.reject(data.error);
	       } else {
	        error(data.error);
	       }
	       if (intentState.operatorList) {
	        intentState.operatorList.lastChunk = true;
	        for (var i = 0; i < intentState.renderTasks.length; i++) {
	         intentState.renderTasks[i].operatorListChanged();
	        }
	       }
	      }, this);
	      messageHandler.on('UnsupportedFeature', function transportUnsupportedFeature(data) {
	       if (this.destroyed) {
	        return;
	       }
	       var featureId = data.featureId;
	       var loadingTask = this.loadingTask;
	       if (loadingTask.onUnsupportedFeature) {
	        loadingTask.onUnsupportedFeature(featureId);
	       }
	       _UnsupportedManager.notify(featureId);
	      }, this);
	      messageHandler.on('JpegDecode', function (data) {
	       if (this.destroyed) {
	        return Promise.reject(new Error('Worker was destroyed'));
	       }
	       var imageUrl = data[0];
	       var components = data[1];
	       if (components !== 3 && components !== 1) {
	        return Promise.reject(new Error('Only 3 components or 1 component can be returned'));
	       }
	       return new Promise(function (resolve, reject) {
	        var img = new Image();
	        img.onload = function () {
	         var width = img.width;
	         var height = img.height;
	         var size = width * height;
	         var rgbaLength = size * 4;
	         var buf = new Uint8Array(size * components);
	         var tmpCanvas = createScratchCanvas(width, height);
	         var tmpCtx = tmpCanvas.getContext('2d');
	         tmpCtx.drawImage(img, 0, 0);
	         var data = tmpCtx.getImageData(0, 0, width, height).data;
	         var i, j;
	         if (components === 3) {
	          for (i = 0, j = 0; i < rgbaLength; i += 4, j += 3) {
	           buf[j] = data[i];
	           buf[j + 1] = data[i + 1];
	           buf[j + 2] = data[i + 2];
	          }
	         } else if (components === 1) {
	          for (i = 0, j = 0; i < rgbaLength; i += 4, j++) {
	           buf[j] = data[i];
	          }
	         }
	         resolve({
	          data: buf,
	          width: width,
	          height: height
	         });
	        };
	        img.onerror = function () {
	         reject(new Error('JpegDecode failed to load image'));
	        };
	        img.src = imageUrl;
	       });
	      }, this);
	     },
	     getData: function WorkerTransport_getData() {
	      return this.messageHandler.sendWithPromise('GetData', null);
	     },
	     getPage: function WorkerTransport_getPage(pageNumber, capability) {
	      if (!isInt(pageNumber) || pageNumber <= 0 || pageNumber > this.numPages) {
	       return Promise.reject(new Error('Invalid page request'));
	      }
	      var pageIndex = pageNumber - 1;
	      if (pageIndex in this.pagePromises) {
	       return this.pagePromises[pageIndex];
	      }
	      var promise = this.messageHandler.sendWithPromise('GetPage', { pageIndex: pageIndex }).then(function (pageInfo) {
	       if (this.destroyed) {
	        throw new Error('Transport destroyed');
	       }
	       var page = new PDFPageProxy(pageIndex, pageInfo, this);
	       this.pageCache[pageIndex] = page;
	       return page;
	      }.bind(this));
	      this.pagePromises[pageIndex] = promise;
	      return promise;
	     },
	     getPageIndex: function WorkerTransport_getPageIndexByRef(ref) {
	      return this.messageHandler.sendWithPromise('GetPageIndex', { ref: ref }).catch(function (reason) {
	       return Promise.reject(new Error(reason));
	      });
	     },
	     getAnnotations: function WorkerTransport_getAnnotations(pageIndex, intent) {
	      return this.messageHandler.sendWithPromise('GetAnnotations', {
	       pageIndex: pageIndex,
	       intent: intent
	      });
	     },
	     getDestinations: function WorkerTransport_getDestinations() {
	      return this.messageHandler.sendWithPromise('GetDestinations', null);
	     },
	     getDestination: function WorkerTransport_getDestination(id) {
	      return this.messageHandler.sendWithPromise('GetDestination', { id: id });
	     },
	     getPageLabels: function WorkerTransport_getPageLabels() {
	      return this.messageHandler.sendWithPromise('GetPageLabels', null);
	     },
	     getAttachments: function WorkerTransport_getAttachments() {
	      return this.messageHandler.sendWithPromise('GetAttachments', null);
	     },
	     getJavaScript: function WorkerTransport_getJavaScript() {
	      return this.messageHandler.sendWithPromise('GetJavaScript', null);
	     },
	     getOutline: function WorkerTransport_getOutline() {
	      return this.messageHandler.sendWithPromise('GetOutline', null);
	     },
	     getMetadata: function WorkerTransport_getMetadata() {
	      return this.messageHandler.sendWithPromise('GetMetadata', null).then(function transportMetadata(results) {
	       return {
	        info: results[0],
	        metadata: results[1] ? new Metadata(results[1]) : null
	       };
	      });
	     },
	     getStats: function WorkerTransport_getStats() {
	      return this.messageHandler.sendWithPromise('GetStats', null);
	     },
	     startCleanup: function WorkerTransport_startCleanup() {
	      this.messageHandler.sendWithPromise('Cleanup', null).then(function endCleanup() {
	       for (var i = 0, ii = this.pageCache.length; i < ii; i++) {
	        var page = this.pageCache[i];
	        if (page) {
	         page.cleanup();
	        }
	       }
	       this.commonObjs.clear();
	       this.fontLoader.clear();
	      }.bind(this));
	     }
	    };
	    return WorkerTransport;
	   }();
	   var PDFObjects = function PDFObjectsClosure() {
	    function PDFObjects() {
	     this.objs = Object.create(null);
	    }
	    PDFObjects.prototype = {
	     ensureObj: function PDFObjects_ensureObj(objId) {
	      if (this.objs[objId]) {
	       return this.objs[objId];
	      }
	      var obj = {
	       capability: createPromiseCapability(),
	       data: null,
	       resolved: false
	      };
	      this.objs[objId] = obj;
	      return obj;
	     },
	     get: function PDFObjects_get(objId, callback) {
	      if (callback) {
	       this.ensureObj(objId).capability.promise.then(callback);
	       return null;
	      }
	      var obj = this.objs[objId];
	      if (!obj || !obj.resolved) {
	       error('Requesting object that isn\'t resolved yet ' + objId);
	      }
	      return obj.data;
	     },
	     resolve: function PDFObjects_resolve(objId, data) {
	      var obj = this.ensureObj(objId);
	      obj.resolved = true;
	      obj.data = data;
	      obj.capability.resolve(data);
	     },
	     isResolved: function PDFObjects_isResolved(objId) {
	      var objs = this.objs;
	      if (!objs[objId]) {
	       return false;
	      }
	      return objs[objId].resolved;
	     },
	     hasData: function PDFObjects_hasData(objId) {
	      return this.isResolved(objId);
	     },
	     getData: function PDFObjects_getData(objId) {
	      var objs = this.objs;
	      if (!objs[objId] || !objs[objId].resolved) {
	       return null;
	      }
	      return objs[objId].data;
	     },
	     clear: function PDFObjects_clear() {
	      this.objs = Object.create(null);
	     }
	    };
	    return PDFObjects;
	   }();
	   var RenderTask = function RenderTaskClosure() {
	    function RenderTask(internalRenderTask) {
	     this._internalRenderTask = internalRenderTask;
	     this.onContinue = null;
	    }
	    RenderTask.prototype = {
	     get promise() {
	      return this._internalRenderTask.capability.promise;
	     },
	     cancel: function RenderTask_cancel() {
	      this._internalRenderTask.cancel();
	     },
	     then: function RenderTask_then(onFulfilled, onRejected) {
	      return this.promise.then.apply(this.promise, arguments);
	     }
	    };
	    return RenderTask;
	   }();
	   var InternalRenderTask = function InternalRenderTaskClosure() {
	    function InternalRenderTask(callback, params, objs, commonObjs, operatorList, pageNumber) {
	     this.callback = callback;
	     this.params = params;
	     this.objs = objs;
	     this.commonObjs = commonObjs;
	     this.operatorListIdx = null;
	     this.operatorList = operatorList;
	     this.pageNumber = pageNumber;
	     this.running = false;
	     this.graphicsReadyCallback = null;
	     this.graphicsReady = false;
	     this.useRequestAnimationFrame = false;
	     this.cancelled = false;
	     this.capability = createPromiseCapability();
	     this.task = new RenderTask(this);
	     this._continueBound = this._continue.bind(this);
	     this._scheduleNextBound = this._scheduleNext.bind(this);
	     this._nextBound = this._next.bind(this);
	    }
	    InternalRenderTask.prototype = {
	     initializeGraphics: function InternalRenderTask_initializeGraphics(transparency) {
	      if (this.cancelled) {
	       return;
	      }
	      if (getDefaultSetting('pdfBug') && globalScope.StepperManager && globalScope.StepperManager.enabled) {
	       this.stepper = globalScope.StepperManager.create(this.pageNumber - 1);
	       this.stepper.init(this.operatorList);
	       this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();
	      }
	      var params = this.params;
	      this.gfx = new CanvasGraphics(params.canvasContext, this.commonObjs, this.objs, params.imageLayer);
	      this.gfx.beginDrawing(params.transform, params.viewport, transparency);
	      this.operatorListIdx = 0;
	      this.graphicsReady = true;
	      if (this.graphicsReadyCallback) {
	       this.graphicsReadyCallback();
	      }
	     },
	     cancel: function InternalRenderTask_cancel() {
	      this.running = false;
	      this.cancelled = true;
	      this.callback('cancelled');
	     },
	     operatorListChanged: function InternalRenderTask_operatorListChanged() {
	      if (!this.graphicsReady) {
	       if (!this.graphicsReadyCallback) {
	        this.graphicsReadyCallback = this._continueBound;
	       }
	       return;
	      }
	      if (this.stepper) {
	       this.stepper.updateOperatorList(this.operatorList);
	      }
	      if (this.running) {
	       return;
	      }
	      this._continue();
	     },
	     _continue: function InternalRenderTask__continue() {
	      this.running = true;
	      if (this.cancelled) {
	       return;
	      }
	      if (this.task.onContinue) {
	       this.task.onContinue(this._scheduleNextBound);
	      } else {
	       this._scheduleNext();
	      }
	     },
	     _scheduleNext: function InternalRenderTask__scheduleNext() {
	      if (this.useRequestAnimationFrame && typeof window !== 'undefined') {
	       window.requestAnimationFrame(this._nextBound);
	      } else {
	       Promise.resolve(undefined).then(this._nextBound);
	      }
	     },
	     _next: function InternalRenderTask__next() {
	      if (this.cancelled) {
	       return;
	      }
	      this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);
	      if (this.operatorListIdx === this.operatorList.argsArray.length) {
	       this.running = false;
	       if (this.operatorList.lastChunk) {
	        this.gfx.endDrawing();
	        this.callback();
	       }
	      }
	     }
	    };
	    return InternalRenderTask;
	   }();
	   var _UnsupportedManager = function UnsupportedManagerClosure() {
	    var listeners = [];
	    return {
	     listen: function (cb) {
	      deprecated('Global UnsupportedManager.listen is used: ' + ' use PDFDocumentLoadingTask.onUnsupportedFeature instead');
	      listeners.push(cb);
	     },
	     notify: function (featureId) {
	      for (var i = 0, ii = listeners.length; i < ii; i++) {
	       listeners[i](featureId);
	      }
	     }
	    };
	   }();
	   if (typeof pdfjsVersion !== 'undefined') {
	    exports.version = pdfjsVersion;
	   }
	   if (typeof pdfjsBuild !== 'undefined') {
	    exports.build = pdfjsBuild;
	   }
	   exports.getDocument = getDocument;
	   exports.PDFDataRangeTransport = PDFDataRangeTransport;
	   exports.PDFWorker = PDFWorker;
	   exports.PDFDocumentProxy = PDFDocumentProxy;
	   exports.PDFPageProxy = PDFPageProxy;
	   exports._UnsupportedManager = _UnsupportedManager;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreEvaluator = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreParser, root.pdfjsCoreImage, root.pdfjsCoreColorSpace, root.pdfjsCoreMurmurHash3, root.pdfjsCoreFonts, root.pdfjsCoreFunction, root.pdfjsCorePattern, root.pdfjsCoreCMap, root.pdfjsCoreMetrics, root.pdfjsCoreBidi, root.pdfjsCoreEncodings, root.pdfjsCoreStandardFonts, root.pdfjsCoreUnicode, root.pdfjsCoreGlyphList);
	  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreParser, coreImage, coreColorSpace, coreMurmurHash3, coreFonts, coreFunction, corePattern, coreCMap, coreMetrics, coreBidi, coreEncodings, coreStandardFonts, coreUnicode, coreGlyphList) {
	   var FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;
	   var IDENTITY_MATRIX = sharedUtil.IDENTITY_MATRIX;
	   var UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;
	   var ImageKind = sharedUtil.ImageKind;
	   var OPS = sharedUtil.OPS;
	   var TextRenderingMode = sharedUtil.TextRenderingMode;
	   var Util = sharedUtil.Util;
	   var assert = sharedUtil.assert;
	   var createPromiseCapability = sharedUtil.createPromiseCapability;
	   var error = sharedUtil.error;
	   var info = sharedUtil.info;
	   var isArray = sharedUtil.isArray;
	   var isNum = sharedUtil.isNum;
	   var isString = sharedUtil.isString;
	   var getLookupTableFactory = sharedUtil.getLookupTableFactory;
	   var warn = sharedUtil.warn;
	   var Dict = corePrimitives.Dict;
	   var Name = corePrimitives.Name;
	   var isEOF = corePrimitives.isEOF;
	   var isCmd = corePrimitives.isCmd;
	   var isDict = corePrimitives.isDict;
	   var isName = corePrimitives.isName;
	   var isRef = corePrimitives.isRef;
	   var isStream = corePrimitives.isStream;
	   var DecodeStream = coreStream.DecodeStream;
	   var JpegStream = coreStream.JpegStream;
	   var Stream = coreStream.Stream;
	   var Lexer = coreParser.Lexer;
	   var Parser = coreParser.Parser;
	   var PDFImage = coreImage.PDFImage;
	   var ColorSpace = coreColorSpace.ColorSpace;
	   var MurmurHash3_64 = coreMurmurHash3.MurmurHash3_64;
	   var ErrorFont = coreFonts.ErrorFont;
	   var FontFlags = coreFonts.FontFlags;
	   var Font = coreFonts.Font;
	   var IdentityToUnicodeMap = coreFonts.IdentityToUnicodeMap;
	   var ToUnicodeMap = coreFonts.ToUnicodeMap;
	   var getFontType = coreFonts.getFontType;
	   var isPDFFunction = coreFunction.isPDFFunction;
	   var PDFFunction = coreFunction.PDFFunction;
	   var Pattern = corePattern.Pattern;
	   var getTilingPatternIR = corePattern.getTilingPatternIR;
	   var CMapFactory = coreCMap.CMapFactory;
	   var IdentityCMap = coreCMap.IdentityCMap;
	   var getMetrics = coreMetrics.getMetrics;
	   var bidi = coreBidi.bidi;
	   var WinAnsiEncoding = coreEncodings.WinAnsiEncoding;
	   var StandardEncoding = coreEncodings.StandardEncoding;
	   var MacRomanEncoding = coreEncodings.MacRomanEncoding;
	   var SymbolSetEncoding = coreEncodings.SymbolSetEncoding;
	   var ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;
	   var getEncoding = coreEncodings.getEncoding;
	   var getStdFontMap = coreStandardFonts.getStdFontMap;
	   var getSerifFonts = coreStandardFonts.getSerifFonts;
	   var getSymbolsFonts = coreStandardFonts.getSymbolsFonts;
	   var getNormalizedUnicodes = coreUnicode.getNormalizedUnicodes;
	   var reverseIfRtl = coreUnicode.reverseIfRtl;
	   var getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;
	   var getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;
	   var PartialEvaluator = function PartialEvaluatorClosure() {
	    var DefaultPartialEvaluatorOptions = {
	     forceDataSchema: false,
	     maxImageSize: -1,
	     disableFontFace: false,
	     cMapOptions: {
	      url: null,
	      packed: false
	     }
	    };
	    function NativeImageDecoder(xref, resources, handler, forceDataSchema) {
	     this.xref = xref;
	     this.resources = resources;
	     this.handler = handler;
	     this.forceDataSchema = forceDataSchema;
	    }
	    NativeImageDecoder.prototype = {
	     canDecode: function (image) {
	      return image instanceof JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources);
	     },
	     decode: function (image) {
	      var dict = image.dict;
	      var colorSpace = dict.get('ColorSpace', 'CS');
	      colorSpace = ColorSpace.parse(colorSpace, this.xref, this.resources);
	      var numComps = colorSpace.numComps;
	      var decodePromise = this.handler.sendWithPromise('JpegDecode', [
	       image.getIR(this.forceDataSchema),
	       numComps
	      ]);
	      return decodePromise.then(function (message) {
	       var data = message.data;
	       return new Stream(data, 0, data.length, image.dict);
	      });
	     }
	    };
	    NativeImageDecoder.isSupported = function NativeImageDecoder_isSupported(image, xref, res) {
	     var dict = image.dict;
	     if (dict.has('DecodeParms') || dict.has('DP')) {
	      return false;
	     }
	     var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);
	     return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));
	    };
	    NativeImageDecoder.isDecodable = function NativeImageDecoder_isDecodable(image, xref, res) {
	     var dict = image.dict;
	     if (dict.has('DecodeParms') || dict.has('DP')) {
	      return false;
	     }
	     var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);
	     return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));
	    };
	    function PartialEvaluator(pdfManager, xref, handler, pageIndex, idFactory, fontCache, options) {
	     this.pdfManager = pdfManager;
	     this.xref = xref;
	     this.handler = handler;
	     this.pageIndex = pageIndex;
	     this.idFactory = idFactory;
	     this.fontCache = fontCache;
	     this.options = options || DefaultPartialEvaluatorOptions;
	    }
	    var TIME_SLOT_DURATION_MS = 20;
	    var CHECK_TIME_EVERY = 100;
	    function TimeSlotManager() {
	     this.reset();
	    }
	    TimeSlotManager.prototype = {
	     check: function TimeSlotManager_check() {
	      if (++this.checked < CHECK_TIME_EVERY) {
	       return false;
	      }
	      this.checked = 0;
	      return this.endTime <= Date.now();
	     },
	     reset: function TimeSlotManager_reset() {
	      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;
	      this.checked = 0;
	     }
	    };
	    var deferred = Promise.resolve();
	    var TILING_PATTERN = 1, SHADING_PATTERN = 2;
	    PartialEvaluator.prototype = {
	     hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {
	      if (!isDict(resources)) {
	       return false;
	      }
	      var processed = Object.create(null);
	      if (resources.objId) {
	       processed[resources.objId] = true;
	      }
	      var nodes = [resources], xref = this.xref;
	      while (nodes.length) {
	       var key, i, ii;
	       var node = nodes.shift();
	       var graphicStates = node.get('ExtGState');
	       if (isDict(graphicStates)) {
	        var graphicStatesKeys = graphicStates.getKeys();
	        for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {
	         key = graphicStatesKeys[i];
	         var graphicState = graphicStates.get(key);
	         var bm = graphicState.get('BM');
	         if (isName(bm) && bm.name !== 'Normal') {
	          return true;
	         }
	        }
	       }
	       var xObjects = node.get('XObject');
	       if (!isDict(xObjects)) {
	        continue;
	       }
	       var xObjectsKeys = xObjects.getKeys();
	       for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {
	        key = xObjectsKeys[i];
	        var xObject = xObjects.getRaw(key);
	        if (isRef(xObject)) {
	         if (processed[xObject.toString()]) {
	          continue;
	         }
	         xObject = xref.fetch(xObject);
	        }
	        if (!isStream(xObject)) {
	         continue;
	        }
	        if (xObject.dict.objId) {
	         if (processed[xObject.dict.objId]) {
	          continue;
	         }
	         processed[xObject.dict.objId] = true;
	        }
	        var xResources = xObject.dict.get('Resources');
	        if (isDict(xResources) && (!xResources.objId || !processed[xResources.objId])) {
	         nodes.push(xResources);
	         if (xResources.objId) {
	          processed[xResources.objId] = true;
	         }
	        }
	       }
	      }
	      return false;
	     },
	     buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {
	      var matrix = xobj.dict.getArray('Matrix');
	      var bbox = xobj.dict.getArray('BBox');
	      var group = xobj.dict.get('Group');
	      if (group) {
	       var groupOptions = {
	        matrix: matrix,
	        bbox: bbox,
	        smask: smask,
	        isolated: false,
	        knockout: false
	       };
	       var groupSubtype = group.get('S');
	       var colorSpace;
	       if (isName(groupSubtype, 'Transparency')) {
	        groupOptions.isolated = group.get('I') || false;
	        groupOptions.knockout = group.get('K') || false;
	        colorSpace = group.has('CS') ? ColorSpace.parse(group.get('CS'), this.xref, resources) : null;
	       }
	       if (smask && smask.backdrop) {
	        colorSpace = colorSpace || ColorSpace.singletons.rgb;
	        smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);
	       }
	       operatorList.addOp(OPS.beginGroup, [groupOptions]);
	      }
	      operatorList.addOp(OPS.paintFormXObjectBegin, [
	       matrix,
	       bbox
	      ]);
	      return this.getOperatorList(xobj, task, xobj.dict.get('Resources') || resources, operatorList, initialState).then(function () {
	       operatorList.addOp(OPS.paintFormXObjectEnd, []);
	       if (group) {
	        operatorList.addOp(OPS.endGroup, [groupOptions]);
	       }
	      });
	     },
	     buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {
	      var self = this;
	      var dict = image.dict;
	      var w = dict.get('Width', 'W');
	      var h = dict.get('Height', 'H');
	      if (!(w && isNum(w)) || !(h && isNum(h))) {
	       warn('Image dimensions are missing, or not numbers.');
	       return;
	      }
	      var maxImageSize = this.options.maxImageSize;
	      if (maxImageSize !== -1 && w * h > maxImageSize) {
	       warn('Image exceeded maximum allowed size and was removed.');
	       return;
	      }
	      var imageMask = dict.get('ImageMask', 'IM') || false;
	      var imgData, args;
	      if (imageMask) {
	       var width = dict.get('Width', 'W');
	       var height = dict.get('Height', 'H');
	       var bitStrideLength = width + 7 >> 3;
	       var imgArray = image.getBytes(bitStrideLength * height);
	       var decode = dict.getArray('Decode', 'D');
	       var inverseDecode = !!decode && decode[0] > 0;
	       imgData = PDFImage.createMask(imgArray, width, height, image instanceof DecodeStream, inverseDecode);
	       imgData.cached = true;
	       args = [imgData];
	       operatorList.addOp(OPS.paintImageMaskXObject, args);
	       if (cacheKey) {
	        imageCache[cacheKey] = {
	         fn: OPS.paintImageMaskXObject,
	         args: args
	        };
	       }
	       return;
	      }
	      var softMask = dict.get('SMask', 'SM') || false;
	      var mask = dict.get('Mask') || false;
	      var SMALL_IMAGE_DIMENSIONS = 200;
	      if (inline && !softMask && !mask && !(image instanceof JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {
	       var imageObj = new PDFImage(this.xref, resources, image, inline, null, null);
	       imgData = imageObj.createImageData(true);
	       operatorList.addOp(OPS.paintInlineImageXObject, [imgData]);
	       return;
	      }
	      var objId = 'img_' + this.idFactory.createObjId();
	      operatorList.addDependency(objId);
	      args = [
	       objId,
	       w,
	       h
	      ];
	      if (!softMask && !mask && image instanceof JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources)) {
	       operatorList.addOp(OPS.paintJpegXObject, args);
	       this.handler.send('obj', [
	        objId,
	        this.pageIndex,
	        'JpegStream',
	        image.getIR(this.options.forceDataSchema)
	       ]);
	       return;
	      }
	      var nativeImageDecoder = null;
	      if (image instanceof JpegStream || mask instanceof JpegStream || softMask instanceof JpegStream) {
	       nativeImageDecoder = new NativeImageDecoder(self.xref, resources, self.handler, self.options.forceDataSchema);
	      }
	      PDFImage.buildImage(self.handler, self.xref, resources, image, inline, nativeImageDecoder).then(function (imageObj) {
	       var imgData = imageObj.createImageData(false);
	       self.handler.send('obj', [
	        objId,
	        self.pageIndex,
	        'Image',
	        imgData
	       ], [imgData.data.buffer]);
	      }).then(undefined, function (reason) {
	       warn('Unable to decode image: ' + reason);
	       self.handler.send('obj', [
	        objId,
	        self.pageIndex,
	        'Image',
	        null
	       ]);
	      });
	      operatorList.addOp(OPS.paintImageXObject, args);
	      if (cacheKey) {
	       imageCache[cacheKey] = {
	        fn: OPS.paintImageXObject,
	        args: args
	       };
	      }
	     },
	     handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {
	      var smaskContent = smask.get('G');
	      var smaskOptions = {
	       subtype: smask.get('S').name,
	       backdrop: smask.get('BC')
	      };
	      var transferObj = smask.get('TR');
	      if (isPDFFunction(transferObj)) {
	       var transferFn = PDFFunction.parse(this.xref, transferObj);
	       var transferMap = new Uint8Array(256);
	       var tmp = new Float32Array(1);
	       for (var i = 0; i < 256; i++) {
	        tmp[0] = i / 255;
	        transferFn(tmp, 0, tmp, 0);
	        transferMap[i] = tmp[0] * 255 | 0;
	       }
	       smaskOptions.transferMap = transferMap;
	      }
	      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());
	     },
	     handleTilingType: function PartialEvaluator_handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {
	      var tilingOpList = new OperatorList();
	      var resourcesArray = [
	       patternDict.get('Resources'),
	       resources
	      ];
	      var patternResources = Dict.merge(this.xref, resourcesArray);
	      return this.getOperatorList(pattern, task, patternResources, tilingOpList).then(function () {
	       operatorList.addDependencies(tilingOpList.dependencies);
	       operatorList.addOp(fn, getTilingPatternIR({
	        fnArray: tilingOpList.fnArray,
	        argsArray: tilingOpList.argsArray
	       }, patternDict, args));
	      });
	     },
	     handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {
	      var fontName;
	      if (fontArgs) {
	       fontArgs = fontArgs.slice();
	       fontName = fontArgs[0].name;
	      }
	      var self = this;
	      return this.loadFont(fontName, fontRef, this.xref, resources).then(function (translated) {
	       if (!translated.font.isType3Font) {
	        return translated;
	       }
	       return translated.loadType3Data(self, resources, operatorList, task).then(function () {
	        return translated;
	       }, function (reason) {
	        self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });
	        return new TranslatedFont('g_font_error', new ErrorFont('Type3 font load error: ' + reason), translated.font);
	       });
	      }).then(function (translated) {
	       state.font = translated.font;
	       translated.send(self.handler);
	       return translated.loadedName;
	      });
	     },
	     handleText: function PartialEvaluator_handleText(chars, state) {
	      var font = state.font;
	      var glyphs = font.charsToGlyphs(chars);
	      var isAddToPathSet = !!(state.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG);
	      if (font.data && (isAddToPathSet || this.options.disableFontFace)) {
	       var buildPath = function (fontChar) {
	        if (!font.renderer.hasBuiltPath(fontChar)) {
	         var path = font.renderer.getPathJs(fontChar);
	         this.handler.send('commonobj', [
	          font.loadedName + '_path_' + fontChar,
	          'FontPath',
	          path
	         ]);
	        }
	       }.bind(this);
	       for (var i = 0, ii = glyphs.length; i < ii; i++) {
	        var glyph = glyphs[i];
	        buildPath(glyph.fontChar);
	        var accent = glyph.accent;
	        if (accent && accent.fontChar) {
	         buildPath(accent.fontChar);
	        }
	       }
	      }
	      return glyphs;
	     },
	     setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, xref, stateManager) {
	      var gStateObj = [];
	      var gStateKeys = gState.getKeys();
	      var self = this;
	      var promise = Promise.resolve();
	      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {
	       var key = gStateKeys[i];
	       var value = gState.get(key);
	       switch (key) {
	       case 'Type':
	        break;
	       case 'LW':
	       case 'LC':
	       case 'LJ':
	       case 'ML':
	       case 'D':
	       case 'RI':
	       case 'FL':
	       case 'CA':
	       case 'ca':
	        gStateObj.push([
	         key,
	         value
	        ]);
	        break;
	       case 'Font':
	        promise = promise.then(function () {
	         return self.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {
	          operatorList.addDependency(loadedName);
	          gStateObj.push([
	           key,
	           [
	            loadedName,
	            value[1]
	           ]
	          ]);
	         });
	        });
	        break;
	       case 'BM':
	        gStateObj.push([
	         key,
	         value
	        ]);
	        break;
	       case 'SMask':
	        if (isName(value, 'None')) {
	         gStateObj.push([
	          key,
	          false
	         ]);
	         break;
	        }
	        if (isDict(value)) {
	         promise = promise.then(function (dict) {
	          return self.handleSMask(dict, resources, operatorList, task, stateManager);
	         }.bind(this, value));
	         gStateObj.push([
	          key,
	          true
	         ]);
	        } else {
	         warn('Unsupported SMask type');
	        }
	        break;
	       case 'OP':
	       case 'op':
	       case 'OPM':
	       case 'BG':
	       case 'BG2':
	       case 'UCR':
	       case 'UCR2':
	       case 'TR':
	       case 'TR2':
	       case 'HT':
	       case 'SM':
	       case 'SA':
	       case 'AIS':
	       case 'TK':
	        info('graphic state operator ' + key);
	        break;
	       default:
	        info('Unknown graphic state operator ' + key);
	        break;
	       }
	      }
	      return promise.then(function () {
	       if (gStateObj.length > 0) {
	        operatorList.addOp(OPS.setGState, [gStateObj]);
	       }
	      });
	     },
	     loadFont: function PartialEvaluator_loadFont(fontName, font, xref, resources) {
	      function errorFont() {
	       return Promise.resolve(new TranslatedFont('g_font_error', new ErrorFont('Font ' + fontName + ' is not available'), font));
	      }
	      var fontRef;
	      if (font) {
	       assert(isRef(font));
	       fontRef = font;
	      } else {
	       var fontRes = resources.get('Font');
	       if (fontRes) {
	        fontRef = fontRes.getRaw(fontName);
	       } else {
	        warn('fontRes not available');
	        return errorFont();
	       }
	      }
	      if (!fontRef) {
	       warn('fontRef not available');
	       return errorFont();
	      }
	      if (this.fontCache.has(fontRef)) {
	       return this.fontCache.get(fontRef);
	      }
	      font = xref.fetchIfRef(fontRef);
	      if (!isDict(font)) {
	       return errorFont();
	      }
	      if (font.translated) {
	       return font.translated;
	      }
	      var fontCapability = createPromiseCapability();
	      var preEvaluatedFont = this.preEvaluateFont(font, xref);
	      var descriptor = preEvaluatedFont.descriptor;
	      var fontRefIsRef = isRef(fontRef), fontID;
	      if (fontRefIsRef) {
	       fontID = fontRef.toString();
	      }
	      if (isDict(descriptor)) {
	       if (!descriptor.fontAliases) {
	        descriptor.fontAliases = Object.create(null);
	       }
	       var fontAliases = descriptor.fontAliases;
	       var hash = preEvaluatedFont.hash;
	       if (fontAliases[hash]) {
	        var aliasFontRef = fontAliases[hash].aliasRef;
	        if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {
	         this.fontCache.putAlias(fontRef, aliasFontRef);
	         return this.fontCache.get(fontRef);
	        }
	       } else {
	        fontAliases[hash] = { fontID: Font.getFontID() };
	       }
	       if (fontRefIsRef) {
	        fontAliases[hash].aliasRef = fontRef;
	       }
	       fontID = fontAliases[hash].fontID;
	      }
	      if (fontRefIsRef) {
	       this.fontCache.put(fontRef, fontCapability.promise);
	      } else {
	       if (!fontID) {
	        fontID = this.idFactory.createObjId();
	       }
	       this.fontCache.put('id_' + fontID, fontCapability.promise);
	      }
	      assert(fontID, 'The "fontID" must be defined.');
	      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;
	      font.translated = fontCapability.promise;
	      var translatedPromise;
	      try {
	       translatedPromise = this.translateFont(preEvaluatedFont, xref);
	      } catch (e) {
	       translatedPromise = Promise.reject(e);
	      }
	      var self = this;
	      translatedPromise.then(function (translatedFont) {
	       if (translatedFont.fontType !== undefined) {
	        var xrefFontStats = xref.stats.fontTypes;
	        xrefFontStats[translatedFont.fontType] = true;
	       }
	       fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));
	      }, function (reason) {
	       self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });
	       try {
	        var descriptor = preEvaluatedFont.descriptor;
	        var fontFile3 = descriptor && descriptor.get('FontFile3');
	        var subtype = fontFile3 && fontFile3.get('Subtype');
	        var fontType = getFontType(preEvaluatedFont.type, subtype && subtype.name);
	        var xrefFontStats = xref.stats.fontTypes;
	        xrefFontStats[fontType] = true;
	       } catch (ex) {
	       }
	       fontCapability.resolve(new TranslatedFont(font.loadedName, new ErrorFont(reason instanceof Error ? reason.message : reason), font));
	      });
	      return fontCapability.promise;
	     },
	     buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {
	      var lastIndex = operatorList.length - 1;
	      if (!args) {
	       args = [];
	      }
	      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== OPS.constructPath) {
	       operatorList.addOp(OPS.constructPath, [
	        [fn],
	        args
	       ]);
	      } else {
	       var opArgs = operatorList.argsArray[lastIndex];
	       opArgs[0].push(fn);
	       Array.prototype.push.apply(opArgs[1], args);
	      }
	     },
	     handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task, xref) {
	      var patternName = args[args.length - 1];
	      var pattern;
	      if (isName(patternName) && (pattern = patterns.get(patternName.name))) {
	       var dict = isStream(pattern) ? pattern.dict : pattern;
	       var typeNum = dict.get('PatternType');
	       if (typeNum === TILING_PATTERN) {
	        var color = cs.base ? cs.base.getRgb(args, 0) : null;
	        return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);
	       } else if (typeNum === SHADING_PATTERN) {
	        var shading = dict.get('Shading');
	        var matrix = dict.getArray('Matrix');
	        pattern = Pattern.parseShading(shading, matrix, xref, resources, this.handler);
	        operatorList.addOp(fn, pattern.getIR());
	        return Promise.resolve();
	       }
	       return Promise.reject('Unknown PatternType: ' + typeNum);
	      }
	      operatorList.addOp(fn, args);
	      return Promise.resolve();
	     },
	     getOperatorList: function PartialEvaluator_getOperatorList(stream, task, resources, operatorList, initialState) {
	      var self = this;
	      var xref = this.xref;
	      var imageCache = Object.create(null);
	      assert(operatorList);
	      resources = resources || Dict.empty;
	      var xobjs = resources.get('XObject') || Dict.empty;
	      var patterns = resources.get('Pattern') || Dict.empty;
	      var stateManager = new StateManager(initialState || new EvalState());
	      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);
	      var timeSlotManager = new TimeSlotManager();
	      return new Promise(function promiseBody(resolve, reject) {
	       var next = function (promise) {
	        promise.then(function () {
	         try {
	          promiseBody(resolve, reject);
	         } catch (ex) {
	          reject(ex);
	         }
	        }, reject);
	       };
	       task.ensureNotTerminated();
	       timeSlotManager.reset();
	       var stop, operation = {}, i, ii, cs;
	       while (!(stop = timeSlotManager.check())) {
	        operation.args = null;
	        if (!preprocessor.read(operation)) {
	         break;
	        }
	        var args = operation.args;
	        var fn = operation.fn;
	        switch (fn | 0) {
	        case OPS.paintXObject:
	         if (args[0].code) {
	          break;
	         }
	         var name = args[0].name;
	         if (!name) {
	          warn('XObject must be referred to by name.');
	          continue;
	         }
	         if (imageCache[name] !== undefined) {
	          operatorList.addOp(imageCache[name].fn, imageCache[name].args);
	          args = null;
	          continue;
	         }
	         var xobj = xobjs.get(name);
	         if (xobj) {
	          assert(isStream(xobj), 'XObject should be a stream');
	          var type = xobj.dict.get('Subtype');
	          assert(isName(type), 'XObject should have a Name subtype');
	          if (type.name === 'Form') {
	           stateManager.save();
	           next(self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {
	            stateManager.restore();
	           }));
	           return;
	          } else if (type.name === 'Image') {
	           self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);
	           args = null;
	           continue;
	          } else if (type.name === 'PS') {
	           info('Ignored XObject subtype PS');
	           continue;
	          } else {
	           error('Unhandled XObject subtype ' + type.name);
	          }
	         }
	         break;
	        case OPS.setFont:
	         var fontSize = args[1];
	         next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {
	          operatorList.addDependency(loadedName);
	          operatorList.addOp(OPS.setFont, [
	           loadedName,
	           fontSize
	          ]);
	         }));
	         return;
	        case OPS.endInlineImage:
	         var cacheKey = args[0].cacheKey;
	         if (cacheKey) {
	          var cacheEntry = imageCache[cacheKey];
	          if (cacheEntry !== undefined) {
	           operatorList.addOp(cacheEntry.fn, cacheEntry.args);
	           args = null;
	           continue;
	          }
	         }
	         self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);
	         args = null;
	         continue;
	        case OPS.showText:
	         args[0] = self.handleText(args[0], stateManager.state);
	         break;
	        case OPS.showSpacedText:
	         var arr = args[0];
	         var combinedGlyphs = [];
	         var arrLength = arr.length;
	         var state = stateManager.state;
	         for (i = 0; i < arrLength; ++i) {
	          var arrItem = arr[i];
	          if (isString(arrItem)) {
	           Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));
	          } else if (isNum(arrItem)) {
	           combinedGlyphs.push(arrItem);
	          }
	         }
	         args[0] = combinedGlyphs;
	         fn = OPS.showText;
	         break;
	        case OPS.nextLineShowText:
	         operatorList.addOp(OPS.nextLine);
	         args[0] = self.handleText(args[0], stateManager.state);
	         fn = OPS.showText;
	         break;
	        case OPS.nextLineSetSpacingShowText:
	         operatorList.addOp(OPS.nextLine);
	         operatorList.addOp(OPS.setWordSpacing, [args.shift()]);
	         operatorList.addOp(OPS.setCharSpacing, [args.shift()]);
	         args[0] = self.handleText(args[0], stateManager.state);
	         fn = OPS.showText;
	         break;
	        case OPS.setTextRenderingMode:
	         stateManager.state.textRenderingMode = args[0];
	         break;
	        case OPS.setFillColorSpace:
	         stateManager.state.fillColorSpace = ColorSpace.parse(args[0], xref, resources);
	         continue;
	        case OPS.setStrokeColorSpace:
	         stateManager.state.strokeColorSpace = ColorSpace.parse(args[0], xref, resources);
	         continue;
	        case OPS.setFillColor:
	         cs = stateManager.state.fillColorSpace;
	         args = cs.getRgb(args, 0);
	         fn = OPS.setFillRGBColor;
	         break;
	        case OPS.setStrokeColor:
	         cs = stateManager.state.strokeColorSpace;
	         args = cs.getRgb(args, 0);
	         fn = OPS.setStrokeRGBColor;
	         break;
	        case OPS.setFillGray:
	         stateManager.state.fillColorSpace = ColorSpace.singletons.gray;
	         args = ColorSpace.singletons.gray.getRgb(args, 0);
	         fn = OPS.setFillRGBColor;
	         break;
	        case OPS.setStrokeGray:
	         stateManager.state.strokeColorSpace = ColorSpace.singletons.gray;
	         args = ColorSpace.singletons.gray.getRgb(args, 0);
	         fn = OPS.setStrokeRGBColor;
	         break;
	        case OPS.setFillCMYKColor:
	         stateManager.state.fillColorSpace = ColorSpace.singletons.cmyk;
	         args = ColorSpace.singletons.cmyk.getRgb(args, 0);
	         fn = OPS.setFillRGBColor;
	         break;
	        case OPS.setStrokeCMYKColor:
	         stateManager.state.strokeColorSpace = ColorSpace.singletons.cmyk;
	         args = ColorSpace.singletons.cmyk.getRgb(args, 0);
	         fn = OPS.setStrokeRGBColor;
	         break;
	        case OPS.setFillRGBColor:
	         stateManager.state.fillColorSpace = ColorSpace.singletons.rgb;
	         args = ColorSpace.singletons.rgb.getRgb(args, 0);
	         break;
	        case OPS.setStrokeRGBColor:
	         stateManager.state.strokeColorSpace = ColorSpace.singletons.rgb;
	         args = ColorSpace.singletons.rgb.getRgb(args, 0);
	         break;
	        case OPS.setFillColorN:
	         cs = stateManager.state.fillColorSpace;
	         if (cs.name === 'Pattern') {
	          next(self.handleColorN(operatorList, OPS.setFillColorN, args, cs, patterns, resources, task, xref));
	          return;
	         }
	         args = cs.getRgb(args, 0);
	         fn = OPS.setFillRGBColor;
	         break;
	        case OPS.setStrokeColorN:
	         cs = stateManager.state.strokeColorSpace;
	         if (cs.name === 'Pattern') {
	          next(self.handleColorN(operatorList, OPS.setStrokeColorN, args, cs, patterns, resources, task, xref));
	          return;
	         }
	         args = cs.getRgb(args, 0);
	         fn = OPS.setStrokeRGBColor;
	         break;
	        case OPS.shadingFill:
	         var shadingRes = resources.get('Shading');
	         if (!shadingRes) {
	          error('No shading resource found');
	         }
	         var shading = shadingRes.get(args[0].name);
	         if (!shading) {
	          error('No shading object found');
	         }
	         var shadingFill = Pattern.parseShading(shading, null, xref, resources, self.handler);
	         var patternIR = shadingFill.getIR();
	         args = [patternIR];
	         fn = OPS.shadingFill;
	         break;
	        case OPS.setGState:
	         var dictName = args[0];
	         var extGState = resources.get('ExtGState');
	         if (!isDict(extGState) || !extGState.has(dictName.name)) {
	          break;
	         }
	         var gState = extGState.get(dictName.name);
	         next(self.setGState(resources, gState, operatorList, task, xref, stateManager));
	         return;
	        case OPS.moveTo:
	        case OPS.lineTo:
	        case OPS.curveTo:
	        case OPS.curveTo2:
	        case OPS.curveTo3:
	        case OPS.closePath:
	         self.buildPath(operatorList, fn, args);
	         continue;
	        case OPS.rectangle:
	         self.buildPath(operatorList, fn, args);
	         continue;
	        case OPS.markPoint:
	        case OPS.markPointProps:
	        case OPS.beginMarkedContent:
	        case OPS.beginMarkedContentProps:
	        case OPS.endMarkedContent:
	        case OPS.beginCompat:
	        case OPS.endCompat:
	         continue;
	        default:
	         if (args !== null) {
	          for (i = 0, ii = args.length; i < ii; i++) {
	           if (args[i] instanceof Dict) {
	            break;
	           }
	          }
	          if (i < ii) {
	           warn('getOperatorList - ignoring operator: ' + fn);
	           continue;
	          }
	         }
	        }
	        operatorList.addOp(fn, args);
	       }
	       if (stop) {
	        next(deferred);
	        return;
	       }
	       for (i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {
	        operatorList.addOp(OPS.restore, []);
	       }
	       resolve();
	      });
	     },
	     getTextContent: function PartialEvaluator_getTextContent(stream, task, resources, stateManager, normalizeWhitespace, combineTextItems) {
	      stateManager = stateManager || new StateManager(new TextState());
	      var WhitespaceRegexp = /\s/g;
	      var textContent = {
	       items: [],
	       styles: Object.create(null)
	      };
	      var textContentItem = {
	       initialized: false,
	       str: [],
	       width: 0,
	       height: 0,
	       vertical: false,
	       lastAdvanceWidth: 0,
	       lastAdvanceHeight: 0,
	       textAdvanceScale: 0,
	       spaceWidth: 0,
	       fakeSpaceMin: Infinity,
	       fakeMultiSpaceMin: Infinity,
	       fakeMultiSpaceMax: -0,
	       textRunBreakAllowed: false,
	       transform: null,
	       fontName: null
	      };
	      var SPACE_FACTOR = 0.3;
	      var MULTI_SPACE_FACTOR = 1.5;
	      var MULTI_SPACE_FACTOR_MAX = 4;
	      var self = this;
	      var xref = this.xref;
	      resources = xref.fetchIfRef(resources) || Dict.empty;
	      var xobjs = null;
	      var xobjsCache = Object.create(null);
	      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);
	      var textState;
	      function ensureTextContentItem() {
	       if (textContentItem.initialized) {
	        return textContentItem;
	       }
	       var font = textState.font;
	       if (!(font.loadedName in textContent.styles)) {
	        textContent.styles[font.loadedName] = {
	         fontFamily: font.fallbackName,
	         ascent: font.ascent,
	         descent: font.descent,
	         vertical: font.vertical
	        };
	       }
	       textContentItem.fontName = font.loadedName;
	       var tsm = [
	        textState.fontSize * textState.textHScale,
	        0,
	        0,
	        textState.fontSize,
	        0,
	        textState.textRise
	       ];
	       if (font.isType3Font && textState.fontMatrix !== FONT_IDENTITY_MATRIX && textState.fontSize === 1) {
	        var glyphHeight = font.bbox[3] - font.bbox[1];
	        if (glyphHeight > 0) {
	         glyphHeight = glyphHeight * textState.fontMatrix[3];
	         tsm[3] *= glyphHeight;
	        }
	       }
	       var trm = Util.transform(textState.ctm, Util.transform(textState.textMatrix, tsm));
	       textContentItem.transform = trm;
	       if (!font.vertical) {
	        textContentItem.width = 0;
	        textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);
	        textContentItem.vertical = false;
	       } else {
	        textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);
	        textContentItem.height = 0;
	        textContentItem.vertical = true;
	       }
	       var a = textState.textLineMatrix[0];
	       var b = textState.textLineMatrix[1];
	       var scaleLineX = Math.sqrt(a * a + b * b);
	       a = textState.ctm[0];
	       b = textState.ctm[1];
	       var scaleCtmX = Math.sqrt(a * a + b * b);
	       textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;
	       textContentItem.lastAdvanceWidth = 0;
	       textContentItem.lastAdvanceHeight = 0;
	       var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;
	       if (spaceWidth) {
	        textContentItem.spaceWidth = spaceWidth;
	        textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;
	        textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;
	        textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;
	        textContentItem.textRunBreakAllowed = !font.isMonospace;
	       } else {
	        textContentItem.spaceWidth = 0;
	        textContentItem.fakeSpaceMin = Infinity;
	        textContentItem.fakeMultiSpaceMin = Infinity;
	        textContentItem.fakeMultiSpaceMax = 0;
	        textContentItem.textRunBreakAllowed = false;
	       }
	       textContentItem.initialized = true;
	       return textContentItem;
	      }
	      function replaceWhitespace(str) {
	       var i = 0, ii = str.length, code;
	       while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {
	        i++;
	       }
	       return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;
	      }
	      function runBidiTransform(textChunk) {
	       var str = textChunk.str.join('');
	       var bidiResult = bidi(str, -1, textChunk.vertical);
	       return {
	        str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,
	        dir: bidiResult.dir,
	        width: textChunk.width,
	        height: textChunk.height,
	        transform: textChunk.transform,
	        fontName: textChunk.fontName
	       };
	      }
	      function handleSetFont(fontName, fontRef) {
	       return self.loadFont(fontName, fontRef, xref, resources).then(function (translated) {
	        textState.font = translated.font;
	        textState.fontMatrix = translated.font.fontMatrix || FONT_IDENTITY_MATRIX;
	       });
	      }
	      function buildTextContentItem(chars) {
	       var font = textState.font;
	       var textChunk = ensureTextContentItem();
	       var width = 0;
	       var height = 0;
	       var glyphs = font.charsToGlyphs(chars);
	       var defaultVMetrics = font.defaultVMetrics;
	       for (var i = 0; i < glyphs.length; i++) {
	        var glyph = glyphs[i];
	        var vMetricX = null;
	        var vMetricY = null;
	        var glyphWidth = null;
	        if (font.vertical) {
	         if (glyph.vmetric) {
	          glyphWidth = glyph.vmetric[0];
	          vMetricX = glyph.vmetric[1];
	          vMetricY = glyph.vmetric[2];
	         } else {
	          glyphWidth = glyph.width;
	          vMetricX = glyph.width * 0.5;
	          vMetricY = defaultVMetrics[2];
	         }
	        } else {
	         glyphWidth = glyph.width;
	        }
	        var glyphUnicode = glyph.unicode;
	        var NormalizedUnicodes = getNormalizedUnicodes();
	        if (NormalizedUnicodes[glyphUnicode] !== undefined) {
	         glyphUnicode = NormalizedUnicodes[glyphUnicode];
	        }
	        glyphUnicode = reverseIfRtl(glyphUnicode);
	        var charSpacing = textState.charSpacing;
	        if (glyph.isSpace) {
	         var wordSpacing = textState.wordSpacing;
	         charSpacing += wordSpacing;
	         if (wordSpacing > 0) {
	          addFakeSpaces(wordSpacing, textChunk.str);
	         }
	        }
	        var tx = 0;
	        var ty = 0;
	        if (!font.vertical) {
	         var w0 = glyphWidth * textState.fontMatrix[0];
	         tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;
	         width += tx;
	        } else {
	         var w1 = glyphWidth * textState.fontMatrix[0];
	         ty = w1 * textState.fontSize + charSpacing;
	         height += ty;
	        }
	        textState.translateTextMatrix(tx, ty);
	        textChunk.str.push(glyphUnicode);
	       }
	       if (!font.vertical) {
	        textChunk.lastAdvanceWidth = width;
	        textChunk.width += width;
	       } else {
	        textChunk.lastAdvanceHeight = height;
	        textChunk.height += Math.abs(height);
	       }
	       return textChunk;
	      }
	      function addFakeSpaces(width, strBuf) {
	       if (width < textContentItem.fakeSpaceMin) {
	        return;
	       }
	       if (width < textContentItem.fakeMultiSpaceMin) {
	        strBuf.push(' ');
	        return;
	       }
	       var fakeSpaces = Math.round(width / textContentItem.spaceWidth);
	       while (fakeSpaces-- > 0) {
	        strBuf.push(' ');
	       }
	      }
	      function flushTextContentItem() {
	       if (!textContentItem.initialized) {
	        return;
	       }
	       textContentItem.width *= textContentItem.textAdvanceScale;
	       textContentItem.height *= textContentItem.textAdvanceScale;
	       textContent.items.push(runBidiTransform(textContentItem));
	       textContentItem.initialized = false;
	       textContentItem.str.length = 0;
	      }
	      var timeSlotManager = new TimeSlotManager();
	      return new Promise(function promiseBody(resolve, reject) {
	       var next = function (promise) {
	        promise.then(function () {
	         try {
	          promiseBody(resolve, reject);
	         } catch (ex) {
	          reject(ex);
	         }
	        }, reject);
	       };
	       task.ensureNotTerminated();
	       timeSlotManager.reset();
	       var stop, operation = {}, args = [];
	       while (!(stop = timeSlotManager.check())) {
	        args.length = 0;
	        operation.args = args;
	        if (!preprocessor.read(operation)) {
	         break;
	        }
	        textState = stateManager.state;
	        var fn = operation.fn;
	        args = operation.args;
	        var advance, diff;
	        switch (fn | 0) {
	        case OPS.setFont:
	         var fontNameArg = args[0].name, fontSizeArg = args[1];
	         if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {
	          break;
	         }
	         flushTextContentItem();
	         textState.fontName = fontNameArg;
	         textState.fontSize = fontSizeArg;
	         next(handleSetFont(fontNameArg, null));
	         return;
	        case OPS.setTextRise:
	         flushTextContentItem();
	         textState.textRise = args[0];
	         break;
	        case OPS.setHScale:
	         flushTextContentItem();
	         textState.textHScale = args[0] / 100;
	         break;
	        case OPS.setLeading:
	         flushTextContentItem();
	         textState.leading = args[0];
	         break;
	        case OPS.moveText:
	         var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;
	         advance = args[0] - args[1];
	         if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {
	          textState.translateTextLineMatrix(args[0], args[1]);
	          textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;
	          textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;
	          diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);
	          addFakeSpaces(diff, textContentItem.str);
	          break;
	         }
	         flushTextContentItem();
	         textState.translateTextLineMatrix(args[0], args[1]);
	         textState.textMatrix = textState.textLineMatrix.slice();
	         break;
	        case OPS.setLeadingMoveText:
	         flushTextContentItem();
	         textState.leading = -args[1];
	         textState.translateTextLineMatrix(args[0], args[1]);
	         textState.textMatrix = textState.textLineMatrix.slice();
	         break;
	        case OPS.nextLine:
	         flushTextContentItem();
	         textState.carriageReturn();
	         break;
	        case OPS.setTextMatrix:
	         advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);
	         if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {
	          textState.translateTextLineMatrix(advance.width, advance.height);
	          textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;
	          textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;
	          diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);
	          addFakeSpaces(diff, textContentItem.str);
	          break;
	         }
	         flushTextContentItem();
	         textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);
	         textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);
	         break;
	        case OPS.setCharSpacing:
	         textState.charSpacing = args[0];
	         break;
	        case OPS.setWordSpacing:
	         textState.wordSpacing = args[0];
	         break;
	        case OPS.beginText:
	         flushTextContentItem();
	         textState.textMatrix = IDENTITY_MATRIX.slice();
	         textState.textLineMatrix = IDENTITY_MATRIX.slice();
	         break;
	        case OPS.showSpacedText:
	         var items = args[0];
	         var offset;
	         for (var j = 0, jj = items.length; j < jj; j++) {
	          if (typeof items[j] === 'string') {
	           buildTextContentItem(items[j]);
	          } else if (isNum(items[j])) {
	           ensureTextContentItem();
	           advance = items[j] * textState.fontSize / 1000;
	           var breakTextRun = false;
	           if (textState.font.vertical) {
	            offset = advance;
	            textState.translateTextMatrix(0, offset);
	            breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;
	            if (!breakTextRun) {
	             textContentItem.height += offset;
	            }
	           } else {
	            advance = -advance;
	            offset = advance * textState.textHScale;
	            textState.translateTextMatrix(offset, 0);
	            breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;
	            if (!breakTextRun) {
	             textContentItem.width += offset;
	            }
	           }
	           if (breakTextRun) {
	            flushTextContentItem();
	           } else if (advance > 0) {
	            addFakeSpaces(advance, textContentItem.str);
	           }
	          }
	         }
	         break;
	        case OPS.showText:
	         buildTextContentItem(args[0]);
	         break;
	        case OPS.nextLineShowText:
	         flushTextContentItem();
	         textState.carriageReturn();
	         buildTextContentItem(args[0]);
	         break;
	        case OPS.nextLineSetSpacingShowText:
	         flushTextContentItem();
	         textState.wordSpacing = args[0];
	         textState.charSpacing = args[1];
	         textState.carriageReturn();
	         buildTextContentItem(args[2]);
	         break;
	        case OPS.paintXObject:
	         flushTextContentItem();
	         if (args[0].code) {
	          break;
	         }
	         if (!xobjs) {
	          xobjs = resources.get('XObject') || Dict.empty;
	         }
	         var name = args[0].name;
	         if (xobjsCache.key === name) {
	          if (xobjsCache.texts) {
	           Util.appendToArray(textContent.items, xobjsCache.texts.items);
	           Util.extendObj(textContent.styles, xobjsCache.texts.styles);
	          }
	          break;
	         }
	         var xobj = xobjs.get(name);
	         if (!xobj) {
	          break;
	         }
	         assert(isStream(xobj), 'XObject should be a stream');
	         var type = xobj.dict.get('Subtype');
	         assert(isName(type), 'XObject should have a Name subtype');
	         if ('Form' !== type.name) {
	          xobjsCache.key = name;
	          xobjsCache.texts = null;
	          break;
	         }
	         stateManager.save();
	         var matrix = xobj.dict.getArray('Matrix');
	         if (isArray(matrix) && matrix.length === 6) {
	          stateManager.transform(matrix);
	         }
	         next(self.getTextContent(xobj, task, xobj.dict.get('Resources') || resources, stateManager, normalizeWhitespace, combineTextItems).then(function (formTextContent) {
	          Util.appendToArray(textContent.items, formTextContent.items);
	          Util.extendObj(textContent.styles, formTextContent.styles);
	          stateManager.restore();
	          xobjsCache.key = name;
	          xobjsCache.texts = formTextContent;
	         }));
	         return;
	        case OPS.setGState:
	         flushTextContentItem();
	         var dictName = args[0];
	         var extGState = resources.get('ExtGState');
	         if (!isDict(extGState) || !isName(dictName)) {
	          break;
	         }
	         var gState = extGState.get(dictName.name);
	         if (!isDict(gState)) {
	          break;
	         }
	         var gStateFont = gState.get('Font');
	         if (gStateFont) {
	          textState.fontName = null;
	          textState.fontSize = gStateFont[1];
	          next(handleSetFont(null, gStateFont[0]));
	          return;
	         }
	         break;
	        }
	       }
	       if (stop) {
	        next(deferred);
	        return;
	       }
	       flushTextContentItem();
	       resolve(textContent);
	      });
	     },
	     extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, xref, properties) {
	      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');
	      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);
	      if (properties.composite) {
	       var cidSystemInfo = dict.get('CIDSystemInfo');
	       if (isDict(cidSystemInfo)) {
	        properties.cidSystemInfo = {
	         registry: cidSystemInfo.get('Registry'),
	         ordering: cidSystemInfo.get('Ordering'),
	         supplement: cidSystemInfo.get('Supplement')
	        };
	       }
	       var cidToGidMap = dict.get('CIDToGIDMap');
	       if (isStream(cidToGidMap)) {
	        properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);
	       }
	      }
	      var differences = [];
	      var baseEncodingName = null;
	      var encoding;
	      if (dict.has('Encoding')) {
	       encoding = dict.get('Encoding');
	       if (isDict(encoding)) {
	        baseEncodingName = encoding.get('BaseEncoding');
	        baseEncodingName = isName(baseEncodingName) ? baseEncodingName.name : null;
	        if (encoding.has('Differences')) {
	         var diffEncoding = encoding.get('Differences');
	         var index = 0;
	         for (var j = 0, jj = diffEncoding.length; j < jj; j++) {
	          var data = xref.fetchIfRef(diffEncoding[j]);
	          if (isNum(data)) {
	           index = data;
	          } else if (isName(data)) {
	           differences[index++] = data.name;
	          } else {
	           error('Invalid entry in \'Differences\' array: ' + data);
	          }
	         }
	        }
	       } else if (isName(encoding)) {
	        baseEncodingName = encoding.name;
	       } else {
	        error('Encoding is not a Name nor a Dict');
	       }
	       if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {
	        baseEncodingName = null;
	       }
	      }
	      if (baseEncodingName) {
	       properties.defaultEncoding = getEncoding(baseEncodingName).slice();
	      } else {
	       var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);
	       var isNonsymbolicFont = !!(properties.flags & FontFlags.Nonsymbolic);
	       encoding = StandardEncoding;
	       if (properties.type === 'TrueType' && !isNonsymbolicFont) {
	        encoding = WinAnsiEncoding;
	       }
	       if (isSymbolicFont) {
	        encoding = MacRomanEncoding;
	        if (!properties.file) {
	         if (/Symbol/i.test(properties.name)) {
	          encoding = SymbolSetEncoding;
	         } else if (/Dingbats/i.test(properties.name)) {
	          encoding = ZapfDingbatsEncoding;
	         }
	        }
	       }
	       properties.defaultEncoding = encoding;
	      }
	      properties.differences = differences;
	      properties.baseEncodingName = baseEncodingName;
	      properties.hasEncoding = !!baseEncodingName || differences.length > 0;
	      properties.dict = dict;
	      return toUnicodePromise.then(function (toUnicode) {
	       properties.toUnicode = toUnicode;
	       return this.buildToUnicode(properties);
	      }.bind(this)).then(function (toUnicode) {
	       properties.toUnicode = toUnicode;
	       return properties;
	      });
	     },
	     buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {
	      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;
	      if (properties.hasIncludedToUnicodeMap) {
	       return Promise.resolve(properties.toUnicode);
	      }
	      var toUnicode, charcode, glyphName;
	      if (!properties.composite)
	       {
	        toUnicode = [];
	        var encoding = properties.defaultEncoding.slice();
	        var baseEncodingName = properties.baseEncodingName;
	        var differences = properties.differences;
	        for (charcode in differences) {
	         glyphName = differences[charcode];
	         if (glyphName === '.notdef') {
	          continue;
	         }
	         encoding[charcode] = glyphName;
	        }
	        var glyphsUnicodeMap = getGlyphsUnicode();
	        for (charcode in encoding) {
	         glyphName = encoding[charcode];
	         if (glyphName === '') {
	          continue;
	         } else if (glyphsUnicodeMap[glyphName] === undefined) {
	          var code = 0;
	          switch (glyphName[0]) {
	          case 'G':
	           if (glyphName.length === 3) {
	            code = parseInt(glyphName.substr(1), 16);
	           }
	           break;
	          case 'g':
	           if (glyphName.length === 5) {
	            code = parseInt(glyphName.substr(1), 16);
	           }
	           break;
	          case 'C':
	          case 'c':
	           if (glyphName.length >= 3) {
	            code = +glyphName.substr(1);
	           }
	           break;
	          default:
	           var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);
	           if (unicode !== -1) {
	            code = unicode;
	           }
	          }
	          if (code) {
	           if (baseEncodingName && code === +charcode) {
	            var baseEncoding = getEncoding(baseEncodingName);
	            if (baseEncoding && (glyphName = baseEncoding[charcode])) {
	             toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);
	             continue;
	            }
	           }
	           toUnicode[charcode] = String.fromCharCode(code);
	          }
	          continue;
	         }
	         toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);
	        }
	        return Promise.resolve(new ToUnicodeMap(toUnicode));
	       }
	      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {
	       var registry = properties.cidSystemInfo.registry;
	       var ordering = properties.cidSystemInfo.ordering;
	       var ucs2CMapName = Name.get(registry + '-' + ordering + '-UCS2');
	       return CMapFactory.create(ucs2CMapName, this.options.cMapOptions, null).then(function (ucs2CMap) {
	        var cMap = properties.cMap;
	        toUnicode = [];
	        cMap.forEach(function (charcode, cid) {
	         assert(cid <= 0xffff, 'Max size of CID is 65,535');
	         var ucs2 = ucs2CMap.lookup(cid);
	         if (ucs2) {
	          toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));
	         }
	        });
	        return new ToUnicodeMap(toUnicode);
	       });
	      }
	      return Promise.resolve(new IdentityToUnicodeMap(properties.firstChar, properties.lastChar));
	     },
	     readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {
	      var cmapObj = toUnicode;
	      if (isName(cmapObj)) {
	       return CMapFactory.create(cmapObj, this.options.cMapOptions, null).then(function (cmap) {
	        if (cmap instanceof IdentityCMap) {
	         return new IdentityToUnicodeMap(0, 0xFFFF);
	        }
	        return new ToUnicodeMap(cmap.getMap());
	       });
	      } else if (isStream(cmapObj)) {
	       return CMapFactory.create(cmapObj, this.options.cMapOptions, null).then(function (cmap) {
	        if (cmap instanceof IdentityCMap) {
	         return new IdentityToUnicodeMap(0, 0xFFFF);
	        }
	        var map = new Array(cmap.length);
	        cmap.forEach(function (charCode, token) {
	         var str = [];
	         for (var k = 0; k < token.length; k += 2) {
	          var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);
	          if ((w1 & 0xF800) !== 0xD800) {
	           str.push(w1);
	           continue;
	          }
	          k += 2;
	          var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);
	          str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);
	         }
	         map[charCode] = String.fromCharCode.apply(String, str);
	        });
	        return new ToUnicodeMap(map);
	       });
	      }
	      return Promise.resolve(null);
	     },
	     readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {
	      var glyphsData = cidToGidStream.getBytes();
	      var result = [];
	      for (var j = 0, jj = glyphsData.length; j < jj; j++) {
	       var glyphID = glyphsData[j++] << 8 | glyphsData[j];
	       if (glyphID === 0) {
	        continue;
	       }
	       var code = j >> 1;
	       result[code] = glyphID;
	      }
	      return result;
	     },
	     extractWidths: function PartialEvaluator_extractWidths(dict, xref, descriptor, properties) {
	      var glyphsWidths = [];
	      var defaultWidth = 0;
	      var glyphsVMetrics = [];
	      var defaultVMetrics;
	      var i, ii, j, jj, start, code, widths;
	      if (properties.composite) {
	       defaultWidth = dict.get('DW') || 1000;
	       widths = dict.get('W');
	       if (widths) {
	        for (i = 0, ii = widths.length; i < ii; i++) {
	         start = xref.fetchIfRef(widths[i++]);
	         code = xref.fetchIfRef(widths[i]);
	         if (isArray(code)) {
	          for (j = 0, jj = code.length; j < jj; j++) {
	           glyphsWidths[start++] = xref.fetchIfRef(code[j]);
	          }
	         } else {
	          var width = xref.fetchIfRef(widths[++i]);
	          for (j = start; j <= code; j++) {
	           glyphsWidths[j] = width;
	          }
	         }
	        }
	       }
	       if (properties.vertical) {
	        var vmetrics = dict.getArray('DW2') || [
	         880,
	         -1000
	        ];
	        defaultVMetrics = [
	         vmetrics[1],
	         defaultWidth * 0.5,
	         vmetrics[0]
	        ];
	        vmetrics = dict.get('W2');
	        if (vmetrics) {
	         for (i = 0, ii = vmetrics.length; i < ii; i++) {
	          start = xref.fetchIfRef(vmetrics[i++]);
	          code = xref.fetchIfRef(vmetrics[i]);
	          if (isArray(code)) {
	           for (j = 0, jj = code.length; j < jj; j++) {
	            glyphsVMetrics[start++] = [
	             xref.fetchIfRef(code[j++]),
	             xref.fetchIfRef(code[j++]),
	             xref.fetchIfRef(code[j])
	            ];
	           }
	          } else {
	           var vmetric = [
	            xref.fetchIfRef(vmetrics[++i]),
	            xref.fetchIfRef(vmetrics[++i]),
	            xref.fetchIfRef(vmetrics[++i])
	           ];
	           for (j = start; j <= code; j++) {
	            glyphsVMetrics[j] = vmetric;
	           }
	          }
	         }
	        }
	       }
	      } else {
	       var firstChar = properties.firstChar;
	       widths = dict.get('Widths');
	       if (widths) {
	        j = firstChar;
	        for (i = 0, ii = widths.length; i < ii; i++) {
	         glyphsWidths[j++] = xref.fetchIfRef(widths[i]);
	        }
	        defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;
	       } else {
	        var baseFontName = dict.get('BaseFont');
	        if (isName(baseFontName)) {
	         var metrics = this.getBaseFontMetrics(baseFontName.name);
	         glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);
	         defaultWidth = metrics.defaultWidth;
	        }
	       }
	      }
	      var isMonospace = true;
	      var firstWidth = defaultWidth;
	      for (var glyph in glyphsWidths) {
	       var glyphWidth = glyphsWidths[glyph];
	       if (!glyphWidth) {
	        continue;
	       }
	       if (!firstWidth) {
	        firstWidth = glyphWidth;
	        continue;
	       }
	       if (firstWidth !== glyphWidth) {
	        isMonospace = false;
	        break;
	       }
	      }
	      if (isMonospace) {
	       properties.flags |= FontFlags.FixedPitch;
	      }
	      properties.defaultWidth = defaultWidth;
	      properties.widths = glyphsWidths;
	      properties.defaultVMetrics = defaultVMetrics;
	      properties.vmetrics = glyphsVMetrics;
	     },
	     isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {
	      var fontNameWoStyle = baseFontName.split('-')[0];
	      return fontNameWoStyle in getSerifFonts() || fontNameWoStyle.search(/serif/gi) !== -1;
	     },
	     getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {
	      var defaultWidth = 0;
	      var widths = [];
	      var monospace = false;
	      var stdFontMap = getStdFontMap();
	      var lookupName = stdFontMap[name] || name;
	      var Metrics = getMetrics();
	      if (!(lookupName in Metrics)) {
	       if (this.isSerifFont(name)) {
	        lookupName = 'Times-Roman';
	       } else {
	        lookupName = 'Helvetica';
	       }
	      }
	      var glyphWidths = Metrics[lookupName];
	      if (isNum(glyphWidths)) {
	       defaultWidth = glyphWidths;
	       monospace = true;
	      } else {
	       widths = glyphWidths();
	      }
	      return {
	       defaultWidth: defaultWidth,
	       monospace: monospace,
	       widths: widths
	      };
	     },
	     buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {
	      var widths = Object.create(null);
	      var differences = properties.differences;
	      var encoding = properties.defaultEncoding;
	      for (var charCode = 0; charCode < 256; charCode++) {
	       if (charCode in differences && widthsByGlyphName[differences[charCode]]) {
	        widths[charCode] = widthsByGlyphName[differences[charCode]];
	        continue;
	       }
	       if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {
	        widths[charCode] = widthsByGlyphName[encoding[charCode]];
	        continue;
	       }
	      }
	      return widths;
	     },
	     preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict, xref) {
	      var baseDict = dict;
	      var type = dict.get('Subtype');
	      assert(isName(type), 'invalid font Subtype');
	      var composite = false;
	      var uint8array;
	      if (type.name === 'Type0') {
	       var df = dict.get('DescendantFonts');
	       if (!df) {
	        error('Descendant fonts are not specified');
	       }
	       dict = isArray(df) ? xref.fetchIfRef(df[0]) : df;
	       type = dict.get('Subtype');
	       assert(isName(type), 'invalid font Subtype');
	       composite = true;
	      }
	      var descriptor = dict.get('FontDescriptor');
	      if (descriptor) {
	       var hash = new MurmurHash3_64();
	       var encoding = baseDict.getRaw('Encoding');
	       if (isName(encoding)) {
	        hash.update(encoding.name);
	       } else if (isRef(encoding)) {
	        hash.update(encoding.toString());
	       } else if (isDict(encoding)) {
	        var keys = encoding.getKeys();
	        for (var i = 0, ii = keys.length; i < ii; i++) {
	         var entry = encoding.getRaw(keys[i]);
	         if (isName(entry)) {
	          hash.update(entry.name);
	         } else if (isRef(entry)) {
	          hash.update(entry.toString());
	         } else if (isArray(entry)) {
	          var diffLength = entry.length, diffBuf = new Array(diffLength);
	          for (var j = 0; j < diffLength; j++) {
	           var diffEntry = entry[j];
	           if (isName(diffEntry)) {
	            diffBuf[j] = diffEntry.name;
	           } else if (isNum(diffEntry) || isRef(diffEntry)) {
	            diffBuf[j] = diffEntry.toString();
	           }
	          }
	          hash.update(diffBuf.join());
	         }
	        }
	       }
	       var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');
	       if (isStream(toUnicode)) {
	        var stream = toUnicode.str || toUnicode;
	        uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);
	        hash.update(uint8array);
	       } else if (isName(toUnicode)) {
	        hash.update(toUnicode.name);
	       }
	       var widths = dict.get('Widths') || baseDict.get('Widths');
	       if (widths) {
	        uint8array = new Uint8Array(new Uint32Array(widths).buffer);
	        hash.update(uint8array);
	       }
	      }
	      return {
	       descriptor: descriptor,
	       dict: dict,
	       baseDict: baseDict,
	       composite: composite,
	       type: type.name,
	       hash: hash ? hash.hexdigest() : ''
	      };
	     },
	     translateFont: function PartialEvaluator_translateFont(preEvaluatedFont, xref) {
	      var baseDict = preEvaluatedFont.baseDict;
	      var dict = preEvaluatedFont.dict;
	      var composite = preEvaluatedFont.composite;
	      var descriptor = preEvaluatedFont.descriptor;
	      var type = preEvaluatedFont.type;
	      var maxCharIndex = composite ? 0xFFFF : 0xFF;
	      var cMapOptions = this.options.cMapOptions;
	      var properties;
	      if (!descriptor) {
	       if (type === 'Type3') {
	        descriptor = new Dict(null);
	        descriptor.set('FontName', Name.get(type));
	        descriptor.set('FontBBox', dict.getArray('FontBBox'));
	       } else {
	        var baseFontName = dict.get('BaseFont');
	        if (!isName(baseFontName)) {
	         error('Base font is not specified');
	        }
	        baseFontName = baseFontName.name.replace(/[,_]/g, '-');
	        var metrics = this.getBaseFontMetrics(baseFontName);
	        var fontNameWoStyle = baseFontName.split('-')[0];
	        var flags = (this.isSerifFont(fontNameWoStyle) ? FontFlags.Serif : 0) | (metrics.monospace ? FontFlags.FixedPitch : 0) | (getSymbolsFonts()[fontNameWoStyle] ? FontFlags.Symbolic : FontFlags.Nonsymbolic);
	        properties = {
	         type: type,
	         name: baseFontName,
	         widths: metrics.widths,
	         defaultWidth: metrics.defaultWidth,
	         flags: flags,
	         firstChar: 0,
	         lastChar: maxCharIndex
	        };
	        return this.extractDataStructures(dict, dict, xref, properties).then(function (properties) {
	         properties.widths = this.buildCharCodeToWidth(metrics.widths, properties);
	         return new Font(baseFontName, null, properties);
	        }.bind(this));
	       }
	      }
	      var firstChar = dict.get('FirstChar') || 0;
	      var lastChar = dict.get('LastChar') || maxCharIndex;
	      var fontName = descriptor.get('FontName');
	      var baseFont = dict.get('BaseFont');
	      if (isString(fontName)) {
	       fontName = Name.get(fontName);
	      }
	      if (isString(baseFont)) {
	       baseFont = Name.get(baseFont);
	      }
	      if (type !== 'Type3') {
	       var fontNameStr = fontName && fontName.name;
	       var baseFontStr = baseFont && baseFont.name;
	       if (fontNameStr !== baseFontStr) {
	        info('The FontDescriptor\'s FontName is "' + fontNameStr + '" but should be the same as the Font\'s BaseFont "' + baseFontStr + '"');
	        if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {
	         fontName = baseFont;
	        }
	       }
	      }
	      fontName = fontName || baseFont;
	      assert(isName(fontName), 'invalid font name');
	      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');
	      if (fontFile) {
	       if (fontFile.dict) {
	        var subtype = fontFile.dict.get('Subtype');
	        if (subtype) {
	         subtype = subtype.name;
	        }
	        var length1 = fontFile.dict.get('Length1');
	        var length2 = fontFile.dict.get('Length2');
	        var length3 = fontFile.dict.get('Length3');
	       }
	      }
	      properties = {
	       type: type,
	       name: fontName.name,
	       subtype: subtype,
	       file: fontFile,
	       length1: length1,
	       length2: length2,
	       length3: length3,
	       loadedName: baseDict.loadedName,
	       composite: composite,
	       wideChars: composite,
	       fixedPitch: false,
	       fontMatrix: dict.getArray('FontMatrix') || FONT_IDENTITY_MATRIX,
	       firstChar: firstChar || 0,
	       lastChar: lastChar || maxCharIndex,
	       bbox: descriptor.getArray('FontBBox'),
	       ascent: descriptor.get('Ascent'),
	       descent: descriptor.get('Descent'),
	       xHeight: descriptor.get('XHeight'),
	       capHeight: descriptor.get('CapHeight'),
	       flags: descriptor.get('Flags'),
	       italicAngle: descriptor.get('ItalicAngle'),
	       coded: false
	      };
	      var cMapPromise;
	      if (composite) {
	       var cidEncoding = baseDict.get('Encoding');
	       if (isName(cidEncoding)) {
	        properties.cidEncoding = cidEncoding.name;
	       }
	       cMapPromise = CMapFactory.create(cidEncoding, cMapOptions, null).then(function (cMap) {
	        properties.cMap = cMap;
	        properties.vertical = properties.cMap.vertical;
	       });
	      } else {
	       cMapPromise = Promise.resolve(undefined);
	      }
	      return cMapPromise.then(function () {
	       return this.extractDataStructures(dict, baseDict, xref, properties);
	      }.bind(this)).then(function (properties) {
	       this.extractWidths(dict, xref, descriptor, properties);
	       if (type === 'Type3') {
	        properties.isType3Font = true;
	       }
	       return new Font(fontName.name, fontFile, properties);
	      }.bind(this));
	     }
	    };
	    return PartialEvaluator;
	   }();
	   var TranslatedFont = function TranslatedFontClosure() {
	    function TranslatedFont(loadedName, font, dict) {
	     this.loadedName = loadedName;
	     this.font = font;
	     this.dict = dict;
	     this.type3Loaded = null;
	     this.sent = false;
	    }
	    TranslatedFont.prototype = {
	     send: function (handler) {
	      if (this.sent) {
	       return;
	      }
	      var fontData = this.font.exportData();
	      handler.send('commonobj', [
	       this.loadedName,
	       'Font',
	       fontData
	      ]);
	      this.sent = true;
	     },
	     loadType3Data: function (evaluator, resources, parentOperatorList, task) {
	      assert(this.font.isType3Font);
	      if (this.type3Loaded) {
	       return this.type3Loaded;
	      }
	      var translatedFont = this.font;
	      var loadCharProcsPromise = Promise.resolve();
	      var charProcs = this.dict.get('CharProcs');
	      var fontResources = this.dict.get('Resources') || resources;
	      var charProcKeys = charProcs.getKeys();
	      var charProcOperatorList = Object.create(null);
	      for (var i = 0, n = charProcKeys.length; i < n; ++i) {
	       loadCharProcsPromise = loadCharProcsPromise.then(function (key) {
	        var glyphStream = charProcs.get(key);
	        var operatorList = new OperatorList();
	        return evaluator.getOperatorList(glyphStream, task, fontResources, operatorList).then(function () {
	         charProcOperatorList[key] = operatorList.getIR();
	         parentOperatorList.addDependencies(operatorList.dependencies);
	        }, function (reason) {
	         warn('Type3 font resource \"' + key + '\" is not available');
	         var operatorList = new OperatorList();
	         charProcOperatorList[key] = operatorList.getIR();
	        });
	       }.bind(this, charProcKeys[i]));
	      }
	      this.type3Loaded = loadCharProcsPromise.then(function () {
	       translatedFont.charProcOperatorList = charProcOperatorList;
	      });
	      return this.type3Loaded;
	     }
	    };
	    return TranslatedFont;
	   }();
	   var OperatorList = function OperatorListClosure() {
	    var CHUNK_SIZE = 1000;
	    var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;
	    function getTransfers(queue) {
	     var transfers = [];
	     var fnArray = queue.fnArray, argsArray = queue.argsArray;
	     for (var i = 0, ii = queue.length; i < ii; i++) {
	      switch (fnArray[i]) {
	      case OPS.paintInlineImageXObject:
	      case OPS.paintInlineImageXObjectGroup:
	      case OPS.paintImageMaskXObject:
	       var arg = argsArray[i][0];
	       if (!arg.cached) {
	        transfers.push(arg.data.buffer);
	       }
	       break;
	      }
	     }
	     return transfers;
	    }
	    function OperatorList(intent, messageHandler, pageIndex) {
	     this.messageHandler = messageHandler;
	     this.fnArray = [];
	     this.argsArray = [];
	     this.dependencies = Object.create(null);
	     this._totalLength = 0;
	     this.pageIndex = pageIndex;
	     this.intent = intent;
	    }
	    OperatorList.prototype = {
	     get length() {
	      return this.argsArray.length;
	     },
	     get totalLength() {
	      return this._totalLength + this.length;
	     },
	     addOp: function (fn, args) {
	      this.fnArray.push(fn);
	      this.argsArray.push(args);
	      if (this.messageHandler) {
	       if (this.fnArray.length >= CHUNK_SIZE) {
	        this.flush();
	       } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT && (fn === OPS.restore || fn === OPS.endText)) {
	        this.flush();
	       }
	      }
	     },
	     addDependency: function (dependency) {
	      if (dependency in this.dependencies) {
	       return;
	      }
	      this.dependencies[dependency] = true;
	      this.addOp(OPS.dependency, [dependency]);
	     },
	     addDependencies: function (dependencies) {
	      for (var key in dependencies) {
	       this.addDependency(key);
	      }
	     },
	     addOpList: function (opList) {
	      Util.extendObj(this.dependencies, opList.dependencies);
	      for (var i = 0, ii = opList.length; i < ii; i++) {
	       this.addOp(opList.fnArray[i], opList.argsArray[i]);
	      }
	     },
	     getIR: function () {
	      return {
	       fnArray: this.fnArray,
	       argsArray: this.argsArray,
	       length: this.length
	      };
	     },
	     flush: function (lastChunk) {
	      if (this.intent !== 'oplist') {
	       new QueueOptimizer().optimize(this);
	      }
	      var transfers = getTransfers(this);
	      var length = this.length;
	      this._totalLength += length;
	      this.messageHandler.send('RenderPageChunk', {
	       operatorList: {
	        fnArray: this.fnArray,
	        argsArray: this.argsArray,
	        lastChunk: lastChunk,
	        length: length
	       },
	       pageIndex: this.pageIndex,
	       intent: this.intent
	      }, transfers);
	      this.dependencies = Object.create(null);
	      this.fnArray.length = 0;
	      this.argsArray.length = 0;
	     }
	    };
	    return OperatorList;
	   }();
	   var StateManager = function StateManagerClosure() {
	    function StateManager(initialState) {
	     this.state = initialState;
	     this.stateStack = [];
	    }
	    StateManager.prototype = {
	     save: function () {
	      var old = this.state;
	      this.stateStack.push(this.state);
	      this.state = old.clone();
	     },
	     restore: function () {
	      var prev = this.stateStack.pop();
	      if (prev) {
	       this.state = prev;
	      }
	     },
	     transform: function (args) {
	      this.state.ctm = Util.transform(this.state.ctm, args);
	     }
	    };
	    return StateManager;
	   }();
	   var TextState = function TextStateClosure() {
	    function TextState() {
	     this.ctm = new Float32Array(IDENTITY_MATRIX);
	     this.fontName = null;
	     this.fontSize = 0;
	     this.font = null;
	     this.fontMatrix = FONT_IDENTITY_MATRIX;
	     this.textMatrix = IDENTITY_MATRIX.slice();
	     this.textLineMatrix = IDENTITY_MATRIX.slice();
	     this.charSpacing = 0;
	     this.wordSpacing = 0;
	     this.leading = 0;
	     this.textHScale = 1;
	     this.textRise = 0;
	    }
	    TextState.prototype = {
	     setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {
	      var m = this.textMatrix;
	      m[0] = a;
	      m[1] = b;
	      m[2] = c;
	      m[3] = d;
	      m[4] = e;
	      m[5] = f;
	     },
	     setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {
	      var m = this.textLineMatrix;
	      m[0] = a;
	      m[1] = b;
	      m[2] = c;
	      m[3] = d;
	      m[4] = e;
	      m[5] = f;
	     },
	     translateTextMatrix: function TextState_translateTextMatrix(x, y) {
	      var m = this.textMatrix;
	      m[4] = m[0] * x + m[2] * y + m[4];
	      m[5] = m[1] * x + m[3] * y + m[5];
	     },
	     translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {
	      var m = this.textLineMatrix;
	      m[4] = m[0] * x + m[2] * y + m[4];
	      m[5] = m[1] * x + m[3] * y + m[5];
	     },
	     calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {
	      var font = this.font;
	      if (!font) {
	       return null;
	      }
	      var m = this.textLineMatrix;
	      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {
	       return null;
	      }
	      var txDiff = e - m[4], tyDiff = f - m[5];
	      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {
	       return null;
	      }
	      var tx, ty, denominator = a * d - b * c;
	      if (font.vertical) {
	       tx = -tyDiff * c / denominator;
	       ty = tyDiff * a / denominator;
	      } else {
	       tx = txDiff * d / denominator;
	       ty = -txDiff * b / denominator;
	      }
	      return {
	       width: tx,
	       height: ty,
	       value: font.vertical ? ty : tx
	      };
	     },
	     calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {
	      var tsm = [
	       this.fontSize * this.textHScale,
	       0,
	       0,
	       this.fontSize,
	       0,
	       this.textRise
	      ];
	      return Util.transform(ctm, Util.transform(this.textMatrix, tsm));
	     },
	     carriageReturn: function TextState_carriageReturn() {
	      this.translateTextLineMatrix(0, -this.leading);
	      this.textMatrix = this.textLineMatrix.slice();
	     },
	     clone: function TextState_clone() {
	      var clone = Object.create(this);
	      clone.textMatrix = this.textMatrix.slice();
	      clone.textLineMatrix = this.textLineMatrix.slice();
	      clone.fontMatrix = this.fontMatrix.slice();
	      return clone;
	     }
	    };
	    return TextState;
	   }();
	   var EvalState = function EvalStateClosure() {
	    function EvalState() {
	     this.ctm = new Float32Array(IDENTITY_MATRIX);
	     this.font = null;
	     this.textRenderingMode = TextRenderingMode.FILL;
	     this.fillColorSpace = ColorSpace.singletons.gray;
	     this.strokeColorSpace = ColorSpace.singletons.gray;
	    }
	    EvalState.prototype = {
	     clone: function CanvasExtraState_clone() {
	      return Object.create(this);
	     }
	    };
	    return EvalState;
	   }();
	   var EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {
	    var getOPMap = getLookupTableFactory(function (t) {
	     t['w'] = {
	      id: OPS.setLineWidth,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['J'] = {
	      id: OPS.setLineCap,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['j'] = {
	      id: OPS.setLineJoin,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['M'] = {
	      id: OPS.setMiterLimit,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['d'] = {
	      id: OPS.setDash,
	      numArgs: 2,
	      variableArgs: false
	     };
	     t['ri'] = {
	      id: OPS.setRenderingIntent,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['i'] = {
	      id: OPS.setFlatness,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['gs'] = {
	      id: OPS.setGState,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['q'] = {
	      id: OPS.save,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['Q'] = {
	      id: OPS.restore,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['cm'] = {
	      id: OPS.transform,
	      numArgs: 6,
	      variableArgs: false
	     };
	     t['m'] = {
	      id: OPS.moveTo,
	      numArgs: 2,
	      variableArgs: false
	     };
	     t['l'] = {
	      id: OPS.lineTo,
	      numArgs: 2,
	      variableArgs: false
	     };
	     t['c'] = {
	      id: OPS.curveTo,
	      numArgs: 6,
	      variableArgs: false
	     };
	     t['v'] = {
	      id: OPS.curveTo2,
	      numArgs: 4,
	      variableArgs: false
	     };
	     t['y'] = {
	      id: OPS.curveTo3,
	      numArgs: 4,
	      variableArgs: false
	     };
	     t['h'] = {
	      id: OPS.closePath,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['re'] = {
	      id: OPS.rectangle,
	      numArgs: 4,
	      variableArgs: false
	     };
	     t['S'] = {
	      id: OPS.stroke,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['s'] = {
	      id: OPS.closeStroke,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['f'] = {
	      id: OPS.fill,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['F'] = {
	      id: OPS.fill,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['f*'] = {
	      id: OPS.eoFill,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['B'] = {
	      id: OPS.fillStroke,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['B*'] = {
	      id: OPS.eoFillStroke,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['b'] = {
	      id: OPS.closeFillStroke,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['b*'] = {
	      id: OPS.closeEOFillStroke,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['n'] = {
	      id: OPS.endPath,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['W'] = {
	      id: OPS.clip,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['W*'] = {
	      id: OPS.eoClip,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['BT'] = {
	      id: OPS.beginText,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['ET'] = {
	      id: OPS.endText,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['Tc'] = {
	      id: OPS.setCharSpacing,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['Tw'] = {
	      id: OPS.setWordSpacing,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['Tz'] = {
	      id: OPS.setHScale,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['TL'] = {
	      id: OPS.setLeading,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['Tf'] = {
	      id: OPS.setFont,
	      numArgs: 2,
	      variableArgs: false
	     };
	     t['Tr'] = {
	      id: OPS.setTextRenderingMode,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['Ts'] = {
	      id: OPS.setTextRise,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['Td'] = {
	      id: OPS.moveText,
	      numArgs: 2,
	      variableArgs: false
	     };
	     t['TD'] = {
	      id: OPS.setLeadingMoveText,
	      numArgs: 2,
	      variableArgs: false
	     };
	     t['Tm'] = {
	      id: OPS.setTextMatrix,
	      numArgs: 6,
	      variableArgs: false
	     };
	     t['T*'] = {
	      id: OPS.nextLine,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['Tj'] = {
	      id: OPS.showText,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['TJ'] = {
	      id: OPS.showSpacedText,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['\''] = {
	      id: OPS.nextLineShowText,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['"'] = {
	      id: OPS.nextLineSetSpacingShowText,
	      numArgs: 3,
	      variableArgs: false
	     };
	     t['d0'] = {
	      id: OPS.setCharWidth,
	      numArgs: 2,
	      variableArgs: false
	     };
	     t['d1'] = {
	      id: OPS.setCharWidthAndBounds,
	      numArgs: 6,
	      variableArgs: false
	     };
	     t['CS'] = {
	      id: OPS.setStrokeColorSpace,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['cs'] = {
	      id: OPS.setFillColorSpace,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['SC'] = {
	      id: OPS.setStrokeColor,
	      numArgs: 4,
	      variableArgs: true
	     };
	     t['SCN'] = {
	      id: OPS.setStrokeColorN,
	      numArgs: 33,
	      variableArgs: true
	     };
	     t['sc'] = {
	      id: OPS.setFillColor,
	      numArgs: 4,
	      variableArgs: true
	     };
	     t['scn'] = {
	      id: OPS.setFillColorN,
	      numArgs: 33,
	      variableArgs: true
	     };
	     t['G'] = {
	      id: OPS.setStrokeGray,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['g'] = {
	      id: OPS.setFillGray,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['RG'] = {
	      id: OPS.setStrokeRGBColor,
	      numArgs: 3,
	      variableArgs: false
	     };
	     t['rg'] = {
	      id: OPS.setFillRGBColor,
	      numArgs: 3,
	      variableArgs: false
	     };
	     t['K'] = {
	      id: OPS.setStrokeCMYKColor,
	      numArgs: 4,
	      variableArgs: false
	     };
	     t['k'] = {
	      id: OPS.setFillCMYKColor,
	      numArgs: 4,
	      variableArgs: false
	     };
	     t['sh'] = {
	      id: OPS.shadingFill,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['BI'] = {
	      id: OPS.beginInlineImage,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['ID'] = {
	      id: OPS.beginImageData,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['EI'] = {
	      id: OPS.endInlineImage,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['Do'] = {
	      id: OPS.paintXObject,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['MP'] = {
	      id: OPS.markPoint,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['DP'] = {
	      id: OPS.markPointProps,
	      numArgs: 2,
	      variableArgs: false
	     };
	     t['BMC'] = {
	      id: OPS.beginMarkedContent,
	      numArgs: 1,
	      variableArgs: false
	     };
	     t['BDC'] = {
	      id: OPS.beginMarkedContentProps,
	      numArgs: 2,
	      variableArgs: false
	     };
	     t['EMC'] = {
	      id: OPS.endMarkedContent,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['BX'] = {
	      id: OPS.beginCompat,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['EX'] = {
	      id: OPS.endCompat,
	      numArgs: 0,
	      variableArgs: false
	     };
	     t['BM'] = null;
	     t['BD'] = null;
	     t['true'] = null;
	     t['fa'] = null;
	     t['fal'] = null;
	     t['fals'] = null;
	     t['false'] = null;
	     t['nu'] = null;
	     t['nul'] = null;
	     t['null'] = null;
	    });
	    function EvaluatorPreprocessor(stream, xref, stateManager) {
	     this.opMap = getOPMap();
	     this.parser = new Parser(new Lexer(stream, this.opMap), false, xref);
	     this.stateManager = stateManager;
	     this.nonProcessedArgs = [];
	    }
	    EvaluatorPreprocessor.prototype = {
	     get savedStatesDepth() {
	      return this.stateManager.stateStack.length;
	     },
	     read: function EvaluatorPreprocessor_read(operation) {
	      var args = operation.args;
	      while (true) {
	       var obj = this.parser.getObj();
	       if (isCmd(obj)) {
	        var cmd = obj.cmd;
	        var opSpec = this.opMap[cmd];
	        if (!opSpec) {
	         warn('Unknown command "' + cmd + '"');
	         continue;
	        }
	        var fn = opSpec.id;
	        var numArgs = opSpec.numArgs;
	        var argsLength = args !== null ? args.length : 0;
	        if (!opSpec.variableArgs) {
	         if (argsLength !== numArgs) {
	          var nonProcessedArgs = this.nonProcessedArgs;
	          while (argsLength > numArgs) {
	           nonProcessedArgs.push(args.shift());
	           argsLength--;
	          }
	          while (argsLength < numArgs && nonProcessedArgs.length !== 0) {
	           if (args === null) {
	            args = [];
	           }
	           args.unshift(nonProcessedArgs.pop());
	           argsLength++;
	          }
	         }
	         if (argsLength < numArgs) {
	          warn('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');
	          if (args !== null) {
	           args.length = 0;
	          }
	          continue;
	         }
	        } else if (argsLength > numArgs) {
	         info('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');
	        }
	        this.preprocessCommand(fn, args);
	        operation.fn = fn;
	        operation.args = args;
	        return true;
	       }
	       if (isEOF(obj)) {
	        return false;
	       }
	       if (obj !== null) {
	        if (args === null) {
	         args = [];
	        }
	        args.push(obj);
	        assert(args.length <= 33, 'Too many arguments');
	       }
	      }
	     },
	     preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {
	      switch (fn | 0) {
	      case OPS.save:
	       this.stateManager.save();
	       break;
	      case OPS.restore:
	       this.stateManager.restore();
	       break;
	      case OPS.transform:
	       this.stateManager.transform(args);
	       break;
	      }
	     }
	    };
	    return EvaluatorPreprocessor;
	   }();
	   var QueueOptimizer = function QueueOptimizerClosure() {
	    function addState(parentState, pattern, fn) {
	     var state = parentState;
	     for (var i = 0, ii = pattern.length - 1; i < ii; i++) {
	      var item = pattern[i];
	      state = state[item] || (state[item] = []);
	     }
	     state[pattern[pattern.length - 1]] = fn;
	    }
	    function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {
	     var iFirstPIMXO = iFirstSave + 2;
	     for (var i = 0; i < count; i++) {
	      var arg = argsArray[iFirstPIMXO + 4 * i];
	      var imageMask = arg.length === 1 && arg[0];
	      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {
	       fnArray[iFirstPIMXO + 4 * i] = OPS.paintSolidColorImageMask;
	       continue;
	      }
	      break;
	     }
	     return count - i;
	    }
	    var InitialState = [];
	    addState(InitialState, [
	     OPS.save,
	     OPS.transform,
	     OPS.paintInlineImageXObject,
	     OPS.restore
	    ], function foundInlineImageGroup(context) {
	     var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;
	     var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;
	     var MAX_WIDTH = 1000;
	     var IMAGE_PADDING = 1;
	     var fnArray = context.fnArray, argsArray = context.argsArray;
	     var curr = context.iCurr;
	     var iFirstSave = curr - 3;
	     var iFirstTransform = curr - 2;
	     var iFirstPIIXO = curr - 1;
	     var i = iFirstSave + 4;
	     var ii = fnArray.length;
	     while (i + 3 < ii) {
	      if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintInlineImageXObject || fnArray[i + 3] !== OPS.restore) {
	       break;
	      }
	      i += 4;
	     }
	     var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);
	     if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {
	      return i;
	     }
	     var maxX = 0;
	     var map = [], maxLineHeight = 0;
	     var currentX = IMAGE_PADDING, currentY = IMAGE_PADDING;
	     var q;
	     for (q = 0; q < count; q++) {
	      var transform = argsArray[iFirstTransform + (q << 2)];
	      var img = argsArray[iFirstPIIXO + (q << 2)][0];
	      if (currentX + img.width > MAX_WIDTH) {
	       maxX = Math.max(maxX, currentX);
	       currentY += maxLineHeight + 2 * IMAGE_PADDING;
	       currentX = 0;
	       maxLineHeight = 0;
	      }
	      map.push({
	       transform: transform,
	       x: currentX,
	       y: currentY,
	       w: img.width,
	       h: img.height
	      });
	      currentX += img.width + 2 * IMAGE_PADDING;
	      maxLineHeight = Math.max(maxLineHeight, img.height);
	     }
	     var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;
	     var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;
	     var imgData = new Uint8Array(imgWidth * imgHeight * 4);
	     var imgRowSize = imgWidth << 2;
	     for (q = 0; q < count; q++) {
	      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;
	      var rowSize = map[q].w << 2;
	      var dataOffset = 0;
	      var offset = map[q].x + map[q].y * imgWidth << 2;
	      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);
	      for (var k = 0, kk = map[q].h; k < kk; k++) {
	       imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);
	       dataOffset += rowSize;
	       offset += imgRowSize;
	      }
	      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);
	      while (offset >= 0) {
	       data[offset - 4] = data[offset];
	       data[offset - 3] = data[offset + 1];
	       data[offset - 2] = data[offset + 2];
	       data[offset - 1] = data[offset + 3];
	       data[offset + rowSize] = data[offset + rowSize - 4];
	       data[offset + rowSize + 1] = data[offset + rowSize - 3];
	       data[offset + rowSize + 2] = data[offset + rowSize - 2];
	       data[offset + rowSize + 3] = data[offset + rowSize - 1];
	       offset -= imgRowSize;
	      }
	     }
	     fnArray.splice(iFirstSave, count * 4, OPS.paintInlineImageXObjectGroup);
	     argsArray.splice(iFirstSave, count * 4, [
	      {
	       width: imgWidth,
	       height: imgHeight,
	       kind: ImageKind.RGBA_32BPP,
	       data: imgData
	      },
	      map
	     ]);
	     return iFirstSave + 1;
	    });
	    addState(InitialState, [
	     OPS.save,
	     OPS.transform,
	     OPS.paintImageMaskXObject,
	     OPS.restore
	    ], function foundImageMaskGroup(context) {
	     var MIN_IMAGES_IN_MASKS_BLOCK = 10;
	     var MAX_IMAGES_IN_MASKS_BLOCK = 100;
	     var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;
	     var fnArray = context.fnArray, argsArray = context.argsArray;
	     var curr = context.iCurr;
	     var iFirstSave = curr - 3;
	     var iFirstTransform = curr - 2;
	     var iFirstPIMXO = curr - 1;
	     var i = iFirstSave + 4;
	     var ii = fnArray.length;
	     while (i + 3 < ii) {
	      if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageMaskXObject || fnArray[i + 3] !== OPS.restore) {
	       break;
	      }
	      i += 4;
	     }
	     var count = (i - iFirstSave) / 4;
	     count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);
	     if (count < MIN_IMAGES_IN_MASKS_BLOCK) {
	      return i;
	     }
	     var q;
	     var isSameImage = false;
	     var iTransform, transformArgs;
	     var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];
	     if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {
	      isSameImage = true;
	      var firstTransformArg0 = argsArray[iFirstTransform][0];
	      var firstTransformArg3 = argsArray[iFirstTransform][3];
	      iTransform = iFirstTransform + 4;
	      var iPIMXO = iFirstPIMXO + 4;
	      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {
	       transformArgs = argsArray[iTransform];
	       if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {
	        if (q < MIN_IMAGES_IN_MASKS_BLOCK) {
	         isSameImage = false;
	        } else {
	         count = q;
	        }
	        break;
	       }
	      }
	     }
	     if (isSameImage) {
	      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);
	      var positions = new Float32Array(count * 2);
	      iTransform = iFirstTransform;
	      for (q = 0; q < count; q++, iTransform += 4) {
	       transformArgs = argsArray[iTransform];
	       positions[q << 1] = transformArgs[4];
	       positions[(q << 1) + 1] = transformArgs[5];
	      }
	      fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectRepeat);
	      argsArray.splice(iFirstSave, count * 4, [
	       firstPIMXOArg0,
	       firstTransformArg0,
	       firstTransformArg3,
	       positions
	      ]);
	     } else {
	      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);
	      var images = [];
	      for (q = 0; q < count; q++) {
	       transformArgs = argsArray[iFirstTransform + (q << 2)];
	       var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];
	       images.push({
	        data: maskParams.data,
	        width: maskParams.width,
	        height: maskParams.height,
	        transform: transformArgs
	       });
	      }
	      fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectGroup);
	      argsArray.splice(iFirstSave, count * 4, [images]);
	     }
	     return iFirstSave + 1;
	    });
	    addState(InitialState, [
	     OPS.save,
	     OPS.transform,
	     OPS.paintImageXObject,
	     OPS.restore
	    ], function (context) {
	     var MIN_IMAGES_IN_BLOCK = 3;
	     var MAX_IMAGES_IN_BLOCK = 1000;
	     var fnArray = context.fnArray, argsArray = context.argsArray;
	     var curr = context.iCurr;
	     var iFirstSave = curr - 3;
	     var iFirstTransform = curr - 2;
	     var iFirstPIXO = curr - 1;
	     var iFirstRestore = curr;
	     if (argsArray[iFirstTransform][1] !== 0 || argsArray[iFirstTransform][2] !== 0) {
	      return iFirstRestore + 1;
	     }
	     var firstPIXOArg0 = argsArray[iFirstPIXO][0];
	     var firstTransformArg0 = argsArray[iFirstTransform][0];
	     var firstTransformArg3 = argsArray[iFirstTransform][3];
	     var i = iFirstSave + 4;
	     var ii = fnArray.length;
	     while (i + 3 < ii) {
	      if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageXObject || fnArray[i + 3] !== OPS.restore) {
	       break;
	      }
	      if (argsArray[i + 1][0] !== firstTransformArg0 || argsArray[i + 1][1] !== 0 || argsArray[i + 1][2] !== 0 || argsArray[i + 1][3] !== firstTransformArg3) {
	       break;
	      }
	      if (argsArray[i + 2][0] !== firstPIXOArg0) {
	       break;
	      }
	      i += 4;
	     }
	     var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);
	     if (count < MIN_IMAGES_IN_BLOCK) {
	      return i;
	     }
	     var positions = new Float32Array(count * 2);
	     var iTransform = iFirstTransform;
	     for (var q = 0; q < count; q++, iTransform += 4) {
	      var transformArgs = argsArray[iTransform];
	      positions[q << 1] = transformArgs[4];
	      positions[(q << 1) + 1] = transformArgs[5];
	     }
	     var args = [
	      firstPIXOArg0,
	      firstTransformArg0,
	      firstTransformArg3,
	      positions
	     ];
	     fnArray.splice(iFirstSave, count * 4, OPS.paintImageXObjectRepeat);
	     argsArray.splice(iFirstSave, count * 4, args);
	     return iFirstSave + 1;
	    });
	    addState(InitialState, [
	     OPS.beginText,
	     OPS.setFont,
	     OPS.setTextMatrix,
	     OPS.showText,
	     OPS.endText
	    ], function (context) {
	     var MIN_CHARS_IN_BLOCK = 3;
	     var MAX_CHARS_IN_BLOCK = 1000;
	     var fnArray = context.fnArray, argsArray = context.argsArray;
	     var curr = context.iCurr;
	     var iFirstBeginText = curr - 4;
	     var iFirstSetFont = curr - 3;
	     var iFirstSetTextMatrix = curr - 2;
	     var iFirstShowText = curr - 1;
	     var iFirstEndText = curr;
	     var firstSetFontArg0 = argsArray[iFirstSetFont][0];
	     var firstSetFontArg1 = argsArray[iFirstSetFont][1];
	     var i = iFirstBeginText + 5;
	     var ii = fnArray.length;
	     while (i + 4 < ii) {
	      if (fnArray[i] !== OPS.beginText || fnArray[i + 1] !== OPS.setFont || fnArray[i + 2] !== OPS.setTextMatrix || fnArray[i + 3] !== OPS.showText || fnArray[i + 4] !== OPS.endText) {
	       break;
	      }
	      if (argsArray[i + 1][0] !== firstSetFontArg0 || argsArray[i + 1][1] !== firstSetFontArg1) {
	       break;
	      }
	      i += 5;
	     }
	     var count = Math.min((i - iFirstBeginText) / 5, MAX_CHARS_IN_BLOCK);
	     if (count < MIN_CHARS_IN_BLOCK) {
	      return i;
	     }
	     var iFirst = iFirstBeginText;
	     if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {
	      count++;
	      iFirst -= 5;
	     }
	     var iEndText = iFirst + 4;
	     for (var q = 1; q < count; q++) {
	      fnArray.splice(iEndText, 3);
	      argsArray.splice(iEndText, 3);
	      iEndText += 2;
	     }
	     return iEndText + 1;
	    });
	    function QueueOptimizer() {
	    }
	    QueueOptimizer.prototype = {
	     optimize: function QueueOptimizer_optimize(queue) {
	      var fnArray = queue.fnArray, argsArray = queue.argsArray;
	      var context = {
	       iCurr: 0,
	       fnArray: fnArray,
	       argsArray: argsArray
	      };
	      var state;
	      var i = 0, ii = fnArray.length;
	      while (i < ii) {
	       state = (state || InitialState)[fnArray[i]];
	       if (typeof state === 'function') {
	        context.iCurr = i;
	        i = state(context);
	        state = undefined;
	        ii = context.fnArray.length;
	       } else {
	        i++;
	       }
	      }
	     }
	    };
	    return QueueOptimizer;
	   }();
	   exports.OperatorList = OperatorList;
	   exports.PartialEvaluator = PartialEvaluator;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsDisplayGlobal = {}, root.pdfjsSharedUtil, root.pdfjsDisplayDOMUtils, root.pdfjsDisplayAPI, root.pdfjsDisplayAnnotationLayer, root.pdfjsDisplayTextLayer, root.pdfjsDisplayMetadata, root.pdfjsDisplaySVG);
	  }(this, function (exports, sharedUtil, displayDOMUtils, displayAPI, displayAnnotationLayer, displayTextLayer, displayMetadata, displaySVG) {
	   var globalScope = sharedUtil.globalScope;
	   var deprecated = sharedUtil.deprecated;
	   var warn = sharedUtil.warn;
	   var LinkTarget = displayDOMUtils.LinkTarget;
	   var DEFAULT_LINK_REL = displayDOMUtils.DEFAULT_LINK_REL;
	   var isWorker = typeof window === 'undefined';
	   if (!globalScope.PDFJS) {
	    globalScope.PDFJS = {};
	   }
	   var PDFJS = globalScope.PDFJS;
	   if (typeof pdfjsVersion !== 'undefined') {
	    PDFJS.version = pdfjsVersion;
	   }
	   if (typeof pdfjsBuild !== 'undefined') {
	    PDFJS.build = pdfjsBuild;
	   }
	   PDFJS.pdfBug = false;
	   if (PDFJS.verbosity !== undefined) {
	    sharedUtil.setVerbosityLevel(PDFJS.verbosity);
	   }
	   delete PDFJS.verbosity;
	   Object.defineProperty(PDFJS, 'verbosity', {
	    get: function () {
	     return sharedUtil.getVerbosityLevel();
	    },
	    set: function (level) {
	     sharedUtil.setVerbosityLevel(level);
	    },
	    enumerable: true,
	    configurable: true
	   });
	   PDFJS.VERBOSITY_LEVELS = sharedUtil.VERBOSITY_LEVELS;
	   PDFJS.OPS = sharedUtil.OPS;
	   PDFJS.UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;
	   PDFJS.isValidUrl = displayDOMUtils.isValidUrl;
	   PDFJS.shadow = sharedUtil.shadow;
	   PDFJS.createBlob = sharedUtil.createBlob;
	   PDFJS.createObjectURL = function PDFJS_createObjectURL(data, contentType) {
	    return sharedUtil.createObjectURL(data, contentType, PDFJS.disableCreateObjectURL);
	   };
	   Object.defineProperty(PDFJS, 'isLittleEndian', {
	    configurable: true,
	    get: function PDFJS_isLittleEndian() {
	     var value = sharedUtil.isLittleEndian();
	     return sharedUtil.shadow(PDFJS, 'isLittleEndian', value);
	    }
	   });
	   PDFJS.removeNullCharacters = sharedUtil.removeNullCharacters;
	   PDFJS.PasswordResponses = sharedUtil.PasswordResponses;
	   PDFJS.PasswordException = sharedUtil.PasswordException;
	   PDFJS.UnknownErrorException = sharedUtil.UnknownErrorException;
	   PDFJS.InvalidPDFException = sharedUtil.InvalidPDFException;
	   PDFJS.MissingPDFException = sharedUtil.MissingPDFException;
	   PDFJS.UnexpectedResponseException = sharedUtil.UnexpectedResponseException;
	   PDFJS.Util = sharedUtil.Util;
	   PDFJS.PageViewport = sharedUtil.PageViewport;
	   PDFJS.createPromiseCapability = sharedUtil.createPromiseCapability;
	   PDFJS.maxImageSize = PDFJS.maxImageSize === undefined ? -1 : PDFJS.maxImageSize;
	   PDFJS.cMapUrl = PDFJS.cMapUrl === undefined ? null : PDFJS.cMapUrl;
	   PDFJS.cMapPacked = PDFJS.cMapPacked === undefined ? false : PDFJS.cMapPacked;
	   PDFJS.disableFontFace = PDFJS.disableFontFace === undefined ? false : PDFJS.disableFontFace;
	   PDFJS.imageResourcesPath = PDFJS.imageResourcesPath === undefined ? '' : PDFJS.imageResourcesPath;
	   PDFJS.disableWorker = PDFJS.disableWorker === undefined ? false : PDFJS.disableWorker;
	   PDFJS.workerSrc = PDFJS.workerSrc === undefined ? null : PDFJS.workerSrc;
	   PDFJS.disableRange = PDFJS.disableRange === undefined ? false : PDFJS.disableRange;
	   PDFJS.disableStream = PDFJS.disableStream === undefined ? false : PDFJS.disableStream;
	   PDFJS.disableAutoFetch = PDFJS.disableAutoFetch === undefined ? false : PDFJS.disableAutoFetch;
	   PDFJS.pdfBug = PDFJS.pdfBug === undefined ? false : PDFJS.pdfBug;
	   PDFJS.postMessageTransfers = PDFJS.postMessageTransfers === undefined ? true : PDFJS.postMessageTransfers;
	   PDFJS.disableCreateObjectURL = PDFJS.disableCreateObjectURL === undefined ? false : PDFJS.disableCreateObjectURL;
	   PDFJS.disableWebGL = PDFJS.disableWebGL === undefined ? true : PDFJS.disableWebGL;
	   PDFJS.externalLinkTarget = PDFJS.externalLinkTarget === undefined ? LinkTarget.NONE : PDFJS.externalLinkTarget;
	   PDFJS.externalLinkRel = PDFJS.externalLinkRel === undefined ? DEFAULT_LINK_REL : PDFJS.externalLinkRel;
	   PDFJS.isEvalSupported = PDFJS.isEvalSupported === undefined ? true : PDFJS.isEvalSupported;
	   var savedOpenExternalLinksInNewWindow = PDFJS.openExternalLinksInNewWindow;
	   delete PDFJS.openExternalLinksInNewWindow;
	   Object.defineProperty(PDFJS, 'openExternalLinksInNewWindow', {
	    get: function () {
	     return PDFJS.externalLinkTarget === LinkTarget.BLANK;
	    },
	    set: function (value) {
	     if (value) {
	      deprecated('PDFJS.openExternalLinksInNewWindow, please use ' + '"PDFJS.externalLinkTarget = PDFJS.LinkTarget.BLANK" instead.');
	     }
	     if (PDFJS.externalLinkTarget !== LinkTarget.NONE) {
	      warn('PDFJS.externalLinkTarget is already initialized');
	      return;
	     }
	     PDFJS.externalLinkTarget = value ? LinkTarget.BLANK : LinkTarget.NONE;
	    },
	    enumerable: true,
	    configurable: true
	   });
	   if (savedOpenExternalLinksInNewWindow) {
	    PDFJS.openExternalLinksInNewWindow = savedOpenExternalLinksInNewWindow;
	   }
	   PDFJS.getDocument = displayAPI.getDocument;
	   PDFJS.PDFDataRangeTransport = displayAPI.PDFDataRangeTransport;
	   PDFJS.PDFWorker = displayAPI.PDFWorker;
	   Object.defineProperty(PDFJS, 'hasCanvasTypedArrays', {
	    configurable: true,
	    get: function PDFJS_hasCanvasTypedArrays() {
	     var value = displayDOMUtils.hasCanvasTypedArrays();
	     return sharedUtil.shadow(PDFJS, 'hasCanvasTypedArrays', value);
	    }
	   });
	   PDFJS.CustomStyle = displayDOMUtils.CustomStyle;
	   PDFJS.LinkTarget = LinkTarget;
	   PDFJS.addLinkAttributes = displayDOMUtils.addLinkAttributes;
	   PDFJS.getFilenameFromUrl = displayDOMUtils.getFilenameFromUrl;
	   PDFJS.isExternalLinkTargetSet = displayDOMUtils.isExternalLinkTargetSet;
	   PDFJS.AnnotationLayer = displayAnnotationLayer.AnnotationLayer;
	   PDFJS.renderTextLayer = displayTextLayer.renderTextLayer;
	   PDFJS.Metadata = displayMetadata.Metadata;
	   PDFJS.SVGGraphics = displaySVG.SVGGraphics;
	   PDFJS.UnsupportedManager = displayAPI._UnsupportedManager;
	   exports.globalScope = globalScope;
	   exports.isWorker = isWorker;
	   exports.PDFJS = globalScope.PDFJS;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreAnnotation = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreColorSpace, root.pdfjsCoreObj, root.pdfjsCoreEvaluator);
	  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreColorSpace, coreObj, coreEvaluator) {
	   var AnnotationBorderStyleType = sharedUtil.AnnotationBorderStyleType;
	   var AnnotationFieldFlag = sharedUtil.AnnotationFieldFlag;
	   var AnnotationFlag = sharedUtil.AnnotationFlag;
	   var AnnotationType = sharedUtil.AnnotationType;
	   var OPS = sharedUtil.OPS;
	   var Util = sharedUtil.Util;
	   var isString = sharedUtil.isString;
	   var isArray = sharedUtil.isArray;
	   var isInt = sharedUtil.isInt;
	   var stringToBytes = sharedUtil.stringToBytes;
	   var stringToPDFString = sharedUtil.stringToPDFString;
	   var warn = sharedUtil.warn;
	   var Dict = corePrimitives.Dict;
	   var isDict = corePrimitives.isDict;
	   var isName = corePrimitives.isName;
	   var isRef = corePrimitives.isRef;
	   var Stream = coreStream.Stream;
	   var ColorSpace = coreColorSpace.ColorSpace;
	   var Catalog = coreObj.Catalog;
	   var ObjectLoader = coreObj.ObjectLoader;
	   var FileSpec = coreObj.FileSpec;
	   var OperatorList = coreEvaluator.OperatorList;
	   function AnnotationFactory() {
	   }
	   AnnotationFactory.prototype = {
	    create: function AnnotationFactory_create(xref, ref, pdfManager, idFactory) {
	     var dict = xref.fetchIfRef(ref);
	     if (!isDict(dict)) {
	      return;
	     }
	     var id = isRef(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();
	     var subtype = dict.get('Subtype');
	     subtype = isName(subtype) ? subtype.name : null;
	     var parameters = {
	      xref: xref,
	      dict: dict,
	      ref: isRef(ref) ? ref : null,
	      subtype: subtype,
	      id: id,
	      pdfManager: pdfManager
	     };
	     switch (subtype) {
	     case 'Link':
	      return new LinkAnnotation(parameters);
	     case 'Text':
	      return new TextAnnotation(parameters);
	     case 'Widget':
	      var fieldType = Util.getInheritableProperty(dict, 'FT');
	      fieldType = isName(fieldType) ? fieldType.name : null;
	      switch (fieldType) {
	      case 'Tx':
	       return new TextWidgetAnnotation(parameters);
	      case 'Btn':
	       return new ButtonWidgetAnnotation(parameters);
	      case 'Ch':
	       return new ChoiceWidgetAnnotation(parameters);
	      }
	      warn('Unimplemented widget field type "' + fieldType + '", ' + 'falling back to base field type.');
	      return new WidgetAnnotation(parameters);
	     case 'Popup':
	      return new PopupAnnotation(parameters);
	     case 'Highlight':
	      return new HighlightAnnotation(parameters);
	     case 'Underline':
	      return new UnderlineAnnotation(parameters);
	     case 'Squiggly':
	      return new SquigglyAnnotation(parameters);
	     case 'StrikeOut':
	      return new StrikeOutAnnotation(parameters);
	     case 'FileAttachment':
	      return new FileAttachmentAnnotation(parameters);
	     default:
	      if (!subtype) {
	       warn('Annotation is missing the required /Subtype.');
	      } else {
	       warn('Unimplemented annotation type "' + subtype + '", ' + 'falling back to base annotation.');
	      }
	      return new Annotation(parameters);
	     }
	    }
	   };
	   var Annotation = function AnnotationClosure() {
	    function getTransformMatrix(rect, bbox, matrix) {
	     var bounds = Util.getAxialAlignedBoundingBox(bbox, matrix);
	     var minX = bounds[0];
	     var minY = bounds[1];
	     var maxX = bounds[2];
	     var maxY = bounds[3];
	     if (minX === maxX || minY === maxY) {
	      return [
	       1,
	       0,
	       0,
	       1,
	       rect[0],
	       rect[1]
	      ];
	     }
	     var xRatio = (rect[2] - rect[0]) / (maxX - minX);
	     var yRatio = (rect[3] - rect[1]) / (maxY - minY);
	     return [
	      xRatio,
	      0,
	      0,
	      yRatio,
	      rect[0] - minX * xRatio,
	      rect[1] - minY * yRatio
	     ];
	    }
	    function getDefaultAppearance(dict) {
	     var appearanceState = dict.get('AP');
	     if (!isDict(appearanceState)) {
	      return;
	     }
	     var appearance;
	     var appearances = appearanceState.get('N');
	     if (isDict(appearances)) {
	      var as = dict.get('AS');
	      if (as && appearances.has(as.name)) {
	       appearance = appearances.get(as.name);
	      }
	     } else {
	      appearance = appearances;
	     }
	     return appearance;
	    }
	    function Annotation(params) {
	     var dict = params.dict;
	     this.setFlags(dict.get('F'));
	     this.setRectangle(dict.getArray('Rect'));
	     this.setColor(dict.getArray('C'));
	     this.setBorderStyle(dict);
	     this.appearance = getDefaultAppearance(dict);
	     this.data = {};
	     this.data.id = params.id;
	     this.data.subtype = params.subtype;
	     this.data.annotationFlags = this.flags;
	     this.data.rect = this.rectangle;
	     this.data.color = this.color;
	     this.data.borderStyle = this.borderStyle;
	     this.data.hasAppearance = !!this.appearance;
	    }
	    Annotation.prototype = {
	     _hasFlag: function Annotation_hasFlag(flags, flag) {
	      return !!(flags & flag);
	     },
	     _isViewable: function Annotation_isViewable(flags) {
	      return !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN) && !this._hasFlag(flags, AnnotationFlag.NOVIEW);
	     },
	     _isPrintable: function AnnotationFlag_isPrintable(flags) {
	      return this._hasFlag(flags, AnnotationFlag.PRINT) && !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN);
	     },
	     get viewable() {
	      if (this.flags === 0) {
	       return true;
	      }
	      return this._isViewable(this.flags);
	     },
	     get printable() {
	      if (this.flags === 0) {
	       return false;
	      }
	      return this._isPrintable(this.flags);
	     },
	     setFlags: function Annotation_setFlags(flags) {
	      this.flags = isInt(flags) && flags > 0 ? flags : 0;
	     },
	     hasFlag: function Annotation_hasFlag(flag) {
	      return this._hasFlag(this.flags, flag);
	     },
	     setRectangle: function Annotation_setRectangle(rectangle) {
	      if (isArray(rectangle) && rectangle.length === 4) {
	       this.rectangle = Util.normalizeRect(rectangle);
	      } else {
	       this.rectangle = [
	        0,
	        0,
	        0,
	        0
	       ];
	      }
	     },
	     setColor: function Annotation_setColor(color) {
	      var rgbColor = new Uint8Array(3);
	      if (!isArray(color)) {
	       this.color = rgbColor;
	       return;
	      }
	      switch (color.length) {
	      case 0:
	       this.color = null;
	       break;
	      case 1:
	       ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);
	       this.color = rgbColor;
	       break;
	      case 3:
	       ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);
	       this.color = rgbColor;
	       break;
	      case 4:
	       ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);
	       this.color = rgbColor;
	       break;
	      default:
	       this.color = rgbColor;
	       break;
	      }
	     },
	     setBorderStyle: function Annotation_setBorderStyle(borderStyle) {
	      this.borderStyle = new AnnotationBorderStyle();
	      if (!isDict(borderStyle)) {
	       return;
	      }
	      if (borderStyle.has('BS')) {
	       var dict = borderStyle.get('BS');
	       var dictType = dict.get('Type');
	       if (!dictType || isName(dictType, 'Border')) {
	        this.borderStyle.setWidth(dict.get('W'));
	        this.borderStyle.setStyle(dict.get('S'));
	        this.borderStyle.setDashArray(dict.getArray('D'));
	       }
	      } else if (borderStyle.has('Border')) {
	       var array = borderStyle.getArray('Border');
	       if (isArray(array) && array.length >= 3) {
	        this.borderStyle.setHorizontalCornerRadius(array[0]);
	        this.borderStyle.setVerticalCornerRadius(array[1]);
	        this.borderStyle.setWidth(array[2]);
	        if (array.length === 4) {
	         this.borderStyle.setDashArray(array[3]);
	        }
	       }
	      } else {
	       this.borderStyle.setWidth(0);
	      }
	     },
	     _preparePopup: function Annotation_preparePopup(dict) {
	      if (!dict.has('C')) {
	       this.data.color = null;
	      }
	      this.data.hasPopup = dict.has('Popup');
	      this.data.title = stringToPDFString(dict.get('T') || '');
	      this.data.contents = stringToPDFString(dict.get('Contents') || '');
	     },
	     loadResources: function Annotation_loadResources(keys) {
	      return new Promise(function (resolve, reject) {
	       this.appearance.dict.getAsync('Resources').then(function (resources) {
	        if (!resources) {
	         resolve();
	         return;
	        }
	        var objectLoader = new ObjectLoader(resources.map, keys, resources.xref);
	        objectLoader.load().then(function () {
	         resolve(resources);
	        }, reject);
	       }, reject);
	      }.bind(this));
	     },
	     getOperatorList: function Annotation_getOperatorList(evaluator, task, renderForms) {
	      if (!this.appearance) {
	       return Promise.resolve(new OperatorList());
	      }
	      var data = this.data;
	      var appearanceDict = this.appearance.dict;
	      var resourcesPromise = this.loadResources([
	       'ExtGState',
	       'ColorSpace',
	       'Pattern',
	       'Shading',
	       'XObject',
	       'Font'
	      ]);
	      var bbox = appearanceDict.getArray('BBox') || [
	       0,
	       0,
	       1,
	       1
	      ];
	      var matrix = appearanceDict.getArray('Matrix') || [
	       1,
	       0,
	       0,
	       1,
	       0,
	       0
	      ];
	      var transform = getTransformMatrix(data.rect, bbox, matrix);
	      var self = this;
	      return resourcesPromise.then(function (resources) {
	       var opList = new OperatorList();
	       opList.addOp(OPS.beginAnnotation, [
	        data.rect,
	        transform,
	        matrix
	       ]);
	       return evaluator.getOperatorList(self.appearance, task, resources, opList).then(function () {
	        opList.addOp(OPS.endAnnotation, []);
	        self.appearance.reset();
	        return opList;
	       });
	      });
	     }
	    };
	    Annotation.appendToOperatorList = function Annotation_appendToOperatorList(annotations, opList, partialEvaluator, task, intent, renderForms) {
	     var annotationPromises = [];
	     for (var i = 0, n = annotations.length; i < n; ++i) {
	      if (intent === 'display' && annotations[i].viewable || intent === 'print' && annotations[i].printable) {
	       annotationPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderForms));
	      }
	     }
	     return Promise.all(annotationPromises).then(function (operatorLists) {
	      opList.addOp(OPS.beginAnnotations, []);
	      for (var i = 0, n = operatorLists.length; i < n; ++i) {
	       opList.addOpList(operatorLists[i]);
	      }
	      opList.addOp(OPS.endAnnotations, []);
	     });
	    };
	    return Annotation;
	   }();
	   var AnnotationBorderStyle = function AnnotationBorderStyleClosure() {
	    function AnnotationBorderStyle() {
	     this.width = 1;
	     this.style = AnnotationBorderStyleType.SOLID;
	     this.dashArray = [3];
	     this.horizontalCornerRadius = 0;
	     this.verticalCornerRadius = 0;
	    }
	    AnnotationBorderStyle.prototype = {
	     setWidth: function AnnotationBorderStyle_setWidth(width) {
	      if (width === (width | 0)) {
	       this.width = width;
	      }
	     },
	     setStyle: function AnnotationBorderStyle_setStyle(style) {
	      if (!style) {
	       return;
	      }
	      switch (style.name) {
	      case 'S':
	       this.style = AnnotationBorderStyleType.SOLID;
	       break;
	      case 'D':
	       this.style = AnnotationBorderStyleType.DASHED;
	       break;
	      case 'B':
	       this.style = AnnotationBorderStyleType.BEVELED;
	       break;
	      case 'I':
	       this.style = AnnotationBorderStyleType.INSET;
	       break;
	      case 'U':
	       this.style = AnnotationBorderStyleType.UNDERLINE;
	       break;
	      default:
	       break;
	      }
	     },
	     setDashArray: function AnnotationBorderStyle_setDashArray(dashArray) {
	      if (isArray(dashArray) && dashArray.length > 0) {
	       var isValid = true;
	       var allZeros = true;
	       for (var i = 0, len = dashArray.length; i < len; i++) {
	        var element = dashArray[i];
	        var validNumber = +element >= 0;
	        if (!validNumber) {
	         isValid = false;
	         break;
	        } else if (element > 0) {
	         allZeros = false;
	        }
	       }
	       if (isValid && !allZeros) {
	        this.dashArray = dashArray;
	       } else {
	        this.width = 0;
	       }
	      } else if (dashArray) {
	       this.width = 0;
	      }
	     },
	     setHorizontalCornerRadius: function AnnotationBorderStyle_setHorizontalCornerRadius(radius) {
	      if (radius === (radius | 0)) {
	       this.horizontalCornerRadius = radius;
	      }
	     },
	     setVerticalCornerRadius: function AnnotationBorderStyle_setVerticalCornerRadius(radius) {
	      if (radius === (radius | 0)) {
	       this.verticalCornerRadius = radius;
	      }
	     }
	    };
	    return AnnotationBorderStyle;
	   }();
	   var WidgetAnnotation = function WidgetAnnotationClosure() {
	    function WidgetAnnotation(params) {
	     Annotation.call(this, params);
	     var dict = params.dict;
	     var data = this.data;
	     data.annotationType = AnnotationType.WIDGET;
	     data.fieldName = this._constructFieldName(dict);
	     data.fieldValue = Util.getInheritableProperty(dict, 'V', true);
	     data.alternativeText = stringToPDFString(dict.get('TU') || '');
	     data.defaultAppearance = Util.getInheritableProperty(dict, 'DA') || '';
	     var fieldType = Util.getInheritableProperty(dict, 'FT');
	     data.fieldType = isName(fieldType) ? fieldType.name : null;
	     this.fieldResources = Util.getInheritableProperty(dict, 'DR') || Dict.empty;
	     data.fieldFlags = Util.getInheritableProperty(dict, 'Ff');
	     if (!isInt(data.fieldFlags) || data.fieldFlags < 0) {
	      data.fieldFlags = 0;
	     }
	     data.readOnly = this.hasFieldFlag(AnnotationFieldFlag.READONLY);
	     if (data.fieldType === 'Sig') {
	      this.setFlags(AnnotationFlag.HIDDEN);
	     }
	    }
	    Util.inherit(WidgetAnnotation, Annotation, {
	     _constructFieldName: function WidgetAnnotation_constructFieldName(dict) {
	      if (!dict.has('T') && !dict.has('Parent')) {
	       warn('Unknown field name, falling back to empty field name.');
	       return '';
	      }
	      if (!dict.has('Parent')) {
	       return stringToPDFString(dict.get('T'));
	      }
	      var fieldName = [];
	      if (dict.has('T')) {
	       fieldName.unshift(stringToPDFString(dict.get('T')));
	      }
	      var loopDict = dict;
	      while (loopDict.has('Parent')) {
	       loopDict = loopDict.get('Parent');
	       if (loopDict.has('T')) {
	        fieldName.unshift(stringToPDFString(loopDict.get('T')));
	       }
	      }
	      return fieldName.join('.');
	     },
	     hasFieldFlag: function WidgetAnnotation_hasFieldFlag(flag) {
	      return !!(this.data.fieldFlags & flag);
	     }
	    });
	    return WidgetAnnotation;
	   }();
	   var TextWidgetAnnotation = function TextWidgetAnnotationClosure() {
	    function TextWidgetAnnotation(params) {
	     WidgetAnnotation.call(this, params);
	     this.data.fieldValue = stringToPDFString(this.data.fieldValue || '');
	     var alignment = Util.getInheritableProperty(params.dict, 'Q');
	     if (!isInt(alignment) || alignment < 0 || alignment > 2) {
	      alignment = null;
	     }
	     this.data.textAlignment = alignment;
	     var maximumLength = Util.getInheritableProperty(params.dict, 'MaxLen');
	     if (!isInt(maximumLength) || maximumLength < 0) {
	      maximumLength = null;
	     }
	     this.data.maxLen = maximumLength;
	     this.data.multiLine = this.hasFieldFlag(AnnotationFieldFlag.MULTILINE);
	     this.data.comb = this.hasFieldFlag(AnnotationFieldFlag.COMB) && !this.hasFieldFlag(AnnotationFieldFlag.MULTILINE) && !this.hasFieldFlag(AnnotationFieldFlag.PASSWORD) && !this.hasFieldFlag(AnnotationFieldFlag.FILESELECT) && this.data.maxLen !== null;
	    }
	    Util.inherit(TextWidgetAnnotation, WidgetAnnotation, {
	     getOperatorList: function TextWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {
	      var operatorList = new OperatorList();
	      if (renderForms) {
	       return Promise.resolve(operatorList);
	      }
	      if (this.appearance) {
	       return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);
	      }
	      if (!this.data.defaultAppearance) {
	       return Promise.resolve(operatorList);
	      }
	      var stream = new Stream(stringToBytes(this.data.defaultAppearance));
	      return evaluator.getOperatorList(stream, task, this.fieldResources, operatorList).then(function () {
	       return operatorList;
	      });
	     }
	    });
	    return TextWidgetAnnotation;
	   }();
	   var ButtonWidgetAnnotation = function ButtonWidgetAnnotationClosure() {
	    function ButtonWidgetAnnotation(params) {
	     WidgetAnnotation.call(this, params);
	     this.data.checkBox = !this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);
	     if (this.data.checkBox) {
	      if (!isName(this.data.fieldValue)) {
	       return;
	      }
	      this.data.fieldValue = this.data.fieldValue.name;
	     }
	     this.data.radioButton = this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);
	     if (this.data.radioButton) {
	      this.data.fieldValue = this.data.buttonValue = null;
	      var fieldParent = params.dict.get('Parent');
	      if (!isDict(fieldParent) || !fieldParent.has('V')) {
	       return;
	      }
	      var fieldParentValue = fieldParent.get('V');
	      if (!isName(fieldParentValue)) {
	       return;
	      }
	      this.data.fieldValue = fieldParentValue.name;
	      var appearanceStates = params.dict.get('AP');
	      if (!isDict(appearanceStates)) {
	       return;
	      }
	      var normalAppearanceState = appearanceStates.get('N');
	      if (!isDict(normalAppearanceState)) {
	       return;
	      }
	      var keys = normalAppearanceState.getKeys();
	      for (var i = 0, ii = keys.length; i < ii; i++) {
	       if (keys[i] !== 'Off') {
	        this.data.buttonValue = keys[i];
	        break;
	       }
	      }
	     }
	    }
	    Util.inherit(ButtonWidgetAnnotation, WidgetAnnotation, {
	     getOperatorList: function ButtonWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {
	      var operatorList = new OperatorList();
	      if (renderForms) {
	       return Promise.resolve(operatorList);
	      }
	      if (this.appearance) {
	       return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);
	      }
	      return Promise.resolve(operatorList);
	     }
	    });
	    return ButtonWidgetAnnotation;
	   }();
	   var ChoiceWidgetAnnotation = function ChoiceWidgetAnnotationClosure() {
	    function ChoiceWidgetAnnotation(params) {
	     WidgetAnnotation.call(this, params);
	     this.data.options = [];
	     var options = params.dict.get('Opt');
	     if (isArray(options)) {
	      var xref = params.xref;
	      for (var i = 0, ii = options.length; i < ii; i++) {
	       var option = xref.fetchIfRef(options[i]);
	       var isOptionArray = isArray(option);
	       this.data.options[i] = {
	        exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,
	        displayValue: isOptionArray ? xref.fetchIfRef(option[1]) : option
	       };
	      }
	     }
	     if (!isArray(this.data.fieldValue)) {
	      this.data.fieldValue = [this.data.fieldValue];
	     }
	     this.data.combo = this.hasFieldFlag(AnnotationFieldFlag.COMBO);
	     this.data.multiSelect = this.hasFieldFlag(AnnotationFieldFlag.MULTISELECT);
	    }
	    Util.inherit(ChoiceWidgetAnnotation, WidgetAnnotation, {
	     getOperatorList: function ChoiceWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {
	      var operatorList = new OperatorList();
	      if (renderForms) {
	       return Promise.resolve(operatorList);
	      }
	      return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);
	     }
	    });
	    return ChoiceWidgetAnnotation;
	   }();
	   var TextAnnotation = function TextAnnotationClosure() {
	    var DEFAULT_ICON_SIZE = 22;
	    function TextAnnotation(parameters) {
	     Annotation.call(this, parameters);
	     this.data.annotationType = AnnotationType.TEXT;
	     if (this.data.hasAppearance) {
	      this.data.name = 'NoIcon';
	     } else {
	      this.data.rect[1] = this.data.rect[3] - DEFAULT_ICON_SIZE;
	      this.data.rect[2] = this.data.rect[0] + DEFAULT_ICON_SIZE;
	      this.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';
	     }
	     this._preparePopup(parameters.dict);
	    }
	    Util.inherit(TextAnnotation, Annotation, {});
	    return TextAnnotation;
	   }();
	   var LinkAnnotation = function LinkAnnotationClosure() {
	    function LinkAnnotation(params) {
	     Annotation.call(this, params);
	     var data = this.data;
	     data.annotationType = AnnotationType.LINK;
	     Catalog.parseDestDictionary({
	      destDict: params.dict,
	      resultObj: data,
	      docBaseUrl: params.pdfManager.docBaseUrl
	     });
	    }
	    Util.inherit(LinkAnnotation, Annotation, {});
	    return LinkAnnotation;
	   }();
	   var PopupAnnotation = function PopupAnnotationClosure() {
	    function PopupAnnotation(parameters) {
	     Annotation.call(this, parameters);
	     this.data.annotationType = AnnotationType.POPUP;
	     var dict = parameters.dict;
	     var parentItem = dict.get('Parent');
	     if (!parentItem) {
	      warn('Popup annotation has a missing or invalid parent annotation.');
	      return;
	     }
	     this.data.parentId = dict.getRaw('Parent').toString();
	     this.data.title = stringToPDFString(parentItem.get('T') || '');
	     this.data.contents = stringToPDFString(parentItem.get('Contents') || '');
	     if (!parentItem.has('C')) {
	      this.data.color = null;
	     } else {
	      this.setColor(parentItem.getArray('C'));
	      this.data.color = this.color;
	     }
	     if (!this.viewable) {
	      var parentFlags = parentItem.get('F');
	      if (this._isViewable(parentFlags)) {
	       this.setFlags(parentFlags);
	      }
	     }
	    }
	    Util.inherit(PopupAnnotation, Annotation, {});
	    return PopupAnnotation;
	   }();
	   var HighlightAnnotation = function HighlightAnnotationClosure() {
	    function HighlightAnnotation(parameters) {
	     Annotation.call(this, parameters);
	     this.data.annotationType = AnnotationType.HIGHLIGHT;
	     this._preparePopup(parameters.dict);
	     this.data.borderStyle.setWidth(0);
	    }
	    Util.inherit(HighlightAnnotation, Annotation, {});
	    return HighlightAnnotation;
	   }();
	   var UnderlineAnnotation = function UnderlineAnnotationClosure() {
	    function UnderlineAnnotation(parameters) {
	     Annotation.call(this, parameters);
	     this.data.annotationType = AnnotationType.UNDERLINE;
	     this._preparePopup(parameters.dict);
	     this.data.borderStyle.setWidth(0);
	    }
	    Util.inherit(UnderlineAnnotation, Annotation, {});
	    return UnderlineAnnotation;
	   }();
	   var SquigglyAnnotation = function SquigglyAnnotationClosure() {
	    function SquigglyAnnotation(parameters) {
	     Annotation.call(this, parameters);
	     this.data.annotationType = AnnotationType.SQUIGGLY;
	     this._preparePopup(parameters.dict);
	     this.data.borderStyle.setWidth(0);
	    }
	    Util.inherit(SquigglyAnnotation, Annotation, {});
	    return SquigglyAnnotation;
	   }();
	   var StrikeOutAnnotation = function StrikeOutAnnotationClosure() {
	    function StrikeOutAnnotation(parameters) {
	     Annotation.call(this, parameters);
	     this.data.annotationType = AnnotationType.STRIKEOUT;
	     this._preparePopup(parameters.dict);
	     this.data.borderStyle.setWidth(0);
	    }
	    Util.inherit(StrikeOutAnnotation, Annotation, {});
	    return StrikeOutAnnotation;
	   }();
	   var FileAttachmentAnnotation = function FileAttachmentAnnotationClosure() {
	    function FileAttachmentAnnotation(parameters) {
	     Annotation.call(this, parameters);
	     var file = new FileSpec(parameters.dict.get('FS'), parameters.xref);
	     this.data.annotationType = AnnotationType.FILEATTACHMENT;
	     this.data.file = file.serializable;
	     this._preparePopup(parameters.dict);
	    }
	    Util.inherit(FileAttachmentAnnotation, Annotation, {});
	    return FileAttachmentAnnotation;
	   }();
	   exports.Annotation = Annotation;
	   exports.AnnotationBorderStyle = AnnotationBorderStyle;
	   exports.AnnotationFactory = AnnotationFactory;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreDocument = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreObj, root.pdfjsCoreParser, root.pdfjsCoreCrypto, root.pdfjsCoreEvaluator, root.pdfjsCoreAnnotation);
	  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreObj, coreParser, coreCrypto, coreEvaluator, coreAnnotation) {
	   var MissingDataException = sharedUtil.MissingDataException;
	   var Util = sharedUtil.Util;
	   var assert = sharedUtil.assert;
	   var error = sharedUtil.error;
	   var info = sharedUtil.info;
	   var isArray = sharedUtil.isArray;
	   var isArrayBuffer = sharedUtil.isArrayBuffer;
	   var isNum = sharedUtil.isNum;
	   var isString = sharedUtil.isString;
	   var shadow = sharedUtil.shadow;
	   var stringToBytes = sharedUtil.stringToBytes;
	   var stringToPDFString = sharedUtil.stringToPDFString;
	   var warn = sharedUtil.warn;
	   var isSpace = sharedUtil.isSpace;
	   var Dict = corePrimitives.Dict;
	   var isDict = corePrimitives.isDict;
	   var isName = corePrimitives.isName;
	   var isStream = corePrimitives.isStream;
	   var NullStream = coreStream.NullStream;
	   var Stream = coreStream.Stream;
	   var StreamsSequenceStream = coreStream.StreamsSequenceStream;
	   var Catalog = coreObj.Catalog;
	   var ObjectLoader = coreObj.ObjectLoader;
	   var XRef = coreObj.XRef;
	   var Linearization = coreParser.Linearization;
	   var calculateMD5 = coreCrypto.calculateMD5;
	   var OperatorList = coreEvaluator.OperatorList;
	   var PartialEvaluator = coreEvaluator.PartialEvaluator;
	   var Annotation = coreAnnotation.Annotation;
	   var AnnotationFactory = coreAnnotation.AnnotationFactory;
	   var Page = function PageClosure() {
	    var DEFAULT_USER_UNIT = 1.0;
	    var LETTER_SIZE_MEDIABOX = [
	     0,
	     0,
	     612,
	     792
	    ];
	    function Page(pdfManager, xref, pageIndex, pageDict, ref, fontCache) {
	     this.pdfManager = pdfManager;
	     this.pageIndex = pageIndex;
	     this.pageDict = pageDict;
	     this.xref = xref;
	     this.ref = ref;
	     this.fontCache = fontCache;
	     this.evaluatorOptions = pdfManager.evaluatorOptions;
	     this.resourcesPromise = null;
	     var uniquePrefix = 'p' + this.pageIndex + '_';
	     var idCounters = { obj: 0 };
	     this.idFactory = {
	      createObjId: function () {
	       return uniquePrefix + ++idCounters.obj;
	      }
	     };
	    }
	    Page.prototype = {
	     getPageProp: function Page_getPageProp(key) {
	      return this.pageDict.get(key);
	     },
	     getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {
	      var dict = this.pageDict, valueArray = null, loopCount = 0;
	      var MAX_LOOP_COUNT = 100;
	      getArray = getArray || false;
	      while (dict) {
	       var value = getArray ? dict.getArray(key) : dict.get(key);
	       if (value) {
	        if (!valueArray) {
	         valueArray = [];
	        }
	        valueArray.push(value);
	       }
	       if (++loopCount > MAX_LOOP_COUNT) {
	        warn('Page_getInheritedPageProp: maximum loop count exceeded.');
	        break;
	       }
	       dict = dict.get('Parent');
	      }
	      if (!valueArray) {
	       return Dict.empty;
	      }
	      if (valueArray.length === 1 || !isDict(valueArray[0]) || loopCount > MAX_LOOP_COUNT) {
	       return valueArray[0];
	      }
	      return Dict.merge(this.xref, valueArray);
	     },
	     get content() {
	      return this.getPageProp('Contents');
	     },
	     get resources() {
	      return shadow(this, 'resources', this.getInheritedPageProp('Resources'));
	     },
	     get mediaBox() {
	      var mediaBox = this.getInheritedPageProp('MediaBox', true);
	      if (!isArray(mediaBox) || mediaBox.length !== 4) {
	       return shadow(this, 'mediaBox', LETTER_SIZE_MEDIABOX);
	      }
	      return shadow(this, 'mediaBox', mediaBox);
	     },
	     get cropBox() {
	      var cropBox = this.getInheritedPageProp('CropBox', true);
	      if (!isArray(cropBox) || cropBox.length !== 4) {
	       return shadow(this, 'cropBox', this.mediaBox);
	      }
	      return shadow(this, 'cropBox', cropBox);
	     },
	     get userUnit() {
	      var obj = this.getPageProp('UserUnit');
	      if (!isNum(obj) || obj <= 0) {
	       obj = DEFAULT_USER_UNIT;
	      }
	      return shadow(this, 'userUnit', obj);
	     },
	     get view() {
	      var mediaBox = this.mediaBox, cropBox = this.cropBox;
	      if (mediaBox === cropBox) {
	       return shadow(this, 'view', mediaBox);
	      }
	      var intersection = Util.intersect(cropBox, mediaBox);
	      return shadow(this, 'view', intersection || mediaBox);
	     },
	     get rotate() {
	      var rotate = this.getInheritedPageProp('Rotate') || 0;
	      if (rotate % 90 !== 0) {
	       rotate = 0;
	      } else if (rotate >= 360) {
	       rotate = rotate % 360;
	      } else if (rotate < 0) {
	       rotate = (rotate % 360 + 360) % 360;
	      }
	      return shadow(this, 'rotate', rotate);
	     },
	     getContentStream: function Page_getContentStream() {
	      var content = this.content;
	      var stream;
	      if (isArray(content)) {
	       var xref = this.xref;
	       var i, n = content.length;
	       var streams = [];
	       for (i = 0; i < n; ++i) {
	        streams.push(xref.fetchIfRef(content[i]));
	       }
	       stream = new StreamsSequenceStream(streams);
	      } else if (isStream(content)) {
	       stream = content;
	      } else {
	       stream = new NullStream();
	      }
	      return stream;
	     },
	     loadResources: function Page_loadResources(keys) {
	      if (!this.resourcesPromise) {
	       this.resourcesPromise = this.pdfManager.ensure(this, 'resources');
	      }
	      return this.resourcesPromise.then(function resourceSuccess() {
	       var objectLoader = new ObjectLoader(this.resources.map, keys, this.xref);
	       return objectLoader.load();
	      }.bind(this));
	     },
	     getOperatorList: function Page_getOperatorList(handler, task, intent, renderInteractiveForms) {
	      var self = this;
	      var pdfManager = this.pdfManager;
	      var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);
	      var resourcesPromise = this.loadResources([
	       'ExtGState',
	       'ColorSpace',
	       'Pattern',
	       'Shading',
	       'XObject',
	       'Font'
	      ]);
	      var partialEvaluator = new PartialEvaluator(pdfManager, this.xref, handler, this.pageIndex, this.idFactory, this.fontCache, this.evaluatorOptions);
	      var dataPromises = Promise.all([
	       contentStreamPromise,
	       resourcesPromise
	      ]);
	      var pageListPromise = dataPromises.then(function (data) {
	       var contentStream = data[0];
	       var opList = new OperatorList(intent, handler, self.pageIndex);
	       handler.send('StartRenderPage', {
	        transparency: partialEvaluator.hasBlendModes(self.resources),
	        pageIndex: self.pageIndex,
	        intent: intent
	       });
	       return partialEvaluator.getOperatorList(contentStream, task, self.resources, opList).then(function () {
	        return opList;
	       });
	      });
	      var annotationsPromise = pdfManager.ensure(this, 'annotations');
	      return Promise.all([
	       pageListPromise,
	       annotationsPromise
	      ]).then(function (datas) {
	       var pageOpList = datas[0];
	       var annotations = datas[1];
	       if (annotations.length === 0) {
	        pageOpList.flush(true);
	        return pageOpList;
	       }
	       var annotationsReadyPromise = Annotation.appendToOperatorList(annotations, pageOpList, partialEvaluator, task, intent, renderInteractiveForms);
	       return annotationsReadyPromise.then(function () {
	        pageOpList.flush(true);
	        return pageOpList;
	       });
	      });
	     },
	     extractTextContent: function Page_extractTextContent(task, normalizeWhitespace, combineTextItems) {
	      var handler = {
	       on: function nullHandlerOn() {
	       },
	       send: function nullHandlerSend() {
	       }
	      };
	      var self = this;
	      var pdfManager = this.pdfManager;
	      var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);
	      var resourcesPromise = this.loadResources([
	       'ExtGState',
	       'XObject',
	       'Font'
	      ]);
	      var dataPromises = Promise.all([
	       contentStreamPromise,
	       resourcesPromise
	      ]);
	      return dataPromises.then(function (data) {
	       var contentStream = data[0];
	       var partialEvaluator = new PartialEvaluator(pdfManager, self.xref, handler, self.pageIndex, self.idFactory, self.fontCache, self.evaluatorOptions);
	       return partialEvaluator.getTextContent(contentStream, task, self.resources, null, normalizeWhitespace, combineTextItems);
	      });
	     },
	     getAnnotationsData: function Page_getAnnotationsData(intent) {
	      var annotations = this.annotations;
	      var annotationsData = [];
	      for (var i = 0, n = annotations.length; i < n; ++i) {
	       if (intent) {
	        if (!(intent === 'display' && annotations[i].viewable) && !(intent === 'print' && annotations[i].printable)) {
	         continue;
	        }
	       }
	       annotationsData.push(annotations[i].data);
	      }
	      return annotationsData;
	     },
	     get annotations() {
	      var annotations = [];
	      var annotationRefs = this.getInheritedPageProp('Annots') || [];
	      var annotationFactory = new AnnotationFactory();
	      for (var i = 0, n = annotationRefs.length; i < n; ++i) {
	       var annotationRef = annotationRefs[i];
	       var annotation = annotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);
	       if (annotation) {
	        annotations.push(annotation);
	       }
	      }
	      return shadow(this, 'annotations', annotations);
	     }
	    };
	    return Page;
	   }();
	   var PDFDocument = function PDFDocumentClosure() {
	    var FINGERPRINT_FIRST_BYTES = 1024;
	    var EMPTY_FINGERPRINT = '\x00\x00\x00\x00\x00\x00\x00' + '\x00\x00\x00\x00\x00\x00\x00\x00\x00';
	    function PDFDocument(pdfManager, arg) {
	     var stream;
	     if (isStream(arg)) {
	      stream = arg;
	     } else if (isArrayBuffer(arg)) {
	      stream = new Stream(arg);
	     } else {
	      error('PDFDocument: Unknown argument type');
	     }
	     assert(stream.length > 0, 'stream must have data');
	     this.pdfManager = pdfManager;
	     this.stream = stream;
	     this.xref = new XRef(stream, pdfManager);
	    }
	    function find(stream, needle, limit, backwards) {
	     var pos = stream.pos;
	     var end = stream.end;
	     var strBuf = [];
	     if (pos + limit > end) {
	      limit = end - pos;
	     }
	     for (var n = 0; n < limit; ++n) {
	      strBuf.push(String.fromCharCode(stream.getByte()));
	     }
	     var str = strBuf.join('');
	     stream.pos = pos;
	     var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);
	     if (index === -1) {
	      return false;
	     }
	     stream.pos += index;
	     return true;
	    }
	    var DocumentInfoValidators = {
	     get entries() {
	      return shadow(this, 'entries', {
	       Title: isString,
	       Author: isString,
	       Subject: isString,
	       Keywords: isString,
	       Creator: isString,
	       Producer: isString,
	       CreationDate: isString,
	       ModDate: isString,
	       Trapped: isName
	      });
	     }
	    };
	    PDFDocument.prototype = {
	     parse: function PDFDocument_parse(recoveryMode) {
	      this.setup(recoveryMode);
	      var version = this.catalog.catDict.get('Version');
	      if (isName(version)) {
	       this.pdfFormatVersion = version.name;
	      }
	      try {
	       this.acroForm = this.catalog.catDict.get('AcroForm');
	       if (this.acroForm) {
	        this.xfa = this.acroForm.get('XFA');
	        var fields = this.acroForm.get('Fields');
	        if ((!fields || !isArray(fields) || fields.length === 0) && !this.xfa) {
	         this.acroForm = null;
	        }
	       }
	      } catch (ex) {
	       info('Something wrong with AcroForm entry');
	       this.acroForm = null;
	      }
	     },
	     get linearization() {
	      var linearization = null;
	      if (this.stream.length) {
	       try {
	        linearization = Linearization.create(this.stream);
	       } catch (err) {
	        if (err instanceof MissingDataException) {
	         throw err;
	        }
	        info(err);
	       }
	      }
	      return shadow(this, 'linearization', linearization);
	     },
	     get startXRef() {
	      var stream = this.stream;
	      var startXRef = 0;
	      var linearization = this.linearization;
	      if (linearization) {
	       stream.reset();
	       if (find(stream, 'endobj', 1024)) {
	        startXRef = stream.pos + 6;
	       }
	      } else {
	       var step = 1024;
	       var found = false, pos = stream.end;
	       while (!found && pos > 0) {
	        pos -= step - 'startxref'.length;
	        if (pos < 0) {
	         pos = 0;
	        }
	        stream.pos = pos;
	        found = find(stream, 'startxref', step, true);
	       }
	       if (found) {
	        stream.skip(9);
	        var ch;
	        do {
	         ch = stream.getByte();
	        } while (isSpace(ch));
	        var str = '';
	        while (ch >= 0x20 && ch <= 0x39) {
	         str += String.fromCharCode(ch);
	         ch = stream.getByte();
	        }
	        startXRef = parseInt(str, 10);
	        if (isNaN(startXRef)) {
	         startXRef = 0;
	        }
	       }
	      }
	      return shadow(this, 'startXRef', startXRef);
	     },
	     get mainXRefEntriesOffset() {
	      var mainXRefEntriesOffset = 0;
	      var linearization = this.linearization;
	      if (linearization) {
	       mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;
	      }
	      return shadow(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);
	     },
	     checkHeader: function PDFDocument_checkHeader() {
	      var stream = this.stream;
	      stream.reset();
	      if (find(stream, '%PDF-', 1024)) {
	       stream.moveStart();
	       var MAX_VERSION_LENGTH = 12;
	       var version = '', ch;
	       while ((ch = stream.getByte()) > 0x20) {
	        if (version.length >= MAX_VERSION_LENGTH) {
	         break;
	        }
	        version += String.fromCharCode(ch);
	       }
	       if (!this.pdfFormatVersion) {
	        this.pdfFormatVersion = version.substring(5);
	       }
	       return;
	      }
	     },
	     parseStartXRef: function PDFDocument_parseStartXRef() {
	      var startXRef = this.startXRef;
	      this.xref.setStartXRef(startXRef);
	     },
	     setup: function PDFDocument_setup(recoveryMode) {
	      this.xref.parse(recoveryMode);
	      var self = this;
	      var pageFactory = {
	       createPage: function (pageIndex, dict, ref, fontCache) {
	        return new Page(self.pdfManager, self.xref, pageIndex, dict, ref, fontCache);
	       }
	      };
	      this.catalog = new Catalog(this.pdfManager, this.xref, pageFactory);
	     },
	     get numPages() {
	      var linearization = this.linearization;
	      var num = linearization ? linearization.numPages : this.catalog.numPages;
	      return shadow(this, 'numPages', num);
	     },
	     get documentInfo() {
	      var docInfo = {
	       PDFFormatVersion: this.pdfFormatVersion,
	       IsAcroFormPresent: !!this.acroForm,
	       IsXFAPresent: !!this.xfa
	      };
	      var infoDict;
	      try {
	       infoDict = this.xref.trailer.get('Info');
	      } catch (err) {
	       info('The document information dictionary is invalid.');
	      }
	      if (infoDict) {
	       var validEntries = DocumentInfoValidators.entries;
	       for (var key in validEntries) {
	        if (infoDict.has(key)) {
	         var value = infoDict.get(key);
	         if (validEntries[key](value)) {
	          docInfo[key] = typeof value !== 'string' ? value : stringToPDFString(value);
	         } else {
	          info('Bad value in document info for "' + key + '"');
	         }
	        }
	       }
	      }
	      return shadow(this, 'documentInfo', docInfo);
	     },
	     get fingerprint() {
	      var xref = this.xref, hash, fileID = '';
	      var idArray = xref.trailer.get('ID');
	      if (idArray && isArray(idArray) && idArray[0] && isString(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {
	       hash = stringToBytes(idArray[0]);
	      } else {
	       if (this.stream.ensureRange) {
	        this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));
	       }
	       hash = calculateMD5(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);
	      }
	      for (var i = 0, n = hash.length; i < n; i++) {
	       var hex = hash[i].toString(16);
	       fileID += hex.length === 1 ? '0' + hex : hex;
	      }
	      return shadow(this, 'fingerprint', fileID);
	     },
	     getPage: function PDFDocument_getPage(pageIndex) {
	      return this.catalog.getPage(pageIndex);
	     },
	     cleanup: function PDFDocument_cleanup() {
	      return this.catalog.cleanup();
	     }
	    };
	    return PDFDocument;
	   }();
	   exports.Page = Page;
	   exports.PDFDocument = PDFDocument;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCorePdfManager = {}, root.pdfjsSharedUtil, root.pdfjsCoreStream, root.pdfjsCoreChunkedStream, root.pdfjsCoreDocument);
	  }(this, function (exports, sharedUtil, coreStream, coreChunkedStream, coreDocument) {
	   var warn = sharedUtil.warn;
	   var createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;
	   var shadow = sharedUtil.shadow;
	   var NotImplementedException = sharedUtil.NotImplementedException;
	   var MissingDataException = sharedUtil.MissingDataException;
	   var createPromiseCapability = sharedUtil.createPromiseCapability;
	   var Util = sharedUtil.Util;
	   var Stream = coreStream.Stream;
	   var ChunkedStreamManager = coreChunkedStream.ChunkedStreamManager;
	   var PDFDocument = coreDocument.PDFDocument;
	   var BasePdfManager = function BasePdfManagerClosure() {
	    function BasePdfManager() {
	     throw new Error('Cannot initialize BaseManagerManager');
	    }
	    BasePdfManager.prototype = {
	     get docId() {
	      return this._docId;
	     },
	     get password() {
	      return this._password;
	     },
	     get docBaseUrl() {
	      var docBaseUrl = null;
	      if (this._docBaseUrl) {
	       var absoluteUrl = createValidAbsoluteUrl(this._docBaseUrl);
	       if (absoluteUrl) {
	        docBaseUrl = absoluteUrl.href;
	       } else {
	        warn('Invalid absolute docBaseUrl: "' + this._docBaseUrl + '".');
	       }
	      }
	      return shadow(this, 'docBaseUrl', docBaseUrl);
	     },
	     onLoadedStream: function BasePdfManager_onLoadedStream() {
	      throw new NotImplementedException();
	     },
	     ensureDoc: function BasePdfManager_ensureDoc(prop, args) {
	      return this.ensure(this.pdfDocument, prop, args);
	     },
	     ensureXRef: function BasePdfManager_ensureXRef(prop, args) {
	      return this.ensure(this.pdfDocument.xref, prop, args);
	     },
	     ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {
	      return this.ensure(this.pdfDocument.catalog, prop, args);
	     },
	     getPage: function BasePdfManager_getPage(pageIndex) {
	      return this.pdfDocument.getPage(pageIndex);
	     },
	     cleanup: function BasePdfManager_cleanup() {
	      return this.pdfDocument.cleanup();
	     },
	     ensure: function BasePdfManager_ensure(obj, prop, args) {
	      return new NotImplementedException();
	     },
	     requestRange: function BasePdfManager_requestRange(begin, end) {
	      return new NotImplementedException();
	     },
	     requestLoadedStream: function BasePdfManager_requestLoadedStream() {
	      return new NotImplementedException();
	     },
	     sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {
	      return new NotImplementedException();
	     },
	     updatePassword: function BasePdfManager_updatePassword(password) {
	      this._password = password;
	     },
	     terminate: function BasePdfManager_terminate() {
	      return new NotImplementedException();
	     }
	    };
	    return BasePdfManager;
	   }();
	   var LocalPdfManager = function LocalPdfManagerClosure() {
	    function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {
	     this._docId = docId;
	     this._password = password;
	     this._docBaseUrl = docBaseUrl;
	     this.evaluatorOptions = evaluatorOptions;
	     var stream = new Stream(data);
	     this.pdfDocument = new PDFDocument(this, stream);
	     this._loadedStreamCapability = createPromiseCapability();
	     this._loadedStreamCapability.resolve(stream);
	    }
	    Util.inherit(LocalPdfManager, BasePdfManager, {
	     ensure: function LocalPdfManager_ensure(obj, prop, args) {
	      return new Promise(function (resolve, reject) {
	       try {
	        var value = obj[prop];
	        var result;
	        if (typeof value === 'function') {
	         result = value.apply(obj, args);
	        } else {
	         result = value;
	        }
	        resolve(result);
	       } catch (e) {
	        reject(e);
	       }
	      });
	     },
	     requestRange: function LocalPdfManager_requestRange(begin, end) {
	      return Promise.resolve();
	     },
	     requestLoadedStream: function LocalPdfManager_requestLoadedStream() {
	     },
	     onLoadedStream: function LocalPdfManager_onLoadedStream() {
	      return this._loadedStreamCapability.promise;
	     },
	     terminate: function LocalPdfManager_terminate() {
	     }
	    });
	    return LocalPdfManager;
	   }();
	   var NetworkPdfManager = function NetworkPdfManagerClosure() {
	    function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {
	     this._docId = docId;
	     this._password = args.password;
	     this._docBaseUrl = docBaseUrl;
	     this.msgHandler = args.msgHandler;
	     this.evaluatorOptions = evaluatorOptions;
	     var params = {
	      msgHandler: args.msgHandler,
	      url: args.url,
	      length: args.length,
	      disableAutoFetch: args.disableAutoFetch,
	      rangeChunkSize: args.rangeChunkSize
	     };
	     this.streamManager = new ChunkedStreamManager(pdfNetworkStream, params);
	     this.pdfDocument = new PDFDocument(this, this.streamManager.getStream());
	    }
	    Util.inherit(NetworkPdfManager, BasePdfManager, {
	     ensure: function NetworkPdfManager_ensure(obj, prop, args) {
	      var pdfManager = this;
	      return new Promise(function (resolve, reject) {
	       function ensureHelper() {
	        try {
	         var result;
	         var value = obj[prop];
	         if (typeof value === 'function') {
	          result = value.apply(obj, args);
	         } else {
	          result = value;
	         }
	         resolve(result);
	        } catch (e) {
	         if (!(e instanceof MissingDataException)) {
	          reject(e);
	          return;
	         }
	         pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);
	        }
	       }
	       ensureHelper();
	      });
	     },
	     requestRange: function NetworkPdfManager_requestRange(begin, end) {
	      return this.streamManager.requestRange(begin, end);
	     },
	     requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {
	      this.streamManager.requestAllChunks();
	     },
	     sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {
	      this.streamManager.onReceiveData({ chunk: chunk });
	     },
	     onLoadedStream: function NetworkPdfManager_onLoadedStream() {
	      return this.streamManager.onLoadedStream();
	     },
	     terminate: function NetworkPdfManager_terminate() {
	      this.streamManager.abort();
	     }
	    });
	    return NetworkPdfManager;
	   }();
	   exports.LocalPdfManager = LocalPdfManager;
	   exports.NetworkPdfManager = NetworkPdfManager;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreWorker = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCorePdfManager);
	  }(this, function (exports, sharedUtil, corePrimitives, corePdfManager) {
	   var UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;
	   var InvalidPDFException = sharedUtil.InvalidPDFException;
	   var MessageHandler = sharedUtil.MessageHandler;
	   var MissingPDFException = sharedUtil.MissingPDFException;
	   var UnexpectedResponseException = sharedUtil.UnexpectedResponseException;
	   var PasswordException = sharedUtil.PasswordException;
	   var PasswordResponses = sharedUtil.PasswordResponses;
	   var UnknownErrorException = sharedUtil.UnknownErrorException;
	   var XRefParseException = sharedUtil.XRefParseException;
	   var arrayByteLength = sharedUtil.arrayByteLength;
	   var arraysToBytes = sharedUtil.arraysToBytes;
	   var assert = sharedUtil.assert;
	   var createPromiseCapability = sharedUtil.createPromiseCapability;
	   var error = sharedUtil.error;
	   var info = sharedUtil.info;
	   var warn = sharedUtil.warn;
	   var setVerbosityLevel = sharedUtil.setVerbosityLevel;
	   var Ref = corePrimitives.Ref;
	   var LocalPdfManager = corePdfManager.LocalPdfManager;
	   var NetworkPdfManager = corePdfManager.NetworkPdfManager;
	   var globalScope = sharedUtil.globalScope;
	   var WorkerTask = function WorkerTaskClosure() {
	    function WorkerTask(name) {
	     this.name = name;
	     this.terminated = false;
	     this._capability = createPromiseCapability();
	    }
	    WorkerTask.prototype = {
	     get finished() {
	      return this._capability.promise;
	     },
	     finish: function () {
	      this._capability.resolve();
	     },
	     terminate: function () {
	      this.terminated = true;
	     },
	     ensureNotTerminated: function () {
	      if (this.terminated) {
	       throw new Error('Worker task was terminated');
	      }
	     }
	    };
	    return WorkerTask;
	   }();
	   var PDFWorkerStream = function PDFWorkerStreamClosure() {
	    function PDFWorkerStream(params, msgHandler) {
	     this._queuedChunks = [];
	     var initialData = params.initialData;
	     if (initialData && initialData.length > 0) {
	      this._queuedChunks.push(initialData);
	     }
	     this._msgHandler = msgHandler;
	     this._isRangeSupported = !params.disableRange;
	     this._isStreamingSupported = !params.disableStream;
	     this._contentLength = params.length;
	     this._fullRequestReader = null;
	     this._rangeReaders = [];
	     msgHandler.on('OnDataRange', this._onReceiveData.bind(this));
	     msgHandler.on('OnDataProgress', this._onProgress.bind(this));
	    }
	    PDFWorkerStream.prototype = {
	     _onReceiveData: function PDFWorkerStream_onReceiveData(args) {
	      if (args.begin === undefined) {
	       if (this._fullRequestReader) {
	        this._fullRequestReader._enqueue(args.chunk);
	       } else {
	        this._queuedChunks.push(args.chunk);
	       }
	      } else {
	       var found = this._rangeReaders.some(function (rangeReader) {
	        if (rangeReader._begin !== args.begin) {
	         return false;
	        }
	        rangeReader._enqueue(args.chunk);
	        return true;
	       });
	       assert(found);
	      }
	     },
	     _onProgress: function PDFWorkerStream_onProgress(evt) {
	      if (this._rangeReaders.length > 0) {
	       var firstReader = this._rangeReaders[0];
	       if (firstReader.onProgress) {
	        firstReader.onProgress({ loaded: evt.loaded });
	       }
	      }
	     },
	     _removeRangeReader: function PDFWorkerStream_removeRangeReader(reader) {
	      var i = this._rangeReaders.indexOf(reader);
	      if (i >= 0) {
	       this._rangeReaders.splice(i, 1);
	      }
	     },
	     getFullReader: function PDFWorkerStream_getFullReader() {
	      assert(!this._fullRequestReader);
	      var queuedChunks = this._queuedChunks;
	      this._queuedChunks = null;
	      return new PDFWorkerStreamReader(this, queuedChunks);
	     },
	     getRangeReader: function PDFWorkerStream_getRangeReader(begin, end) {
	      var reader = new PDFWorkerStreamRangeReader(this, begin, end);
	      this._msgHandler.send('RequestDataRange', {
	       begin: begin,
	       end: end
	      });
	      this._rangeReaders.push(reader);
	      return reader;
	     },
	     cancelAllRequests: function PDFWorkerStream_cancelAllRequests(reason) {
	      if (this._fullRequestReader) {
	       this._fullRequestReader.cancel(reason);
	      }
	      var readers = this._rangeReaders.slice(0);
	      readers.forEach(function (rangeReader) {
	       rangeReader.cancel(reason);
	      });
	     }
	    };
	    function PDFWorkerStreamReader(stream, queuedChunks) {
	     this._stream = stream;
	     this._done = false;
	     this._queuedChunks = queuedChunks || [];
	     this._requests = [];
	     this._headersReady = Promise.resolve();
	     stream._fullRequestReader = this;
	     this.onProgress = null;
	    }
	    PDFWorkerStreamReader.prototype = {
	     _enqueue: function PDFWorkerStreamReader_enqueue(chunk) {
	      if (this._done) {
	       return;
	      }
	      if (this._requests.length > 0) {
	       var requestCapability = this._requests.shift();
	       requestCapability.resolve({
	        value: chunk,
	        done: false
	       });
	       return;
	      }
	      this._queuedChunks.push(chunk);
	     },
	     get headersReady() {
	      return this._headersReady;
	     },
	     get isRangeSupported() {
	      return this._stream._isRangeSupported;
	     },
	     get isStreamingSupported() {
	      return this._stream._isStreamingSupported;
	     },
	     get contentLength() {
	      return this._stream._contentLength;
	     },
	     read: function PDFWorkerStreamReader_read() {
	      if (this._queuedChunks.length > 0) {
	       var chunk = this._queuedChunks.shift();
	       return Promise.resolve({
	        value: chunk,
	        done: false
	       });
	      }
	      if (this._done) {
	       return Promise.resolve({
	        value: undefined,
	        done: true
	       });
	      }
	      var requestCapability = createPromiseCapability();
	      this._requests.push(requestCapability);
	      return requestCapability.promise;
	     },
	     cancel: function PDFWorkerStreamReader_cancel(reason) {
	      this._done = true;
	      this._requests.forEach(function (requestCapability) {
	       requestCapability.resolve({
	        value: undefined,
	        done: true
	       });
	      });
	      this._requests = [];
	     }
	    };
	    function PDFWorkerStreamRangeReader(stream, begin, end) {
	     this._stream = stream;
	     this._begin = begin;
	     this._end = end;
	     this._queuedChunk = null;
	     this._requests = [];
	     this._done = false;
	     this.onProgress = null;
	    }
	    PDFWorkerStreamRangeReader.prototype = {
	     _enqueue: function PDFWorkerStreamRangeReader_enqueue(chunk) {
	      if (this._done) {
	       return;
	      }
	      if (this._requests.length === 0) {
	       this._queuedChunk = chunk;
	      } else {
	       var requestsCapability = this._requests.shift();
	       requestsCapability.resolve({
	        value: chunk,
	        done: false
	       });
	       this._requests.forEach(function (requestCapability) {
	        requestCapability.resolve({
	         value: undefined,
	         done: true
	        });
	       });
	       this._requests = [];
	      }
	      this._done = true;
	      this._stream._removeRangeReader(this);
	     },
	     get isStreamingSupported() {
	      return false;
	     },
	     read: function PDFWorkerStreamRangeReader_read() {
	      if (this._queuedChunk) {
	       return Promise.resolve({
	        value: this._queuedChunk,
	        done: false
	       });
	      }
	      if (this._done) {
	       return Promise.resolve({
	        value: undefined,
	        done: true
	       });
	      }
	      var requestCapability = createPromiseCapability();
	      this._requests.push(requestCapability);
	      return requestCapability.promise;
	     },
	     cancel: function PDFWorkerStreamRangeReader_cancel(reason) {
	      this._done = true;
	      this._requests.forEach(function (requestCapability) {
	       requestCapability.resolve({
	        value: undefined,
	        done: true
	       });
	      });
	      this._requests = [];
	      this._stream._removeRangeReader(this);
	     }
	    };
	    return PDFWorkerStream;
	   }();
	   var PDFNetworkStream;
	   function setPDFNetworkStreamClass(cls) {
	    PDFNetworkStream = cls;
	   }
	   var WorkerMessageHandler = {
	    setup: function wphSetup(handler, port) {
	     var testMessageProcessed = false;
	     handler.on('test', function wphSetupTest(data) {
	      if (testMessageProcessed) {
	       return;
	      }
	      testMessageProcessed = true;
	      if (!(data instanceof Uint8Array)) {
	       handler.send('test', 'main', false);
	       return;
	      }
	      var supportTransfers = data[0] === 255;
	      handler.postMessageTransfers = supportTransfers;
	      var xhr = new XMLHttpRequest();
	      var responseExists = 'response' in xhr;
	      try {
	       var dummy = xhr.responseType;
	      } catch (e) {
	       responseExists = false;
	      }
	      if (!responseExists) {
	       handler.send('test', false);
	       return;
	      }
	      handler.send('test', {
	       supportTypedArray: true,
	       supportTransfers: supportTransfers
	      });
	     });
	     handler.on('configure', function wphConfigure(data) {
	      setVerbosityLevel(data.verbosity);
	     });
	     handler.on('GetDocRequest', function wphSetupDoc(data) {
	      return WorkerMessageHandler.createDocumentHandler(data, port);
	     });
	    },
	    createDocumentHandler: function wphCreateDocumentHandler(docParams, port) {
	     var pdfManager;
	     var terminated = false;
	     var cancelXHRs = null;
	     var WorkerTasks = [];
	     var docId = docParams.docId;
	     var docBaseUrl = docParams.docBaseUrl;
	     var workerHandlerName = docParams.docId + '_worker';
	     var handler = new MessageHandler(workerHandlerName, docId, port);
	     handler.postMessageTransfers = docParams.postMessageTransfers;
	     function ensureNotTerminated() {
	      if (terminated) {
	       throw new Error('Worker was terminated');
	      }
	     }
	     function startWorkerTask(task) {
	      WorkerTasks.push(task);
	     }
	     function finishWorkerTask(task) {
	      task.finish();
	      var i = WorkerTasks.indexOf(task);
	      WorkerTasks.splice(i, 1);
	     }
	     function loadDocument(recoveryMode) {
	      var loadDocumentCapability = createPromiseCapability();
	      var parseSuccess = function parseSuccess() {
	       var numPagesPromise = pdfManager.ensureDoc('numPages');
	       var fingerprintPromise = pdfManager.ensureDoc('fingerprint');
	       var encryptedPromise = pdfManager.ensureXRef('encrypt');
	       Promise.all([
	        numPagesPromise,
	        fingerprintPromise,
	        encryptedPromise
	       ]).then(function onDocReady(results) {
	        var doc = {
	         numPages: results[0],
	         fingerprint: results[1],
	         encrypted: !!results[2]
	        };
	        loadDocumentCapability.resolve(doc);
	       }, parseFailure);
	      };
	      var parseFailure = function parseFailure(e) {
	       loadDocumentCapability.reject(e);
	      };
	      pdfManager.ensureDoc('checkHeader', []).then(function () {
	       pdfManager.ensureDoc('parseStartXRef', []).then(function () {
	        pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);
	       }, parseFailure);
	      }, parseFailure);
	      return loadDocumentCapability.promise;
	     }
	     function getPdfManager(data, evaluatorOptions) {
	      var pdfManagerCapability = createPromiseCapability();
	      var pdfManager;
	      var source = data.source;
	      if (source.data) {
	       try {
	        pdfManager = new LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);
	        pdfManagerCapability.resolve(pdfManager);
	       } catch (ex) {
	        pdfManagerCapability.reject(ex);
	       }
	       return pdfManagerCapability.promise;
	      }
	      var pdfStream;
	      try {
	       if (source.chunkedViewerLoading) {
	        pdfStream = new PDFWorkerStream(source, handler);
	       } else {
	        assert(PDFNetworkStream, 'pdfjs/core/network module is not loaded');
	        pdfStream = new PDFNetworkStream(data);
	       }
	      } catch (ex) {
	       pdfManagerCapability.reject(ex);
	       return pdfManagerCapability.promise;
	      }
	      var fullRequest = pdfStream.getFullReader();
	      fullRequest.headersReady.then(function () {
	       if (!fullRequest.isStreamingSupported || !fullRequest.isRangeSupported) {
	        fullRequest.onProgress = function (evt) {
	         handler.send('DocProgress', {
	          loaded: evt.loaded,
	          total: evt.total
	         });
	        };
	       }
	       if (!fullRequest.isRangeSupported) {
	        return;
	       }
	       var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;
	       pdfManager = new NetworkPdfManager(docId, pdfStream, {
	        msgHandler: handler,
	        url: source.url,
	        password: source.password,
	        length: fullRequest.contentLength,
	        disableAutoFetch: disableAutoFetch,
	        rangeChunkSize: source.rangeChunkSize
	       }, evaluatorOptions, docBaseUrl);
	       pdfManagerCapability.resolve(pdfManager);
	       cancelXHRs = null;
	      }).catch(function (reason) {
	       pdfManagerCapability.reject(reason);
	       cancelXHRs = null;
	      });
	      var cachedChunks = [], loaded = 0;
	      var flushChunks = function () {
	       var pdfFile = arraysToBytes(cachedChunks);
	       if (source.length && pdfFile.length !== source.length) {
	        warn('reported HTTP length is different from actual');
	       }
	       try {
	        pdfManager = new LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);
	        pdfManagerCapability.resolve(pdfManager);
	       } catch (ex) {
	        pdfManagerCapability.reject(ex);
	       }
	       cachedChunks = [];
	      };
	      var readPromise = new Promise(function (resolve, reject) {
	       var readChunk = function (chunk) {
	        try {
	         ensureNotTerminated();
	         if (chunk.done) {
	          if (!pdfManager) {
	           flushChunks();
	          }
	          cancelXHRs = null;
	          return;
	         }
	         var data = chunk.value;
	         loaded += arrayByteLength(data);
	         if (!fullRequest.isStreamingSupported) {
	          handler.send('DocProgress', {
	           loaded: loaded,
	           total: Math.max(loaded, fullRequest.contentLength || 0)
	          });
	         }
	         if (pdfManager) {
	          pdfManager.sendProgressiveData(data);
	         } else {
	          cachedChunks.push(data);
	         }
	         fullRequest.read().then(readChunk, reject);
	        } catch (e) {
	         reject(e);
	        }
	       };
	       fullRequest.read().then(readChunk, reject);
	      });
	      readPromise.catch(function (e) {
	       pdfManagerCapability.reject(e);
	       cancelXHRs = null;
	      });
	      cancelXHRs = function () {
	       pdfStream.cancelAllRequests('abort');
	      };
	      return pdfManagerCapability.promise;
	     }
	     function setupDoc(data) {
	      function onSuccess(doc) {
	       ensureNotTerminated();
	       handler.send('GetDoc', { pdfInfo: doc });
	      }
	      function onFailure(e) {
	       if (e instanceof PasswordException) {
	        var task = new WorkerTask('PasswordException: response ' + e.code);
	        startWorkerTask(task);
	        handler.sendWithPromise('PasswordRequest', e).then(function (data) {
	         finishWorkerTask(task);
	         pdfManager.updatePassword(data.password);
	         pdfManagerReady();
	        }).catch(function (ex) {
	         finishWorkerTask(task);
	         handler.send('PasswordException', ex);
	        }.bind(null, e));
	       } else if (e instanceof InvalidPDFException) {
	        handler.send('InvalidPDF', e);
	       } else if (e instanceof MissingPDFException) {
	        handler.send('MissingPDF', e);
	       } else if (e instanceof UnexpectedResponseException) {
	        handler.send('UnexpectedResponse', e);
	       } else {
	        handler.send('UnknownError', new UnknownErrorException(e.message, e.toString()));
	       }
	      }
	      function pdfManagerReady() {
	       ensureNotTerminated();
	       loadDocument(false).then(onSuccess, function loadFailure(ex) {
	        ensureNotTerminated();
	        if (!(ex instanceof XRefParseException)) {
	         onFailure(ex);
	         return;
	        }
	        pdfManager.requestLoadedStream();
	        pdfManager.onLoadedStream().then(function () {
	         ensureNotTerminated();
	         loadDocument(true).then(onSuccess, onFailure);
	        });
	       }, onFailure);
	      }
	      ensureNotTerminated();
	      var cMapOptions = {
	       url: data.cMapUrl === undefined ? null : data.cMapUrl,
	       packed: data.cMapPacked === true
	      };
	      var evaluatorOptions = {
	       forceDataSchema: data.disableCreateObjectURL,
	       maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,
	       disableFontFace: data.disableFontFace,
	       cMapOptions: cMapOptions
	      };
	      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {
	       if (terminated) {
	        newPdfManager.terminate();
	        throw new Error('Worker was terminated');
	       }
	       pdfManager = newPdfManager;
	       handler.send('PDFManagerReady', null);
	       pdfManager.onLoadedStream().then(function (stream) {
	        handler.send('DataLoaded', { length: stream.bytes.byteLength });
	       });
	      }).then(pdfManagerReady, onFailure);
	     }
	     handler.on('GetPage', function wphSetupGetPage(data) {
	      return pdfManager.getPage(data.pageIndex).then(function (page) {
	       var rotatePromise = pdfManager.ensure(page, 'rotate');
	       var refPromise = pdfManager.ensure(page, 'ref');
	       var userUnitPromise = pdfManager.ensure(page, 'userUnit');
	       var viewPromise = pdfManager.ensure(page, 'view');
	       return Promise.all([
	        rotatePromise,
	        refPromise,
	        userUnitPromise,
	        viewPromise
	       ]).then(function (results) {
	        return {
	         rotate: results[0],
	         ref: results[1],
	         userUnit: results[2],
	         view: results[3]
	        };
	       });
	      });
	     });
	     handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {
	      var ref = new Ref(data.ref.num, data.ref.gen);
	      var catalog = pdfManager.pdfDocument.catalog;
	      return catalog.getPageIndex(ref);
	     });
	     handler.on('GetDestinations', function wphSetupGetDestinations(data) {
	      return pdfManager.ensureCatalog('destinations');
	     });
	     handler.on('GetDestination', function wphSetupGetDestination(data) {
	      return pdfManager.ensureCatalog('getDestination', [data.id]);
	     });
	     handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {
	      return pdfManager.ensureCatalog('pageLabels');
	     });
	     handler.on('GetAttachments', function wphSetupGetAttachments(data) {
	      return pdfManager.ensureCatalog('attachments');
	     });
	     handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {
	      return pdfManager.ensureCatalog('javaScript');
	     });
	     handler.on('GetOutline', function wphSetupGetOutline(data) {
	      return pdfManager.ensureCatalog('documentOutline');
	     });
	     handler.on('GetMetadata', function wphSetupGetMetadata(data) {
	      return Promise.all([
	       pdfManager.ensureDoc('documentInfo'),
	       pdfManager.ensureCatalog('metadata')
	      ]);
	     });
	     handler.on('GetData', function wphSetupGetData(data) {
	      pdfManager.requestLoadedStream();
	      return pdfManager.onLoadedStream().then(function (stream) {
	       return stream.bytes;
	      });
	     });
	     handler.on('GetStats', function wphSetupGetStats(data) {
	      return pdfManager.pdfDocument.xref.stats;
	     });
	     handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {
	      return pdfManager.getPage(data.pageIndex).then(function (page) {
	       return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);
	      });
	     });
	     handler.on('RenderPageRequest', function wphSetupRenderPage(data) {
	      var pageIndex = data.pageIndex;
	      pdfManager.getPage(pageIndex).then(function (page) {
	       var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);
	       startWorkerTask(task);
	       var pageNum = pageIndex + 1;
	       var start = Date.now();
	       page.getOperatorList(handler, task, data.intent, data.renderInteractiveForms).then(function (operatorList) {
	        finishWorkerTask(task);
	        info('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);
	       }, function (e) {
	        finishWorkerTask(task);
	        if (task.terminated) {
	         return;
	        }
	        handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.unknown });
	        var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';
	        var wrappedException;
	        if (typeof e === 'string') {
	         wrappedException = {
	          message: e,
	          stack: minimumStackMessage
	         };
	        } else if (typeof e === 'object') {
	         wrappedException = {
	          message: e.message || e.toString(),
	          stack: e.stack || minimumStackMessage
	         };
	        } else {
	         wrappedException = {
	          message: 'Unknown exception type: ' + typeof e,
	          stack: minimumStackMessage
	         };
	        }
	        handler.send('PageError', {
	         pageNum: pageNum,
	         error: wrappedException,
	         intent: data.intent
	        });
	       });
	      });
	     }, this);
	     handler.on('GetTextContent', function wphExtractText(data) {
	      var pageIndex = data.pageIndex;
	      var normalizeWhitespace = data.normalizeWhitespace;
	      var combineTextItems = data.combineTextItems;
	      return pdfManager.getPage(pageIndex).then(function (page) {
	       var task = new WorkerTask('GetTextContent: page ' + pageIndex);
	       startWorkerTask(task);
	       var pageNum = pageIndex + 1;
	       var start = Date.now();
	       return page.extractTextContent(task, normalizeWhitespace, combineTextItems).then(function (textContent) {
	        finishWorkerTask(task);
	        info('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');
	        return textContent;
	       }, function (reason) {
	        finishWorkerTask(task);
	        if (task.terminated) {
	         return;
	        }
	        throw reason;
	       });
	      });
	     });
	     handler.on('Cleanup', function wphCleanup(data) {
	      return pdfManager.cleanup();
	     });
	     handler.on('Terminate', function wphTerminate(data) {
	      terminated = true;
	      if (pdfManager) {
	       pdfManager.terminate();
	       pdfManager = null;
	      }
	      if (cancelXHRs) {
	       cancelXHRs();
	      }
	      var waitOn = [];
	      WorkerTasks.forEach(function (task) {
	       waitOn.push(task.finished);
	       task.terminate();
	      });
	      return Promise.all(waitOn).then(function () {
	       handler.destroy();
	       handler = null;
	      });
	     });
	     handler.on('Ready', function wphReady(data) {
	      setupDoc(docParams);
	      docParams = null;
	     });
	     return workerHandlerName;
	    }
	   };
	   function initializeWorker() {
	    if (!('console' in globalScope)) {
	     var consoleTimer = {};
	     var workerConsole = {
	      log: function log() {
	       var args = Array.prototype.slice.call(arguments);
	       globalScope.postMessage({
	        targetName: 'main',
	        action: 'console_log',
	        data: args
	       });
	      },
	      error: function error() {
	       var args = Array.prototype.slice.call(arguments);
	       globalScope.postMessage({
	        targetName: 'main',
	        action: 'console_error',
	        data: args
	       });
	       throw 'pdf.js execution error';
	      },
	      time: function time(name) {
	       consoleTimer[name] = Date.now();
	      },
	      timeEnd: function timeEnd(name) {
	       var time = consoleTimer[name];
	       if (!time) {
	        error('Unknown timer name ' + name);
	       }
	       this.log('Timer:', name, Date.now() - time);
	      }
	     };
	     globalScope.console = workerConsole;
	    }
	    var handler = new MessageHandler('worker', 'main', self);
	    WorkerMessageHandler.setup(handler, self);
	    handler.send('ready', null);
	   }
	   if (typeof window === 'undefined' && !(typeof module !== 'undefined' && module.require)) {
	    initializeWorker();
	   }
	   exports.setPDFNetworkStreamClass = setPDFNetworkStreamClass;
	   exports.WorkerTask = WorkerTask;
	   exports.WorkerMessageHandler = WorkerMessageHandler;
	  }));
	  (function (root, factory) {
	   factory(root.pdfjsCoreNetwork = {}, root.pdfjsSharedUtil, root.pdfjsCoreWorker);
	  }(this, function (exports, sharedUtil, coreWorker) {
	   var OK_RESPONSE = 200;
	   var PARTIAL_CONTENT_RESPONSE = 206;
	   function NetworkManager(url, args) {
	    this.url = url;
	    args = args || {};
	    this.isHttp = /^https?:/i.test(url);
	    this.httpHeaders = this.isHttp && args.httpHeaders || {};
	    this.withCredentials = args.withCredentials || false;
	    this.getXhr = args.getXhr || function NetworkManager_getXhr() {
	     return new XMLHttpRequest();
	    };
	    this.currXhrId = 0;
	    this.pendingRequests = Object.create(null);
	    this.loadedRequests = Object.create(null);
	   }
	   function getArrayBuffer(xhr) {
	    var data = xhr.response;
	    if (typeof data !== 'string') {
	     return data;
	    }
	    var length = data.length;
	    var array = new Uint8Array(length);
	    for (var i = 0; i < length; i++) {
	     array[i] = data.charCodeAt(i) & 0xFF;
	    }
	    return array.buffer;
	   }
	   var supportsMozChunked = function supportsMozChunkedClosure() {
	    try {
	     var x = new XMLHttpRequest();
	     x.open('GET', 'https://example.com');
	     x.responseType = 'moz-chunked-arraybuffer';
	     return x.responseType === 'moz-chunked-arraybuffer';
	    } catch (e) {
	     return false;
	    }
	   }();
	   NetworkManager.prototype = {
	    requestRange: function NetworkManager_requestRange(begin, end, listeners) {
	     var args = {
	      begin: begin,
	      end: end
	     };
	     for (var prop in listeners) {
	      args[prop] = listeners[prop];
	     }
	     return this.request(args);
	    },
	    requestFull: function NetworkManager_requestFull(listeners) {
	     return this.request(listeners);
	    },
	    request: function NetworkManager_request(args) {
	     var xhr = this.getXhr();
	     var xhrId = this.currXhrId++;
	     var pendingRequest = this.pendingRequests[xhrId] = { xhr: xhr };
	     xhr.open('GET', this.url);
	     xhr.withCredentials = this.withCredentials;
	     for (var property in this.httpHeaders) {
	      var value = this.httpHeaders[property];
	      if (typeof value === 'undefined') {
	       continue;
	      }
	      xhr.setRequestHeader(property, value);
	     }
	     if (this.isHttp && 'begin' in args && 'end' in args) {
	      var rangeStr = args.begin + '-' + (args.end - 1);
	      xhr.setRequestHeader('Range', 'bytes=' + rangeStr);
	      pendingRequest.expectedStatus = 206;
	     } else {
	      pendingRequest.expectedStatus = 200;
	     }
	     var useMozChunkedLoading = supportsMozChunked && !!args.onProgressiveData;
	     if (useMozChunkedLoading) {
	      xhr.responseType = 'moz-chunked-arraybuffer';
	      pendingRequest.onProgressiveData = args.onProgressiveData;
	      pendingRequest.mozChunked = true;
	     } else {
	      xhr.responseType = 'arraybuffer';
	     }
	     if (args.onError) {
	      xhr.onerror = function (evt) {
	       args.onError(xhr.status);
	      };
	     }
	     xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);
	     xhr.onprogress = this.onProgress.bind(this, xhrId);
	     pendingRequest.onHeadersReceived = args.onHeadersReceived;
	     pendingRequest.onDone = args.onDone;
	     pendingRequest.onError = args.onError;
	     pendingRequest.onProgress = args.onProgress;
	     xhr.send(null);
	     return xhrId;
	    },
	    onProgress: function NetworkManager_onProgress(xhrId, evt) {
	     var pendingRequest = this.pendingRequests[xhrId];
	     if (!pendingRequest) {
	      return;
	     }
	     if (pendingRequest.mozChunked) {
	      var chunk = getArrayBuffer(pendingRequest.xhr);
	      pendingRequest.onProgressiveData(chunk);
	     }
	     var onProgress = pendingRequest.onProgress;
	     if (onProgress) {
	      onProgress(evt);
	     }
	    },
	    onStateChange: function NetworkManager_onStateChange(xhrId, evt) {
	     var pendingRequest = this.pendingRequests[xhrId];
	     if (!pendingRequest) {
	      return;
	     }
	     var xhr = pendingRequest.xhr;
	     if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {
	      pendingRequest.onHeadersReceived();
	      delete pendingRequest.onHeadersReceived;
	     }
	     if (xhr.readyState !== 4) {
	      return;
	     }
	     if (!(xhrId in this.pendingRequests)) {
	      return;
	     }
	     delete this.pendingRequests[xhrId];
	     if (xhr.status === 0 && this.isHttp) {
	      if (pendingRequest.onError) {
	       pendingRequest.onError(xhr.status);
	      }
	      return;
	     }
	     var xhrStatus = xhr.status || OK_RESPONSE;
	     var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;
	     if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {
	      if (pendingRequest.onError) {
	       pendingRequest.onError(xhr.status);
	      }
	      return;
	     }
	     this.loadedRequests[xhrId] = true;
	     var chunk = getArrayBuffer(xhr);
	     if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {
	      var rangeHeader = xhr.getResponseHeader('Content-Range');
	      var matches = /bytes (\d+)-(\d+)\/(\d+)/.exec(rangeHeader);
	      var begin = parseInt(matches[1], 10);
	      pendingRequest.onDone({
	       begin: begin,
	       chunk: chunk
	      });
	     } else if (pendingRequest.onProgressiveData) {
	      pendingRequest.onDone(null);
	     } else if (chunk) {
	      pendingRequest.onDone({
	       begin: 0,
	       chunk: chunk
	      });
	     } else if (pendingRequest.onError) {
	      pendingRequest.onError(xhr.status);
	     }
	    },
	    hasPendingRequests: function NetworkManager_hasPendingRequests() {
	     for (var xhrId in this.pendingRequests) {
	      return true;
	     }
	     return false;
	    },
	    getRequestXhr: function NetworkManager_getXhr(xhrId) {
	     return this.pendingRequests[xhrId].xhr;
	    },
	    isStreamingRequest: function NetworkManager_isStreamingRequest(xhrId) {
	     return !!this.pendingRequests[xhrId].onProgressiveData;
	    },
	    isPendingRequest: function NetworkManager_isPendingRequest(xhrId) {
	     return xhrId in this.pendingRequests;
	    },
	    isLoadedRequest: function NetworkManager_isLoadedRequest(xhrId) {
	     return xhrId in this.loadedRequests;
	    },
	    abortAllRequests: function NetworkManager_abortAllRequests() {
	     for (var xhrId in this.pendingRequests) {
	      this.abortRequest(xhrId | 0);
	     }
	    },
	    abortRequest: function NetworkManager_abortRequest(xhrId) {
	     var xhr = this.pendingRequests[xhrId].xhr;
	     delete this.pendingRequests[xhrId];
	     xhr.abort();
	    }
	   };
	   var assert = sharedUtil.assert;
	   var createPromiseCapability = sharedUtil.createPromiseCapability;
	   var isInt = sharedUtil.isInt;
	   var MissingPDFException = sharedUtil.MissingPDFException;
	   var UnexpectedResponseException = sharedUtil.UnexpectedResponseException;
	   function PDFNetworkStream(options) {
	    this._options = options;
	    var source = options.source;
	    this._manager = new NetworkManager(source.url, {
	     httpHeaders: source.httpHeaders,
	     withCredentials: source.withCredentials
	    });
	    this._rangeChunkSize = source.rangeChunkSize;
	    this._fullRequestReader = null;
	    this._rangeRequestReaders = [];
	   }
	   PDFNetworkStream.prototype = {
	    _onRangeRequestReaderClosed: function PDFNetworkStream_onRangeRequestReaderClosed(reader) {
	     var i = this._rangeRequestReaders.indexOf(reader);
	     if (i >= 0) {
	      this._rangeRequestReaders.splice(i, 1);
	     }
	    },
	    getFullReader: function PDFNetworkStream_getFullReader() {
	     assert(!this._fullRequestReader);
	     this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._options);
	     return this._fullRequestReader;
	    },
	    getRangeReader: function PDFNetworkStream_getRangeReader(begin, end) {
	     var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);
	     reader.onClosed = this._onRangeRequestReaderClosed.bind(this);
	     this._rangeRequestReaders.push(reader);
	     return reader;
	    },
	    cancelAllRequests: function PDFNetworkStream_cancelAllRequests(reason) {
	     if (this._fullRequestReader) {
	      this._fullRequestReader.cancel(reason);
	     }
	     var readers = this._rangeRequestReaders.slice(0);
	     readers.forEach(function (reader) {
	      reader.cancel(reason);
	     });
	    }
	   };
	   function PDFNetworkStreamFullRequestReader(manager, options) {
	    this._manager = manager;
	    var source = options.source;
	    var args = {
	     onHeadersReceived: this._onHeadersReceived.bind(this),
	     onProgressiveData: source.disableStream ? null : this._onProgressiveData.bind(this),
	     onDone: this._onDone.bind(this),
	     onError: this._onError.bind(this),
	     onProgress: this._onProgress.bind(this)
	    };
	    this._url = source.url;
	    this._fullRequestId = manager.requestFull(args);
	    this._headersReceivedCapability = createPromiseCapability();
	    this._disableRange = options.disableRange || false;
	    this._contentLength = source.length;
	    this._rangeChunkSize = source.rangeChunkSize;
	    if (!this._rangeChunkSize && !this._disableRange) {
	     this._disableRange = true;
	    }
	    this._isStreamingSupported = false;
	    this._isRangeSupported = false;
	    this._cachedChunks = [];
	    this._requests = [];
	    this._done = false;
	    this._storedError = undefined;
	    this.onProgress = null;
	   }
	   PDFNetworkStreamFullRequestReader.prototype = {
	    _validateRangeRequestCapabilities: function PDFNetworkStreamFullRequestReader_validateRangeRequestCapabilities() {
	     if (this._disableRange) {
	      return false;
	     }
	     var networkManager = this._manager;
	     if (!networkManager.isHttp) {
	      return false;
	     }
	     var fullRequestXhrId = this._fullRequestId;
	     var fullRequestXhr = networkManager.getRequestXhr(fullRequestXhrId);
	     if (fullRequestXhr.getResponseHeader('Accept-Ranges') !== 'bytes') {
	      return false;
	     }
	     var contentEncoding = fullRequestXhr.getResponseHeader('Content-Encoding') || 'identity';
	     if (contentEncoding !== 'identity') {
	      return false;
	     }
	     var length = fullRequestXhr.getResponseHeader('Content-Length');
	     length = parseInt(length, 10);
	     if (!isInt(length)) {
	      return false;
	     }
	     this._contentLength = length;
	     if (length <= 2 * this._rangeChunkSize) {
	      return false;
	     }
	     return true;
	    },
	    _onHeadersReceived: function PDFNetworkStreamFullRequestReader_onHeadersReceived() {
	     if (this._validateRangeRequestCapabilities()) {
	      this._isRangeSupported = true;
	     }
	     var networkManager = this._manager;
	     var fullRequestXhrId = this._fullRequestId;
	     if (networkManager.isStreamingRequest(fullRequestXhrId)) {
	      this._isStreamingSupported = true;
	     } else if (this._isRangeSupported) {
	      networkManager.abortRequest(fullRequestXhrId);
	     }
	     this._headersReceivedCapability.resolve();
	    },
	    _onProgressiveData: function PDFNetworkStreamFullRequestReader_onProgressiveData(chunk) {
	     if (this._requests.length > 0) {
	      var requestCapability = this._requests.shift();
	      requestCapability.resolve({
	       value: chunk,
	       done: false
	      });
	     } else {
	      this._cachedChunks.push(chunk);
	     }
	    },
	    _onDone: function PDFNetworkStreamFullRequestReader_onDone(args) {
	     if (args) {
	      this._onProgressiveData(args.chunk);
	     }
	     this._done = true;
	     if (this._cachedChunks.length > 0) {
	      return;
	     }
	     this._requests.forEach(function (requestCapability) {
	      requestCapability.resolve({
	       value: undefined,
	       done: true
	      });
	     });
	     this._requests = [];
	    },
	    _onError: function PDFNetworkStreamFullRequestReader_onError(status) {
	     var url = this._url;
	     var exception;
	     if (status === 404 || status === 0 && /^file:/.test(url)) {
	      exception = new MissingPDFException('Missing PDF "' + url + '".');
	     } else {
	      exception = new UnexpectedResponseException('Unexpected server response (' + status + ') while retrieving PDF "' + url + '".', status);
	     }
	     this._storedError = exception;
	     this._headersReceivedCapability.reject(exception);
	     this._requests.forEach(function (requestCapability) {
	      requestCapability.reject(exception);
	     });
	     this._requests = [];
	     this._cachedChunks = [];
	    },
	    _onProgress: function PDFNetworkStreamFullRequestReader_onProgress(data) {
	     if (this.onProgress) {
	      this.onProgress({
	       loaded: data.loaded,
	       total: data.lengthComputable ? data.total : this._contentLength
	      });
	     }
	    },
	    get isRangeSupported() {
	     return this._isRangeSupported;
	    },
	    get isStreamingSupported() {
	     return this._isStreamingSupported;
	    },
	    get contentLength() {
	     return this._contentLength;
	    },
	    get headersReady() {
	     return this._headersReceivedCapability.promise;
	    },
	    read: function PDFNetworkStreamFullRequestReader_read() {
	     if (this._storedError) {
	      return Promise.reject(this._storedError);
	     }
	     if (this._cachedChunks.length > 0) {
	      var chunk = this._cachedChunks.shift();
	      return Promise.resolve(chunk);
	     }
	     if (this._done) {
	      return Promise.resolve({
	       value: undefined,
	       done: true
	      });
	     }
	     var requestCapability = createPromiseCapability();
	     this._requests.push(requestCapability);
	     return requestCapability.promise;
	    },
	    cancel: function PDFNetworkStreamFullRequestReader_cancel(reason) {
	     this._done = true;
	     this._headersReceivedCapability.reject(reason);
	     this._requests.forEach(function (requestCapability) {
	      requestCapability.resolve({
	       value: undefined,
	       done: true
	      });
	     });
	     this._requests = [];
	     if (this._manager.isPendingRequest(this._fullRequestId)) {
	      this._manager.abortRequest(this._fullRequestId);
	     }
	     this._fullRequestReader = null;
	    }
	   };
	   function PDFNetworkStreamRangeRequestReader(manager, begin, end) {
	    this._manager = manager;
	    var args = {
	     onDone: this._onDone.bind(this),
	     onProgress: this._onProgress.bind(this)
	    };
	    this._requestId = manager.requestRange(begin, end, args);
	    this._requests = [];
	    this._queuedChunk = null;
	    this._done = false;
	    this.onProgress = null;
	    this.onClosed = null;
	   }
	   PDFNetworkStreamRangeRequestReader.prototype = {
	    _close: function PDFNetworkStreamRangeRequestReader_close() {
	     if (this.onClosed) {
	      this.onClosed(this);
	     }
	    },
	    _onDone: function PDFNetworkStreamRangeRequestReader_onDone(data) {
	     var chunk = data.chunk;
	     if (this._requests.length > 0) {
	      var requestCapability = this._requests.shift();
	      requestCapability.resolve({
	       value: chunk,
	       done: false
	      });
	     } else {
	      this._queuedChunk = chunk;
	     }
	     this._done = true;
	     this._requests.forEach(function (requestCapability) {
	      requestCapability.resolve({
	       value: undefined,
	       done: true
	      });
	     });
	     this._requests = [];
	     this._close();
	    },
	    _onProgress: function PDFNetworkStreamRangeRequestReader_onProgress(evt) {
	     if (!this.isStreamingSupported && this.onProgress) {
	      this.onProgress({ loaded: evt.loaded });
	     }
	    },
	    get isStreamingSupported() {
	     return false;
	    },
	    read: function PDFNetworkStreamRangeRequestReader_read() {
	     if (this._queuedChunk !== null) {
	      var chunk = this._queuedChunk;
	      this._queuedChunk = null;
	      return Promise.resolve({
	       value: chunk,
	       done: false
	      });
	     }
	     if (this._done) {
	      return Promise.resolve({
	       value: undefined,
	       done: true
	      });
	     }
	     var requestCapability = createPromiseCapability();
	     this._requests.push(requestCapability);
	     return requestCapability.promise;
	    },
	    cancel: function PDFNetworkStreamRangeRequestReader_cancel(reason) {
	     this._done = true;
	     this._requests.forEach(function (requestCapability) {
	      requestCapability.resolve({
	       value: undefined,
	       done: true
	      });
	     });
	     this._requests = [];
	     if (this._manager.isPendingRequest(this._requestId)) {
	      this._manager.abortRequest(this._requestId);
	     }
	     this._close();
	    }
	   };
	   coreWorker.setPDFNetworkStreamClass(PDFNetworkStream);
	   exports.PDFNetworkStream = PDFNetworkStream;
	   exports.NetworkManager = NetworkManager;
	  }));
	 }.call(pdfjsLibs));
	 exports.PDFJS = pdfjsLibs.pdfjsDisplayGlobal.PDFJS;
	 exports.build = pdfjsLibs.pdfjsDisplayAPI.build;
	 exports.version = pdfjsLibs.pdfjsDisplayAPI.version;
	 exports.getDocument = pdfjsLibs.pdfjsDisplayAPI.getDocument;
	 exports.PDFDataRangeTransport = pdfjsLibs.pdfjsDisplayAPI.PDFDataRangeTransport;
	 exports.PDFWorker = pdfjsLibs.pdfjsDisplayAPI.PDFWorker;
	 exports.renderTextLayer = pdfjsLibs.pdfjsDisplayTextLayer.renderTextLayer;
	 exports.AnnotationLayer = pdfjsLibs.pdfjsDisplayAnnotationLayer.AnnotationLayer;
	 exports.CustomStyle = pdfjsLibs.pdfjsDisplayDOMUtils.CustomStyle;
	 exports.PasswordResponses = pdfjsLibs.pdfjsSharedUtil.PasswordResponses;
	 exports.InvalidPDFException = pdfjsLibs.pdfjsSharedUtil.InvalidPDFException;
	 exports.MissingPDFException = pdfjsLibs.pdfjsSharedUtil.MissingPDFException;
	 exports.SVGGraphics = pdfjsLibs.pdfjsDisplaySVG.SVGGraphics;
	 exports.UnexpectedResponseException = pdfjsLibs.pdfjsSharedUtil.UnexpectedResponseException;
	 exports.OPS = pdfjsLibs.pdfjsSharedUtil.OPS;
	 exports.UNSUPPORTED_FEATURES = pdfjsLibs.pdfjsSharedUtil.UNSUPPORTED_FEATURES;
	 exports.isValidUrl = pdfjsLibs.pdfjsDisplayDOMUtils.isValidUrl;
	 exports.createValidAbsoluteUrl = pdfjsLibs.pdfjsSharedUtil.createValidAbsoluteUrl;
	 exports.createObjectURL = pdfjsLibs.pdfjsSharedUtil.createObjectURL;
	 exports.removeNullCharacters = pdfjsLibs.pdfjsSharedUtil.removeNullCharacters;
	 exports.shadow = pdfjsLibs.pdfjsSharedUtil.shadow;
	 exports.createBlob = pdfjsLibs.pdfjsSharedUtil.createBlob;
	 exports.getFilenameFromUrl = pdfjsLibs.pdfjsDisplayDOMUtils.getFilenameFromUrl;
	 exports.addLinkAttributes = pdfjsLibs.pdfjsDisplayDOMUtils.addLinkAttributes;
	}));
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(466)(module)))

/***/ },
/* 466 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 467 */
/***/ function(module, exports) {

	/* Copyright 2012 Mozilla Foundation
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *     http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/* eslint strict: ["error", "function"] */
	/* eslint-disable no-extend-native */
	/* globals VBArray, PDFJS */

	(function compatibilityWrapper() {
	  'use strict';

	var userAgent = navigator.userAgent;

	var isAndroid = /Android/.test(userAgent);
	var isAndroidPre3 = /Android\s[0-2][^\d]/.test(userAgent);
	var isAndroidPre5 = /Android\s[0-4][^\d]/.test(userAgent);
	var isChrome = userAgent.indexOf('Chrom') >= 0;
	var isChromeWithRangeBug = /Chrome\/(39|40)\./.test(userAgent);
	var isIE = userAgent.indexOf('Trident') >= 0;
	var isIOS = /\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);
	var isOpera = userAgent.indexOf('Opera') >= 0;
	var isSafari = /Safari\//.test(userAgent) &&
	               !/(Chrome\/|Android\s)/.test(userAgent);

	// Initializing PDFJS global object here, it case if we need to change/disable
	// some PDF.js features, e.g. range requests
	if (typeof PDFJS === 'undefined') {
	  (typeof window !== 'undefined' ? window : this).PDFJS = {};
	}

	// Checking if the typed arrays are supported
	// Support: iOS<6.0 (subarray), IE<10, Android<4.0
	(function checkTypedArrayCompatibility() {
	  if (typeof Uint8Array !== 'undefined') {
	    // Support: iOS<6.0
	    if (typeof Uint8Array.prototype.subarray === 'undefined') {
	      Uint8Array.prototype.subarray = function subarray(start, end) {
	        return new Uint8Array(this.slice(start, end));
	      };
	      Float32Array.prototype.subarray = function subarray(start, end) {
	        return new Float32Array(this.slice(start, end));
	      };
	    }

	    // Support: Android<4.1
	    if (typeof Float64Array === 'undefined') {
	      window.Float64Array = Float32Array;
	    }
	    return;
	  }

	  function subarray(start, end) {
	    return new TypedArray(this.slice(start, end));
	  }

	  function setArrayOffset(array, offset) {
	    if (arguments.length < 2) {
	      offset = 0;
	    }
	    for (var i = 0, n = array.length; i < n; ++i, ++offset) {
	      this[offset] = array[i] & 0xFF;
	    }
	  }

	  function TypedArray(arg1) {
	    var result, i, n;
	    if (typeof arg1 === 'number') {
	      result = [];
	      for (i = 0; i < arg1; ++i) {
	        result[i] = 0;
	      }
	    } else if ('slice' in arg1) {
	      result = arg1.slice(0);
	    } else {
	      result = [];
	      for (i = 0, n = arg1.length; i < n; ++i) {
	        result[i] = arg1[i];
	      }
	    }

	    result.subarray = subarray;
	    result.buffer = result;
	    result.byteLength = result.length;
	    result.set = setArrayOffset;

	    if (typeof arg1 === 'object' && arg1.buffer) {
	      result.buffer = arg1.buffer;
	    }
	    return result;
	  }

	  window.Uint8Array = TypedArray;
	  window.Int8Array = TypedArray;

	  // we don't need support for set, byteLength for 32-bit array
	  // so we can use the TypedArray as well
	  window.Uint32Array = TypedArray;
	  window.Int32Array = TypedArray;
	  window.Uint16Array = TypedArray;
	  window.Float32Array = TypedArray;
	  window.Float64Array = TypedArray;
	})();

	// URL = URL || webkitURL
	// Support: Safari<7, Android 4.2+
	(function normalizeURLObject() {
	  if (!window.URL) {
	    window.URL = window.webkitURL;
	  }
	})();

	// Object.defineProperty()?
	// Support: Android<4.0, Safari<5.1
	(function checkObjectDefinePropertyCompatibility() {
	  if (typeof Object.defineProperty !== 'undefined') {
	    var definePropertyPossible = true;
	    try {
	      // some browsers (e.g. safari) cannot use defineProperty() on DOM objects
	      // and thus the native version is not sufficient
	      Object.defineProperty(new Image(), 'id', { value: 'test' });
	      // ... another test for android gb browser for non-DOM objects
	      var Test = function Test() {};
	      Test.prototype = { get id() { } };
	      Object.defineProperty(new Test(), 'id',
	        { value: '', configurable: true, enumerable: true, writable: false });
	    } catch (e) {
	      definePropertyPossible = false;
	    }
	    if (definePropertyPossible) {
	      return;
	    }
	  }

	  Object.defineProperty = function objectDefineProperty(obj, name, def) {
	    delete obj[name];
	    if ('get' in def) {
	      obj.__defineGetter__(name, def['get']);
	    }
	    if ('set' in def) {
	      obj.__defineSetter__(name, def['set']);
	    }
	    if ('value' in def) {
	      obj.__defineSetter__(name, function objectDefinePropertySetter(value) {
	        this.__defineGetter__(name, function objectDefinePropertyGetter() {
	          return value;
	        });
	        return value;
	      });
	      obj[name] = def.value;
	    }
	  };
	})();


	// No XMLHttpRequest#response?
	// Support: IE<11, Android <4.0
	(function checkXMLHttpRequestResponseCompatibility() {
	  var xhrPrototype = XMLHttpRequest.prototype;
	  var xhr = new XMLHttpRequest();
	  if (!('overrideMimeType' in xhr)) {
	    // IE10 might have response, but not overrideMimeType
	    // Support: IE10
	    Object.defineProperty(xhrPrototype, 'overrideMimeType', {
	      value: function xmlHttpRequestOverrideMimeType(mimeType) {}
	    });
	  }
	  if ('responseType' in xhr) {
	    return;
	  }

	  // The worker will be using XHR, so we can save time and disable worker.
	  PDFJS.disableWorker = true;

	  Object.defineProperty(xhrPrototype, 'responseType', {
	    get: function xmlHttpRequestGetResponseType() {
	      return this._responseType || 'text';
	    },
	    set: function xmlHttpRequestSetResponseType(value) {
	      if (value === 'text' || value === 'arraybuffer') {
	        this._responseType = value;
	        if (value === 'arraybuffer' &&
	            typeof this.overrideMimeType === 'function') {
	          this.overrideMimeType('text/plain; charset=x-user-defined');
	        }
	      }
	    }
	  });

	  // Support: IE9
	  if (typeof VBArray !== 'undefined') {
	    Object.defineProperty(xhrPrototype, 'response', {
	      get: function xmlHttpRequestResponseGet() {
	        if (this.responseType === 'arraybuffer') {
	          return new Uint8Array(new VBArray(this.responseBody).toArray());
	        }
	        return this.responseText;
	      }
	    });
	    return;
	  }

	  Object.defineProperty(xhrPrototype, 'response', {
	    get: function xmlHttpRequestResponseGet() {
	      if (this.responseType !== 'arraybuffer') {
	        return this.responseText;
	      }
	      var text = this.responseText;
	      var i, n = text.length;
	      var result = new Uint8Array(n);
	      for (i = 0; i < n; ++i) {
	        result[i] = text.charCodeAt(i) & 0xFF;
	      }
	      return result.buffer;
	    }
	  });
	})();

	// window.btoa (base64 encode function) ?
	// Support: IE<10
	(function checkWindowBtoaCompatibility() {
	  if ('btoa' in window) {
	    return;
	  }

	  var digits =
	    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

	  window.btoa = function windowBtoa(chars) {
	    var buffer = '';
	    var i, n;
	    for (i = 0, n = chars.length; i < n; i += 3) {
	      var b1 = chars.charCodeAt(i) & 0xFF;
	      var b2 = chars.charCodeAt(i + 1) & 0xFF;
	      var b3 = chars.charCodeAt(i + 2) & 0xFF;
	      var d1 = b1 >> 2, d2 = ((b1 & 3) << 4) | (b2 >> 4);
	      var d3 = i + 1 < n ? ((b2 & 0xF) << 2) | (b3 >> 6) : 64;
	      var d4 = i + 2 < n ? (b3 & 0x3F) : 64;
	      buffer += (digits.charAt(d1) + digits.charAt(d2) +
	                 digits.charAt(d3) + digits.charAt(d4));
	    }
	    return buffer;
	  };
	})();

	// window.atob (base64 encode function)?
	// Support: IE<10
	(function checkWindowAtobCompatibility() {
	  if ('atob' in window) {
	    return;
	  }

	  // https://github.com/davidchambers/Base64.js
	  var digits =
	    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
	  window.atob = function (input) {
	    input = input.replace(/=+$/, '');
	    if (input.length % 4 === 1) {
	      throw new Error('bad atob input');
	    }
	    for (
	      // initialize result and counters
	      var bc = 0, bs, buffer, idx = 0, output = '';
	      // get next character
	      (buffer = input.charAt(idx++));
	      // character found in table?
	      // initialize bit storage and add its ascii value
	      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,
	        // and if not first of each 4 characters,
	        // convert the first 8 bits to one ascii character
	        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0
	    ) {
	      // try to find character in table (0-63, not found => -1)
	      buffer = digits.indexOf(buffer);
	    }
	    return output;
	  };
	})();

	// Function.prototype.bind?
	// Support: Android<4.0, iOS<6.0
	(function checkFunctionPrototypeBindCompatibility() {
	  if (typeof Function.prototype.bind !== 'undefined') {
	    return;
	  }

	  Function.prototype.bind = function functionPrototypeBind(obj) {
	    var fn = this, headArgs = Array.prototype.slice.call(arguments, 1);
	    var bound = function functionPrototypeBindBound() {
	      var args = headArgs.concat(Array.prototype.slice.call(arguments));
	      return fn.apply(obj, args);
	    };
	    return bound;
	  };
	})();

	// HTMLElement dataset property
	// Support: IE<11, Safari<5.1, Android<4.0
	(function checkDatasetProperty() {
	  var div = document.createElement('div');
	  if ('dataset' in div) {
	    return; // dataset property exists
	  }

	  Object.defineProperty(HTMLElement.prototype, 'dataset', {
	    get: function() {
	      if (this._dataset) {
	        return this._dataset;
	      }

	      var dataset = {};
	      for (var j = 0, jj = this.attributes.length; j < jj; j++) {
	        var attribute = this.attributes[j];
	        if (attribute.name.substring(0, 5) !== 'data-') {
	          continue;
	        }
	        var key = attribute.name.substring(5).replace(/\-([a-z])/g,
	          function(all, ch) {
	            return ch.toUpperCase();
	          });
	        dataset[key] = attribute.value;
	      }

	      Object.defineProperty(this, '_dataset', {
	        value: dataset,
	        writable: false,
	        enumerable: false
	      });
	      return dataset;
	    },
	    enumerable: true
	  });
	})();

	// HTMLElement classList property
	// Support: IE<10, Android<4.0, iOS<5.0
	(function checkClassListProperty() {
	  var div = document.createElement('div');
	  if ('classList' in div) {
	    return; // classList property exists
	  }

	  function changeList(element, itemName, add, remove) {
	    var s = element.className || '';
	    var list = s.split(/\s+/g);
	    if (list[0] === '') {
	      list.shift();
	    }
	    var index = list.indexOf(itemName);
	    if (index < 0 && add) {
	      list.push(itemName);
	    }
	    if (index >= 0 && remove) {
	      list.splice(index, 1);
	    }
	    element.className = list.join(' ');
	    return (index >= 0);
	  }

	  var classListPrototype = {
	    add: function(name) {
	      changeList(this.element, name, true, false);
	    },
	    contains: function(name) {
	      return changeList(this.element, name, false, false);
	    },
	    remove: function(name) {
	      changeList(this.element, name, false, true);
	    },
	    toggle: function(name) {
	      changeList(this.element, name, true, true);
	    }
	  };

	  Object.defineProperty(HTMLElement.prototype, 'classList', {
	    get: function() {
	      if (this._classList) {
	        return this._classList;
	      }

	      var classList = Object.create(classListPrototype, {
	        element: {
	          value: this,
	          writable: false,
	          enumerable: true
	        }
	      });
	      Object.defineProperty(this, '_classList', {
	        value: classList,
	        writable: false,
	        enumerable: false
	      });
	      return classList;
	    },
	    enumerable: true
	  });
	})();

	// Check console compatibility
	// In older IE versions the console object is not available
	// unless console is open.
	// Support: IE<10
	(function checkConsoleCompatibility() {
	  if (!('console' in window)) {
	    window.console = {
	      log: function() {},
	      error: function() {},
	      warn: function() {}
	    };
	  } else if (!('bind' in console.log)) {
	    // native functions in IE9 might not have bind
	    console.log = (function(fn) {
	      return function(msg) { return fn(msg); };
	    })(console.log);
	    console.error = (function(fn) {
	      return function(msg) { return fn(msg); };
	    })(console.error);
	    console.warn = (function(fn) {
	      return function(msg) { return fn(msg); };
	    })(console.warn);
	  }
	})();

	// Check onclick compatibility in Opera
	// Support: Opera<15
	(function checkOnClickCompatibility() {
	  // workaround for reported Opera bug DSK-354448:
	  // onclick fires on disabled buttons with opaque content
	  function ignoreIfTargetDisabled(event) {
	    if (isDisabled(event.target)) {
	      event.stopPropagation();
	    }
	  }
	  function isDisabled(node) {
	    return node.disabled || (node.parentNode && isDisabled(node.parentNode));
	  }
	  if (isOpera) {
	    // use browser detection since we cannot feature-check this bug
	    document.addEventListener('click', ignoreIfTargetDisabled, true);
	  }
	})();

	// Checks if possible to use URL.createObjectURL()
	// Support: IE
	(function checkOnBlobSupport() {
	  // sometimes IE loosing the data created with createObjectURL(), see #3977
	  if (isIE) {
	    PDFJS.disableCreateObjectURL = true;
	  }
	})();

	// Checks if navigator.language is supported
	(function checkNavigatorLanguage() {
	  if ('language' in navigator) {
	    return;
	  }
	  PDFJS.locale = navigator.userLanguage || 'en-US';
	})();

	// Support: Safari 6.0+, Android<3.0, Chrome 39/40, iOS
	(function checkRangeRequests() {
	  // Safari has issues with cached range requests see:
	  // https://github.com/mozilla/pdf.js/issues/3260
	  // Last tested with version 6.0.4.

	  // Older versions of Android (pre 3.0) has issues with range requests, see:
	  // https://github.com/mozilla/pdf.js/issues/3381.
	  // Make sure that we only match webkit-based Android browsers,
	  // since Firefox/Fennec works as expected.

	  // Range requests are broken in Chrome 39 and 40, https://crbug.com/442318
	  if (isSafari || isAndroidPre3 || isChromeWithRangeBug || isIOS) {
	    PDFJS.disableRange = true;
	    PDFJS.disableStream = true;
	  }
	})();

	// Check if the browser supports manipulation of the history.
	// Support: IE<10, Android<4.2
	(function checkHistoryManipulation() {
	  // Android 2.x has so buggy pushState support that it was removed in
	  // Android 3.0 and restored as late as in Android 4.2.
	  // Support: Android 2.x
	  if (!history.pushState || isAndroidPre3) {
	    PDFJS.disableHistory = true;
	  }
	})();

	// Support: IE<11, Chrome<21, Android<4.4, Safari<6
	(function checkSetPresenceInImageData() {
	  // IE < 11 will use window.CanvasPixelArray which lacks set function.
	  if (window.CanvasPixelArray) {
	    if (typeof window.CanvasPixelArray.prototype.set !== 'function') {
	      window.CanvasPixelArray.prototype.set = function(arr) {
	        for (var i = 0, ii = this.length; i < ii; i++) {
	          this[i] = arr[i];
	        }
	      };
	    }
	  } else {
	    // Old Chrome and Android use an inaccessible CanvasPixelArray prototype.
	    // Because we cannot feature detect it, we rely on user agent parsing.
	    var polyfill = false, versionMatch;
	    if (isChrome) {
	      versionMatch = userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);
	      // Chrome < 21 lacks the set function.
	      polyfill = versionMatch && parseInt(versionMatch[2]) < 21;
	    } else if (isAndroid) {
	      // Android < 4.4 lacks the set function.
	      // Android >= 4.4 will contain Chrome in the user agent,
	      // thus pass the Chrome check above and not reach this block.
	      polyfill = isAndroidPre5;
	    } else if (isSafari) {
	      versionMatch = userAgent.
	        match(/Version\/([0-9]+)\.([0-9]+)\.([0-9]+) Safari\//);
	      // Safari < 6 lacks the set function.
	      polyfill = versionMatch && parseInt(versionMatch[1]) < 6;
	    }

	    if (polyfill) {
	      var contextPrototype = window.CanvasRenderingContext2D.prototype;
	      var createImageData = contextPrototype.createImageData;
	      contextPrototype.createImageData = function(w, h) {
	        var imageData = createImageData.call(this, w, h);
	        imageData.data.set = function(arr) {
	          for (var i = 0, ii = this.length; i < ii; i++) {
	            this[i] = arr[i];
	          }
	        };
	        return imageData;
	      };
	      // this closure will be kept referenced, so clear its vars
	      contextPrototype = null;
	    }
	  }
	})();

	// Support: IE<10, Android<4.0, iOS
	(function checkRequestAnimationFrame() {
	  function fakeRequestAnimationFrame(callback) {
	    window.setTimeout(callback, 20);
	  }

	  if (isIOS) {
	    // requestAnimationFrame on iOS is broken, replacing with fake one.
	    window.requestAnimationFrame = fakeRequestAnimationFrame;
	    return;
	  }
	  if ('requestAnimationFrame' in window) {
	    return;
	  }
	  window.requestAnimationFrame =
	    window.mozRequestAnimationFrame ||
	    window.webkitRequestAnimationFrame ||
	    fakeRequestAnimationFrame;
	})();

	// Support: Android, iOS
	(function checkCanvasSizeLimitation() {
	  if (isIOS || isAndroid) {
	    // 5MP
	    PDFJS.maxCanvasPixels = 5242880;
	  }
	})();

	// Disable fullscreen support for certain problematic configurations.
	// Support: IE11+ (when embedded).
	(function checkFullscreenSupport() {
	  if (isIE && window.parent !== window) {
	    PDFJS.disableFullscreen = true;
	  }
	})();

	// Provides document.currentScript support
	// Support: IE, Chrome<29.
	(function checkCurrentScript() {
	  if ('currentScript' in document) {
	    return;
	  }
	  Object.defineProperty(document, 'currentScript', {
	    get: function () {
	      var scripts = document.getElementsByTagName('script');
	      return scripts[scripts.length - 1];
	    },
	    enumerable: true,
	    configurable: true
	  });
	})();

	// Provides `input.type = 'type'` runtime failure protection.
	// Support: IE9,10.
	(function checkInputTypeNumberAssign() {
	  var el = document.createElement('input');
	  try {
	    el.type = 'number';
	  } catch (ex) {
	    var inputProto = el.constructor.prototype;
	    var typeProperty = Object.getOwnPropertyDescriptor(inputProto, 'type');
	    Object.defineProperty(inputProto, 'type', {
	      get: function () { return typeProperty.get.call(this); },
	      set: function (value) {
	        typeProperty.set.call(this, value === 'number' ? 'text' : value);
	      },
	      enumerable: true,
	      configurable: true
	    });
	  }
	})();

	// Provides correct document.readyState value for legacy browsers.
	// Support: IE9,10.
	(function checkDocumentReadyState() {
	  if (!document.attachEvent) {
	    return;
	  }
	  var documentProto = document.constructor.prototype;
	  var readyStateProto = Object.getOwnPropertyDescriptor(documentProto,
	                                                        'readyState');
	  Object.defineProperty(documentProto, 'readyState', {
	    get: function () {
	      var value = readyStateProto.get.call(this);
	      return value === 'interactive' ? 'loading' : value;
	    },
	    set: function (value) { readyStateProto.set.call(this, value); },
	    enumerable: true,
	    configurable: true
	  });
	})();

	}).call((typeof window === 'undefined') ? this : window);


/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ComingSoonComponent = function (_React$Component) {
	    _inherits(ComingSoonComponent, _React$Component);

	    function ComingSoonComponent() {
	        _classCallCheck(this, ComingSoonComponent);

	        return _possibleConstructorReturn(this, (ComingSoonComponent.__proto__ || Object.getPrototypeOf(ComingSoonComponent)).apply(this, arguments));
	    }

	    _createClass(ComingSoonComponent, [{
	        key: "render",
	        value: function render() {
	            var backgroundStyle = {
	                width: "100%",
	                height: "100%",
	                backgroundColor: 'gray'
	            };
	            return _react2.default.createElement(
	                "div",
	                { style: backgroundStyle },
	                _react2.default.createElement(
	                    "div",
	                    { style: { width: '100%', height: '200' } },
	                    _react2.default.createElement(
	                        "h1",
	                        { style: { color: 'white', display: 'table-cell', verticalAlign: 'middle', textAlign: 'center' } },
	                        "Details Coming Soon..."
	                    )
	                ),
	                _react2.default.createElement("img", { src: this.props.logoPath, style: { width: '200', height: '200' } })
	            );
	        }
	    }]);

	    return ComingSoonComponent;
	}(_react2.default.Component);

	exports.default = ComingSoonComponent;

/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _mobile_development_cover = __webpack_require__(470);

	var _mobile_development_cover2 = _interopRequireDefault(_mobile_development_cover);

	var _audio_development_cover = __webpack_require__(472);

	var _audio_development_cover2 = _interopRequireDefault(_audio_development_cover);

	var _web_development_cover = __webpack_require__(474);

	var _web_development_cover2 = _interopRequireDefault(_web_development_cover);

	var _phone = __webpack_require__(483);

	var _phone2 = _interopRequireDefault(_phone);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var DevCoverComponent = function (_React$Component) {
	  _inherits(DevCoverComponent, _React$Component);

	  function DevCoverComponent() {
	    _classCallCheck(this, DevCoverComponent);

	    return _possibleConstructorReturn(this, (DevCoverComponent.__proto__ || Object.getPrototypeOf(DevCoverComponent)).apply(this, arguments));
	  }

	  _createClass(DevCoverComponent, [{
	    key: 'renderCover',
	    value: function renderCover() {
	      if (this.props.currentRoute == '/mobile-development') {
	        return _react2.default.createElement(
	          'div',
	          { className: _mobile_development_cover2.default.mobile_development_cover },
	          _react2.default.createElement(
	            'div',
	            { className: _mobile_development_cover2.default.mobile_development_title },
	            'MOBILE'
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: _mobile_development_cover2.default.mobile_development_content },
	            _react2.default.createElement('img', { src: _phone2.default, style: { width: '100', height: '100' } })
	          )
	        );
	      } else if (this.props.currentRoute == '/web-development') {
	        return _react2.default.createElement(
	          'div',
	          { className: _web_development_cover2.default.web_development_cover },
	          _react2.default.createElement(
	            'div',
	            { className: _web_development_cover2.default.web_development_title },
	            'WEB'
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: _web_development_cover2.default.web_development_content },
	            "< / >",
	            ' '
	          )
	        );
	      } else {
	        return _react2.default.createElement(
	          'div',
	          { className: _audio_development_cover2.default.audio_development_cover },
	          _react2.default.createElement(
	            'div',
	            { className: _audio_development_cover2.default.audio_development_title },
	            'AUDIO'
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: _audio_development_cover2.default.audio_development_content },
	            'VST/AU '
	          )
	        );
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var backgroundStyle = {
	        width: "100%",
	        height: "100%"
	      };
	      return _react2.default.createElement(
	        'div',
	        { style: backgroundStyle },
	        this.renderCover()
	      );
	    }
	  }]);

	  return DevCoverComponent;
	}(_react2.default.Component);

	exports.default = DevCoverComponent;

/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(471);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(235)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js?modules=true&localIdentName=[name]__[local]___[hash:base64:5]!./mobile_development_cover.css", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js?modules=true&localIdentName=[name]__[local]___[hash:base64:5]!./mobile_development_cover.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(234)();
	// imports


	// module
	exports.push([module.id, ".mobile_development_cover__mobile_development_cover___38pgd {\n  width: 100%;\n  height: 100%;\n  overflow: visible;\n  opacity: 1;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  background: #67A07F;\n  background-size: auto;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 0px;\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-bottom: 0px;\n  margin-top: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 0px solid #000;\n  border-left: 0px solid #000;\n  border-right: 0px solid #000;\n  border-bottom: 0px solid #000;\n  border-radius: 0px 0px 0px 0px;\n  font-family: inherit;\n  color: #000;\n  font-size: inherit;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: inherit;\n  font-style: inherit;\n  text-align: inherit;\n  text-decoration: inherit;\n  text-transform: inherit;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.mobile_development_cover__mobile_development_cover___38pgd:hover {\n}\n\n.mobile_development_cover__mobile_development_cover___38pgd:active {\n}\n\n.mobile_development_cover__mobile_development_cover___38pgd:focus {\n}\n\n.mobile_development_cover__mobile_development_title___bUScb {\n  width: auto;\n  height: auto;\n  overflow: visible;\n  opacity: 0.75;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 10px;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 30px;\n  margin-top: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 0px solid #000;\n  border-left: 0px solid #000;\n  border-right: 0px solid #000;\n  border-bottom: 0px solid #000;\n  border-radius: 0px 0px 0px 0px;\n  font-family: inherit;\n  color: #39D9D4;\n  font-size: 45px;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: bold;\n  font-style: normal;\n  text-align: center;\n  text-decoration: inherit;\n  text-transform: uppercase;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.mobile_development_cover__mobile_development_title___bUScb:hover {\n}\n\n.mobile_development_cover__mobile_development_title___bUScb:active {\n}\n\n.mobile_development_cover__mobile_development_title___bUScb:focus {\n}\n\n.mobile_development_cover__mobile_development_content___25xJi {\n  width: auto;\n  height: auto;\n  overflow: visible;\n  opacity: 1;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 10px;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 20px;\n  margin-top: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 0px solid #000;\n  border-left: 0px solid #000;\n  border-right: 0px solid #000;\n  border-bottom: 0px solid #000;\n  border-radius: 0px 0px 0px 0px;\n  font-family: inherit;\n  color: #8AD7DC;\n  font-size: 30px;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: inherit;\n  font-style: inherit;\n  text-align: center;\n  text-decoration: inherit;\n  text-transform: inherit;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.mobile_development_cover__mobile_development_content___25xJi:hover {\n}\n\n.mobile_development_cover__mobile_development_content___25xJi:active {\n}\n\n.mobile_development_cover__mobile_development_content___25xJi:focus {\n} \nbody { margin: 0; }", ""]);

	// exports
	exports.locals = {
		"mobile_development_cover": "mobile_development_cover__mobile_development_cover___38pgd",
		"mobile_development_title": "mobile_development_cover__mobile_development_title___bUScb",
		"mobile_development_content": "mobile_development_cover__mobile_development_content___25xJi"
	};

/***/ },
/* 472 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(473);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(235)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js?modules=true&localIdentName=[name]__[local]___[hash:base64:5]!./audio_development_cover.css", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js?modules=true&localIdentName=[name]__[local]___[hash:base64:5]!./audio_development_cover.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(234)();
	// imports


	// module
	exports.push([module.id, ".audio_development_cover__audio_development_cover___q3flf {\n  width: 100%;\n  height: 100%;\n  overflow: visible;\n  opacity: 1;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  background: #A08367;\n  background-size: auto;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 0px;\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-bottom: 0px;\n  margin-top: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 0px solid #000;\n  border-left: 0px solid #000;\n  border-right: 0px solid #000;\n  border-bottom: 0px solid #000;\n  border-radius: 0px 0px 0px 0px;\n  font-family: inherit;\n  color: #000;\n  font-size: inherit;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: inherit;\n  font-style: inherit;\n  text-align: inherit;\n  text-decoration: inherit;\n  text-transform: inherit;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.audio_development_cover__audio_development_cover___q3flf:hover {\n}\n\n.audio_development_cover__audio_development_cover___q3flf:active {\n}\n\n.audio_development_cover__audio_development_cover___q3flf:focus {\n}\n\n.audio_development_cover__audio_development_title___n1OvA {\n  width: auto;\n  height: auto;\n  overflow: visible;\n  opacity: 0.75;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 10px;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 30px;\n  margin-top: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 0px solid #000;\n  border-left: 0px solid #000;\n  border-right: 0px solid #000;\n  border-bottom: 0px solid #000;\n  border-radius: 0px 0px 0px 0px;\n  font-family: inherit;\n  color: #D39851;\n  font-size: 50px;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: bold;\n  font-style: normal;\n  text-align: center;\n  text-decoration: inherit;\n  text-transform: uppercase;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.audio_development_cover__audio_development_title___n1OvA:hover {\n}\n\n.audio_development_cover__audio_development_title___n1OvA:active {\n}\n\n.audio_development_cover__audio_development_title___n1OvA:focus {\n}\n\n.audio_development_cover__audio_development_content___2R0EP {\n  width: auto;\n  height: auto;\n  overflow: visible;\n  opacity: 1;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 10px;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 20px;\n  margin-top: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 0px solid #000;\n  border-left: 0px solid #000;\n  border-right: 0px solid #000;\n  border-bottom: 0px solid #000;\n  border-radius: 0px 0px 0px 0px;\n  font-family: inherit;\n  color: #C8B09B;\n  font-size: 25px;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: inherit;\n  font-style: inherit;\n  text-align: center;\n  text-decoration: inherit;\n  text-transform: inherit;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.audio_development_cover__audio_development_content___2R0EP:hover {\n}\n\n.audio_development_cover__audio_development_content___2R0EP:active {\n}\n\n.audio_development_cover__audio_development_content___2R0EP:focus {\n} \nbody { margin: 0; }", ""]);

	// exports
	exports.locals = {
		"audio_development_cover": "audio_development_cover__audio_development_cover___q3flf",
		"audio_development_title": "audio_development_cover__audio_development_title___n1OvA",
		"audio_development_content": "audio_development_cover__audio_development_content___2R0EP"
	};

/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(475);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(235)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js?modules=true&localIdentName=[name]__[local]___[hash:base64:5]!./web_development_cover.css", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js?modules=true&localIdentName=[name]__[local]___[hash:base64:5]!./web_development_cover.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(234)();
	// imports


	// module
	exports.push([module.id, ".web_development_cover__web_development_cover___14cZW {\n  width: 100%;\n  height: 100%;\n  overflow: visible;\n  opacity: 1;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  background: #77A067;\n  background-size: auto;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 0px;\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-bottom: 0px;\n  margin-top: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 0px solid #000;\n  border-left: 0px solid #000;\n  border-right: 0px solid #000;\n  border-bottom: 0px solid #000;\n  border-radius: 0px 0px 0px 0px;\n  font-family: inherit;\n  color: #000;\n  font-size: inherit;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: inherit;\n  font-style: inherit;\n  text-align: inherit;\n  text-decoration: inherit;\n  text-transform: inherit;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.web_development_cover__web_development_cover___14cZW:hover {\n}\n\n.web_development_cover__web_development_cover___14cZW:active {\n}\n\n.web_development_cover__web_development_cover___14cZW:focus {\n}\n\n.web_development_cover__web_development_title___3-6ce {\n  width: auto;\n  height: auto;\n  overflow: visible;\n  opacity: 0.75;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 10px;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 30px;\n  margin-top: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 0px solid #000;\n  border-left: 0px solid #000;\n  border-right: 0px solid #000;\n  border-bottom: 0px solid #000;\n  border-radius: 0px 0px 0px 0px;\n  font-family: inherit;\n  color: #50D95B;\n  font-size: 50px;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: bold;\n  font-style: normal;\n  text-align: center;\n  text-decoration: inherit;\n  text-transform: uppercase;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.web_development_cover__web_development_title___3-6ce:hover {\n}\n\n.web_development_cover__web_development_title___3-6ce:active {\n}\n\n.web_development_cover__web_development_title___3-6ce:focus {\n}\n\n.web_development_cover__web_development_content___1a_gs {\n  width: auto;\n  height: auto;\n  overflow: visible;\n  opacity: 1;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 10px;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-bottom: 20px;\n  margin-top: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 0px solid #000;\n  border-left: 0px solid #000;\n  border-right: 0px solid #000;\n  border-bottom: 0px solid #000;\n  border-radius: 0px 0px 0px 0px;\n  font-family: inherit;\n  color: #8ADCB4;\n  font-size: 30px;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: inherit;\n  font-style: inherit;\n  text-align: center;\n  text-decoration: inherit;\n  text-transform: inherit;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.web_development_cover__web_development_content___1a_gs:hover {\n}\n\n.web_development_cover__web_development_content___1a_gs:active {\n}\n\n.web_development_cover__web_development_content___1a_gs:focus {\n} \nbody { margin: 0; }", ""]);

	// exports
	exports.locals = {
		"web_development_cover": "web_development_cover__web_development_cover___14cZW",
		"web_development_title": "web_development_cover__web_development_title___3-6ce",
		"web_development_content": "web_development_cover__web_development_content___1a_gs"
	};

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**
	 * @license
	 * Lodash <https://lodash.com/>
	 * Copyright JS Foundation and other contributors <https://js.foundation/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	;(function() {

	  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
	  var undefined;

	  /** Used as the semantic version number. */
	  var VERSION = '4.17.4';

	  /** Used as the size to enable large array optimizations. */
	  var LARGE_ARRAY_SIZE = 200;

	  /** Error message constants. */
	  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
	      FUNC_ERROR_TEXT = 'Expected a function';

	  /** Used to stand-in for `undefined` hash values. */
	  var HASH_UNDEFINED = '__lodash_hash_undefined__';

	  /** Used as the maximum memoize cache size. */
	  var MAX_MEMOIZE_SIZE = 500;

	  /** Used as the internal argument placeholder. */
	  var PLACEHOLDER = '__lodash_placeholder__';

	  /** Used to compose bitmasks for cloning. */
	  var CLONE_DEEP_FLAG = 1,
	      CLONE_FLAT_FLAG = 2,
	      CLONE_SYMBOLS_FLAG = 4;

	  /** Used to compose bitmasks for value comparisons. */
	  var COMPARE_PARTIAL_FLAG = 1,
	      COMPARE_UNORDERED_FLAG = 2;

	  /** Used to compose bitmasks for function metadata. */
	  var WRAP_BIND_FLAG = 1,
	      WRAP_BIND_KEY_FLAG = 2,
	      WRAP_CURRY_BOUND_FLAG = 4,
	      WRAP_CURRY_FLAG = 8,
	      WRAP_CURRY_RIGHT_FLAG = 16,
	      WRAP_PARTIAL_FLAG = 32,
	      WRAP_PARTIAL_RIGHT_FLAG = 64,
	      WRAP_ARY_FLAG = 128,
	      WRAP_REARG_FLAG = 256,
	      WRAP_FLIP_FLAG = 512;

	  /** Used as default options for `_.truncate`. */
	  var DEFAULT_TRUNC_LENGTH = 30,
	      DEFAULT_TRUNC_OMISSION = '...';

	  /** Used to detect hot functions by number of calls within a span of milliseconds. */
	  var HOT_COUNT = 800,
	      HOT_SPAN = 16;

	  /** Used to indicate the type of lazy iteratees. */
	  var LAZY_FILTER_FLAG = 1,
	      LAZY_MAP_FLAG = 2,
	      LAZY_WHILE_FLAG = 3;

	  /** Used as references for various `Number` constants. */
	  var INFINITY = 1 / 0,
	      MAX_SAFE_INTEGER = 9007199254740991,
	      MAX_INTEGER = 1.7976931348623157e+308,
	      NAN = 0 / 0;

	  /** Used as references for the maximum length and index of an array. */
	  var MAX_ARRAY_LENGTH = 4294967295,
	      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
	      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

	  /** Used to associate wrap methods with their bit flags. */
	  var wrapFlags = [
	    ['ary', WRAP_ARY_FLAG],
	    ['bind', WRAP_BIND_FLAG],
	    ['bindKey', WRAP_BIND_KEY_FLAG],
	    ['curry', WRAP_CURRY_FLAG],
	    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
	    ['flip', WRAP_FLIP_FLAG],
	    ['partial', WRAP_PARTIAL_FLAG],
	    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
	    ['rearg', WRAP_REARG_FLAG]
	  ];

	  /** `Object#toString` result references. */
	  var argsTag = '[object Arguments]',
	      arrayTag = '[object Array]',
	      asyncTag = '[object AsyncFunction]',
	      boolTag = '[object Boolean]',
	      dateTag = '[object Date]',
	      domExcTag = '[object DOMException]',
	      errorTag = '[object Error]',
	      funcTag = '[object Function]',
	      genTag = '[object GeneratorFunction]',
	      mapTag = '[object Map]',
	      numberTag = '[object Number]',
	      nullTag = '[object Null]',
	      objectTag = '[object Object]',
	      promiseTag = '[object Promise]',
	      proxyTag = '[object Proxy]',
	      regexpTag = '[object RegExp]',
	      setTag = '[object Set]',
	      stringTag = '[object String]',
	      symbolTag = '[object Symbol]',
	      undefinedTag = '[object Undefined]',
	      weakMapTag = '[object WeakMap]',
	      weakSetTag = '[object WeakSet]';

	  var arrayBufferTag = '[object ArrayBuffer]',
	      dataViewTag = '[object DataView]',
	      float32Tag = '[object Float32Array]',
	      float64Tag = '[object Float64Array]',
	      int8Tag = '[object Int8Array]',
	      int16Tag = '[object Int16Array]',
	      int32Tag = '[object Int32Array]',
	      uint8Tag = '[object Uint8Array]',
	      uint8ClampedTag = '[object Uint8ClampedArray]',
	      uint16Tag = '[object Uint16Array]',
	      uint32Tag = '[object Uint32Array]';

	  /** Used to match empty string literals in compiled template source. */
	  var reEmptyStringLeading = /\b__p \+= '';/g,
	      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
	      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

	  /** Used to match HTML entities and HTML characters. */
	  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
	      reUnescapedHtml = /[&<>"']/g,
	      reHasEscapedHtml = RegExp(reEscapedHtml.source),
	      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

	  /** Used to match template delimiters. */
	  var reEscape = /<%-([\s\S]+?)%>/g,
	      reEvaluate = /<%([\s\S]+?)%>/g,
	      reInterpolate = /<%=([\s\S]+?)%>/g;

	  /** Used to match property names within property paths. */
	  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	      reIsPlainProp = /^\w*$/,
	      reLeadingDot = /^\./,
	      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

	  /**
	   * Used to match `RegExp`
	   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	   */
	  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
	      reHasRegExpChar = RegExp(reRegExpChar.source);

	  /** Used to match leading and trailing whitespace. */
	  var reTrim = /^\s+|\s+$/g,
	      reTrimStart = /^\s+/,
	      reTrimEnd = /\s+$/;

	  /** Used to match wrap detail comments. */
	  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
	      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
	      reSplitDetails = /,? & /;

	  /** Used to match words composed of alphanumeric characters. */
	  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

	  /** Used to match backslashes in property paths. */
	  var reEscapeChar = /\\(\\)?/g;

	  /**
	   * Used to match
	   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
	   */
	  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

	  /** Used to match `RegExp` flags from their coerced string values. */
	  var reFlags = /\w*$/;

	  /** Used to detect bad signed hexadecimal string values. */
	  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	  /** Used to detect binary string values. */
	  var reIsBinary = /^0b[01]+$/i;

	  /** Used to detect host constructors (Safari). */
	  var reIsHostCtor = /^\[object .+?Constructor\]$/;

	  /** Used to detect octal string values. */
	  var reIsOctal = /^0o[0-7]+$/i;

	  /** Used to detect unsigned integer values. */
	  var reIsUint = /^(?:0|[1-9]\d*)$/;

	  /** Used to match Latin Unicode letters (excluding mathematical operators). */
	  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

	  /** Used to ensure capturing order of template delimiters. */
	  var reNoMatch = /($^)/;

	  /** Used to match unescaped characters in compiled string literals. */
	  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

	  /** Used to compose unicode character classes. */
	  var rsAstralRange = '\\ud800-\\udfff',
	      rsComboMarksRange = '\\u0300-\\u036f',
	      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	      rsComboSymbolsRange = '\\u20d0-\\u20ff',
	      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	      rsDingbatRange = '\\u2700-\\u27bf',
	      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
	      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
	      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	      rsPunctuationRange = '\\u2000-\\u206f',
	      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
	      rsVarRange = '\\ufe0e\\ufe0f',
	      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

	  /** Used to compose unicode capture groups. */
	  var rsApos = "['\u2019]",
	      rsAstral = '[' + rsAstralRange + ']',
	      rsBreak = '[' + rsBreakRange + ']',
	      rsCombo = '[' + rsComboRange + ']',
	      rsDigits = '\\d+',
	      rsDingbat = '[' + rsDingbatRange + ']',
	      rsLower = '[' + rsLowerRange + ']',
	      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
	      rsFitz = '\\ud83c[\\udffb-\\udfff]',
	      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	      rsNonAstral = '[^' + rsAstralRange + ']',
	      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	      rsUpper = '[' + rsUpperRange + ']',
	      rsZWJ = '\\u200d';

	  /** Used to compose unicode regexes. */
	  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
	      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
	      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
	      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
	      reOptMod = rsModifier + '?',
	      rsOptVar = '[' + rsVarRange + ']?',
	      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
	      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
	      rsSeq = rsOptVar + reOptMod + rsOptJoin,
	      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
	      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

	  /** Used to match apostrophes. */
	  var reApos = RegExp(rsApos, 'g');

	  /**
	   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	   */
	  var reComboMark = RegExp(rsCombo, 'g');

	  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

	  /** Used to match complex or compound words. */
	  var reUnicodeWord = RegExp([
	    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
	    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
	    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
	    rsUpper + '+' + rsOptContrUpper,
	    rsOrdUpper,
	    rsOrdLower,
	    rsDigits,
	    rsEmoji
	  ].join('|'), 'g');

	  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

	  /** Used to detect strings that need a more robust regexp to match words. */
	  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

	  /** Used to assign default `context` object properties. */
	  var contextProps = [
	    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
	    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
	    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
	    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
	    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
	  ];

	  /** Used to make template sourceURLs easier to identify. */
	  var templateCounter = -1;

	  /** Used to identify `toStringTag` values of typed arrays. */
	  var typedArrayTags = {};
	  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	  typedArrayTags[uint32Tag] = true;
	  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	  typedArrayTags[setTag] = typedArrayTags[stringTag] =
	  typedArrayTags[weakMapTag] = false;

	  /** Used to identify `toStringTag` values supported by `_.clone`. */
	  var cloneableTags = {};
	  cloneableTags[argsTag] = cloneableTags[arrayTag] =
	  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	  cloneableTags[boolTag] = cloneableTags[dateTag] =
	  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	  cloneableTags[int32Tag] = cloneableTags[mapTag] =
	  cloneableTags[numberTag] = cloneableTags[objectTag] =
	  cloneableTags[regexpTag] = cloneableTags[setTag] =
	  cloneableTags[stringTag] = cloneableTags[symbolTag] =
	  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	  cloneableTags[errorTag] = cloneableTags[funcTag] =
	  cloneableTags[weakMapTag] = false;

	  /** Used to map Latin Unicode letters to basic Latin letters. */
	  var deburredLetters = {
	    // Latin-1 Supplement block.
	    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	    '\xc7': 'C',  '\xe7': 'c',
	    '\xd0': 'D',  '\xf0': 'd',
	    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	    '\xd1': 'N',  '\xf1': 'n',
	    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	    '\xc6': 'Ae', '\xe6': 'ae',
	    '\xde': 'Th', '\xfe': 'th',
	    '\xdf': 'ss',
	    // Latin Extended-A block.
	    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
	    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
	    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
	    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
	    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
	    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
	    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
	    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
	    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
	    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
	    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
	    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
	    '\u0134': 'J',  '\u0135': 'j',
	    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
	    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
	    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
	    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
	    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
	    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
	    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
	    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
	    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
	    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
	    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
	    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
	    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
	    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
	    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
	    '\u0174': 'W',  '\u0175': 'w',
	    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
	    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
	    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
	    '\u0132': 'IJ', '\u0133': 'ij',
	    '\u0152': 'Oe', '\u0153': 'oe',
	    '\u0149': "'n", '\u017f': 's'
	  };

	  /** Used to map characters to HTML entities. */
	  var htmlEscapes = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    "'": '&#39;'
	  };

	  /** Used to map HTML entities to characters. */
	  var htmlUnescapes = {
	    '&amp;': '&',
	    '&lt;': '<',
	    '&gt;': '>',
	    '&quot;': '"',
	    '&#39;': "'"
	  };

	  /** Used to escape characters for inclusion in compiled string literals. */
	  var stringEscapes = {
	    '\\': '\\',
	    "'": "'",
	    '\n': 'n',
	    '\r': 'r',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };

	  /** Built-in method references without a dependency on `root`. */
	  var freeParseFloat = parseFloat,
	      freeParseInt = parseInt;

	  /** Detect free variable `global` from Node.js. */
	  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	  /** Detect free variable `self`. */
	  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	  /** Used as a reference to the global object. */
	  var root = freeGlobal || freeSelf || Function('return this')();

	  /** Detect free variable `exports`. */
	  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	  /** Detect free variable `module`. */
	  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	  /** Detect the popular CommonJS extension `module.exports`. */
	  var moduleExports = freeModule && freeModule.exports === freeExports;

	  /** Detect free variable `process` from Node.js. */
	  var freeProcess = moduleExports && freeGlobal.process;

	  /** Used to access faster Node.js helpers. */
	  var nodeUtil = (function() {
	    try {
	      return freeProcess && freeProcess.binding && freeProcess.binding('util');
	    } catch (e) {}
	  }());

	  /* Node.js helper references. */
	  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
	      nodeIsDate = nodeUtil && nodeUtil.isDate,
	      nodeIsMap = nodeUtil && nodeUtil.isMap,
	      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
	      nodeIsSet = nodeUtil && nodeUtil.isSet,
	      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Adds the key-value `pair` to `map`.
	   *
	   * @private
	   * @param {Object} map The map to modify.
	   * @param {Array} pair The key-value pair to add.
	   * @returns {Object} Returns `map`.
	   */
	  function addMapEntry(map, pair) {
	    // Don't return `map.set` because it's not chainable in IE 11.
	    map.set(pair[0], pair[1]);
	    return map;
	  }

	  /**
	   * Adds `value` to `set`.
	   *
	   * @private
	   * @param {Object} set The set to modify.
	   * @param {*} value The value to add.
	   * @returns {Object} Returns `set`.
	   */
	  function addSetEntry(set, value) {
	    // Don't return `set.add` because it's not chainable in IE 11.
	    set.add(value);
	    return set;
	  }

	  /**
	   * A faster alternative to `Function#apply`, this function invokes `func`
	   * with the `this` binding of `thisArg` and the arguments of `args`.
	   *
	   * @private
	   * @param {Function} func The function to invoke.
	   * @param {*} thisArg The `this` binding of `func`.
	   * @param {Array} args The arguments to invoke `func` with.
	   * @returns {*} Returns the result of `func`.
	   */
	  function apply(func, thisArg, args) {
	    switch (args.length) {
	      case 0: return func.call(thisArg);
	      case 1: return func.call(thisArg, args[0]);
	      case 2: return func.call(thisArg, args[0], args[1]);
	      case 3: return func.call(thisArg, args[0], args[1], args[2]);
	    }
	    return func.apply(thisArg, args);
	  }

	  /**
	   * A specialized version of `baseAggregator` for arrays.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} setter The function to set `accumulator` values.
	   * @param {Function} iteratee The iteratee to transform keys.
	   * @param {Object} accumulator The initial aggregated object.
	   * @returns {Function} Returns `accumulator`.
	   */
	  function arrayAggregator(array, setter, iteratee, accumulator) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      var value = array[index];
	      setter(accumulator, value, iteratee(value), array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.forEach` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEach(array, iteratee) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      if (iteratee(array[index], index, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.forEachRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEachRight(array, iteratee) {
	    var length = array == null ? 0 : array.length;

	    while (length--) {
	      if (iteratee(array[length], length, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.every` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if all elements pass the predicate check,
	   *  else `false`.
	   */
	  function arrayEvery(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      if (!predicate(array[index], index, array)) {
	        return false;
	      }
	    }
	    return true;
	  }

	  /**
	   * A specialized version of `_.filter` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {Array} Returns the new filtered array.
	   */
	  function arrayFilter(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length,
	        resIndex = 0,
	        result = [];

	    while (++index < length) {
	      var value = array[index];
	      if (predicate(value, index, array)) {
	        result[resIndex++] = value;
	      }
	    }
	    return result;
	  }

	  /**
	   * A specialized version of `_.includes` for arrays without support for
	   * specifying an index to search from.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludes(array, value) {
	    var length = array == null ? 0 : array.length;
	    return !!length && baseIndexOf(array, value, 0) > -1;
	  }

	  /**
	   * This function is like `arrayIncludes` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludesWith(array, value, comparator) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      if (comparator(value, array[index])) {
	        return true;
	      }
	    }
	    return false;
	  }

	  /**
	   * A specialized version of `_.map` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the new mapped array.
	   */
	  function arrayMap(array, iteratee) {
	    var index = -1,
	        length = array == null ? 0 : array.length,
	        result = Array(length);

	    while (++index < length) {
	      result[index] = iteratee(array[index], index, array);
	    }
	    return result;
	  }

	  /**
	   * Appends the elements of `values` to `array`.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {Array} values The values to append.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayPush(array, values) {
	    var index = -1,
	        length = values.length,
	        offset = array.length;

	    while (++index < length) {
	      array[offset + index] = values[index];
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.reduce` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the first element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduce(array, iteratee, accumulator, initAccum) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    if (initAccum && length) {
	      accumulator = array[++index];
	    }
	    while (++index < length) {
	      accumulator = iteratee(accumulator, array[index], index, array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.reduceRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the last element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
	    var length = array == null ? 0 : array.length;
	    if (initAccum && length) {
	      accumulator = array[--length];
	    }
	    while (length--) {
	      accumulator = iteratee(accumulator, array[length], length, array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.some` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if any element passes the predicate check,
	   *  else `false`.
	   */
	  function arraySome(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      if (predicate(array[index], index, array)) {
	        return true;
	      }
	    }
	    return false;
	  }

	  /**
	   * Gets the size of an ASCII `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */
	  var asciiSize = baseProperty('length');

	  /**
	   * Converts an ASCII `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function asciiToArray(string) {
	    return string.split('');
	  }

	  /**
	   * Splits an ASCII `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */
	  function asciiWords(string) {
	    return string.match(reAsciiWord) || [];
	  }

	  /**
	   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
	   * without support for iteratee shorthands, which iterates over `collection`
	   * using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the found element or its key, else `undefined`.
	   */
	  function baseFindKey(collection, predicate, eachFunc) {
	    var result;
	    eachFunc(collection, function(value, key, collection) {
	      if (predicate(value, key, collection)) {
	        result = key;
	        return false;
	      }
	    });
	    return result;
	  }

	  /**
	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
	   * support for iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {number} fromIndex The index to search from.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseFindIndex(array, predicate, fromIndex, fromRight) {
	    var length = array.length,
	        index = fromIndex + (fromRight ? 1 : -1);

	    while ((fromRight ? index-- : ++index < length)) {
	      if (predicate(array[index], index, array)) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOf(array, value, fromIndex) {
	    return value === value
	      ? strictIndexOf(array, value, fromIndex)
	      : baseFindIndex(array, baseIsNaN, fromIndex);
	  }

	  /**
	   * This function is like `baseIndexOf` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOfWith(array, value, fromIndex, comparator) {
	    var index = fromIndex - 1,
	        length = array.length;

	    while (++index < length) {
	      if (comparator(array[index], value)) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.isNaN` without support for number objects.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	   */
	  function baseIsNaN(value) {
	    return value !== value;
	  }

	  /**
	   * The base implementation of `_.mean` and `_.meanBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the mean.
	   */
	  function baseMean(array, iteratee) {
	    var length = array == null ? 0 : array.length;
	    return length ? (baseSum(array, iteratee) / length) : NAN;
	  }

	  /**
	   * The base implementation of `_.property` without support for deep paths.
	   *
	   * @private
	   * @param {string} key The key of the property to get.
	   * @returns {Function} Returns the new accessor function.
	   */
	  function baseProperty(key) {
	    return function(object) {
	      return object == null ? undefined : object[key];
	    };
	  }

	  /**
	   * The base implementation of `_.propertyOf` without support for deep paths.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @returns {Function} Returns the new accessor function.
	   */
	  function basePropertyOf(object) {
	    return function(key) {
	      return object == null ? undefined : object[key];
	    };
	  }

	  /**
	   * The base implementation of `_.reduce` and `_.reduceRight`, without support
	   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} accumulator The initial value.
	   * @param {boolean} initAccum Specify using the first or last element of
	   *  `collection` as the initial value.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the accumulated value.
	   */
	  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	    eachFunc(collection, function(value, index, collection) {
	      accumulator = initAccum
	        ? (initAccum = false, value)
	        : iteratee(accumulator, value, index, collection);
	    });
	    return accumulator;
	  }

	  /**
	   * The base implementation of `_.sortBy` which uses `comparer` to define the
	   * sort order of `array` and replaces criteria objects with their corresponding
	   * values.
	   *
	   * @private
	   * @param {Array} array The array to sort.
	   * @param {Function} comparer The function to define sort order.
	   * @returns {Array} Returns `array`.
	   */
	  function baseSortBy(array, comparer) {
	    var length = array.length;

	    array.sort(comparer);
	    while (length--) {
	      array[length] = array[length].value;
	    }
	    return array;
	  }

	  /**
	   * The base implementation of `_.sum` and `_.sumBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the sum.
	   */
	  function baseSum(array, iteratee) {
	    var result,
	        index = -1,
	        length = array.length;

	    while (++index < length) {
	      var current = iteratee(array[index]);
	      if (current !== undefined) {
	        result = result === undefined ? current : (result + current);
	      }
	    }
	    return result;
	  }

	  /**
	   * The base implementation of `_.times` without support for iteratee shorthands
	   * or max array length checks.
	   *
	   * @private
	   * @param {number} n The number of times to invoke `iteratee`.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the array of results.
	   */
	  function baseTimes(n, iteratee) {
	    var index = -1,
	        result = Array(n);

	    while (++index < n) {
	      result[index] = iteratee(index);
	    }
	    return result;
	  }

	  /**
	   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	   * of key-value pairs for `object` corresponding to the property names of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the key-value pairs.
	   */
	  function baseToPairs(object, props) {
	    return arrayMap(props, function(key) {
	      return [key, object[key]];
	    });
	  }

	  /**
	   * The base implementation of `_.unary` without support for storing metadata.
	   *
	   * @private
	   * @param {Function} func The function to cap arguments for.
	   * @returns {Function} Returns the new capped function.
	   */
	  function baseUnary(func) {
	    return function(value) {
	      return func(value);
	    };
	  }

	  /**
	   * The base implementation of `_.values` and `_.valuesIn` which creates an
	   * array of `object` property values corresponding to the property names
	   * of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the array of property values.
	   */
	  function baseValues(object, props) {
	    return arrayMap(props, function(key) {
	      return object[key];
	    });
	  }

	  /**
	   * Checks if a `cache` value for `key` exists.
	   *
	   * @private
	   * @param {Object} cache The cache to query.
	   * @param {string} key The key of the entry to check.
	   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	   */
	  function cacheHas(cache, key) {
	    return cache.has(key);
	  }

	  /**
	   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the first unmatched string symbol.
	   */
	  function charsStartIndex(strSymbols, chrSymbols) {
	    var index = -1,
	        length = strSymbols.length;

	    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }

	  /**
	   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the last unmatched string symbol.
	   */
	  function charsEndIndex(strSymbols, chrSymbols) {
	    var index = strSymbols.length;

	    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }

	  /**
	   * Gets the number of `placeholder` occurrences in `array`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} placeholder The placeholder to search for.
	   * @returns {number} Returns the placeholder count.
	   */
	  function countHolders(array, placeholder) {
	    var length = array.length,
	        result = 0;

	    while (length--) {
	      if (array[length] === placeholder) {
	        ++result;
	      }
	    }
	    return result;
	  }

	  /**
	   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
	   * letters to basic Latin letters.
	   *
	   * @private
	   * @param {string} letter The matched letter to deburr.
	   * @returns {string} Returns the deburred letter.
	   */
	  var deburrLetter = basePropertyOf(deburredLetters);

	  /**
	   * Used by `_.escape` to convert characters to HTML entities.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  var escapeHtmlChar = basePropertyOf(htmlEscapes);

	  /**
	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeStringChar(chr) {
	    return '\\' + stringEscapes[chr];
	  }

	  /**
	   * Gets the value at `key` of `object`.
	   *
	   * @private
	   * @param {Object} [object] The object to query.
	   * @param {string} key The key of the property to get.
	   * @returns {*} Returns the property value.
	   */
	  function getValue(object, key) {
	    return object == null ? undefined : object[key];
	  }

	  /**
	   * Checks if `string` contains Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	   */
	  function hasUnicode(string) {
	    return reHasUnicode.test(string);
	  }

	  /**
	   * Checks if `string` contains a word composed of Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a word is found, else `false`.
	   */
	  function hasUnicodeWord(string) {
	    return reHasUnicodeWord.test(string);
	  }

	  /**
	   * Converts `iterator` to an array.
	   *
	   * @private
	   * @param {Object} iterator The iterator to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function iteratorToArray(iterator) {
	    var data,
	        result = [];

	    while (!(data = iterator.next()).done) {
	      result.push(data.value);
	    }
	    return result;
	  }

	  /**
	   * Converts `map` to its key-value pairs.
	   *
	   * @private
	   * @param {Object} map The map to convert.
	   * @returns {Array} Returns the key-value pairs.
	   */
	  function mapToArray(map) {
	    var index = -1,
	        result = Array(map.size);

	    map.forEach(function(value, key) {
	      result[++index] = [key, value];
	    });
	    return result;
	  }

	  /**
	   * Creates a unary function that invokes `func` with its argument transformed.
	   *
	   * @private
	   * @param {Function} func The function to wrap.
	   * @param {Function} transform The argument transform.
	   * @returns {Function} Returns the new function.
	   */
	  function overArg(func, transform) {
	    return function(arg) {
	      return func(transform(arg));
	    };
	  }

	  /**
	   * Replaces all `placeholder` elements in `array` with an internal placeholder
	   * and returns an array of their indexes.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {*} placeholder The placeholder to replace.
	   * @returns {Array} Returns the new array of placeholder indexes.
	   */
	  function replaceHolders(array, placeholder) {
	    var index = -1,
	        length = array.length,
	        resIndex = 0,
	        result = [];

	    while (++index < length) {
	      var value = array[index];
	      if (value === placeholder || value === PLACEHOLDER) {
	        array[index] = PLACEHOLDER;
	        result[resIndex++] = index;
	      }
	    }
	    return result;
	  }

	  /**
	   * Converts `set` to an array of its values.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the values.
	   */
	  function setToArray(set) {
	    var index = -1,
	        result = Array(set.size);

	    set.forEach(function(value) {
	      result[++index] = value;
	    });
	    return result;
	  }

	  /**
	   * Converts `set` to its value-value pairs.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the value-value pairs.
	   */
	  function setToPairs(set) {
	    var index = -1,
	        result = Array(set.size);

	    set.forEach(function(value) {
	      result[++index] = [value, value];
	    });
	    return result;
	  }

	  /**
	   * A specialized version of `_.indexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function strictIndexOf(array, value, fromIndex) {
	    var index = fromIndex - 1,
	        length = array.length;

	    while (++index < length) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * A specialized version of `_.lastIndexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function strictLastIndexOf(array, value, fromIndex) {
	    var index = fromIndex + 1;
	    while (index--) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return index;
	  }

	  /**
	   * Gets the number of symbols in `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the string size.
	   */
	  function stringSize(string) {
	    return hasUnicode(string)
	      ? unicodeSize(string)
	      : asciiSize(string);
	  }

	  /**
	   * Converts `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function stringToArray(string) {
	    return hasUnicode(string)
	      ? unicodeToArray(string)
	      : asciiToArray(string);
	  }

	  /**
	   * Used by `_.unescape` to convert HTML entities to characters.
	   *
	   * @private
	   * @param {string} chr The matched character to unescape.
	   * @returns {string} Returns the unescaped character.
	   */
	  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

	  /**
	   * Gets the size of a Unicode `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */
	  function unicodeSize(string) {
	    var result = reUnicode.lastIndex = 0;
	    while (reUnicode.test(string)) {
	      ++result;
	    }
	    return result;
	  }

	  /**
	   * Converts a Unicode `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function unicodeToArray(string) {
	    return string.match(reUnicode) || [];
	  }

	  /**
	   * Splits a Unicode `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */
	  function unicodeWords(string) {
	    return string.match(reUnicodeWord) || [];
	  }

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Create a new pristine `lodash` function using the `context` object.
	   *
	   * @static
	   * @memberOf _
	   * @since 1.1.0
	   * @category Util
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns a new `lodash` function.
	   * @example
	   *
	   * _.mixin({ 'foo': _.constant('foo') });
	   *
	   * var lodash = _.runInContext();
	   * lodash.mixin({ 'bar': lodash.constant('bar') });
	   *
	   * _.isFunction(_.foo);
	   * // => true
	   * _.isFunction(_.bar);
	   * // => false
	   *
	   * lodash.isFunction(lodash.foo);
	   * // => false
	   * lodash.isFunction(lodash.bar);
	   * // => true
	   *
	   * // Create a suped-up `defer` in Node.js.
	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
	   */
	  var runInContext = (function runInContext(context) {
	    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

	    /** Built-in constructor references. */
	    var Array = context.Array,
	        Date = context.Date,
	        Error = context.Error,
	        Function = context.Function,
	        Math = context.Math,
	        Object = context.Object,
	        RegExp = context.RegExp,
	        String = context.String,
	        TypeError = context.TypeError;

	    /** Used for built-in method references. */
	    var arrayProto = Array.prototype,
	        funcProto = Function.prototype,
	        objectProto = Object.prototype;

	    /** Used to detect overreaching core-js shims. */
	    var coreJsData = context['__core-js_shared__'];

	    /** Used to resolve the decompiled source of functions. */
	    var funcToString = funcProto.toString;

	    /** Used to check objects for own properties. */
	    var hasOwnProperty = objectProto.hasOwnProperty;

	    /** Used to generate unique IDs. */
	    var idCounter = 0;

	    /** Used to detect methods masquerading as native. */
	    var maskSrcKey = (function() {
	      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	      return uid ? ('Symbol(src)_1.' + uid) : '';
	    }());

	    /**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var nativeObjectToString = objectProto.toString;

	    /** Used to infer the `Object` constructor. */
	    var objectCtorString = funcToString.call(Object);

	    /** Used to restore the original `_` reference in `_.noConflict`. */
	    var oldDash = root._;

	    /** Used to detect if a method is native. */
	    var reIsNative = RegExp('^' +
	      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	    );

	    /** Built-in value references. */
	    var Buffer = moduleExports ? context.Buffer : undefined,
	        Symbol = context.Symbol,
	        Uint8Array = context.Uint8Array,
	        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
	        getPrototype = overArg(Object.getPrototypeOf, Object),
	        objectCreate = Object.create,
	        propertyIsEnumerable = objectProto.propertyIsEnumerable,
	        splice = arrayProto.splice,
	        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
	        symIterator = Symbol ? Symbol.iterator : undefined,
	        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	    var defineProperty = (function() {
	      try {
	        var func = getNative(Object, 'defineProperty');
	        func({}, '', {});
	        return func;
	      } catch (e) {}
	    }());

	    /** Mocked built-ins. */
	    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
	        ctxNow = Date && Date.now !== root.Date.now && Date.now,
	        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

	    /* Built-in method references for those with the same name as other `lodash` methods. */
	    var nativeCeil = Math.ceil,
	        nativeFloor = Math.floor,
	        nativeGetSymbols = Object.getOwnPropertySymbols,
	        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
	        nativeIsFinite = context.isFinite,
	        nativeJoin = arrayProto.join,
	        nativeKeys = overArg(Object.keys, Object),
	        nativeMax = Math.max,
	        nativeMin = Math.min,
	        nativeNow = Date.now,
	        nativeParseInt = context.parseInt,
	        nativeRandom = Math.random,
	        nativeReverse = arrayProto.reverse;

	    /* Built-in method references that are verified to be native. */
	    var DataView = getNative(context, 'DataView'),
	        Map = getNative(context, 'Map'),
	        Promise = getNative(context, 'Promise'),
	        Set = getNative(context, 'Set'),
	        WeakMap = getNative(context, 'WeakMap'),
	        nativeCreate = getNative(Object, 'create');

	    /** Used to store function metadata. */
	    var metaMap = WeakMap && new WeakMap;

	    /** Used to lookup unminified function names. */
	    var realNames = {};

	    /** Used to detect maps, sets, and weakmaps. */
	    var dataViewCtorString = toSource(DataView),
	        mapCtorString = toSource(Map),
	        promiseCtorString = toSource(Promise),
	        setCtorString = toSource(Set),
	        weakMapCtorString = toSource(WeakMap);

	    /** Used to convert symbols to primitives and strings. */
	    var symbolProto = Symbol ? Symbol.prototype : undefined,
	        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
	        symbolToString = symbolProto ? symbolProto.toString : undefined;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` object which wraps `value` to enable implicit method
	     * chain sequences. Methods that operate on and return arrays, collections,
	     * and functions can be chained together. Methods that retrieve a single value
	     * or may return a primitive value will automatically end the chain sequence
	     * and return the unwrapped value. Otherwise, the value must be unwrapped
	     * with `_#value`.
	     *
	     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	     * enabled using `_.chain`.
	     *
	     * The execution of chained methods is lazy, that is, it's deferred until
	     * `_#value` is implicitly or explicitly called.
	     *
	     * Lazy evaluation allows several methods to support shortcut fusion.
	     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	     * the creation of intermediate arrays and can greatly reduce the number of
	     * iteratee executions. Sections of a chain sequence qualify for shortcut
	     * fusion if the section is applied to an array and iteratees accept only
	     * one argument. The heuristic for whether a section qualifies for shortcut
	     * fusion is subject to change.
	     *
	     * Chaining is supported in custom builds as long as the `_#value` method is
	     * directly or indirectly included in the build.
	     *
	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
	     *
	     * The wrapper `Array` methods are:
	     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	     *
	     * The wrapper `String` methods are:
	     * `replace` and `split`
	     *
	     * The wrapper methods that support shortcut fusion are:
	     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	     *
	     * The chainable wrapper methods are:
	     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	     * `zipObject`, `zipObjectDeep`, and `zipWith`
	     *
	     * The wrapper methods that are **not** chainable by default are:
	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
	     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
	     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
	     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
	     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
	     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
	     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
	     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
	     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
	     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
	     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
	     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
	     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
	     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
	     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
	     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
	     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
	     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
	     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
	     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
	     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
	     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
	     * `upperFirst`, `value`, and `words`
	     *
	     * @name _
	     * @constructor
	     * @category Seq
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // Returns an unwrapped value.
	     * wrapped.reduce(_.add);
	     * // => 6
	     *
	     * // Returns a wrapped value.
	     * var squares = wrapped.map(square);
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */
	    function lodash(value) {
	      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	        if (value instanceof LodashWrapper) {
	          return value;
	        }
	        if (hasOwnProperty.call(value, '__wrapped__')) {
	          return wrapperClone(value);
	        }
	      }
	      return new LodashWrapper(value);
	    }

	    /**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} proto The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */
	    var baseCreate = (function() {
	      function object() {}
	      return function(proto) {
	        if (!isObject(proto)) {
	          return {};
	        }
	        if (objectCreate) {
	          return objectCreate(proto);
	        }
	        object.prototype = proto;
	        var result = new object;
	        object.prototype = undefined;
	        return result;
	      };
	    }());

	    /**
	     * The function whose prototype chain sequence wrappers inherit from.
	     *
	     * @private
	     */
	    function baseLodash() {
	      // No operation performed.
	    }

	    /**
	     * The base constructor for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     * @param {boolean} [chainAll] Enable explicit method chain sequences.
	     */
	    function LodashWrapper(value, chainAll) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__chain__ = !!chainAll;
	      this.__index__ = 0;
	      this.__values__ = undefined;
	    }

	    /**
	     * By default, the template delimiters used by lodash are like those in
	     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
	     * following template settings to use alternative delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type {Object}
	     */
	    lodash.templateSettings = {

	      /**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'escape': reEscape,

	      /**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'evaluate': reEvaluate,

	      /**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'interpolate': reInterpolate,

	      /**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type {string}
	       */
	      'variable': '',

	      /**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type {Object}
	       */
	      'imports': {

	        /**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type {Function}
	         */
	        '_': lodash
	      }
	    };

	    // Ensure wrappers are instances of `baseLodash`.
	    lodash.prototype = baseLodash.prototype;
	    lodash.prototype.constructor = lodash;

	    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	    LodashWrapper.prototype.constructor = LodashWrapper;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	     *
	     * @private
	     * @constructor
	     * @param {*} value The value to wrap.
	     */
	    function LazyWrapper(value) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__dir__ = 1;
	      this.__filtered__ = false;
	      this.__iteratees__ = [];
	      this.__takeCount__ = MAX_ARRAY_LENGTH;
	      this.__views__ = [];
	    }

	    /**
	     * Creates a clone of the lazy wrapper object.
	     *
	     * @private
	     * @name clone
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the cloned `LazyWrapper` object.
	     */
	    function lazyClone() {
	      var result = new LazyWrapper(this.__wrapped__);
	      result.__actions__ = copyArray(this.__actions__);
	      result.__dir__ = this.__dir__;
	      result.__filtered__ = this.__filtered__;
	      result.__iteratees__ = copyArray(this.__iteratees__);
	      result.__takeCount__ = this.__takeCount__;
	      result.__views__ = copyArray(this.__views__);
	      return result;
	    }

	    /**
	     * Reverses the direction of lazy iteration.
	     *
	     * @private
	     * @name reverse
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
	     */
	    function lazyReverse() {
	      if (this.__filtered__) {
	        var result = new LazyWrapper(this);
	        result.__dir__ = -1;
	        result.__filtered__ = true;
	      } else {
	        result = this.clone();
	        result.__dir__ *= -1;
	      }
	      return result;
	    }

	    /**
	     * Extracts the unwrapped value from its lazy wrapper.
	     *
	     * @private
	     * @name value
	     * @memberOf LazyWrapper
	     * @returns {*} Returns the unwrapped value.
	     */
	    function lazyValue() {
	      var array = this.__wrapped__.value(),
	          dir = this.__dir__,
	          isArr = isArray(array),
	          isRight = dir < 0,
	          arrLength = isArr ? array.length : 0,
	          view = getView(0, arrLength, this.__views__),
	          start = view.start,
	          end = view.end,
	          length = end - start,
	          index = isRight ? end : (start - 1),
	          iteratees = this.__iteratees__,
	          iterLength = iteratees.length,
	          resIndex = 0,
	          takeCount = nativeMin(length, this.__takeCount__);

	      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
	        return baseWrapperValue(array, this.__actions__);
	      }
	      var result = [];

	      outer:
	      while (length-- && resIndex < takeCount) {
	        index += dir;

	        var iterIndex = -1,
	            value = array[index];

	        while (++iterIndex < iterLength) {
	          var data = iteratees[iterIndex],
	              iteratee = data.iteratee,
	              type = data.type,
	              computed = iteratee(value);

	          if (type == LAZY_MAP_FLAG) {
	            value = computed;
	          } else if (!computed) {
	            if (type == LAZY_FILTER_FLAG) {
	              continue outer;
	            } else {
	              break outer;
	            }
	          }
	        }
	        result[resIndex++] = value;
	      }
	      return result;
	    }

	    // Ensure `LazyWrapper` is an instance of `baseLodash`.
	    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	    LazyWrapper.prototype.constructor = LazyWrapper;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a hash object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function Hash(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;

	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the hash.
	     *
	     * @private
	     * @name clear
	     * @memberOf Hash
	     */
	    function hashClear() {
	      this.__data__ = nativeCreate ? nativeCreate(null) : {};
	      this.size = 0;
	    }

	    /**
	     * Removes `key` and its value from the hash.
	     *
	     * @private
	     * @name delete
	     * @memberOf Hash
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function hashDelete(key) {
	      var result = this.has(key) && delete this.__data__[key];
	      this.size -= result ? 1 : 0;
	      return result;
	    }

	    /**
	     * Gets the hash value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Hash
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function hashGet(key) {
	      var data = this.__data__;
	      if (nativeCreate) {
	        var result = data[key];
	        return result === HASH_UNDEFINED ? undefined : result;
	      }
	      return hasOwnProperty.call(data, key) ? data[key] : undefined;
	    }

	    /**
	     * Checks if a hash value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Hash
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function hashHas(key) {
	      var data = this.__data__;
	      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
	    }

	    /**
	     * Sets the hash `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Hash
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the hash instance.
	     */
	    function hashSet(key, value) {
	      var data = this.__data__;
	      this.size += this.has(key) ? 0 : 1;
	      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	      return this;
	    }

	    // Add methods to `Hash`.
	    Hash.prototype.clear = hashClear;
	    Hash.prototype['delete'] = hashDelete;
	    Hash.prototype.get = hashGet;
	    Hash.prototype.has = hashHas;
	    Hash.prototype.set = hashSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an list cache object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function ListCache(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;

	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the list cache.
	     *
	     * @private
	     * @name clear
	     * @memberOf ListCache
	     */
	    function listCacheClear() {
	      this.__data__ = [];
	      this.size = 0;
	    }

	    /**
	     * Removes `key` and its value from the list cache.
	     *
	     * @private
	     * @name delete
	     * @memberOf ListCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function listCacheDelete(key) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);

	      if (index < 0) {
	        return false;
	      }
	      var lastIndex = data.length - 1;
	      if (index == lastIndex) {
	        data.pop();
	      } else {
	        splice.call(data, index, 1);
	      }
	      --this.size;
	      return true;
	    }

	    /**
	     * Gets the list cache value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf ListCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function listCacheGet(key) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);

	      return index < 0 ? undefined : data[index][1];
	    }

	    /**
	     * Checks if a list cache value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf ListCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function listCacheHas(key) {
	      return assocIndexOf(this.__data__, key) > -1;
	    }

	    /**
	     * Sets the list cache `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf ListCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the list cache instance.
	     */
	    function listCacheSet(key, value) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);

	      if (index < 0) {
	        ++this.size;
	        data.push([key, value]);
	      } else {
	        data[index][1] = value;
	      }
	      return this;
	    }

	    // Add methods to `ListCache`.
	    ListCache.prototype.clear = listCacheClear;
	    ListCache.prototype['delete'] = listCacheDelete;
	    ListCache.prototype.get = listCacheGet;
	    ListCache.prototype.has = listCacheHas;
	    ListCache.prototype.set = listCacheSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a map cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function MapCache(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;

	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the map.
	     *
	     * @private
	     * @name clear
	     * @memberOf MapCache
	     */
	    function mapCacheClear() {
	      this.size = 0;
	      this.__data__ = {
	        'hash': new Hash,
	        'map': new (Map || ListCache),
	        'string': new Hash
	      };
	    }

	    /**
	     * Removes `key` and its value from the map.
	     *
	     * @private
	     * @name delete
	     * @memberOf MapCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function mapCacheDelete(key) {
	      var result = getMapData(this, key)['delete'](key);
	      this.size -= result ? 1 : 0;
	      return result;
	    }

	    /**
	     * Gets the map value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf MapCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function mapCacheGet(key) {
	      return getMapData(this, key).get(key);
	    }

	    /**
	     * Checks if a map value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf MapCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function mapCacheHas(key) {
	      return getMapData(this, key).has(key);
	    }

	    /**
	     * Sets the map `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf MapCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the map cache instance.
	     */
	    function mapCacheSet(key, value) {
	      var data = getMapData(this, key),
	          size = data.size;

	      data.set(key, value);
	      this.size += data.size == size ? 0 : 1;
	      return this;
	    }

	    // Add methods to `MapCache`.
	    MapCache.prototype.clear = mapCacheClear;
	    MapCache.prototype['delete'] = mapCacheDelete;
	    MapCache.prototype.get = mapCacheGet;
	    MapCache.prototype.has = mapCacheHas;
	    MapCache.prototype.set = mapCacheSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     *
	     * Creates an array cache object to store unique values.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function SetCache(values) {
	      var index = -1,
	          length = values == null ? 0 : values.length;

	      this.__data__ = new MapCache;
	      while (++index < length) {
	        this.add(values[index]);
	      }
	    }

	    /**
	     * Adds `value` to the array cache.
	     *
	     * @private
	     * @name add
	     * @memberOf SetCache
	     * @alias push
	     * @param {*} value The value to cache.
	     * @returns {Object} Returns the cache instance.
	     */
	    function setCacheAdd(value) {
	      this.__data__.set(value, HASH_UNDEFINED);
	      return this;
	    }

	    /**
	     * Checks if `value` is in the array cache.
	     *
	     * @private
	     * @name has
	     * @memberOf SetCache
	     * @param {*} value The value to search for.
	     * @returns {number} Returns `true` if `value` is found, else `false`.
	     */
	    function setCacheHas(value) {
	      return this.__data__.has(value);
	    }

	    // Add methods to `SetCache`.
	    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	    SetCache.prototype.has = setCacheHas;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a stack cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function Stack(entries) {
	      var data = this.__data__ = new ListCache(entries);
	      this.size = data.size;
	    }

	    /**
	     * Removes all key-value entries from the stack.
	     *
	     * @private
	     * @name clear
	     * @memberOf Stack
	     */
	    function stackClear() {
	      this.__data__ = new ListCache;
	      this.size = 0;
	    }

	    /**
	     * Removes `key` and its value from the stack.
	     *
	     * @private
	     * @name delete
	     * @memberOf Stack
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function stackDelete(key) {
	      var data = this.__data__,
	          result = data['delete'](key);

	      this.size = data.size;
	      return result;
	    }

	    /**
	     * Gets the stack value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Stack
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function stackGet(key) {
	      return this.__data__.get(key);
	    }

	    /**
	     * Checks if a stack value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Stack
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function stackHas(key) {
	      return this.__data__.has(key);
	    }

	    /**
	     * Sets the stack `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Stack
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the stack cache instance.
	     */
	    function stackSet(key, value) {
	      var data = this.__data__;
	      if (data instanceof ListCache) {
	        var pairs = data.__data__;
	        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	          pairs.push([key, value]);
	          this.size = ++data.size;
	          return this;
	        }
	        data = this.__data__ = new MapCache(pairs);
	      }
	      data.set(key, value);
	      this.size = data.size;
	      return this;
	    }

	    // Add methods to `Stack`.
	    Stack.prototype.clear = stackClear;
	    Stack.prototype['delete'] = stackDelete;
	    Stack.prototype.get = stackGet;
	    Stack.prototype.has = stackHas;
	    Stack.prototype.set = stackSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an array of the enumerable property names of the array-like `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @param {boolean} inherited Specify returning inherited property names.
	     * @returns {Array} Returns the array of property names.
	     */
	    function arrayLikeKeys(value, inherited) {
	      var isArr = isArray(value),
	          isArg = !isArr && isArguments(value),
	          isBuff = !isArr && !isArg && isBuffer(value),
	          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	          skipIndexes = isArr || isArg || isBuff || isType,
	          result = skipIndexes ? baseTimes(value.length, String) : [],
	          length = result.length;

	      for (var key in value) {
	        if ((inherited || hasOwnProperty.call(value, key)) &&
	            !(skipIndexes && (
	               // Safari 9 has enumerable `arguments.length` in strict mode.
	               key == 'length' ||
	               // Node.js 0.10 has enumerable non-index properties on buffers.
	               (isBuff && (key == 'offset' || key == 'parent')) ||
	               // PhantomJS 2 has enumerable non-index properties on typed arrays.
	               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	               // Skip index properties.
	               isIndex(key, length)
	            ))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * A specialized version of `_.sample` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @returns {*} Returns the random element.
	     */
	    function arraySample(array) {
	      var length = array.length;
	      return length ? array[baseRandom(0, length - 1)] : undefined;
	    }

	    /**
	     * A specialized version of `_.sampleSize` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */
	    function arraySampleSize(array, n) {
	      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
	    }

	    /**
	     * A specialized version of `_.shuffle` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */
	    function arrayShuffle(array) {
	      return shuffleSelf(copyArray(array));
	    }

	    /**
	     * This function is like `assignValue` except that it doesn't assign
	     * `undefined` values.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignMergeValue(object, key, value) {
	      if ((value !== undefined && !eq(object[key], value)) ||
	          (value === undefined && !(key in object))) {
	        baseAssignValue(object, key, value);
	      }
	    }

	    /**
	     * Assigns `value` to `key` of `object` if the existing value is not equivalent
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignValue(object, key, value) {
	      var objValue = object[key];
	      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	          (value === undefined && !(key in object))) {
	        baseAssignValue(object, key, value);
	      }
	    }

	    /**
	     * Gets the index at which the `key` is found in `array` of key-value pairs.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {*} key The key to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     */
	    function assocIndexOf(array, key) {
	      var length = array.length;
	      while (length--) {
	        if (eq(array[length][0], key)) {
	          return length;
	        }
	      }
	      return -1;
	    }

	    /**
	     * Aggregates elements of `collection` on `accumulator` with keys transformed
	     * by `iteratee` and values set by `setter`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform keys.
	     * @param {Object} accumulator The initial aggregated object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseAggregator(collection, setter, iteratee, accumulator) {
	      baseEach(collection, function(value, key, collection) {
	        setter(accumulator, value, iteratee(value), collection);
	      });
	      return accumulator;
	    }

	    /**
	     * The base implementation of `_.assign` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssign(object, source) {
	      return object && copyObject(source, keys(source), object);
	    }

	    /**
	     * The base implementation of `_.assignIn` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssignIn(object, source) {
	      return object && copyObject(source, keysIn(source), object);
	    }

	    /**
	     * The base implementation of `assignValue` and `assignMergeValue` without
	     * value checks.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function baseAssignValue(object, key, value) {
	      if (key == '__proto__' && defineProperty) {
	        defineProperty(object, key, {
	          'configurable': true,
	          'enumerable': true,
	          'value': value,
	          'writable': true
	        });
	      } else {
	        object[key] = value;
	      }
	    }

	    /**
	     * The base implementation of `_.at` without support for individual paths.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {string[]} paths The property paths to pick.
	     * @returns {Array} Returns the picked elements.
	     */
	    function baseAt(object, paths) {
	      var index = -1,
	          length = paths.length,
	          result = Array(length),
	          skip = object == null;

	      while (++index < length) {
	        result[index] = skip ? undefined : get(object, paths[index]);
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.clamp` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     */
	    function baseClamp(number, lower, upper) {
	      if (number === number) {
	        if (upper !== undefined) {
	          number = number <= upper ? number : upper;
	        }
	        if (lower !== undefined) {
	          number = number >= lower ? number : lower;
	        }
	      }
	      return number;
	    }

	    /**
	     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	     * traversed objects.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} bitmask The bitmask flags.
	     *  1 - Deep clone
	     *  2 - Flatten inherited properties
	     *  4 - Clone symbols
	     * @param {Function} [customizer] The function to customize cloning.
	     * @param {string} [key] The key of `value`.
	     * @param {Object} [object] The parent object of `value`.
	     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	     * @returns {*} Returns the cloned value.
	     */
	    function baseClone(value, bitmask, customizer, key, object, stack) {
	      var result,
	          isDeep = bitmask & CLONE_DEEP_FLAG,
	          isFlat = bitmask & CLONE_FLAT_FLAG,
	          isFull = bitmask & CLONE_SYMBOLS_FLAG;

	      if (customizer) {
	        result = object ? customizer(value, key, object, stack) : customizer(value);
	      }
	      if (result !== undefined) {
	        return result;
	      }
	      if (!isObject(value)) {
	        return value;
	      }
	      var isArr = isArray(value);
	      if (isArr) {
	        result = initCloneArray(value);
	        if (!isDeep) {
	          return copyArray(value, result);
	        }
	      } else {
	        var tag = getTag(value),
	            isFunc = tag == funcTag || tag == genTag;

	        if (isBuffer(value)) {
	          return cloneBuffer(value, isDeep);
	        }
	        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	          result = (isFlat || isFunc) ? {} : initCloneObject(value);
	          if (!isDeep) {
	            return isFlat
	              ? copySymbolsIn(value, baseAssignIn(result, value))
	              : copySymbols(value, baseAssign(result, value));
	          }
	        } else {
	          if (!cloneableTags[tag]) {
	            return object ? value : {};
	          }
	          result = initCloneByTag(value, tag, baseClone, isDeep);
	        }
	      }
	      // Check for circular references and return its corresponding clone.
	      stack || (stack = new Stack);
	      var stacked = stack.get(value);
	      if (stacked) {
	        return stacked;
	      }
	      stack.set(value, result);

	      var keysFunc = isFull
	        ? (isFlat ? getAllKeysIn : getAllKeys)
	        : (isFlat ? keysIn : keys);

	      var props = isArr ? undefined : keysFunc(value);
	      arrayEach(props || value, function(subValue, key) {
	        if (props) {
	          key = subValue;
	          subValue = value[key];
	        }
	        // Recursively populate clone (susceptible to call stack limits).
	        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.conforms` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseConforms(source) {
	      var props = keys(source);
	      return function(object) {
	        return baseConformsTo(object, source, props);
	      };
	    }

	    /**
	     * The base implementation of `_.conformsTo` which accepts `props` to check.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     */
	    function baseConformsTo(object, source, props) {
	      var length = props.length;
	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (length--) {
	        var key = props[length],
	            predicate = source[key],
	            value = object[key];

	        if ((value === undefined && !(key in object)) || !predicate(value)) {
	          return false;
	        }
	      }
	      return true;
	    }

	    /**
	     * The base implementation of `_.delay` and `_.defer` which accepts `args`
	     * to provide to `func`.
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {Array} args The arguments to provide to `func`.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */
	    function baseDelay(func, wait, args) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return setTimeout(function() { func.apply(undefined, args); }, wait);
	    }

	    /**
	     * The base implementation of methods like `_.difference` without support
	     * for excluding multiple arrays or iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Array} values The values to exclude.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     */
	    function baseDifference(array, values, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          isCommon = true,
	          length = array.length,
	          result = [],
	          valuesLength = values.length;

	      if (!length) {
	        return result;
	      }
	      if (iteratee) {
	        values = arrayMap(values, baseUnary(iteratee));
	      }
	      if (comparator) {
	        includes = arrayIncludesWith;
	        isCommon = false;
	      }
	      else if (values.length >= LARGE_ARRAY_SIZE) {
	        includes = cacheHas;
	        isCommon = false;
	        values = new SetCache(values);
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee == null ? value : iteratee(value);

	        value = (comparator || value !== 0) ? value : 0;
	        if (isCommon && computed === computed) {
	          var valuesIndex = valuesLength;
	          while (valuesIndex--) {
	            if (values[valuesIndex] === computed) {
	              continue outer;
	            }
	          }
	          result.push(value);
	        }
	        else if (!includes(values, computed, comparator)) {
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.forEach` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEach = createBaseEach(baseForOwn);

	    /**
	     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEachRight = createBaseEach(baseForOwnRight, true);

	    /**
	     * The base implementation of `_.every` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`
	     */
	    function baseEvery(collection, predicate) {
	      var result = true;
	      baseEach(collection, function(value, index, collection) {
	        result = !!predicate(value, index, collection);
	        return result;
	      });
	      return result;
	    }

	    /**
	     * The base implementation of methods like `_.max` and `_.min` which accepts a
	     * `comparator` to determine the extremum value.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The iteratee invoked per iteration.
	     * @param {Function} comparator The comparator used to compare values.
	     * @returns {*} Returns the extremum value.
	     */
	    function baseExtremum(array, iteratee, comparator) {
	      var index = -1,
	          length = array.length;

	      while (++index < length) {
	        var value = array[index],
	            current = iteratee(value);

	        if (current != null && (computed === undefined
	              ? (current === current && !isSymbol(current))
	              : comparator(current, computed)
	            )) {
	          var computed = current,
	              result = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.fill` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     */
	    function baseFill(array, value, start, end) {
	      var length = array.length;

	      start = toInteger(start);
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = (end === undefined || end > length) ? length : toInteger(end);
	      if (end < 0) {
	        end += length;
	      }
	      end = start > end ? 0 : toLength(end);
	      while (start < end) {
	        array[start++] = value;
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.filter` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */
	    function baseFilter(collection, predicate) {
	      var result = [];
	      baseEach(collection, function(value, index, collection) {
	        if (predicate(value, index, collection)) {
	          result.push(value);
	        }
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.flatten` with support for restricting flattening.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {number} depth The maximum recursion depth.
	     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	     * @param {Array} [result=[]] The initial result value.
	     * @returns {Array} Returns the new flattened array.
	     */
	    function baseFlatten(array, depth, predicate, isStrict, result) {
	      var index = -1,
	          length = array.length;

	      predicate || (predicate = isFlattenable);
	      result || (result = []);

	      while (++index < length) {
	        var value = array[index];
	        if (depth > 0 && predicate(value)) {
	          if (depth > 1) {
	            // Recursively flatten arrays (susceptible to call stack limits).
	            baseFlatten(value, depth - 1, predicate, isStrict, result);
	          } else {
	            arrayPush(result, value);
	          }
	        } else if (!isStrict) {
	          result[result.length] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `baseForOwn` which iterates over `object`
	     * properties returned by `keysFunc` and invokes `iteratee` for each property.
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseFor = createBaseFor();

	    /**
	     * This function is like `baseFor` except that it iterates over properties
	     * in the opposite order.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseForRight = createBaseFor(true);

	    /**
	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwn(object, iteratee) {
	      return object && baseFor(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwnRight(object, iteratee) {
	      return object && baseForRight(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.functions` which creates an array of
	     * `object` function property names filtered from `props`.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} props The property names to filter.
	     * @returns {Array} Returns the function names.
	     */
	    function baseFunctions(object, props) {
	      return arrayFilter(props, function(key) {
	        return isFunction(object[key]);
	      });
	    }

	    /**
	     * The base implementation of `_.get` without support for default values.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseGet(object, path) {
	      path = castPath(path, object);

	      var index = 0,
	          length = path.length;

	      while (object != null && index < length) {
	        object = object[toKey(path[index++])];
	      }
	      return (index && index == length) ? object : undefined;
	    }

	    /**
	     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @param {Function} symbolsFunc The function to get the symbols of `object`.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	      var result = keysFunc(object);
	      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	    }

	    /**
	     * The base implementation of `getTag` without fallbacks for buggy environments.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    function baseGetTag(value) {
	      if (value == null) {
	        return value === undefined ? undefinedTag : nullTag;
	      }
	      return (symToStringTag && symToStringTag in Object(value))
	        ? getRawTag(value)
	        : objectToString(value);
	    }

	    /**
	     * The base implementation of `_.gt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     */
	    function baseGt(value, other) {
	      return value > other;
	    }

	    /**
	     * The base implementation of `_.has` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHas(object, key) {
	      return object != null && hasOwnProperty.call(object, key);
	    }

	    /**
	     * The base implementation of `_.hasIn` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHasIn(object, key) {
	      return object != null && key in Object(object);
	    }

	    /**
	     * The base implementation of `_.inRange` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to check.
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     */
	    function baseInRange(number, start, end) {
	      return number >= nativeMin(start, end) && number < nativeMax(start, end);
	    }

	    /**
	     * The base implementation of methods like `_.intersection`, without support
	     * for iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of shared values.
	     */
	    function baseIntersection(arrays, iteratee, comparator) {
	      var includes = comparator ? arrayIncludesWith : arrayIncludes,
	          length = arrays[0].length,
	          othLength = arrays.length,
	          othIndex = othLength,
	          caches = Array(othLength),
	          maxLength = Infinity,
	          result = [];

	      while (othIndex--) {
	        var array = arrays[othIndex];
	        if (othIndex && iteratee) {
	          array = arrayMap(array, baseUnary(iteratee));
	        }
	        maxLength = nativeMin(array.length, maxLength);
	        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	          ? new SetCache(othIndex && array)
	          : undefined;
	      }
	      array = arrays[0];

	      var index = -1,
	          seen = caches[0];

	      outer:
	      while (++index < length && result.length < maxLength) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        value = (comparator || value !== 0) ? value : 0;
	        if (!(seen
	              ? cacheHas(seen, computed)
	              : includes(result, computed, comparator)
	            )) {
	          othIndex = othLength;
	          while (--othIndex) {
	            var cache = caches[othIndex];
	            if (!(cache
	                  ? cacheHas(cache, computed)
	                  : includes(arrays[othIndex], computed, comparator))
	                ) {
	              continue outer;
	            }
	          }
	          if (seen) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.invert` and `_.invertBy` which inverts
	     * `object` with values transformed by `iteratee` and set by `setter`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform values.
	     * @param {Object} accumulator The initial inverted object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseInverter(object, setter, iteratee, accumulator) {
	      baseForOwn(object, function(value, key, object) {
	        setter(accumulator, iteratee(value), key, object);
	      });
	      return accumulator;
	    }

	    /**
	     * The base implementation of `_.invoke` without support for individual
	     * method arguments.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {Array} args The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     */
	    function baseInvoke(object, path, args) {
	      path = castPath(path, object);
	      object = parent(object, path);
	      var func = object == null ? object : object[toKey(last(path))];
	      return func == null ? undefined : apply(func, object, args);
	    }

	    /**
	     * The base implementation of `_.isArguments`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     */
	    function baseIsArguments(value) {
	      return isObjectLike(value) && baseGetTag(value) == argsTag;
	    }

	    /**
	     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     */
	    function baseIsArrayBuffer(value) {
	      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
	    }

	    /**
	     * The base implementation of `_.isDate` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     */
	    function baseIsDate(value) {
	      return isObjectLike(value) && baseGetTag(value) == dateTag;
	    }

	    /**
	     * The base implementation of `_.isEqual` which supports partial comparisons
	     * and tracks traversed objects.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {boolean} bitmask The bitmask flags.
	     *  1 - Unordered comparison
	     *  2 - Partial comparison
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */
	    function baseIsEqual(value, other, bitmask, customizer, stack) {
	      if (value === other) {
	        return true;
	      }
	      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
	        return value !== value && other !== other;
	      }
	      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	    }

	    /**
	     * A specialized version of `baseIsEqual` for arrays and objects which performs
	     * deep comparisons and tracks traversed objects enabling objects with circular
	     * references to be compared.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	      var objIsArr = isArray(object),
	          othIsArr = isArray(other),
	          objTag = objIsArr ? arrayTag : getTag(object),
	          othTag = othIsArr ? arrayTag : getTag(other);

	      objTag = objTag == argsTag ? objectTag : objTag;
	      othTag = othTag == argsTag ? objectTag : othTag;

	      var objIsObj = objTag == objectTag,
	          othIsObj = othTag == objectTag,
	          isSameTag = objTag == othTag;

	      if (isSameTag && isBuffer(object)) {
	        if (!isBuffer(other)) {
	          return false;
	        }
	        objIsArr = true;
	        objIsObj = false;
	      }
	      if (isSameTag && !objIsObj) {
	        stack || (stack = new Stack);
	        return (objIsArr || isTypedArray(object))
	          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	      }
	      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	        if (objIsWrapped || othIsWrapped) {
	          var objUnwrapped = objIsWrapped ? object.value() : object,
	              othUnwrapped = othIsWrapped ? other.value() : other;

	          stack || (stack = new Stack);
	          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	        }
	      }
	      if (!isSameTag) {
	        return false;
	      }
	      stack || (stack = new Stack);
	      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	    }

	    /**
	     * The base implementation of `_.isMap` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     */
	    function baseIsMap(value) {
	      return isObjectLike(value) && getTag(value) == mapTag;
	    }

	    /**
	     * The base implementation of `_.isMatch` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Array} matchData The property names, values, and compare flags to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     */
	    function baseIsMatch(object, source, matchData, customizer) {
	      var index = matchData.length,
	          length = index,
	          noCustomizer = !customizer;

	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (index--) {
	        var data = matchData[index];
	        if ((noCustomizer && data[2])
	              ? data[1] !== object[data[0]]
	              : !(data[0] in object)
	            ) {
	          return false;
	        }
	      }
	      while (++index < length) {
	        data = matchData[index];
	        var key = data[0],
	            objValue = object[key],
	            srcValue = data[1];

	        if (noCustomizer && data[2]) {
	          if (objValue === undefined && !(key in object)) {
	            return false;
	          }
	        } else {
	          var stack = new Stack;
	          if (customizer) {
	            var result = customizer(objValue, srcValue, key, object, source, stack);
	          }
	          if (!(result === undefined
	                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
	                : result
	              )) {
	            return false;
	          }
	        }
	      }
	      return true;
	    }

	    /**
	     * The base implementation of `_.isNative` without bad shim checks.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     */
	    function baseIsNative(value) {
	      if (!isObject(value) || isMasked(value)) {
	        return false;
	      }
	      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	      return pattern.test(toSource(value));
	    }

	    /**
	     * The base implementation of `_.isRegExp` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     */
	    function baseIsRegExp(value) {
	      return isObjectLike(value) && baseGetTag(value) == regexpTag;
	    }

	    /**
	     * The base implementation of `_.isSet` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     */
	    function baseIsSet(value) {
	      return isObjectLike(value) && getTag(value) == setTag;
	    }

	    /**
	     * The base implementation of `_.isTypedArray` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     */
	    function baseIsTypedArray(value) {
	      return isObjectLike(value) &&
	        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	    }

	    /**
	     * The base implementation of `_.iteratee`.
	     *
	     * @private
	     * @param {*} [value=_.identity] The value to convert to an iteratee.
	     * @returns {Function} Returns the iteratee.
	     */
	    function baseIteratee(value) {
	      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	      if (typeof value == 'function') {
	        return value;
	      }
	      if (value == null) {
	        return identity;
	      }
	      if (typeof value == 'object') {
	        return isArray(value)
	          ? baseMatchesProperty(value[0], value[1])
	          : baseMatches(value);
	      }
	      return property(value);
	    }

	    /**
	     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeys(object) {
	      if (!isPrototype(object)) {
	        return nativeKeys(object);
	      }
	      var result = [];
	      for (var key in Object(object)) {
	        if (hasOwnProperty.call(object, key) && key != 'constructor') {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeysIn(object) {
	      if (!isObject(object)) {
	        return nativeKeysIn(object);
	      }
	      var isProto = isPrototype(object),
	          result = [];

	      for (var key in object) {
	        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.lt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     */
	    function baseLt(value, other) {
	      return value < other;
	    }

	    /**
	     * The base implementation of `_.map` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */
	    function baseMap(collection, iteratee) {
	      var index = -1,
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value, key, collection) {
	        result[++index] = iteratee(value, key, collection);
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.matches` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseMatches(source) {
	      var matchData = getMatchData(source);
	      if (matchData.length == 1 && matchData[0][2]) {
	        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	      }
	      return function(object) {
	        return object === source || baseIsMatch(object, source, matchData);
	      };
	    }

	    /**
	     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	     *
	     * @private
	     * @param {string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseMatchesProperty(path, srcValue) {
	      if (isKey(path) && isStrictComparable(srcValue)) {
	        return matchesStrictComparable(toKey(path), srcValue);
	      }
	      return function(object) {
	        var objValue = get(object, path);
	        return (objValue === undefined && objValue === srcValue)
	          ? hasIn(object, path)
	          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
	      };
	    }

	    /**
	     * The base implementation of `_.merge` without support for multiple sources.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMerge(object, source, srcIndex, customizer, stack) {
	      if (object === source) {
	        return;
	      }
	      baseFor(source, function(srcValue, key) {
	        if (isObject(srcValue)) {
	          stack || (stack = new Stack);
	          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	        }
	        else {
	          var newValue = customizer
	            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	            : undefined;

	          if (newValue === undefined) {
	            newValue = srcValue;
	          }
	          assignMergeValue(object, key, newValue);
	        }
	      }, keysIn);
	    }

	    /**
	     * A specialized version of `baseMerge` for arrays and objects which performs
	     * deep merges and tracks traversed objects enabling objects with circular
	     * references to be merged.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {string} key The key of the value to merge.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} mergeFunc The function to merge values.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	      var objValue = object[key],
	          srcValue = source[key],
	          stacked = stack.get(srcValue);

	      if (stacked) {
	        assignMergeValue(object, key, stacked);
	        return;
	      }
	      var newValue = customizer
	        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	        : undefined;

	      var isCommon = newValue === undefined;

	      if (isCommon) {
	        var isArr = isArray(srcValue),
	            isBuff = !isArr && isBuffer(srcValue),
	            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

	        newValue = srcValue;
	        if (isArr || isBuff || isTyped) {
	          if (isArray(objValue)) {
	            newValue = objValue;
	          }
	          else if (isArrayLikeObject(objValue)) {
	            newValue = copyArray(objValue);
	          }
	          else if (isBuff) {
	            isCommon = false;
	            newValue = cloneBuffer(srcValue, true);
	          }
	          else if (isTyped) {
	            isCommon = false;
	            newValue = cloneTypedArray(srcValue, true);
	          }
	          else {
	            newValue = [];
	          }
	        }
	        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	          newValue = objValue;
	          if (isArguments(objValue)) {
	            newValue = toPlainObject(objValue);
	          }
	          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	            newValue = initCloneObject(srcValue);
	          }
	        }
	        else {
	          isCommon = false;
	        }
	      }
	      if (isCommon) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        stack.set(srcValue, newValue);
	        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	        stack['delete'](srcValue);
	      }
	      assignMergeValue(object, key, newValue);
	    }

	    /**
	     * The base implementation of `_.nth` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {number} n The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     */
	    function baseNth(array, n) {
	      var length = array.length;
	      if (!length) {
	        return;
	      }
	      n += n < 0 ? length : 0;
	      return isIndex(n, length) ? array[n] : undefined;
	    }

	    /**
	     * The base implementation of `_.orderBy` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {string[]} orders The sort orders of `iteratees`.
	     * @returns {Array} Returns the new sorted array.
	     */
	    function baseOrderBy(collection, iteratees, orders) {
	      var index = -1;
	      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

	      var result = baseMap(collection, function(value, key, collection) {
	        var criteria = arrayMap(iteratees, function(iteratee) {
	          return iteratee(value);
	        });
	        return { 'criteria': criteria, 'index': ++index, 'value': value };
	      });

	      return baseSortBy(result, function(object, other) {
	        return compareMultiple(object, other, orders);
	      });
	    }

	    /**
	     * The base implementation of `_.pick` without support for individual
	     * property identifiers.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} paths The property paths to pick.
	     * @returns {Object} Returns the new object.
	     */
	    function basePick(object, paths) {
	      return basePickBy(object, paths, function(value, path) {
	        return hasIn(object, path);
	      });
	    }

	    /**
	     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} paths The property paths to pick.
	     * @param {Function} predicate The function invoked per property.
	     * @returns {Object} Returns the new object.
	     */
	    function basePickBy(object, paths, predicate) {
	      var index = -1,
	          length = paths.length,
	          result = {};

	      while (++index < length) {
	        var path = paths[index],
	            value = baseGet(object, path);

	        if (predicate(value, path)) {
	          baseSet(result, castPath(path, object), value);
	        }
	      }
	      return result;
	    }

	    /**
	     * A specialized version of `baseProperty` which supports deep paths.
	     *
	     * @private
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     */
	    function basePropertyDeep(path) {
	      return function(object) {
	        return baseGet(object, path);
	      };
	    }

	    /**
	     * The base implementation of `_.pullAllBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAll(array, values, iteratee, comparator) {
	      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
	          index = -1,
	          length = values.length,
	          seen = array;

	      if (array === values) {
	        values = copyArray(values);
	      }
	      if (iteratee) {
	        seen = arrayMap(array, baseUnary(iteratee));
	      }
	      while (++index < length) {
	        var fromIndex = 0,
	            value = values[index],
	            computed = iteratee ? iteratee(value) : value;

	        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
	          if (seen !== array) {
	            splice.call(seen, fromIndex, 1);
	          }
	          splice.call(array, fromIndex, 1);
	        }
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.pullAt` without support for individual
	     * indexes or capturing the removed elements.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {number[]} indexes The indexes of elements to remove.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAt(array, indexes) {
	      var length = array ? indexes.length : 0,
	          lastIndex = length - 1;

	      while (length--) {
	        var index = indexes[length];
	        if (length == lastIndex || index !== previous) {
	          var previous = index;
	          if (isIndex(index)) {
	            splice.call(array, index, 1);
	          } else {
	            baseUnset(array, index);
	          }
	        }
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.random` without support for returning
	     * floating-point numbers.
	     *
	     * @private
	     * @param {number} lower The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the random number.
	     */
	    function baseRandom(lower, upper) {
	      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
	    }

	    /**
	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
	     * coerce arguments.
	     *
	     * @private
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} step The value to increment or decrement by.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the range of numbers.
	     */
	    function baseRange(start, end, step, fromRight) {
	      var index = -1,
	          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	          result = Array(length);

	      while (length--) {
	        result[fromRight ? length : ++index] = start;
	        start += step;
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.repeat` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {string} string The string to repeat.
	     * @param {number} n The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     */
	    function baseRepeat(string, n) {
	      var result = '';
	      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
	        return result;
	      }
	      // Leverage the exponentiation by squaring algorithm for a faster repeat.
	      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
	      do {
	        if (n % 2) {
	          result += string;
	        }
	        n = nativeFloor(n / 2);
	        if (n) {
	          string += string;
	        }
	      } while (n);

	      return result;
	    }

	    /**
	     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     */
	    function baseRest(func, start) {
	      return setToString(overRest(func, start, identity), func + '');
	    }

	    /**
	     * The base implementation of `_.sample`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     */
	    function baseSample(collection) {
	      return arraySample(values(collection));
	    }

	    /**
	     * The base implementation of `_.sampleSize` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */
	    function baseSampleSize(collection, n) {
	      var array = values(collection);
	      return shuffleSelf(array, baseClamp(n, 0, array.length));
	    }

	    /**
	     * The base implementation of `_.set`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseSet(object, path, value, customizer) {
	      if (!isObject(object)) {
	        return object;
	      }
	      path = castPath(path, object);

	      var index = -1,
	          length = path.length,
	          lastIndex = length - 1,
	          nested = object;

	      while (nested != null && ++index < length) {
	        var key = toKey(path[index]),
	            newValue = value;

	        if (index != lastIndex) {
	          var objValue = nested[key];
	          newValue = customizer ? customizer(objValue, key, nested) : undefined;
	          if (newValue === undefined) {
	            newValue = isObject(objValue)
	              ? objValue
	              : (isIndex(path[index + 1]) ? [] : {});
	          }
	        }
	        assignValue(nested, key, newValue);
	        nested = nested[key];
	      }
	      return object;
	    }

	    /**
	     * The base implementation of `setData` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetData = !metaMap ? identity : function(func, data) {
	      metaMap.set(func, data);
	      return func;
	    };

	    /**
	     * The base implementation of `setToString` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetToString = !defineProperty ? identity : function(func, string) {
	      return defineProperty(func, 'toString', {
	        'configurable': true,
	        'enumerable': false,
	        'value': constant(string),
	        'writable': true
	      });
	    };

	    /**
	     * The base implementation of `_.shuffle`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */
	    function baseShuffle(collection) {
	      return shuffleSelf(values(collection));
	    }

	    /**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseSlice(array, start, end) {
	      var index = -1,
	          length = array.length;

	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = end > length ? length : end;
	      if (end < 0) {
	        end += length;
	      }
	      length = start > end ? 0 : ((end - start) >>> 0);
	      start >>>= 0;

	      var result = Array(length);
	      while (++index < length) {
	        result[index] = array[index + start];
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.some` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */
	    function baseSome(collection, predicate) {
	      var result;

	      baseEach(collection, function(value, index, collection) {
	        result = predicate(value, index, collection);
	        return !result;
	      });
	      return !!result;
	    }

	    /**
	     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
	     * performs a binary search of `array` to determine the index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndex(array, value, retHighest) {
	      var low = 0,
	          high = array == null ? low : array.length;

	      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
	        while (low < high) {
	          var mid = (low + high) >>> 1,
	              computed = array[mid];

	          if (computed !== null && !isSymbol(computed) &&
	              (retHighest ? (computed <= value) : (computed < value))) {
	            low = mid + 1;
	          } else {
	            high = mid;
	          }
	        }
	        return high;
	      }
	      return baseSortedIndexBy(array, value, identity, retHighest);
	    }

	    /**
	     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
	     * which invokes `iteratee` for `value` and each element of `array` to compute
	     * their sort ranking. The iteratee is invoked with one argument; (value).
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} iteratee The iteratee invoked per element.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndexBy(array, value, iteratee, retHighest) {
	      value = iteratee(value);

	      var low = 0,
	          high = array == null ? 0 : array.length,
	          valIsNaN = value !== value,
	          valIsNull = value === null,
	          valIsSymbol = isSymbol(value),
	          valIsUndefined = value === undefined;

	      while (low < high) {
	        var mid = nativeFloor((low + high) / 2),
	            computed = iteratee(array[mid]),
	            othIsDefined = computed !== undefined,
	            othIsNull = computed === null,
	            othIsReflexive = computed === computed,
	            othIsSymbol = isSymbol(computed);

	        if (valIsNaN) {
	          var setLow = retHighest || othIsReflexive;
	        } else if (valIsUndefined) {
	          setLow = othIsReflexive && (retHighest || othIsDefined);
	        } else if (valIsNull) {
	          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
	        } else if (valIsSymbol) {
	          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
	        } else if (othIsNull || othIsSymbol) {
	          setLow = false;
	        } else {
	          setLow = retHighest ? (computed <= value) : (computed < value);
	        }
	        if (setLow) {
	          low = mid + 1;
	        } else {
	          high = mid;
	        }
	      }
	      return nativeMin(high, MAX_ARRAY_INDEX);
	    }

	    /**
	     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
	     * support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseSortedUniq(array, iteratee) {
	      var index = -1,
	          length = array.length,
	          resIndex = 0,
	          result = [];

	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        if (!index || !eq(computed, seen)) {
	          var seen = computed;
	          result[resIndex++] = value === 0 ? 0 : value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.toNumber` which doesn't ensure correct
	     * conversions of binary, hexadecimal, or octal string values.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     */
	    function baseToNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      return +value;
	    }

	    /**
	     * The base implementation of `_.toString` which doesn't convert nullish
	     * values to empty strings.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     */
	    function baseToString(value) {
	      // Exit early for strings to avoid a performance hit in some environments.
	      if (typeof value == 'string') {
	        return value;
	      }
	      if (isArray(value)) {
	        // Recursively convert values (susceptible to call stack limits).
	        return arrayMap(value, baseToString) + '';
	      }
	      if (isSymbol(value)) {
	        return symbolToString ? symbolToString.call(value) : '';
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }

	    /**
	     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseUniq(array, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          length = array.length,
	          isCommon = true,
	          result = [],
	          seen = result;

	      if (comparator) {
	        isCommon = false;
	        includes = arrayIncludesWith;
	      }
	      else if (length >= LARGE_ARRAY_SIZE) {
	        var set = iteratee ? null : createSet(array);
	        if (set) {
	          return setToArray(set);
	        }
	        isCommon = false;
	        includes = cacheHas;
	        seen = new SetCache;
	      }
	      else {
	        seen = iteratee ? [] : result;
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        value = (comparator || value !== 0) ? value : 0;
	        if (isCommon && computed === computed) {
	          var seenIndex = seen.length;
	          while (seenIndex--) {
	            if (seen[seenIndex] === computed) {
	              continue outer;
	            }
	          }
	          if (iteratee) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	        else if (!includes(seen, computed, comparator)) {
	          if (seen !== result) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.unset`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The property path to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     */
	    function baseUnset(object, path) {
	      path = castPath(path, object);
	      object = parent(object, path);
	      return object == null || delete object[toKey(last(path))];
	    }

	    /**
	     * The base implementation of `_.update`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to update.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseUpdate(object, path, updater, customizer) {
	      return baseSet(object, path, updater(baseGet(object, path)), customizer);
	    }

	    /**
	     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
	     * without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseWhile(array, predicate, isDrop, fromRight) {
	      var length = array.length,
	          index = fromRight ? length : -1;

	      while ((fromRight ? index-- : ++index < length) &&
	        predicate(array[index], index, array)) {}

	      return isDrop
	        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
	        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
	    }

	    /**
	     * The base implementation of `wrapperValue` which returns the result of
	     * performing a sequence of actions on the unwrapped `value`, where each
	     * successive action is supplied the return value of the previous.
	     *
	     * @private
	     * @param {*} value The unwrapped value.
	     * @param {Array} actions Actions to perform to resolve the unwrapped value.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseWrapperValue(value, actions) {
	      var result = value;
	      if (result instanceof LazyWrapper) {
	        result = result.value();
	      }
	      return arrayReduce(actions, function(result, action) {
	        return action.func.apply(action.thisArg, arrayPush([result], action.args));
	      }, result);
	    }

	    /**
	     * The base implementation of methods like `_.xor`, without support for
	     * iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     */
	    function baseXor(arrays, iteratee, comparator) {
	      var length = arrays.length;
	      if (length < 2) {
	        return length ? baseUniq(arrays[0]) : [];
	      }
	      var index = -1,
	          result = Array(length);

	      while (++index < length) {
	        var array = arrays[index],
	            othIndex = -1;

	        while (++othIndex < length) {
	          if (othIndex != index) {
	            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
	          }
	        }
	      }
	      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
	    }

	    /**
	     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
	     *
	     * @private
	     * @param {Array} props The property identifiers.
	     * @param {Array} values The property values.
	     * @param {Function} assignFunc The function to assign values.
	     * @returns {Object} Returns the new object.
	     */
	    function baseZipObject(props, values, assignFunc) {
	      var index = -1,
	          length = props.length,
	          valsLength = values.length,
	          result = {};

	      while (++index < length) {
	        var value = index < valsLength ? values[index] : undefined;
	        assignFunc(result, props[index], value);
	      }
	      return result;
	    }

	    /**
	     * Casts `value` to an empty array if it's not an array like object.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array|Object} Returns the cast array-like object.
	     */
	    function castArrayLikeObject(value) {
	      return isArrayLikeObject(value) ? value : [];
	    }

	    /**
	     * Casts `value` to `identity` if it's not a function.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Function} Returns cast function.
	     */
	    function castFunction(value) {
	      return typeof value == 'function' ? value : identity;
	    }

	    /**
	     * Casts `value` to a path array if it's not one.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {Array} Returns the cast property path array.
	     */
	    function castPath(value, object) {
	      if (isArray(value)) {
	        return value;
	      }
	      return isKey(value, object) ? [value] : stringToPath(toString(value));
	    }

	    /**
	     * A `baseRest` alias which can be replaced with `identity` by module
	     * replacement plugins.
	     *
	     * @private
	     * @type {Function}
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */
	    var castRest = baseRest;

	    /**
	     * Casts `array` to a slice if it's needed.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {number} start The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the cast slice.
	     */
	    function castSlice(array, start, end) {
	      var length = array.length;
	      end = end === undefined ? length : end;
	      return (!start && end >= length) ? array : baseSlice(array, start, end);
	    }

	    /**
	     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
	     *
	     * @private
	     * @param {number|Object} id The timer id or timeout object of the timer to clear.
	     */
	    var clearTimeout = ctxClearTimeout || function(id) {
	      return root.clearTimeout(id);
	    };

	    /**
	     * Creates a clone of  `buffer`.
	     *
	     * @private
	     * @param {Buffer} buffer The buffer to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Buffer} Returns the cloned buffer.
	     */
	    function cloneBuffer(buffer, isDeep) {
	      if (isDeep) {
	        return buffer.slice();
	      }
	      var length = buffer.length,
	          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

	      buffer.copy(result);
	      return result;
	    }

	    /**
	     * Creates a clone of `arrayBuffer`.
	     *
	     * @private
	     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	     * @returns {ArrayBuffer} Returns the cloned array buffer.
	     */
	    function cloneArrayBuffer(arrayBuffer) {
	      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	      return result;
	    }

	    /**
	     * Creates a clone of `dataView`.
	     *
	     * @private
	     * @param {Object} dataView The data view to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned data view.
	     */
	    function cloneDataView(dataView, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	    }

	    /**
	     * Creates a clone of `map`.
	     *
	     * @private
	     * @param {Object} map The map to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned map.
	     */
	    function cloneMap(map, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
	      return arrayReduce(array, addMapEntry, new map.constructor);
	    }

	    /**
	     * Creates a clone of `regexp`.
	     *
	     * @private
	     * @param {Object} regexp The regexp to clone.
	     * @returns {Object} Returns the cloned regexp.
	     */
	    function cloneRegExp(regexp) {
	      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	      result.lastIndex = regexp.lastIndex;
	      return result;
	    }

	    /**
	     * Creates a clone of `set`.
	     *
	     * @private
	     * @param {Object} set The set to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned set.
	     */
	    function cloneSet(set, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
	      return arrayReduce(array, addSetEntry, new set.constructor);
	    }

	    /**
	     * Creates a clone of the `symbol` object.
	     *
	     * @private
	     * @param {Object} symbol The symbol object to clone.
	     * @returns {Object} Returns the cloned symbol object.
	     */
	    function cloneSymbol(symbol) {
	      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	    }

	    /**
	     * Creates a clone of `typedArray`.
	     *
	     * @private
	     * @param {Object} typedArray The typed array to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned typed array.
	     */
	    function cloneTypedArray(typedArray, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	    }

	    /**
	     * Compares values to sort them in ascending order.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {number} Returns the sort order indicator for `value`.
	     */
	    function compareAscending(value, other) {
	      if (value !== other) {
	        var valIsDefined = value !== undefined,
	            valIsNull = value === null,
	            valIsReflexive = value === value,
	            valIsSymbol = isSymbol(value);

	        var othIsDefined = other !== undefined,
	            othIsNull = other === null,
	            othIsReflexive = other === other,
	            othIsSymbol = isSymbol(other);

	        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	            (valIsNull && othIsDefined && othIsReflexive) ||
	            (!valIsDefined && othIsReflexive) ||
	            !valIsReflexive) {
	          return 1;
	        }
	        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	            (othIsNull && valIsDefined && valIsReflexive) ||
	            (!othIsDefined && valIsReflexive) ||
	            !othIsReflexive) {
	          return -1;
	        }
	      }
	      return 0;
	    }

	    /**
	     * Used by `_.orderBy` to compare multiple properties of a value to another
	     * and stable sort them.
	     *
	     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	     * specify an order of "desc" for descending or "asc" for ascending sort order
	     * of corresponding values.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {boolean[]|string[]} orders The order to sort by for each property.
	     * @returns {number} Returns the sort order indicator for `object`.
	     */
	    function compareMultiple(object, other, orders) {
	      var index = -1,
	          objCriteria = object.criteria,
	          othCriteria = other.criteria,
	          length = objCriteria.length,
	          ordersLength = orders.length;

	      while (++index < length) {
	        var result = compareAscending(objCriteria[index], othCriteria[index]);
	        if (result) {
	          if (index >= ordersLength) {
	            return result;
	          }
	          var order = orders[index];
	          return result * (order == 'desc' ? -1 : 1);
	        }
	      }
	      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	      // that causes it, under certain circumstances, to provide the same value for
	      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	      // for more details.
	      //
	      // This also ensures a stable sort in V8 and other engines.
	      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	      return object.index - other.index;
	    }

	    /**
	     * Creates an array that is the composition of partially applied arguments,
	     * placeholders, and provided arguments into a single array of arguments.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to prepend to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgs(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersLength = holders.length,
	          leftIndex = -1,
	          leftLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(leftLength + rangeLength),
	          isUncurried = !isCurried;

	      while (++leftIndex < leftLength) {
	        result[leftIndex] = partials[leftIndex];
	      }
	      while (++argsIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[holders[argsIndex]] = args[argsIndex];
	        }
	      }
	      while (rangeLength--) {
	        result[leftIndex++] = args[argsIndex++];
	      }
	      return result;
	    }

	    /**
	     * This function is like `composeArgs` except that the arguments composition
	     * is tailored for `_.partialRight`.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to append to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgsRight(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersIndex = -1,
	          holdersLength = holders.length,
	          rightIndex = -1,
	          rightLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(rangeLength + rightLength),
	          isUncurried = !isCurried;

	      while (++argsIndex < rangeLength) {
	        result[argsIndex] = args[argsIndex];
	      }
	      var offset = argsIndex;
	      while (++rightIndex < rightLength) {
	        result[offset + rightIndex] = partials[rightIndex];
	      }
	      while (++holdersIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[offset + holders[holdersIndex]] = args[argsIndex++];
	        }
	      }
	      return result;
	    }

	    /**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */
	    function copyArray(source, array) {
	      var index = -1,
	          length = source.length;

	      array || (array = Array(length));
	      while (++index < length) {
	        array[index] = source[index];
	      }
	      return array;
	    }

	    /**
	     * Copies properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property identifiers to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @param {Function} [customizer] The function to customize copied values.
	     * @returns {Object} Returns `object`.
	     */
	    function copyObject(source, props, object, customizer) {
	      var isNew = !object;
	      object || (object = {});

	      var index = -1,
	          length = props.length;

	      while (++index < length) {
	        var key = props[index];

	        var newValue = customizer
	          ? customizer(object[key], source[key], key, object, source)
	          : undefined;

	        if (newValue === undefined) {
	          newValue = source[key];
	        }
	        if (isNew) {
	          baseAssignValue(object, key, newValue);
	        } else {
	          assignValue(object, key, newValue);
	        }
	      }
	      return object;
	    }

	    /**
	     * Copies own symbols of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbols(source, object) {
	      return copyObject(source, getSymbols(source), object);
	    }

	    /**
	     * Copies own and inherited symbols of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbolsIn(source, object) {
	      return copyObject(source, getSymbolsIn(source), object);
	    }

	    /**
	     * Creates a function like `_.groupBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} [initializer] The accumulator object initializer.
	     * @returns {Function} Returns the new aggregator function.
	     */
	    function createAggregator(setter, initializer) {
	      return function(collection, iteratee) {
	        var func = isArray(collection) ? arrayAggregator : baseAggregator,
	            accumulator = initializer ? initializer() : {};

	        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
	      };
	    }

	    /**
	     * Creates a function like `_.assign`.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @returns {Function} Returns the new assigner function.
	     */
	    function createAssigner(assigner) {
	      return baseRest(function(object, sources) {
	        var index = -1,
	            length = sources.length,
	            customizer = length > 1 ? sources[length - 1] : undefined,
	            guard = length > 2 ? sources[2] : undefined;

	        customizer = (assigner.length > 3 && typeof customizer == 'function')
	          ? (length--, customizer)
	          : undefined;

	        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	          customizer = length < 3 ? undefined : customizer;
	          length = 1;
	        }
	        object = Object(object);
	        while (++index < length) {
	          var source = sources[index];
	          if (source) {
	            assigner(object, source, index, customizer);
	          }
	        }
	        return object;
	      });
	    }

	    /**
	     * Creates a `baseEach` or `baseEachRight` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseEach(eachFunc, fromRight) {
	      return function(collection, iteratee) {
	        if (collection == null) {
	          return collection;
	        }
	        if (!isArrayLike(collection)) {
	          return eachFunc(collection, iteratee);
	        }
	        var length = collection.length,
	            index = fromRight ? length : -1,
	            iterable = Object(collection);

	        while ((fromRight ? index-- : ++index < length)) {
	          if (iteratee(iterable[index], index, iterable) === false) {
	            break;
	          }
	        }
	        return collection;
	      };
	    }

	    /**
	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseFor(fromRight) {
	      return function(object, iteratee, keysFunc) {
	        var index = -1,
	            iterable = Object(object),
	            props = keysFunc(object),
	            length = props.length;

	        while (length--) {
	          var key = props[fromRight ? length : ++index];
	          if (iteratee(iterable[key], key, iterable) === false) {
	            break;
	          }
	        }
	        return object;
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with the optional `this`
	     * binding of `thisArg`.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createBind(func, bitmask, thisArg) {
	      var isBind = bitmask & WRAP_BIND_FLAG,
	          Ctor = createCtor(func);

	      function wrapper() {
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return fn.apply(isBind ? thisArg : this, arguments);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a function like `_.lowerFirst`.
	     *
	     * @private
	     * @param {string} methodName The name of the `String` case method to use.
	     * @returns {Function} Returns the new case function.
	     */
	    function createCaseFirst(methodName) {
	      return function(string) {
	        string = toString(string);

	        var strSymbols = hasUnicode(string)
	          ? stringToArray(string)
	          : undefined;

	        var chr = strSymbols
	          ? strSymbols[0]
	          : string.charAt(0);

	        var trailing = strSymbols
	          ? castSlice(strSymbols, 1).join('')
	          : string.slice(1);

	        return chr[methodName]() + trailing;
	      };
	    }

	    /**
	     * Creates a function like `_.camelCase`.
	     *
	     * @private
	     * @param {Function} callback The function to combine each word.
	     * @returns {Function} Returns the new compounder function.
	     */
	    function createCompounder(callback) {
	      return function(string) {
	        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
	      };
	    }

	    /**
	     * Creates a function that produces an instance of `Ctor` regardless of
	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	     *
	     * @private
	     * @param {Function} Ctor The constructor to wrap.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCtor(Ctor) {
	      return function() {
	        // Use a `switch` statement to work with class constructors. See
	        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	        // for more details.
	        var args = arguments;
	        switch (args.length) {
	          case 0: return new Ctor;
	          case 1: return new Ctor(args[0]);
	          case 2: return new Ctor(args[0], args[1]);
	          case 3: return new Ctor(args[0], args[1], args[2]);
	          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	        }
	        var thisBinding = baseCreate(Ctor.prototype),
	            result = Ctor.apply(thisBinding, args);

	        // Mimic the constructor's `return` behavior.
	        // See https://es5.github.io/#x13.2.2 for more details.
	        return isObject(result) ? result : thisBinding;
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to enable currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {number} arity The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCurry(func, bitmask, arity) {
	      var Ctor = createCtor(func);

	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length,
	            placeholder = getHolder(wrapper);

	        while (index--) {
	          args[index] = arguments[index];
	        }
	        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	          ? []
	          : replaceHolders(args, placeholder);

	        length -= holders.length;
	        if (length < arity) {
	          return createRecurry(
	            func, bitmask, createHybrid, wrapper.placeholder, undefined,
	            args, holders, undefined, undefined, arity - length);
	        }
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return apply(fn, this, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `_.find` or `_.findLast` function.
	     *
	     * @private
	     * @param {Function} findIndexFunc The function to find the collection index.
	     * @returns {Function} Returns the new find function.
	     */
	    function createFind(findIndexFunc) {
	      return function(collection, predicate, fromIndex) {
	        var iterable = Object(collection);
	        if (!isArrayLike(collection)) {
	          var iteratee = getIteratee(predicate, 3);
	          collection = keys(collection);
	          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
	        }
	        var index = findIndexFunc(collection, predicate, fromIndex);
	        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
	      };
	    }

	    /**
	     * Creates a `_.flow` or `_.flowRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new flow function.
	     */
	    function createFlow(fromRight) {
	      return flatRest(function(funcs) {
	        var length = funcs.length,
	            index = length,
	            prereq = LodashWrapper.prototype.thru;

	        if (fromRight) {
	          funcs.reverse();
	        }
	        while (index--) {
	          var func = funcs[index];
	          if (typeof func != 'function') {
	            throw new TypeError(FUNC_ERROR_TEXT);
	          }
	          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
	            var wrapper = new LodashWrapper([], true);
	          }
	        }
	        index = wrapper ? index : length;
	        while (++index < length) {
	          func = funcs[index];

	          var funcName = getFuncName(func),
	              data = funcName == 'wrapper' ? getData(func) : undefined;

	          if (data && isLaziable(data[0]) &&
	                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
	                !data[4].length && data[9] == 1
	              ) {
	            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
	          } else {
	            wrapper = (func.length == 1 && isLaziable(func))
	              ? wrapper[funcName]()
	              : wrapper.thru(func);
	          }
	        }
	        return function() {
	          var args = arguments,
	              value = args[0];

	          if (wrapper && args.length == 1 && isArray(value)) {
	            return wrapper.plant(value).value();
	          }
	          var index = 0,
	              result = length ? funcs[index].apply(this, args) : value;

	          while (++index < length) {
	            result = funcs[index].call(this, result);
	          }
	          return result;
	        };
	      });
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with optional `this`
	     * binding of `thisArg`, partial application, and currying.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [partialsRight] The arguments to append to those provided
	     *  to the new function.
	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	      var isAry = bitmask & WRAP_ARY_FLAG,
	          isBind = bitmask & WRAP_BIND_FLAG,
	          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
	          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
	          isFlip = bitmask & WRAP_FLIP_FLAG,
	          Ctor = isBindKey ? undefined : createCtor(func);

	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length;

	        while (index--) {
	          args[index] = arguments[index];
	        }
	        if (isCurried) {
	          var placeholder = getHolder(wrapper),
	              holdersCount = countHolders(args, placeholder);
	        }
	        if (partials) {
	          args = composeArgs(args, partials, holders, isCurried);
	        }
	        if (partialsRight) {
	          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	        }
	        length -= holdersCount;
	        if (isCurried && length < arity) {
	          var newHolders = replaceHolders(args, placeholder);
	          return createRecurry(
	            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
	            args, newHolders, argPos, ary, arity - length
	          );
	        }
	        var thisBinding = isBind ? thisArg : this,
	            fn = isBindKey ? thisBinding[func] : func;

	        length = args.length;
	        if (argPos) {
	          args = reorder(args, argPos);
	        } else if (isFlip && length > 1) {
	          args.reverse();
	        }
	        if (isAry && ary < length) {
	          args.length = ary;
	        }
	        if (this && this !== root && this instanceof wrapper) {
	          fn = Ctor || createCtor(fn);
	        }
	        return fn.apply(thisBinding, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a function like `_.invertBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} toIteratee The function to resolve iteratees.
	     * @returns {Function} Returns the new inverter function.
	     */
	    function createInverter(setter, toIteratee) {
	      return function(object, iteratee) {
	        return baseInverter(object, setter, toIteratee(iteratee), {});
	      };
	    }

	    /**
	     * Creates a function that performs a mathematical operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @param {number} [defaultValue] The value used for `undefined` arguments.
	     * @returns {Function} Returns the new mathematical operation function.
	     */
	    function createMathOperation(operator, defaultValue) {
	      return function(value, other) {
	        var result;
	        if (value === undefined && other === undefined) {
	          return defaultValue;
	        }
	        if (value !== undefined) {
	          result = value;
	        }
	        if (other !== undefined) {
	          if (result === undefined) {
	            return other;
	          }
	          if (typeof value == 'string' || typeof other == 'string') {
	            value = baseToString(value);
	            other = baseToString(other);
	          } else {
	            value = baseToNumber(value);
	            other = baseToNumber(other);
	          }
	          result = operator(value, other);
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a function like `_.over`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over iteratees.
	     * @returns {Function} Returns the new over function.
	     */
	    function createOver(arrayFunc) {
	      return flatRest(function(iteratees) {
	        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
	        return baseRest(function(args) {
	          var thisArg = this;
	          return arrayFunc(iteratees, function(iteratee) {
	            return apply(iteratee, thisArg, args);
	          });
	        });
	      });
	    }

	    /**
	     * Creates the padding for `string` based on `length`. The `chars` string
	     * is truncated if the number of characters exceeds `length`.
	     *
	     * @private
	     * @param {number} length The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padding for `string`.
	     */
	    function createPadding(length, chars) {
	      chars = chars === undefined ? ' ' : baseToString(chars);

	      var charsLength = chars.length;
	      if (charsLength < 2) {
	        return charsLength ? baseRepeat(chars, length) : chars;
	      }
	      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
	      return hasUnicode(chars)
	        ? castSlice(stringToArray(result), 0, length).join('')
	        : result.slice(0, length);
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with the `this` binding
	     * of `thisArg` and `partials` prepended to the arguments it receives.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} partials The arguments to prepend to those provided to
	     *  the new function.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createPartial(func, bitmask, thisArg, partials) {
	      var isBind = bitmask & WRAP_BIND_FLAG,
	          Ctor = createCtor(func);

	      function wrapper() {
	        var argsIndex = -1,
	            argsLength = arguments.length,
	            leftIndex = -1,
	            leftLength = partials.length,
	            args = Array(leftLength + argsLength),
	            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

	        while (++leftIndex < leftLength) {
	          args[leftIndex] = partials[leftIndex];
	        }
	        while (argsLength--) {
	          args[leftIndex++] = arguments[++argsIndex];
	        }
	        return apply(fn, isBind ? thisArg : this, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `_.range` or `_.rangeRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new range function.
	     */
	    function createRange(fromRight) {
	      return function(start, end, step) {
	        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	          end = step = undefined;
	        }
	        // Ensure the sign of `-0` is preserved.
	        start = toFinite(start);
	        if (end === undefined) {
	          end = start;
	          start = 0;
	        } else {
	          end = toFinite(end);
	        }
	        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
	        return baseRange(start, end, step, fromRight);
	      };
	    }

	    /**
	     * Creates a function that performs a relational operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @returns {Function} Returns the new relational operation function.
	     */
	    function createRelationalOperation(operator) {
	      return function(value, other) {
	        if (!(typeof value == 'string' && typeof other == 'string')) {
	          value = toNumber(value);
	          other = toNumber(other);
	        }
	        return operator(value, other);
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to continue currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {Function} wrapFunc The function to create the `func` wrapper.
	     * @param {*} placeholder The placeholder value.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	      var isCurry = bitmask & WRAP_CURRY_FLAG,
	          newHolders = isCurry ? holders : undefined,
	          newHoldersRight = isCurry ? undefined : holders,
	          newPartials = isCurry ? partials : undefined,
	          newPartialsRight = isCurry ? undefined : partials;

	      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
	      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

	      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
	        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
	      }
	      var newData = [
	        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	        newHoldersRight, argPos, ary, arity
	      ];

	      var result = wrapFunc.apply(undefined, newData);
	      if (isLaziable(func)) {
	        setData(result, newData);
	      }
	      result.placeholder = placeholder;
	      return setWrapToString(result, func, bitmask);
	    }

	    /**
	     * Creates a function like `_.round`.
	     *
	     * @private
	     * @param {string} methodName The name of the `Math` method to use when rounding.
	     * @returns {Function} Returns the new round function.
	     */
	    function createRound(methodName) {
	      var func = Math[methodName];
	      return function(number, precision) {
	        number = toNumber(number);
	        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
	        if (precision) {
	          // Shift with exponential notation to avoid floating-point issues.
	          // See [MDN](https://mdn.io/round#Examples) for more details.
	          var pair = (toString(number) + 'e').split('e'),
	              value = func(pair[0] + 'e' + (+pair[1] + precision));

	          pair = (toString(value) + 'e').split('e');
	          return +(pair[0] + 'e' + (+pair[1] - precision));
	        }
	        return func(number);
	      };
	    }

	    /**
	     * Creates a set object of `values`.
	     *
	     * @private
	     * @param {Array} values The values to add to the set.
	     * @returns {Object} Returns the new set.
	     */
	    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
	      return new Set(values);
	    };

	    /**
	     * Creates a `_.toPairs` or `_.toPairsIn` function.
	     *
	     * @private
	     * @param {Function} keysFunc The function to get the keys of a given object.
	     * @returns {Function} Returns the new pairs function.
	     */
	    function createToPairs(keysFunc) {
	      return function(object) {
	        var tag = getTag(object);
	        if (tag == mapTag) {
	          return mapToArray(object);
	        }
	        if (tag == setTag) {
	          return setToPairs(object);
	        }
	        return baseToPairs(object, keysFunc(object));
	      };
	    }

	    /**
	     * Creates a function that either curries or invokes `func` with optional
	     * `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags.
	     *    1 - `_.bind`
	     *    2 - `_.bindKey`
	     *    4 - `_.curry` or `_.curryRight` of a bound function
	     *    8 - `_.curry`
	     *   16 - `_.curryRight`
	     *   32 - `_.partial`
	     *   64 - `_.partialRight`
	     *  128 - `_.rearg`
	     *  256 - `_.ary`
	     *  512 - `_.flip`
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to be partially applied.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
	      if (!isBindKey && typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var length = partials ? partials.length : 0;
	      if (!length) {
	        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
	        partials = holders = undefined;
	      }
	      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	      arity = arity === undefined ? arity : toInteger(arity);
	      length -= holders ? holders.length : 0;

	      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
	        var partialsRight = partials,
	            holdersRight = holders;

	        partials = holders = undefined;
	      }
	      var data = isBindKey ? undefined : getData(func);

	      var newData = [
	        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	        argPos, ary, arity
	      ];

	      if (data) {
	        mergeData(newData, data);
	      }
	      func = newData[0];
	      bitmask = newData[1];
	      thisArg = newData[2];
	      partials = newData[3];
	      holders = newData[4];
	      arity = newData[9] = newData[9] === undefined
	        ? (isBindKey ? 0 : func.length)
	        : nativeMax(newData[9] - length, 0);

	      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
	        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
	      }
	      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
	        var result = createBind(func, bitmask, thisArg);
	      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
	        result = createCurry(func, bitmask, arity);
	      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
	        result = createPartial(func, bitmask, thisArg, partials);
	      } else {
	        result = createHybrid.apply(undefined, newData);
	      }
	      var setter = data ? baseSetData : setData;
	      return setWrapToString(setter(result, newData), func, bitmask);
	    }

	    /**
	     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
	     * of source objects to the destination object for all destination properties
	     * that resolve to `undefined`.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to assign.
	     * @param {Object} object The parent object of `objValue`.
	     * @returns {*} Returns the value to assign.
	     */
	    function customDefaultsAssignIn(objValue, srcValue, key, object) {
	      if (objValue === undefined ||
	          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	        return srcValue;
	      }
	      return objValue;
	    }

	    /**
	     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
	     * objects into destination objects that are passed thru.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to merge.
	     * @param {Object} object The parent object of `objValue`.
	     * @param {Object} source The parent object of `srcValue`.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     * @returns {*} Returns the value to assign.
	     */
	    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
	      if (isObject(objValue) && isObject(srcValue)) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        stack.set(srcValue, objValue);
	        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
	        stack['delete'](srcValue);
	      }
	      return objValue;
	    }

	    /**
	     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
	     * objects.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @param {string} key The key of the property to inspect.
	     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
	     */
	    function customOmitClone(value) {
	      return isPlainObject(value) ? undefined : value;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for arrays with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Array} array The array to compare.
	     * @param {Array} other The other array to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `array` and `other` objects.
	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	     */
	    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	          arrLength = array.length,
	          othLength = other.length;

	      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(array);
	      if (stacked && stack.get(other)) {
	        return stacked == other;
	      }
	      var index = -1,
	          result = true,
	          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

	      stack.set(array, other);
	      stack.set(other, array);

	      // Ignore non-index properties.
	      while (++index < arrLength) {
	        var arrValue = array[index],
	            othValue = other[index];

	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, arrValue, index, other, array, stack)
	            : customizer(arrValue, othValue, index, array, other, stack);
	        }
	        if (compared !== undefined) {
	          if (compared) {
	            continue;
	          }
	          result = false;
	          break;
	        }
	        // Recursively compare arrays (susceptible to call stack limits).
	        if (seen) {
	          if (!arraySome(other, function(othValue, othIndex) {
	                if (!cacheHas(seen, othIndex) &&
	                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	                  return seen.push(othIndex);
	                }
	              })) {
	            result = false;
	            break;
	          }
	        } else if (!(
	              arrValue === othValue ||
	                equalFunc(arrValue, othValue, bitmask, customizer, stack)
	            )) {
	          result = false;
	          break;
	        }
	      }
	      stack['delete'](array);
	      stack['delete'](other);
	      return result;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for comparing objects of
	     * the same `toStringTag`.
	     *
	     * **Note:** This function only supports comparing values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {string} tag The `toStringTag` of the objects to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	      switch (tag) {
	        case dataViewTag:
	          if ((object.byteLength != other.byteLength) ||
	              (object.byteOffset != other.byteOffset)) {
	            return false;
	          }
	          object = object.buffer;
	          other = other.buffer;

	        case arrayBufferTag:
	          if ((object.byteLength != other.byteLength) ||
	              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	            return false;
	          }
	          return true;

	        case boolTag:
	        case dateTag:
	        case numberTag:
	          // Coerce booleans to `1` or `0` and dates to milliseconds.
	          // Invalid dates are coerced to `NaN`.
	          return eq(+object, +other);

	        case errorTag:
	          return object.name == other.name && object.message == other.message;

	        case regexpTag:
	        case stringTag:
	          // Coerce regexes to strings and treat strings, primitives and objects,
	          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	          // for more details.
	          return object == (other + '');

	        case mapTag:
	          var convert = mapToArray;

	        case setTag:
	          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
	          convert || (convert = setToArray);

	          if (object.size != other.size && !isPartial) {
	            return false;
	          }
	          // Assume cyclic values are equal.
	          var stacked = stack.get(object);
	          if (stacked) {
	            return stacked == other;
	          }
	          bitmask |= COMPARE_UNORDERED_FLAG;

	          // Recursively compare objects (susceptible to call stack limits).
	          stack.set(object, other);
	          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
	          stack['delete'](object);
	          return result;

	        case symbolTag:
	          if (symbolValueOf) {
	            return symbolValueOf.call(object) == symbolValueOf.call(other);
	          }
	      }
	      return false;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for objects with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	          objProps = getAllKeys(object),
	          objLength = objProps.length,
	          othProps = getAllKeys(other),
	          othLength = othProps.length;

	      if (objLength != othLength && !isPartial) {
	        return false;
	      }
	      var index = objLength;
	      while (index--) {
	        var key = objProps[index];
	        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	          return false;
	        }
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked && stack.get(other)) {
	        return stacked == other;
	      }
	      var result = true;
	      stack.set(object, other);
	      stack.set(other, object);

	      var skipCtor = isPartial;
	      while (++index < objLength) {
	        key = objProps[index];
	        var objValue = object[key],
	            othValue = other[key];

	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, objValue, key, other, object, stack)
	            : customizer(objValue, othValue, key, object, other, stack);
	        }
	        // Recursively compare objects (susceptible to call stack limits).
	        if (!(compared === undefined
	              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	              : compared
	            )) {
	          result = false;
	          break;
	        }
	        skipCtor || (skipCtor = key == 'constructor');
	      }
	      if (result && !skipCtor) {
	        var objCtor = object.constructor,
	            othCtor = other.constructor;

	        // Non `Object` object instances with different constructors are not equal.
	        if (objCtor != othCtor &&
	            ('constructor' in object && 'constructor' in other) &&
	            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	          result = false;
	        }
	      }
	      stack['delete'](object);
	      stack['delete'](other);
	      return result;
	    }

	    /**
	     * A specialized version of `baseRest` which flattens the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */
	    function flatRest(func) {
	      return setToString(overRest(func, undefined, flatten), func + '');
	    }

	    /**
	     * Creates an array of own enumerable property names and symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeys(object) {
	      return baseGetAllKeys(object, keys, getSymbols);
	    }

	    /**
	     * Creates an array of own and inherited enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeysIn(object) {
	      return baseGetAllKeys(object, keysIn, getSymbolsIn);
	    }

	    /**
	     * Gets metadata for `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {*} Returns the metadata for `func`.
	     */
	    var getData = !metaMap ? noop : function(func) {
	      return metaMap.get(func);
	    };

	    /**
	     * Gets the name of `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {string} Returns the function name.
	     */
	    function getFuncName(func) {
	      var result = (func.name + ''),
	          array = realNames[result],
	          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

	      while (length--) {
	        var data = array[length],
	            otherFunc = data.func;
	        if (otherFunc == null || otherFunc == func) {
	          return data.name;
	        }
	      }
	      return result;
	    }

	    /**
	     * Gets the argument placeholder value for `func`.
	     *
	     * @private
	     * @param {Function} func The function to inspect.
	     * @returns {*} Returns the placeholder value.
	     */
	    function getHolder(func) {
	      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
	      return object.placeholder;
	    }

	    /**
	     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
	     * this function returns the custom method, otherwise it returns `baseIteratee`.
	     * If arguments are provided, the chosen function is invoked with them and
	     * its result is returned.
	     *
	     * @private
	     * @param {*} [value] The value to convert to an iteratee.
	     * @param {number} [arity] The arity of the created iteratee.
	     * @returns {Function} Returns the chosen function or its result.
	     */
	    function getIteratee() {
	      var result = lodash.iteratee || iteratee;
	      result = result === iteratee ? baseIteratee : result;
	      return arguments.length ? result(arguments[0], arguments[1]) : result;
	    }

	    /**
	     * Gets the data for `map`.
	     *
	     * @private
	     * @param {Object} map The map to query.
	     * @param {string} key The reference key.
	     * @returns {*} Returns the map data.
	     */
	    function getMapData(map, key) {
	      var data = map.__data__;
	      return isKeyable(key)
	        ? data[typeof key == 'string' ? 'string' : 'hash']
	        : data.map;
	    }

	    /**
	     * Gets the property names, values, and compare flags of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the match data of `object`.
	     */
	    function getMatchData(object) {
	      var result = keys(object),
	          length = result.length;

	      while (length--) {
	        var key = result[length],
	            value = object[key];

	        result[length] = [key, value, isStrictComparable(value)];
	      }
	      return result;
	    }

	    /**
	     * Gets the native function at `key` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the method to get.
	     * @returns {*} Returns the function if it's native, else `undefined`.
	     */
	    function getNative(object, key) {
	      var value = getValue(object, key);
	      return baseIsNative(value) ? value : undefined;
	    }

	    /**
	     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the raw `toStringTag`.
	     */
	    function getRawTag(value) {
	      var isOwn = hasOwnProperty.call(value, symToStringTag),
	          tag = value[symToStringTag];

	      try {
	        value[symToStringTag] = undefined;
	        var unmasked = true;
	      } catch (e) {}

	      var result = nativeObjectToString.call(value);
	      if (unmasked) {
	        if (isOwn) {
	          value[symToStringTag] = tag;
	        } else {
	          delete value[symToStringTag];
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates an array of the own enumerable symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
	      if (object == null) {
	        return [];
	      }
	      object = Object(object);
	      return arrayFilter(nativeGetSymbols(object), function(symbol) {
	        return propertyIsEnumerable.call(object, symbol);
	      });
	    };

	    /**
	     * Creates an array of the own and inherited enumerable symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
	      var result = [];
	      while (object) {
	        arrayPush(result, getSymbols(object));
	        object = getPrototype(object);
	      }
	      return result;
	    };

	    /**
	     * Gets the `toStringTag` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    var getTag = baseGetTag;

	    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	        (Map && getTag(new Map) != mapTag) ||
	        (Promise && getTag(Promise.resolve()) != promiseTag) ||
	        (Set && getTag(new Set) != setTag) ||
	        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	      getTag = function(value) {
	        var result = baseGetTag(value),
	            Ctor = result == objectTag ? value.constructor : undefined,
	            ctorString = Ctor ? toSource(Ctor) : '';

	        if (ctorString) {
	          switch (ctorString) {
	            case dataViewCtorString: return dataViewTag;
	            case mapCtorString: return mapTag;
	            case promiseCtorString: return promiseTag;
	            case setCtorString: return setTag;
	            case weakMapCtorString: return weakMapTag;
	          }
	        }
	        return result;
	      };
	    }

	    /**
	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
	     *
	     * @private
	     * @param {number} start The start of the view.
	     * @param {number} end The end of the view.
	     * @param {Array} transforms The transformations to apply to the view.
	     * @returns {Object} Returns an object containing the `start` and `end`
	     *  positions of the view.
	     */
	    function getView(start, end, transforms) {
	      var index = -1,
	          length = transforms.length;

	      while (++index < length) {
	        var data = transforms[index],
	            size = data.size;

	        switch (data.type) {
	          case 'drop':      start += size; break;
	          case 'dropRight': end -= size; break;
	          case 'take':      end = nativeMin(end, start + size); break;
	          case 'takeRight': start = nativeMax(start, end - size); break;
	        }
	      }
	      return { 'start': start, 'end': end };
	    }

	    /**
	     * Extracts wrapper details from the `source` body comment.
	     *
	     * @private
	     * @param {string} source The source to inspect.
	     * @returns {Array} Returns the wrapper details.
	     */
	    function getWrapDetails(source) {
	      var match = source.match(reWrapDetails);
	      return match ? match[1].split(reSplitDetails) : [];
	    }

	    /**
	     * Checks if `path` exists on `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @param {Function} hasFunc The function to check properties.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     */
	    function hasPath(object, path, hasFunc) {
	      path = castPath(path, object);

	      var index = -1,
	          length = path.length,
	          result = false;

	      while (++index < length) {
	        var key = toKey(path[index]);
	        if (!(result = object != null && hasFunc(object, key))) {
	          break;
	        }
	        object = object[key];
	      }
	      if (result || ++index != length) {
	        return result;
	      }
	      length = object == null ? 0 : object.length;
	      return !!length && isLength(length) && isIndex(key, length) &&
	        (isArray(object) || isArguments(object));
	    }

	    /**
	     * Initializes an array clone.
	     *
	     * @private
	     * @param {Array} array The array to clone.
	     * @returns {Array} Returns the initialized clone.
	     */
	    function initCloneArray(array) {
	      var length = array.length,
	          result = array.constructor(length);

	      // Add properties assigned by `RegExp#exec`.
	      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	        result.index = array.index;
	        result.input = array.input;
	      }
	      return result;
	    }

	    /**
	     * Initializes an object clone.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneObject(object) {
	      return (typeof object.constructor == 'function' && !isPrototype(object))
	        ? baseCreate(getPrototype(object))
	        : {};
	    }

	    /**
	     * Initializes an object clone based on its `toStringTag`.
	     *
	     * **Note:** This function only supports cloning values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @param {string} tag The `toStringTag` of the object to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneByTag(object, tag, cloneFunc, isDeep) {
	      var Ctor = object.constructor;
	      switch (tag) {
	        case arrayBufferTag:
	          return cloneArrayBuffer(object);

	        case boolTag:
	        case dateTag:
	          return new Ctor(+object);

	        case dataViewTag:
	          return cloneDataView(object, isDeep);

	        case float32Tag: case float64Tag:
	        case int8Tag: case int16Tag: case int32Tag:
	        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	          return cloneTypedArray(object, isDeep);

	        case mapTag:
	          return cloneMap(object, isDeep, cloneFunc);

	        case numberTag:
	        case stringTag:
	          return new Ctor(object);

	        case regexpTag:
	          return cloneRegExp(object);

	        case setTag:
	          return cloneSet(object, isDeep, cloneFunc);

	        case symbolTag:
	          return cloneSymbol(object);
	      }
	    }

	    /**
	     * Inserts wrapper `details` in a comment at the top of the `source` body.
	     *
	     * @private
	     * @param {string} source The source to modify.
	     * @returns {Array} details The details to insert.
	     * @returns {string} Returns the modified source.
	     */
	    function insertWrapDetails(source, details) {
	      var length = details.length;
	      if (!length) {
	        return source;
	      }
	      var lastIndex = length - 1;
	      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
	      details = details.join(length > 2 ? ', ' : ' ');
	      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
	    }

	    /**
	     * Checks if `value` is a flattenable `arguments` object or array.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */
	    function isFlattenable(value) {
	      return isArray(value) || isArguments(value) ||
	        !!(spreadableSymbol && value && value[spreadableSymbol]);
	    }

	    /**
	     * Checks if `value` is a valid array-like index.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	     */
	    function isIndex(value, length) {
	      length = length == null ? MAX_SAFE_INTEGER : length;
	      return !!length &&
	        (typeof value == 'number' || reIsUint.test(value)) &&
	        (value > -1 && value % 1 == 0 && value < length);
	    }

	    /**
	     * Checks if the given arguments are from an iteratee call.
	     *
	     * @private
	     * @param {*} value The potential iteratee value argument.
	     * @param {*} index The potential iteratee index or key argument.
	     * @param {*} object The potential iteratee object argument.
	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	     *  else `false`.
	     */
	    function isIterateeCall(value, index, object) {
	      if (!isObject(object)) {
	        return false;
	      }
	      var type = typeof index;
	      if (type == 'number'
	            ? (isArrayLike(object) && isIndex(index, object.length))
	            : (type == 'string' && index in object)
	          ) {
	        return eq(object[index], value);
	      }
	      return false;
	    }

	    /**
	     * Checks if `value` is a property name and not a property path.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	     */
	    function isKey(value, object) {
	      if (isArray(value)) {
	        return false;
	      }
	      var type = typeof value;
	      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	          value == null || isSymbol(value)) {
	        return true;
	      }
	      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	        (object != null && value in Object(object));
	    }

	    /**
	     * Checks if `value` is suitable for use as unique object key.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	     */
	    function isKeyable(value) {
	      var type = typeof value;
	      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	        ? (value !== '__proto__')
	        : (value === null);
	    }

	    /**
	     * Checks if `func` has a lazy counterpart.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	     *  else `false`.
	     */
	    function isLaziable(func) {
	      var funcName = getFuncName(func),
	          other = lodash[funcName];

	      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	        return false;
	      }
	      if (func === other) {
	        return true;
	      }
	      var data = getData(other);
	      return !!data && func === data[0];
	    }

	    /**
	     * Checks if `func` has its source masked.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	     */
	    function isMasked(func) {
	      return !!maskSrcKey && (maskSrcKey in func);
	    }

	    /**
	     * Checks if `func` is capable of being masked.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
	     */
	    var isMaskable = coreJsData ? isFunction : stubFalse;

	    /**
	     * Checks if `value` is likely a prototype object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	     */
	    function isPrototype(value) {
	      var Ctor = value && value.constructor,
	          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	      return value === proto;
	    }

	    /**
	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` if suitable for strict
	     *  equality comparisons, else `false`.
	     */
	    function isStrictComparable(value) {
	      return value === value && !isObject(value);
	    }

	    /**
	     * A specialized version of `matchesProperty` for source values suitable
	     * for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function matchesStrictComparable(key, srcValue) {
	      return function(object) {
	        if (object == null) {
	          return false;
	        }
	        return object[key] === srcValue &&
	          (srcValue !== undefined || (key in Object(object)));
	      };
	    }

	    /**
	     * A specialized version of `_.memoize` which clears the memoized function's
	     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	     *
	     * @private
	     * @param {Function} func The function to have its output memoized.
	     * @returns {Function} Returns the new memoized function.
	     */
	    function memoizeCapped(func) {
	      var result = memoize(func, function(key) {
	        if (cache.size === MAX_MEMOIZE_SIZE) {
	          cache.clear();
	        }
	        return key;
	      });

	      var cache = result.cache;
	      return result;
	    }

	    /**
	     * Merges the function metadata of `source` into `data`.
	     *
	     * Merging metadata reduces the number of wrappers used to invoke a function.
	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	     * may be applied regardless of execution order. Methods like `_.ary` and
	     * `_.rearg` modify function arguments, making the order in which they are
	     * executed important, preventing the merging of metadata. However, we make
	     * an exception for a safe combined case where curried functions have `_.ary`
	     * and or `_.rearg` applied.
	     *
	     * @private
	     * @param {Array} data The destination metadata.
	     * @param {Array} source The source metadata.
	     * @returns {Array} Returns `data`.
	     */
	    function mergeData(data, source) {
	      var bitmask = data[1],
	          srcBitmask = source[1],
	          newBitmask = bitmask | srcBitmask,
	          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

	      var isCombo =
	        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
	        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
	        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

	      // Exit early if metadata can't be merged.
	      if (!(isCommon || isCombo)) {
	        return data;
	      }
	      // Use source `thisArg` if available.
	      if (srcBitmask & WRAP_BIND_FLAG) {
	        data[2] = source[2];
	        // Set when currying a bound function.
	        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
	      }
	      // Compose partial arguments.
	      var value = source[3];
	      if (value) {
	        var partials = data[3];
	        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
	        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
	      }
	      // Compose partial right arguments.
	      value = source[5];
	      if (value) {
	        partials = data[5];
	        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
	        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
	      }
	      // Use source `argPos` if available.
	      value = source[7];
	      if (value) {
	        data[7] = value;
	      }
	      // Use source `ary` if it's smaller.
	      if (srcBitmask & WRAP_ARY_FLAG) {
	        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	      }
	      // Use source `arity` if one is not provided.
	      if (data[9] == null) {
	        data[9] = source[9];
	      }
	      // Use source `func` and merge bitmasks.
	      data[0] = source[0];
	      data[1] = newBitmask;

	      return data;
	    }

	    /**
	     * This function is like
	     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * except that it includes inherited enumerable properties.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function nativeKeysIn(object) {
	      var result = [];
	      if (object != null) {
	        for (var key in Object(object)) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * Converts `value` to a string using `Object.prototype.toString`.
	     *
	     * @private
	     * @param {*} value The value to convert.
	     * @returns {string} Returns the converted string.
	     */
	    function objectToString(value) {
	      return nativeObjectToString.call(value);
	    }

	    /**
	     * A specialized version of `baseRest` which transforms the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @param {Function} transform The rest array transform.
	     * @returns {Function} Returns the new function.
	     */
	    function overRest(func, start, transform) {
	      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	      return function() {
	        var args = arguments,
	            index = -1,
	            length = nativeMax(args.length - start, 0),
	            array = Array(length);

	        while (++index < length) {
	          array[index] = args[start + index];
	        }
	        index = -1;
	        var otherArgs = Array(start + 1);
	        while (++index < start) {
	          otherArgs[index] = args[index];
	        }
	        otherArgs[start] = transform(array);
	        return apply(func, this, otherArgs);
	      };
	    }

	    /**
	     * Gets the parent value at `path` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} path The path to get the parent value of.
	     * @returns {*} Returns the parent value.
	     */
	    function parent(object, path) {
	      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
	    }

	    /**
	     * Reorder `array` according to the specified indexes where the element at
	     * the first index is assigned as the first element, the element at
	     * the second index is assigned as the second element, and so on.
	     *
	     * @private
	     * @param {Array} array The array to reorder.
	     * @param {Array} indexes The arranged array indexes.
	     * @returns {Array} Returns `array`.
	     */
	    function reorder(array, indexes) {
	      var arrLength = array.length,
	          length = nativeMin(indexes.length, arrLength),
	          oldArray = copyArray(array);

	      while (length--) {
	        var index = indexes[length];
	        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	      }
	      return array;
	    }

	    /**
	     * Sets metadata for `func`.
	     *
	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	     * period of time, it will trip its breaker and transition to an identity
	     * function to avoid garbage collection pauses in V8. See
	     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	     * for more details.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var setData = shortOut(baseSetData);

	    /**
	     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */
	    var setTimeout = ctxSetTimeout || function(func, wait) {
	      return root.setTimeout(func, wait);
	    };

	    /**
	     * Sets the `toString` method of `func` to return `string`.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */
	    var setToString = shortOut(baseSetToString);

	    /**
	     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
	     * with wrapper details in a comment at the top of the source body.
	     *
	     * @private
	     * @param {Function} wrapper The function to modify.
	     * @param {Function} reference The reference function.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Function} Returns `wrapper`.
	     */
	    function setWrapToString(wrapper, reference, bitmask) {
	      var source = (reference + '');
	      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
	    }

	    /**
	     * Creates a function that'll short out and invoke `identity` instead
	     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	     * milliseconds.
	     *
	     * @private
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new shortable function.
	     */
	    function shortOut(func) {
	      var count = 0,
	          lastCalled = 0;

	      return function() {
	        var stamp = nativeNow(),
	            remaining = HOT_SPAN - (stamp - lastCalled);

	        lastCalled = stamp;
	        if (remaining > 0) {
	          if (++count >= HOT_COUNT) {
	            return arguments[0];
	          }
	        } else {
	          count = 0;
	        }
	        return func.apply(undefined, arguments);
	      };
	    }

	    /**
	     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @param {number} [size=array.length] The size of `array`.
	     * @returns {Array} Returns `array`.
	     */
	    function shuffleSelf(array, size) {
	      var index = -1,
	          length = array.length,
	          lastIndex = length - 1;

	      size = size === undefined ? length : size;
	      while (++index < size) {
	        var rand = baseRandom(index, lastIndex),
	            value = array[rand];

	        array[rand] = array[index];
	        array[index] = value;
	      }
	      array.length = size;
	      return array;
	    }

	    /**
	     * Converts `string` to a property path array.
	     *
	     * @private
	     * @param {string} string The string to convert.
	     * @returns {Array} Returns the property path array.
	     */
	    var stringToPath = memoizeCapped(function(string) {
	      var result = [];
	      if (reLeadingDot.test(string)) {
	        result.push('');
	      }
	      string.replace(rePropName, function(match, number, quote, string) {
	        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	      });
	      return result;
	    });

	    /**
	     * Converts `value` to a string key if it's not a string or symbol.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {string|symbol} Returns the key.
	     */
	    function toKey(value) {
	      if (typeof value == 'string' || isSymbol(value)) {
	        return value;
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }

	    /**
	     * Converts `func` to its source code.
	     *
	     * @private
	     * @param {Function} func The function to convert.
	     * @returns {string} Returns the source code.
	     */
	    function toSource(func) {
	      if (func != null) {
	        try {
	          return funcToString.call(func);
	        } catch (e) {}
	        try {
	          return (func + '');
	        } catch (e) {}
	      }
	      return '';
	    }

	    /**
	     * Updates wrapper `details` based on `bitmask` flags.
	     *
	     * @private
	     * @returns {Array} details The details to modify.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Array} Returns `details`.
	     */
	    function updateWrapDetails(details, bitmask) {
	      arrayEach(wrapFlags, function(pair) {
	        var value = '_.' + pair[0];
	        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
	          details.push(value);
	        }
	      });
	      return details.sort();
	    }

	    /**
	     * Creates a clone of `wrapper`.
	     *
	     * @private
	     * @param {Object} wrapper The wrapper to clone.
	     * @returns {Object} Returns the cloned wrapper.
	     */
	    function wrapperClone(wrapper) {
	      if (wrapper instanceof LazyWrapper) {
	        return wrapper.clone();
	      }
	      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	      result.__actions__ = copyArray(wrapper.__actions__);
	      result.__index__  = wrapper.__index__;
	      result.__values__ = wrapper.__values__;
	      return result;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an array of elements split into groups the length of `size`.
	     * If `array` can't be split evenly, the final chunk will be the remaining
	     * elements.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to process.
	     * @param {number} [size=1] The length of each chunk
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the new array of chunks.
	     * @example
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 2);
	     * // => [['a', 'b'], ['c', 'd']]
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 3);
	     * // => [['a', 'b', 'c'], ['d']]
	     */
	    function chunk(array, size, guard) {
	      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
	        size = 1;
	      } else {
	        size = nativeMax(toInteger(size), 0);
	      }
	      var length = array == null ? 0 : array.length;
	      if (!length || size < 1) {
	        return [];
	      }
	      var index = 0,
	          resIndex = 0,
	          result = Array(nativeCeil(length / size));

	      while (index < length) {
	        result[resIndex++] = baseSlice(array, index, (index += size));
	      }
	      return result;
	    }

	    /**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are falsey.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */
	    function compact(array) {
	      var index = -1,
	          length = array == null ? 0 : array.length,
	          resIndex = 0,
	          result = [];

	      while (++index < length) {
	        var value = array[index];
	        if (value) {
	          result[resIndex++] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates a new array concatenating `array` with any additional arrays
	     * and/or values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to concatenate.
	     * @param {...*} [values] The values to concatenate.
	     * @returns {Array} Returns the new concatenated array.
	     * @example
	     *
	     * var array = [1];
	     * var other = _.concat(array, 2, [3], [[4]]);
	     *
	     * console.log(other);
	     * // => [1, 2, 3, [4]]
	     *
	     * console.log(array);
	     * // => [1]
	     */
	    function concat() {
	      var length = arguments.length;
	      if (!length) {
	        return [];
	      }
	      var args = Array(length - 1),
	          array = arguments[0],
	          index = length;

	      while (index--) {
	        args[index - 1] = arguments[index];
	      }
	      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
	    }

	    /**
	     * Creates an array of `array` values not included in the other given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * **Note:** Unlike `_.pullAll`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.without, _.xor
	     * @example
	     *
	     * _.difference([2, 1], [2, 3]);
	     * // => [1]
	     */
	    var difference = baseRest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
	        : [];
	    });

	    /**
	     * This method is like `_.difference` except that it accepts `iteratee` which
	     * is invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var differenceBy = baseRest(function(array, values) {
	      var iteratee = last(values);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
	        : [];
	    });

	    /**
	     * This method is like `_.difference` except that it accepts `comparator`
	     * which is invoked to compare elements of `array` to `values`. The order and
	     * references of result values are determined by the first array. The comparator
	     * is invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     *
	     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }]
	     */
	    var differenceWith = baseRest(function(array, values) {
	      var comparator = last(values);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
	        : [];
	    });

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.drop([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.drop([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.drop([1, 2, 3], 5);
	     * // => []
	     *
	     * _.drop([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function drop(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRight([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.dropRight([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.dropRight([1, 2, 3], 5);
	     * // => []
	     *
	     * _.dropRight([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function dropRight(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the end.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.dropRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropRightWhile(users, ['active', false]);
	     * // => objects for ['barney']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropRightWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the beginning.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.dropWhile(users, function(o) { return !o.active; });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropWhile(users, ['active', false]);
	     * // => objects for ['pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true)
	        : [];
	    }

	    /**
	     * Fills elements of `array` with `value` from `start` up to, but not
	     * including, `end`.
	     *
	     * **Note:** This method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Array
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.fill(array, 'a');
	     * console.log(array);
	     * // => ['a', 'a', 'a']
	     *
	     * _.fill(Array(3), 2);
	     * // => [2, 2, 2]
	     *
	     * _.fill([4, 6, 8, 10], '*', 1, 3);
	     * // => [4, '*', '*', 10]
	     */
	    function fill(array, value, start, end) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
	        start = 0;
	        end = length;
	      }
	      return baseFill(array, value, start, end);
	    }

	    /**
	     * This method is like `_.find` except that it returns the index of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.findIndex(users, function(o) { return o.user == 'barney'; });
	     * // => 0
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findIndex(users, { 'user': 'fred', 'active': false });
	     * // => 1
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findIndex(users, ['active', false]);
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findIndex(users, 'active');
	     * // => 2
	     */
	    function findIndex(array, predicate, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = fromIndex == null ? 0 : toInteger(fromIndex);
	      if (index < 0) {
	        index = nativeMax(length + index, 0);
	      }
	      return baseFindIndex(array, getIteratee(predicate, 3), index);
	    }

	    /**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
	     * // => 2
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
	     * // => 0
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastIndex(users, ['active', false]);
	     * // => 2
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastIndex(users, 'active');
	     * // => 0
	     */
	    function findLastIndex(array, predicate, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = length - 1;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = fromIndex < 0
	          ? nativeMax(length + index, 0)
	          : nativeMin(index, length - 1);
	      }
	      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
	    }

	    /**
	     * Flattens `array` a single level deep.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, [3, [4]], 5]
	     */
	    function flatten(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseFlatten(array, 1) : [];
	    }

	    /**
	     * Recursively flattens `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flattenDeep([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, 3, 4, 5]
	     */
	    function flattenDeep(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseFlatten(array, INFINITY) : [];
	    }

	    /**
	     * Recursively flatten `array` up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * var array = [1, [2, [3, [4]], 5]];
	     *
	     * _.flattenDepth(array, 1);
	     * // => [1, 2, [3, [4]], 5]
	     *
	     * _.flattenDepth(array, 2);
	     * // => [1, 2, 3, [4], 5]
	     */
	    function flattenDepth(array, depth) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(array, depth);
	    }

	    /**
	     * The inverse of `_.toPairs`; this method returns an object composed
	     * from key-value `pairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} pairs The key-value pairs.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.fromPairs([['a', 1], ['b', 2]]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function fromPairs(pairs) {
	      var index = -1,
	          length = pairs == null ? 0 : pairs.length,
	          result = {};

	      while (++index < length) {
	        var pair = pairs[index];
	        result[pair[0]] = pair[1];
	      }
	      return result;
	    }

	    /**
	     * Gets the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias first
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the first element of `array`.
	     * @example
	     *
	     * _.head([1, 2, 3]);
	     * // => 1
	     *
	     * _.head([]);
	     * // => undefined
	     */
	    function head(array) {
	      return (array && array.length) ? array[0] : undefined;
	    }

	    /**
	     * Gets the index at which the first occurrence of `value` is found in `array`
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it's used as the
	     * offset from the end of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 1, 2], 2);
	     * // => 1
	     *
	     * // Search from the `fromIndex`.
	     * _.indexOf([1, 2, 1, 2], 2, 2);
	     * // => 3
	     */
	    function indexOf(array, value, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = fromIndex == null ? 0 : toInteger(fromIndex);
	      if (index < 0) {
	        index = nativeMax(length + index, 0);
	      }
	      return baseIndexOf(array, value, index);
	    }

	    /**
	     * Gets all but the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     */
	    function initial(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseSlice(array, 0, -1) : [];
	    }

	    /**
	     * Creates an array of unique values that are included in all given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersection([2, 1], [2, 3]);
	     * // => [2]
	     */
	    var intersection = baseRest(function(arrays) {
	      var mapped = arrayMap(arrays, castArrayLikeObject);
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped)
	        : [];
	    });

	    /**
	     * This method is like `_.intersection` except that it accepts `iteratee`
	     * which is invoked for each element of each `arrays` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [2.1]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }]
	     */
	    var intersectionBy = baseRest(function(arrays) {
	      var iteratee = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);

	      if (iteratee === last(mapped)) {
	        iteratee = undefined;
	      } else {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, getIteratee(iteratee, 2))
	        : [];
	    });

	    /**
	     * This method is like `_.intersection` except that it accepts `comparator`
	     * which is invoked to compare elements of `arrays`. The order and references
	     * of result values are determined by the first array. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.intersectionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }]
	     */
	    var intersectionWith = baseRest(function(arrays) {
	      var comparator = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);

	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      if (comparator) {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, undefined, comparator)
	        : [];
	    });

	    /**
	     * Converts all elements in `array` into a string separated by `separator`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to convert.
	     * @param {string} [separator=','] The element separator.
	     * @returns {string} Returns the joined string.
	     * @example
	     *
	     * _.join(['a', 'b', 'c'], '~');
	     * // => 'a~b~c'
	     */
	    function join(array, separator) {
	      return array == null ? '' : nativeJoin.call(array, separator);
	    }

	    /**
	     * Gets the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the last element of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     */
	    function last(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? array[length - 1] : undefined;
	    }

	    /**
	     * This method is like `_.indexOf` except that it iterates over elements of
	     * `array` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 1, 2], 2);
	     * // => 3
	     *
	     * // Search from the `fromIndex`.
	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
	     * // => 1
	     */
	    function lastIndexOf(array, value, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = length;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
	      }
	      return value === value
	        ? strictLastIndexOf(array, value, index)
	        : baseFindIndex(array, baseIsNaN, index, true);
	    }

	    /**
	     * Gets the element at index `n` of `array`. If `n` is negative, the nth
	     * element from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.11.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=0] The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     *
	     * _.nth(array, 1);
	     * // => 'b'
	     *
	     * _.nth(array, -2);
	     * // => 'c';
	     */
	    function nth(array, n) {
	      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
	    }

	    /**
	     * Removes all given values from `array` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
	     * to remove elements from an array by predicate.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...*} [values] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pull(array, 'a', 'c');
	     * console.log(array);
	     * // => ['b', 'b']
	     */
	    var pull = baseRest(pullAll);

	    /**
	     * This method is like `_.pull` except that it accepts an array of values to remove.
	     *
	     * **Note:** Unlike `_.difference`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pullAll(array, ['a', 'c']);
	     * console.log(array);
	     * // => ['b', 'b']
	     */
	    function pullAll(array, values) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values)
	        : array;
	    }

	    /**
	     * This method is like `_.pullAll` except that it accepts `iteratee` which is
	     * invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The iteratee is invoked with one argument: (value).
	     *
	     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
	     *
	     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
	     * console.log(array);
	     * // => [{ 'x': 2 }]
	     */
	    function pullAllBy(array, values, iteratee) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, getIteratee(iteratee, 2))
	        : array;
	    }

	    /**
	     * This method is like `_.pullAll` except that it accepts `comparator` which
	     * is invoked to compare elements of `array` to `values`. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
	     *
	     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
	     * console.log(array);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
	     */
	    function pullAllWith(array, values, comparator) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, undefined, comparator)
	        : array;
	    }

	    /**
	     * Removes elements from `array` corresponding to `indexes` and returns an
	     * array of removed elements.
	     *
	     * **Note:** Unlike `_.at`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     * var pulled = _.pullAt(array, [1, 3]);
	     *
	     * console.log(array);
	     * // => ['a', 'c']
	     *
	     * console.log(pulled);
	     * // => ['b', 'd']
	     */
	    var pullAt = flatRest(function(array, indexes) {
	      var length = array == null ? 0 : array.length,
	          result = baseAt(array, indexes);

	      basePullAt(array, arrayMap(indexes, function(index) {
	        return isIndex(index, length) ? +index : index;
	      }).sort(compareAscending));

	      return result;
	    });

	    /**
	     * Removes all elements from `array` that `predicate` returns truthy for
	     * and returns an array of the removed elements. The predicate is invoked
	     * with three arguments: (value, index, array).
	     *
	     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
	     * to pull elements from an array by value.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4];
	     * var evens = _.remove(array, function(n) {
	     *   return n % 2 == 0;
	     * });
	     *
	     * console.log(array);
	     * // => [1, 3]
	     *
	     * console.log(evens);
	     * // => [2, 4]
	     */
	    function remove(array, predicate) {
	      var result = [];
	      if (!(array && array.length)) {
	        return result;
	      }
	      var index = -1,
	          indexes = [],
	          length = array.length;

	      predicate = getIteratee(predicate, 3);
	      while (++index < length) {
	        var value = array[index];
	        if (predicate(value, index, array)) {
	          result.push(value);
	          indexes.push(index);
	        }
	      }
	      basePullAt(array, indexes);
	      return result;
	    }

	    /**
	     * Reverses `array` so that the first element becomes the last, the second
	     * element becomes the second to last, and so on.
	     *
	     * **Note:** This method mutates `array` and is based on
	     * [`Array#reverse`](https://mdn.io/Array/reverse).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.reverse(array);
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function reverse(array) {
	      return array == null ? array : nativeReverse.call(array);
	    }

	    /**
	     * Creates a slice of `array` from `start` up to, but not including, `end`.
	     *
	     * **Note:** This method is used instead of
	     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
	     * returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function slice(array, start, end) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
	        start = 0;
	        end = length;
	      }
	      else {
	        start = start == null ? 0 : toInteger(start);
	        end = end === undefined ? length : toInteger(end);
	      }
	      return baseSlice(array, start, end);
	    }

	    /**
	     * Uses a binary search to determine the lowest index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([30, 50], 40);
	     * // => 1
	     */
	    function sortedIndex(array, value) {
	      return baseSortedIndex(array, value);
	    }

	    /**
	     * This method is like `_.sortedIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 0
	     */
	    function sortedIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
	    }

	    /**
	     * This method is like `_.indexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 1
	     */
	    function sortedIndexOf(array, value) {
	      var length = array == null ? 0 : array.length;
	      if (length) {
	        var index = baseSortedIndex(array, value);
	        if (index < length && eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * This method is like `_.sortedIndex` except that it returns the highest
	     * index at which `value` should be inserted into `array` in order to
	     * maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
	     * // => 4
	     */
	    function sortedLastIndex(array, value) {
	      return baseSortedIndex(array, value, true);
	    }

	    /**
	     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 1
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 1
	     */
	    function sortedLastIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
	    }

	    /**
	     * This method is like `_.lastIndexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 3
	     */
	    function sortedLastIndexOf(array, value) {
	      var length = array == null ? 0 : array.length;
	      if (length) {
	        var index = baseSortedIndex(array, value, true) - 1;
	        if (eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * This method is like `_.uniq` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniq([1, 1, 2]);
	     * // => [1, 2]
	     */
	    function sortedUniq(array) {
	      return (array && array.length)
	        ? baseSortedUniq(array)
	        : [];
	    }

	    /**
	     * This method is like `_.uniqBy` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
	     * // => [1.1, 2.3]
	     */
	    function sortedUniqBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSortedUniq(array, getIteratee(iteratee, 2))
	        : [];
	    }

	    /**
	     * Gets all but the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.tail([1, 2, 3]);
	     * // => [2, 3]
	     */
	    function tail(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseSlice(array, 1, length) : [];
	    }

	    /**
	     * Creates a slice of `array` with `n` elements taken from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.take([1, 2, 3]);
	     * // => [1]
	     *
	     * _.take([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.take([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.take([1, 2, 3], 0);
	     * // => []
	     */
	    function take(array, n, guard) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements taken from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRight([1, 2, 3]);
	     * // => [3]
	     *
	     * _.takeRight([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.takeRight([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.takeRight([1, 2, 3], 0);
	     * // => []
	     */
	    function takeRight(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the end. Elements are
	     * taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.takeRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeRightWhile(users, ['active', false]);
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeRightWhile(users, 'active');
	     * // => []
	     */
	    function takeRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), false, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the beginning. Elements
	     * are taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.takeWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeWhile(users, ['active', false]);
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeWhile(users, 'active');
	     * // => []
	     */
	    function takeWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3))
	        : [];
	    }

	    /**
	     * Creates an array of unique values, in order, from all given arrays using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.union([2], [1, 2]);
	     * // => [2, 1]
	     */
	    var union = baseRest(function(arrays) {
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
	    });

	    /**
	     * This method is like `_.union` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which uniqueness is computed. Result values are chosen from the first
	     * array in which the value occurs. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    var unionBy = baseRest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
	    });

	    /**
	     * This method is like `_.union` except that it accepts `comparator` which
	     * is invoked to compare elements of `arrays`. Result values are chosen from
	     * the first array in which the value occurs. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.unionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var unionWith = baseRest(function(arrays) {
	      var comparator = last(arrays);
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
	    });

	    /**
	     * Creates a duplicate-free version of an array, using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons, in which only the first occurrence of each element
	     * is kept. The order of result values is determined by the order they occur
	     * in the array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniq([2, 1, 2]);
	     * // => [2, 1]
	     */
	    function uniq(array) {
	      return (array && array.length) ? baseUniq(array) : [];
	    }

	    /**
	     * This method is like `_.uniq` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * uniqueness is computed. The order of result values is determined by the
	     * order they occur in the array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    function uniqBy(array, iteratee) {
	      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
	    }

	    /**
	     * This method is like `_.uniq` except that it accepts `comparator` which
	     * is invoked to compare elements of `array`. The order of result values is
	     * determined by the order they occur in the array.The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.uniqWith(objects, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
	     */
	    function uniqWith(array, comparator) {
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
	    }

	    /**
	     * This method is like `_.zip` except that it accepts an array of grouped
	     * elements and creates an array regrouping the elements to their pre-zip
	     * configuration.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.2.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     *
	     * _.unzip(zipped);
	     * // => [['a', 'b'], [1, 2], [true, false]]
	     */
	    function unzip(array) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var length = 0;
	      array = arrayFilter(array, function(group) {
	        if (isArrayLikeObject(group)) {
	          length = nativeMax(group.length, length);
	          return true;
	        }
	      });
	      return baseTimes(length, function(index) {
	        return arrayMap(array, baseProperty(index));
	      });
	    }

	    /**
	     * This method is like `_.unzip` except that it accepts `iteratee` to specify
	     * how regrouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  regrouped values.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
	     * // => [[1, 10, 100], [2, 20, 200]]
	     *
	     * _.unzipWith(zipped, _.add);
	     * // => [3, 30, 300]
	     */
	    function unzipWith(array, iteratee) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var result = unzip(array);
	      if (iteratee == null) {
	        return result;
	      }
	      return arrayMap(result, function(group) {
	        return apply(iteratee, undefined, group);
	      });
	    }

	    /**
	     * Creates an array excluding all given values using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.pull`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...*} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.xor
	     * @example
	     *
	     * _.without([2, 1, 2, 3], 1, 2);
	     * // => [3]
	     */
	    var without = baseRest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, values)
	        : [];
	    });

	    /**
	     * Creates an array of unique values that is the
	     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	     * of the given arrays. The order of result values is determined by the order
	     * they occur in the arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.without
	     * @example
	     *
	     * _.xor([2, 1], [2, 3]);
	     * // => [1, 3]
	     */
	    var xor = baseRest(function(arrays) {
	      return baseXor(arrayFilter(arrays, isArrayLikeObject));
	    });

	    /**
	     * This method is like `_.xor` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which by which they're compared. The order of result values is determined
	     * by the order they occur in the arrays. The iteratee is invoked with one
	     * argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2, 3.4]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var xorBy = baseRest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
	    });

	    /**
	     * This method is like `_.xor` except that it accepts `comparator` which is
	     * invoked to compare elements of `arrays`. The order of result values is
	     * determined by the order they occur in the arrays. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.xorWith(objects, others, _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var xorWith = baseRest(function(arrays) {
	      var comparator = last(arrays);
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
	    });

	    /**
	     * Creates an array of grouped elements, the first of which contains the
	     * first elements of the given arrays, the second of which contains the
	     * second elements of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     */
	    var zip = baseRest(unzip);

	    /**
	     * This method is like `_.fromPairs` except that it accepts two arrays,
	     * one of property identifiers and one of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.4.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObject(['a', 'b'], [1, 2]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function zipObject(props, values) {
	      return baseZipObject(props || [], values || [], assignValue);
	    }

	    /**
	     * This method is like `_.zipObject` except that it supports property paths.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
	     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
	     */
	    function zipObjectDeep(props, values) {
	      return baseZipObject(props || [], values || [], baseSet);
	    }

	    /**
	     * This method is like `_.zip` except that it accepts `iteratee` to specify
	     * how grouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  grouped values.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
	     *   return a + b + c;
	     * });
	     * // => [111, 222]
	     */
	    var zipWith = baseRest(function(arrays) {
	      var length = arrays.length,
	          iteratee = length > 1 ? arrays[length - 1] : undefined;

	      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
	      return unzipWith(arrays, iteratee);
	    });

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
	     * chain sequences enabled. The result of such sequences must be unwrapped
	     * with `_#value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Seq
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36 },
	     *   { 'user': 'fred',    'age': 40 },
	     *   { 'user': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _
	     *   .chain(users)
	     *   .sortBy('age')
	     *   .map(function(o) {
	     *     return o.user + ' is ' + o.age;
	     *   })
	     *   .head()
	     *   .value();
	     * // => 'pebbles is 1'
	     */
	    function chain(value) {
	      var result = lodash(value);
	      result.__chain__ = true;
	      return result;
	    }

	    /**
	     * This method invokes `interceptor` and returns `value`. The interceptor
	     * is invoked with one argument; (value). The purpose of this method is to
	     * "tap into" a method chain sequence in order to modify intermediate results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3])
	     *  .tap(function(array) {
	     *    // Mutate input array.
	     *    array.pop();
	     *  })
	     *  .reverse()
	     *  .value();
	     * // => [2, 1]
	     */
	    function tap(value, interceptor) {
	      interceptor(value);
	      return value;
	    }

	    /**
	     * This method is like `_.tap` except that it returns the result of `interceptor`.
	     * The purpose of this method is to "pass thru" values replacing intermediate
	     * results in a method chain sequence.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns the result of `interceptor`.
	     * @example
	     *
	     * _('  abc  ')
	     *  .chain()
	     *  .trim()
	     *  .thru(function(value) {
	     *    return [value];
	     *  })
	     *  .value();
	     * // => ['abc']
	     */
	    function thru(value, interceptor) {
	      return interceptor(value);
	    }

	    /**
	     * This method is the wrapper version of `_.at`.
	     *
	     * @name at
	     * @memberOf _
	     * @since 1.0.0
	     * @category Seq
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _(object).at(['a[0].b.c', 'a[1]']).value();
	     * // => [3, 4]
	     */
	    var wrapperAt = flatRest(function(paths) {
	      var length = paths.length,
	          start = length ? paths[0] : 0,
	          value = this.__wrapped__,
	          interceptor = function(object) { return baseAt(object, paths); };

	      if (length > 1 || this.__actions__.length ||
	          !(value instanceof LazyWrapper) || !isIndex(start)) {
	        return this.thru(interceptor);
	      }
	      value = value.slice(start, +start + (length ? 1 : 0));
	      value.__actions__.push({
	        'func': thru,
	        'args': [interceptor],
	        'thisArg': undefined
	      });
	      return new LodashWrapper(value, this.__chain__).thru(function(array) {
	        if (length && !array.length) {
	          array.push(undefined);
	        }
	        return array;
	      });
	    });

	    /**
	     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
	     *
	     * @name chain
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // A sequence without explicit chaining.
	     * _(users).head();
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // A sequence with explicit chaining.
	     * _(users)
	     *   .chain()
	     *   .head()
	     *   .pick('user')
	     *   .value();
	     * // => { 'user': 'barney' }
	     */
	    function wrapperChain() {
	      return chain(this);
	    }

	    /**
	     * Executes the chain sequence and returns the wrapped result.
	     *
	     * @name commit
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).push(3);
	     *
	     * console.log(array);
	     * // => [1, 2]
	     *
	     * wrapped = wrapped.commit();
	     * console.log(array);
	     * // => [1, 2, 3]
	     *
	     * wrapped.last();
	     * // => 3
	     *
	     * console.log(array);
	     * // => [1, 2, 3]
	     */
	    function wrapperCommit() {
	      return new LodashWrapper(this.value(), this.__chain__);
	    }

	    /**
	     * Gets the next value on a wrapped object following the
	     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
	     *
	     * @name next
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the next iterator value.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 1 }
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 2 }
	     *
	     * wrapped.next();
	     * // => { 'done': true, 'value': undefined }
	     */
	    function wrapperNext() {
	      if (this.__values__ === undefined) {
	        this.__values__ = toArray(this.value());
	      }
	      var done = this.__index__ >= this.__values__.length,
	          value = done ? undefined : this.__values__[this.__index__++];

	      return { 'done': done, 'value': value };
	    }

	    /**
	     * Enables the wrapper to be iterable.
	     *
	     * @name Symbol.iterator
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the wrapper object.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped[Symbol.iterator]() === wrapped;
	     * // => true
	     *
	     * Array.from(wrapped);
	     * // => [1, 2]
	     */
	    function wrapperToIterator() {
	      return this;
	    }

	    /**
	     * Creates a clone of the chain sequence planting `value` as the wrapped value.
	     *
	     * @name plant
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @param {*} value The value to plant.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2]).map(square);
	     * var other = wrapped.plant([3, 4]);
	     *
	     * other.value();
	     * // => [9, 16]
	     *
	     * wrapped.value();
	     * // => [1, 4]
	     */
	    function wrapperPlant(value) {
	      var result,
	          parent = this;

	      while (parent instanceof baseLodash) {
	        var clone = wrapperClone(parent);
	        clone.__index__ = 0;
	        clone.__values__ = undefined;
	        if (result) {
	          previous.__wrapped__ = clone;
	        } else {
	          result = clone;
	        }
	        var previous = clone;
	        parent = parent.__wrapped__;
	      }
	      previous.__wrapped__ = value;
	      return result;
	    }

	    /**
	     * This method is the wrapper version of `_.reverse`.
	     *
	     * **Note:** This method mutates the wrapped array.
	     *
	     * @name reverse
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _(array).reverse().value()
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function wrapperReverse() {
	      var value = this.__wrapped__;
	      if (value instanceof LazyWrapper) {
	        var wrapped = value;
	        if (this.__actions__.length) {
	          wrapped = new LazyWrapper(this);
	        }
	        wrapped = wrapped.reverse();
	        wrapped.__actions__.push({
	          'func': thru,
	          'args': [reverse],
	          'thisArg': undefined
	        });
	        return new LodashWrapper(wrapped, this.__chain__);
	      }
	      return this.thru(reverse);
	    }

	    /**
	     * Executes the chain sequence to resolve the unwrapped value.
	     *
	     * @name value
	     * @memberOf _
	     * @since 0.1.0
	     * @alias toJSON, valueOf
	     * @category Seq
	     * @returns {*} Returns the resolved unwrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).value();
	     * // => [1, 2, 3]
	     */
	    function wrapperValue() {
	      return baseWrapperValue(this.__wrapped__, this.__actions__);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the number of times the key was returned by `iteratee`. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': 1, '6': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */
	    var countBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        ++result[key];
	      } else {
	        baseAssignValue(result, key, 1);
	      }
	    });

	    /**
	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
	     * Iteration is stopped once `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * **Note:** This method returns `true` for
	     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
	     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
	     * elements of empty collections.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes'], Boolean);
	     * // => false
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.every(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.every(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.every(users, 'active');
	     * // => false
	     */
	    function every(collection, predicate, guard) {
	      var func = isArray(collection) ? arrayEvery : baseEvery;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Iterates over elements of `collection`, returning an array of all elements
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * **Note:** Unlike `_.remove`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.reject
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, { 'age': 36, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.filter(users, 'active');
	     * // => objects for ['barney']
	     */
	    function filter(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Iterates over elements of `collection`, returning the first element
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': true },
	     *   { 'user': 'fred',    'age': 40, 'active': false },
	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
	     * ];
	     *
	     * _.find(users, function(o) { return o.age < 40; });
	     * // => object for 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.find(users, { 'age': 1, 'active': true });
	     * // => object for 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.find(users, ['active', false]);
	     * // => object for 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.find(users, 'active');
	     * // => object for 'barney'
	     */
	    var find = createFind(findIndex);

	    /**
	     * This method is like `_.find` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=collection.length-1] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 1;
	     * });
	     * // => 3
	     */
	    var findLast = createFind(findLastIndex);

	    /**
	     * Creates a flattened array of values by running each element in `collection`
	     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
	     * with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [n, n];
	     * }
	     *
	     * _.flatMap([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMap(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), 1);
	    }

	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDeep([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMapDeep(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), INFINITY);
	    }

	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDepth([1, 2], duplicate, 2);
	     * // => [[1, 1], [2, 2]]
	     */
	    function flatMapDepth(collection, iteratee, depth) {
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(map(collection, iteratee), depth);
	    }

	    /**
	     * Iterates over elements of `collection` and invokes `iteratee` for each element.
	     * The iteratee is invoked with three arguments: (value, index|key, collection).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * **Note:** As with other "Collections" methods, objects with a "length"
	     * property are iterated like arrays. To avoid this behavior use `_.forIn`
	     * or `_.forOwn` for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias each
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEachRight
	     * @example
	     *
	     * _.forEach([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `1` then `2`.
	     *
	     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forEach(collection, iteratee) {
	      var func = isArray(collection) ? arrayEach : baseEach;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.forEach` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @alias eachRight
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEach
	     * @example
	     *
	     * _.forEachRight([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `2` then `1`.
	     */
	    function forEachRight(collection, iteratee) {
	      var func = isArray(collection) ? arrayEachRight : baseEachRight;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The order of grouped values
	     * is determined by the order they occur in `collection`. The corresponding
	     * value of each key is an array of elements responsible for generating the
	     * key. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': [4.2], '6': [6.1, 6.3] }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */
	    var groupBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        result[key].push(value);
	      } else {
	        baseAssignValue(result, key, [value]);
	      }
	    });

	    /**
	     * Checks if `value` is in `collection`. If `collection` is a string, it's
	     * checked for a substring of `value`, otherwise
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * is used for equality comparisons. If `fromIndex` is negative, it's used as
	     * the offset from the end of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {boolean} Returns `true` if `value` is found, else `false`.
	     * @example
	     *
	     * _.includes([1, 2, 3], 1);
	     * // => true
	     *
	     * _.includes([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.includes({ 'a': 1, 'b': 2 }, 1);
	     * // => true
	     *
	     * _.includes('abcd', 'bc');
	     * // => true
	     */
	    function includes(collection, value, fromIndex, guard) {
	      collection = isArrayLike(collection) ? collection : values(collection);
	      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

	      var length = collection.length;
	      if (fromIndex < 0) {
	        fromIndex = nativeMax(length + fromIndex, 0);
	      }
	      return isString(collection)
	        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	    }

	    /**
	     * Invokes the method at `path` of each element in `collection`, returning
	     * an array of the results of each invoked method. Any additional arguments
	     * are provided to each invoked method. If `path` is a function, it's invoked
	     * for, and `this` bound to, each element in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|string} path The path of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [args] The arguments to invoke each method with.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invokeMap([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */
	    var invokeMap = baseRest(function(collection, path, args) {
	      var index = -1,
	          isFunc = typeof path == 'function',
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value) {
	        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
	      });
	      return result;
	    });

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the last element responsible for generating the key. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var array = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.keyBy(array, function(o) {
	     *   return String.fromCharCode(o.code);
	     * });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.keyBy(array, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     */
	    var keyBy = createAggregator(function(result, value, key) {
	      baseAssignValue(result, key, value);
	    });

	    /**
	     * Creates an array of values by running each element in `collection` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	     *
	     * The guarded methods are:
	     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * _.map([4, 8], square);
	     * // => [16, 64]
	     *
	     * _.map({ 'a': 4, 'b': 8 }, square);
	     * // => [16, 64] (iteration order is not guaranteed)
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, 'user');
	     * // => ['barney', 'fred']
	     */
	    function map(collection, iteratee) {
	      var func = isArray(collection) ? arrayMap : baseMap;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.sortBy` except that it allows specifying the sort
	     * orders of the iteratees to sort by. If `orders` is unspecified, all values
	     * are sorted in ascending order. Otherwise, specify an order of "desc" for
	     * descending or "asc" for ascending sort order of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @param {string[]} [orders] The sort orders of `iteratees`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 34 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 36 }
	     * ];
	     *
	     * // Sort by `user` in ascending order and by `age` in descending order.
	     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */
	    function orderBy(collection, iteratees, orders, guard) {
	      if (collection == null) {
	        return [];
	      }
	      if (!isArray(iteratees)) {
	        iteratees = iteratees == null ? [] : [iteratees];
	      }
	      orders = guard ? undefined : orders;
	      if (!isArray(orders)) {
	        orders = orders == null ? [] : [orders];
	      }
	      return baseOrderBy(collection, iteratees, orders);
	    }

	    /**
	     * Creates an array of elements split into two groups, the first of which
	     * contains elements `predicate` returns truthy for, the second of which
	     * contains elements `predicate` returns falsey for. The predicate is
	     * invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of grouped elements.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': false },
	     *   { 'user': 'fred',    'age': 40, 'active': true },
	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
	     * ];
	     *
	     * _.partition(users, function(o) { return o.active; });
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.partition(users, { 'age': 1, 'active': false });
	     * // => objects for [['pebbles'], ['barney', 'fred']]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.partition(users, ['active', false]);
	     * // => objects for [['barney', 'pebbles'], ['fred']]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.partition(users, 'active');
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     */
	    var partition = createAggregator(function(result, value, key) {
	      result[key ? 0 : 1].push(value);
	    }, function() { return [[], []]; });

	    /**
	     * Reduces `collection` to a value which is the accumulated result of running
	     * each element in `collection` thru `iteratee`, where each successive
	     * invocation is supplied the return value of the previous. If `accumulator`
	     * is not given, the first element of `collection` is used as the initial
	     * value. The iteratee is invoked with four arguments:
	     * (accumulator, value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
	     *
	     * The guarded methods are:
	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	     * and `sortBy`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduceRight
	     * @example
	     *
	     * _.reduce([1, 2], function(sum, n) {
	     *   return sum + n;
	     * }, 0);
	     * // => 3
	     *
	     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     *   return result;
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	     */
	    function reduce(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduce : baseReduce,
	          initAccum = arguments.length < 3;

	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	    }

	    /**
	     * This method is like `_.reduce` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduce
	     * @example
	     *
	     * var array = [[0, 1], [2, 3], [4, 5]];
	     *
	     * _.reduceRight(array, function(flattened, other) {
	     *   return flattened.concat(other);
	     * }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */
	    function reduceRight(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduceRight : baseReduce,
	          initAccum = arguments.length < 3;

	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
	    }

	    /**
	     * The opposite of `_.filter`; this method returns the elements of `collection`
	     * that `predicate` does **not** return truthy for.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.filter
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': true }
	     * ];
	     *
	     * _.reject(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.reject(users, { 'age': 40, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.reject(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.reject(users, 'active');
	     * // => objects for ['barney']
	     */
	    function reject(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, negate(getIteratee(predicate, 3)));
	    }

	    /**
	     * Gets a random element from `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     */
	    function sample(collection) {
	      var func = isArray(collection) ? arraySample : baseSample;
	      return func(collection);
	    }

	    /**
	     * Gets `n` random elements at unique keys from `collection` up to the
	     * size of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} [n=1] The number of elements to sample.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the random elements.
	     * @example
	     *
	     * _.sampleSize([1, 2, 3], 2);
	     * // => [3, 1]
	     *
	     * _.sampleSize([1, 2, 3], 4);
	     * // => [2, 3, 1]
	     */
	    function sampleSize(collection, n, guard) {
	      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = toInteger(n);
	      }
	      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
	      return func(collection, n);
	    }

	    /**
	     * Creates an array of shuffled values, using a version of the
	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4]);
	     * // => [4, 1, 3, 2]
	     */
	    function shuffle(collection) {
	      var func = isArray(collection) ? arrayShuffle : baseShuffle;
	      return func(collection);
	    }

	    /**
	     * Gets the size of `collection` by returning its length for array-like
	     * values or the number of own enumerable string keyed properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @returns {number} Returns the collection size.
	     * @example
	     *
	     * _.size([1, 2, 3]);
	     * // => 3
	     *
	     * _.size({ 'a': 1, 'b': 2 });
	     * // => 2
	     *
	     * _.size('pebbles');
	     * // => 7
	     */
	    function size(collection) {
	      if (collection == null) {
	        return 0;
	      }
	      if (isArrayLike(collection)) {
	        return isString(collection) ? stringSize(collection) : collection.length;
	      }
	      var tag = getTag(collection);
	      if (tag == mapTag || tag == setTag) {
	        return collection.size;
	      }
	      return baseKeys(collection).length;
	    }

	    /**
	     * Checks if `predicate` returns truthy for **any** element of `collection`.
	     * Iteration is stopped once `predicate` returns truthy. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': true },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.some(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.some(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.some(users, 'active');
	     * // => true
	     */
	    function some(collection, predicate, guard) {
	      var func = isArray(collection) ? arraySome : baseSome;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection thru each iteratee. This method
	     * performs a stable sort, that is, it preserves the original sort order of
	     * equal elements. The iteratees are invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 34 }
	     * ];
	     *
	     * _.sortBy(users, [function(o) { return o.user; }]);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     *
	     * _.sortBy(users, ['user', 'age']);
	     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	     */
	    var sortBy = baseRest(function(collection, iteratees) {
	      if (collection == null) {
	        return [];
	      }
	      var length = iteratees.length;
	      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	        iteratees = [];
	      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	        iteratees = [iteratees[0]];
	      }
	      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
	    });

	    /*------------------------------------------------------------------------*/

	    /**
	     * Gets the timestamp of the number of milliseconds that have elapsed since
	     * the Unix epoch (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Date
	     * @returns {number} Returns the timestamp.
	     * @example
	     *
	     * _.defer(function(stamp) {
	     *   console.log(_.now() - stamp);
	     * }, _.now());
	     * // => Logs the number of milliseconds it took for the deferred invocation.
	     */
	    var now = ctxNow || function() {
	      return root.Date.now();
	    };

	    /*------------------------------------------------------------------------*/

	    /**
	     * The opposite of `_.before`; this method creates a function that invokes
	     * `func` once it's called `n` or more times.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {number} n The number of calls before `func` is invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => Logs 'done saving!' after the two async saves have completed.
	     */
	    function after(n, func) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n < 1) {
	          return func.apply(this, arguments);
	        }
	      };
	    }

	    /**
	     * Creates a function that invokes `func`, with up to `n` arguments,
	     * ignoring any additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @param {number} [n=func.length] The arity cap.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	     * // => [6, 8, 10]
	     */
	    function ary(func, n, guard) {
	      n = guard ? undefined : n;
	      n = (func && n == null) ? func.length : n;
	      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
	    }

	    /**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it's called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery(element).on('click', _.before(5, addContactToList));
	     * // => Allows adding up to 4 contacts to the list.
	     */
	    function before(n, func) {
	      var result;
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n > 0) {
	          result = func.apply(this, arguments);
	        }
	        if (n <= 1) {
	          func = undefined;
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and `partials` prepended to the arguments it receives.
	     *
	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
	     * property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * function greet(greeting, punctuation) {
	     *   return greeting + ' ' + this.user + punctuation;
	     * }
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * var bound = _.bind(greet, object, 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bind(greet, object, _, '!');
	     * bound('hi');
	     * // => 'hi fred!'
	     */
	    var bind = baseRest(function(func, thisArg, partials) {
	      var bitmask = WRAP_BIND_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getHolder(bind));
	        bitmask |= WRAP_PARTIAL_FLAG;
	      }
	      return createWrap(func, bitmask, thisArg, partials, holders);
	    });

	    /**
	     * Creates a function that invokes the method at `object[key]` with `partials`
	     * prepended to the arguments it receives.
	     *
	     * This method differs from `_.bind` by allowing bound functions to reference
	     * methods that may be redefined or don't yet exist. See
	     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
	     * for more details.
	     *
	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Function
	     * @param {Object} object The object to invoke the method on.
	     * @param {string} key The key of the method.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'user': 'fred',
	     *   'greet': function(greeting, punctuation) {
	     *     return greeting + ' ' + this.user + punctuation;
	     *   }
	     * };
	     *
	     * var bound = _.bindKey(object, 'greet', 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * object.greet = function(greeting, punctuation) {
	     *   return greeting + 'ya ' + this.user + punctuation;
	     * };
	     *
	     * bound('!');
	     * // => 'hiya fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bindKey(object, 'greet', _, '!');
	     * bound('hi');
	     * // => 'hiya fred!'
	     */
	    var bindKey = baseRest(function(object, key, partials) {
	      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getHolder(bindKey));
	        bitmask |= WRAP_PARTIAL_FLAG;
	      }
	      return createWrap(key, bitmask, object, partials, holders);
	    });

	    /**
	     * Creates a function that accepts arguments of `func` and either invokes
	     * `func` returning its result, if at least `arity` number of arguments have
	     * been provided, or returns a function that accepts the remaining `func`
	     * arguments, and so on. The arity of `func` may be specified if `func.length`
	     * is not sufficient.
	     *
	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curry(abc);
	     *
	     * curried(1)(2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(1)(_, 3)(2);
	     * // => [1, 2, 3]
	     */
	    function curry(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curry.placeholder;
	      return result;
	    }

	    /**
	     * This method is like `_.curry` except that arguments are applied to `func`
	     * in the manner of `_.partialRight` instead of `_.partial`.
	     *
	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curryRight(abc);
	     *
	     * curried(3)(2)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(2, 3)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(3)(1, _)(2);
	     * // => [1, 2, 3]
	     */
	    function curryRight(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curryRight.placeholder;
	      return result;
	    }

	    /**
	     * Creates a debounced function that delays invoking `func` until after `wait`
	     * milliseconds have elapsed since the last time the debounced function was
	     * invoked. The debounced function comes with a `cancel` method to cancel
	     * delayed `func` invocations and a `flush` method to immediately invoke them.
	     * Provide `options` to indicate whether `func` should be invoked on the
	     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	     * with the last arguments provided to the debounced function. Subsequent
	     * calls to the debounced function return the result of the last `func`
	     * invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the debounced function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.debounce` and `_.throttle`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to debounce.
	     * @param {number} [wait=0] The number of milliseconds to delay.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=false]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {number} [options.maxWait]
	     *  The maximum time `func` is allowed to be delayed before it's invoked.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // Avoid costly calculations while the window size is in flux.
	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	     *
	     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	     * jQuery(element).on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * }));
	     *
	     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	     * var source = new EventSource('/stream');
	     * jQuery(source).on('message', debounced);
	     *
	     * // Cancel the trailing debounced invocation.
	     * jQuery(window).on('popstate', debounced.cancel);
	     */
	    function debounce(func, wait, options) {
	      var lastArgs,
	          lastThis,
	          maxWait,
	          result,
	          timerId,
	          lastCallTime,
	          lastInvokeTime = 0,
	          leading = false,
	          maxing = false,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      wait = toNumber(wait) || 0;
	      if (isObject(options)) {
	        leading = !!options.leading;
	        maxing = 'maxWait' in options;
	        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }

	      function invokeFunc(time) {
	        var args = lastArgs,
	            thisArg = lastThis;

	        lastArgs = lastThis = undefined;
	        lastInvokeTime = time;
	        result = func.apply(thisArg, args);
	        return result;
	      }

	      function leadingEdge(time) {
	        // Reset any `maxWait` timer.
	        lastInvokeTime = time;
	        // Start the timer for the trailing edge.
	        timerId = setTimeout(timerExpired, wait);
	        // Invoke the leading edge.
	        return leading ? invokeFunc(time) : result;
	      }

	      function remainingWait(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime,
	            result = wait - timeSinceLastCall;

	        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	      }

	      function shouldInvoke(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime;

	        // Either this is the first call, activity has stopped and we're at the
	        // trailing edge, the system time has gone backwards and we're treating
	        // it as the trailing edge, or we've hit the `maxWait` limit.
	        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	      }

	      function timerExpired() {
	        var time = now();
	        if (shouldInvoke(time)) {
	          return trailingEdge(time);
	        }
	        // Restart the timer.
	        timerId = setTimeout(timerExpired, remainingWait(time));
	      }

	      function trailingEdge(time) {
	        timerId = undefined;

	        // Only invoke if we have `lastArgs` which means `func` has been
	        // debounced at least once.
	        if (trailing && lastArgs) {
	          return invokeFunc(time);
	        }
	        lastArgs = lastThis = undefined;
	        return result;
	      }

	      function cancel() {
	        if (timerId !== undefined) {
	          clearTimeout(timerId);
	        }
	        lastInvokeTime = 0;
	        lastArgs = lastCallTime = lastThis = timerId = undefined;
	      }

	      function flush() {
	        return timerId === undefined ? result : trailingEdge(now());
	      }

	      function debounced() {
	        var time = now(),
	            isInvoking = shouldInvoke(time);

	        lastArgs = arguments;
	        lastThis = this;
	        lastCallTime = time;

	        if (isInvoking) {
	          if (timerId === undefined) {
	            return leadingEdge(lastCallTime);
	          }
	          if (maxing) {
	            // Handle invocations in a tight loop.
	            timerId = setTimeout(timerExpired, wait);
	            return invokeFunc(lastCallTime);
	          }
	        }
	        if (timerId === undefined) {
	          timerId = setTimeout(timerExpired, wait);
	        }
	        return result;
	      }
	      debounced.cancel = cancel;
	      debounced.flush = flush;
	      return debounced;
	    }

	    /**
	     * Defers invoking the `func` until the current call stack has cleared. Any
	     * additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to defer.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) {
	     *   console.log(text);
	     * }, 'deferred');
	     * // => Logs 'deferred' after one millisecond.
	     */
	    var defer = baseRest(function(func, args) {
	      return baseDelay(func, 1, args);
	    });

	    /**
	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
	     * provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) {
	     *   console.log(text);
	     * }, 1000, 'later');
	     * // => Logs 'later' after one second.
	     */
	    var delay = baseRest(function(func, wait, args) {
	      return baseDelay(func, toNumber(wait) || 0, args);
	    });

	    /**
	     * Creates a function that invokes `func` with arguments reversed.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to flip arguments for.
	     * @returns {Function} Returns the new flipped function.
	     * @example
	     *
	     * var flipped = _.flip(function() {
	     *   return _.toArray(arguments);
	     * });
	     *
	     * flipped('a', 'b', 'c', 'd');
	     * // => ['d', 'c', 'b', 'a']
	     */
	    function flip(func) {
	      return createWrap(func, WRAP_FLIP_FLAG);
	    }

	    /**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided, it determines the cache key for storing the result based on the
	     * arguments provided to the memoized function. By default, the first argument
	     * provided to the memoized function is used as the map cache key. The `func`
	     * is invoked with the `this` binding of the memoized function.
	     *
	     * **Note:** The cache is exposed as the `cache` property on the memoized
	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
	     * constructor with one whose instances implement the
	     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] The function to resolve the cache key.
	     * @returns {Function} Returns the new memoized function.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     * var other = { 'c': 3, 'd': 4 };
	     *
	     * var values = _.memoize(_.values);
	     * values(object);
	     * // => [1, 2]
	     *
	     * values(other);
	     * // => [3, 4]
	     *
	     * object.a = 2;
	     * values(object);
	     * // => [1, 2]
	     *
	     * // Modify the result cache.
	     * values.cache.set(object, ['a', 'b']);
	     * values(object);
	     * // => ['a', 'b']
	     *
	     * // Replace `_.memoize.Cache`.
	     * _.memoize.Cache = WeakMap;
	     */
	    function memoize(func, resolver) {
	      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var memoized = function() {
	        var args = arguments,
	            key = resolver ? resolver.apply(this, args) : args[0],
	            cache = memoized.cache;

	        if (cache.has(key)) {
	          return cache.get(key);
	        }
	        var result = func.apply(this, args);
	        memoized.cache = cache.set(key, result) || cache;
	        return result;
	      };
	      memoized.cache = new (memoize.Cache || MapCache);
	      return memoized;
	    }

	    // Expose `MapCache`.
	    memoize.Cache = MapCache;

	    /**
	     * Creates a function that negates the result of the predicate `func`. The
	     * `func` predicate is invoked with the `this` binding and arguments of the
	     * created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} predicate The predicate to negate.
	     * @returns {Function} Returns the new negated function.
	     * @example
	     *
	     * function isEven(n) {
	     *   return n % 2 == 0;
	     * }
	     *
	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	     * // => [1, 3, 5]
	     */
	    function negate(predicate) {
	      if (typeof predicate != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return function() {
	        var args = arguments;
	        switch (args.length) {
	          case 0: return !predicate.call(this);
	          case 1: return !predicate.call(this, args[0]);
	          case 2: return !predicate.call(this, args[0], args[1]);
	          case 3: return !predicate.call(this, args[0], args[1], args[2]);
	        }
	        return !predicate.apply(this, args);
	      };
	    }

	    /**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first invocation. The `func` is
	     * invoked with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // => `createApplication` is invoked once
	     */
	    function once(func) {
	      return before(2, func);
	    }

	    /**
	     * Creates a function that invokes `func` with its arguments transformed.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to wrap.
	     * @param {...(Function|Function[])} [transforms=[_.identity]]
	     *  The argument transforms.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function doubled(n) {
	     *   return n * 2;
	     * }
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var func = _.overArgs(function(x, y) {
	     *   return [x, y];
	     * }, [square, doubled]);
	     *
	     * func(9, 3);
	     * // => [81, 6]
	     *
	     * func(10, 5);
	     * // => [100, 10]
	     */
	    var overArgs = castRest(function(func, transforms) {
	      transforms = (transforms.length == 1 && isArray(transforms[0]))
	        ? arrayMap(transforms[0], baseUnary(getIteratee()))
	        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

	      var funcsLength = transforms.length;
	      return baseRest(function(args) {
	        var index = -1,
	            length = nativeMin(args.length, funcsLength);

	        while (++index < length) {
	          args[index] = transforms[index].call(this, args[index]);
	        }
	        return apply(func, this, args);
	      });
	    });

	    /**
	     * Creates a function that invokes `func` with `partials` prepended to the
	     * arguments it receives. This method is like `_.bind` except it does **not**
	     * alter the `this` binding.
	     *
	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.2.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var sayHelloTo = _.partial(greet, 'hello');
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     *
	     * // Partially applied with placeholders.
	     * var greetFred = _.partial(greet, _, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     */
	    var partial = baseRest(function(func, partials) {
	      var holders = replaceHolders(partials, getHolder(partial));
	      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
	    });

	    /**
	     * This method is like `_.partial` except that partially applied arguments
	     * are appended to the arguments it receives.
	     *
	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var greetFred = _.partialRight(greet, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     *
	     * // Partially applied with placeholders.
	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     */
	    var partialRight = baseRest(function(func, partials) {
	      var holders = replaceHolders(partials, getHolder(partialRight));
	      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	    });

	    /**
	     * Creates a function that invokes `func` with arguments arranged according
	     * to the specified `indexes` where the argument value at the first index is
	     * provided as the first argument, the argument value at the second index is
	     * provided as the second argument, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to rearrange arguments for.
	     * @param {...(number|number[])} indexes The arranged argument indexes.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var rearged = _.rearg(function(a, b, c) {
	     *   return [a, b, c];
	     * }, [2, 0, 1]);
	     *
	     * rearged('b', 'c', 'a')
	     * // => ['a', 'b', 'c']
	     */
	    var rearg = flatRest(function(func, indexes) {
	      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
	    });

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as
	     * an array.
	     *
	     * **Note:** This method is based on the
	     * [rest parameter](https://mdn.io/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.rest(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */
	    function rest(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start === undefined ? start : toInteger(start);
	      return baseRest(func, start);
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * create function and an array of arguments much like
	     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
	     *
	     * **Note:** This method is based on the
	     * [spread operator](https://mdn.io/spread_operator).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Function
	     * @param {Function} func The function to spread arguments over.
	     * @param {number} [start=0] The start position of the spread.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.spread(function(who, what) {
	     *   return who + ' says ' + what;
	     * });
	     *
	     * say(['fred', 'hello']);
	     * // => 'fred says hello'
	     *
	     * var numbers = Promise.all([
	     *   Promise.resolve(40),
	     *   Promise.resolve(36)
	     * ]);
	     *
	     * numbers.then(_.spread(function(x, y) {
	     *   return x + y;
	     * }));
	     * // => a Promise of 76
	     */
	    function spread(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start == null ? 0 : nativeMax(toInteger(start), 0);
	      return baseRest(function(args) {
	        var array = args[start],
	            otherArgs = castSlice(args, 0, start);

	        if (array) {
	          arrayPush(otherArgs, array);
	        }
	        return apply(func, this, otherArgs);
	      });
	    }

	    /**
	     * Creates a throttled function that only invokes `func` at most once per
	     * every `wait` milliseconds. The throttled function comes with a `cancel`
	     * method to cancel delayed `func` invocations and a `flush` method to
	     * immediately invoke them. Provide `options` to indicate whether `func`
	     * should be invoked on the leading and/or trailing edge of the `wait`
	     * timeout. The `func` is invoked with the last arguments provided to the
	     * throttled function. Subsequent calls to the throttled function return the
	     * result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the throttled function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.throttle` and `_.debounce`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to throttle.
	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=true]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // Avoid excessively updating the position while scrolling.
	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	     *
	     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	     * jQuery(element).on('click', throttled);
	     *
	     * // Cancel the trailing throttled invocation.
	     * jQuery(window).on('popstate', throttled.cancel);
	     */
	    function throttle(func, wait, options) {
	      var leading = true,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      if (isObject(options)) {
	        leading = 'leading' in options ? !!options.leading : leading;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }
	      return debounce(func, wait, {
	        'leading': leading,
	        'maxWait': wait,
	        'trailing': trailing
	      });
	    }

	    /**
	     * Creates a function that accepts up to one argument, ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.unary(parseInt));
	     * // => [6, 8, 10]
	     */
	    function unary(func) {
	      return ary(func, 1);
	    }

	    /**
	     * Creates a function that provides `value` to `wrapper` as its first
	     * argument. Any additional arguments provided to the function are appended
	     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
	     * binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {*} value The value to wrap.
	     * @param {Function} [wrapper=identity] The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('fred, barney, & pebbles');
	     * // => '<p>fred, barney, &amp; pebbles</p>'
	     */
	    function wrap(value, wrapper) {
	      return partial(castFunction(wrapper), value);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Casts `value` as an array if it's not one.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Lang
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast array.
	     * @example
	     *
	     * _.castArray(1);
	     * // => [1]
	     *
	     * _.castArray({ 'a': 1 });
	     * // => [{ 'a': 1 }]
	     *
	     * _.castArray('abc');
	     * // => ['abc']
	     *
	     * _.castArray(null);
	     * // => [null]
	     *
	     * _.castArray(undefined);
	     * // => [undefined]
	     *
	     * _.castArray();
	     * // => []
	     *
	     * var array = [1, 2, 3];
	     * console.log(_.castArray(array) === array);
	     * // => true
	     */
	    function castArray() {
	      if (!arguments.length) {
	        return [];
	      }
	      var value = arguments[0];
	      return isArray(value) ? value : [value];
	    }

	    /**
	     * Creates a shallow clone of `value`.
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	     * and supports cloning arrays, array buffers, booleans, date objects, maps,
	     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	     * arrays. The own enumerable properties of `arguments` objects are cloned
	     * as plain objects. An empty object is returned for uncloneable values such
	     * as error objects, functions, DOM nodes, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeep
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var shallow = _.clone(objects);
	     * console.log(shallow[0] === objects[0]);
	     * // => true
	     */
	    function clone(value) {
	      return baseClone(value, CLONE_SYMBOLS_FLAG);
	    }

	    /**
	     * This method is like `_.clone` except that it accepts `customizer` which
	     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
	     * cloning is handled by the method instead. The `customizer` is invoked with
	     * up to four arguments; (value [, index|key, object, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeepWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(false);
	     *   }
	     * }
	     *
	     * var el = _.cloneWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 0
	     */
	    function cloneWith(value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
	    }

	    /**
	     * This method is like `_.clone` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.clone
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var deep = _.cloneDeep(objects);
	     * console.log(deep[0] === objects[0]);
	     * // => false
	     */
	    function cloneDeep(value) {
	      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
	    }

	    /**
	     * This method is like `_.cloneWith` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.cloneWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(true);
	     *   }
	     * }
	     *
	     * var el = _.cloneDeepWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 20
	     */
	    function cloneDeepWith(value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
	    }

	    /**
	     * Checks if `object` conforms to `source` by invoking the predicate
	     * properties of `source` with the corresponding property values of `object`.
	     *
	     * **Note:** This method is equivalent to `_.conforms` when `source` is
	     * partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
	     * // => true
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
	     * // => false
	     */
	    function conformsTo(object, source) {
	      return source == null || baseConformsTo(object, source, keys(source));
	    }

	    /**
	     * Performs a
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * comparison between two values to determine if they are equivalent.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.eq(object, object);
	     * // => true
	     *
	     * _.eq(object, other);
	     * // => false
	     *
	     * _.eq('a', 'a');
	     * // => true
	     *
	     * _.eq('a', Object('a'));
	     * // => false
	     *
	     * _.eq(NaN, NaN);
	     * // => true
	     */
	    function eq(value, other) {
	      return value === other || (value !== value && other !== other);
	    }

	    /**
	     * Checks if `value` is greater than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     * @see _.lt
	     * @example
	     *
	     * _.gt(3, 1);
	     * // => true
	     *
	     * _.gt(3, 3);
	     * // => false
	     *
	     * _.gt(1, 3);
	     * // => false
	     */
	    var gt = createRelationalOperation(baseGt);

	    /**
	     * Checks if `value` is greater than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than or equal to
	     *  `other`, else `false`.
	     * @see _.lte
	     * @example
	     *
	     * _.gte(3, 1);
	     * // => true
	     *
	     * _.gte(3, 3);
	     * // => true
	     *
	     * _.gte(1, 3);
	     * // => false
	     */
	    var gte = createRelationalOperation(function(value, other) {
	      return value >= other;
	    });

	    /**
	     * Checks if `value` is likely an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */
	    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	        !propertyIsEnumerable.call(value, 'callee');
	    };

	    /**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(document.body.children);
	     * // => false
	     *
	     * _.isArray('abc');
	     * // => false
	     *
	     * _.isArray(_.noop);
	     * // => false
	     */
	    var isArray = Array.isArray;

	    /**
	     * Checks if `value` is classified as an `ArrayBuffer` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     * @example
	     *
	     * _.isArrayBuffer(new ArrayBuffer(2));
	     * // => true
	     *
	     * _.isArrayBuffer(new Array(2));
	     * // => false
	     */
	    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

	    /**
	     * Checks if `value` is array-like. A value is considered array-like if it's
	     * not a function and has a `value.length` that's an integer greater than or
	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     * @example
	     *
	     * _.isArrayLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLike(document.body.children);
	     * // => true
	     *
	     * _.isArrayLike('abc');
	     * // => true
	     *
	     * _.isArrayLike(_.noop);
	     * // => false
	     */
	    function isArrayLike(value) {
	      return value != null && isLength(value.length) && !isFunction(value);
	    }

	    /**
	     * This method is like `_.isArrayLike` except that it also checks if `value`
	     * is an object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array-like object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayLikeObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLikeObject(document.body.children);
	     * // => true
	     *
	     * _.isArrayLikeObject('abc');
	     * // => false
	     *
	     * _.isArrayLikeObject(_.noop);
	     * // => false
	     */
	    function isArrayLikeObject(value) {
	      return isObjectLike(value) && isArrayLike(value);
	    }

	    /**
	     * Checks if `value` is classified as a boolean primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
	     * @example
	     *
	     * _.isBoolean(false);
	     * // => true
	     *
	     * _.isBoolean(null);
	     * // => false
	     */
	    function isBoolean(value) {
	      return value === true || value === false ||
	        (isObjectLike(value) && baseGetTag(value) == boolTag);
	    }

	    /**
	     * Checks if `value` is a buffer.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	     * @example
	     *
	     * _.isBuffer(new Buffer(2));
	     * // => true
	     *
	     * _.isBuffer(new Uint8Array(2));
	     * // => false
	     */
	    var isBuffer = nativeIsBuffer || stubFalse;

	    /**
	     * Checks if `value` is classified as a `Date` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     *
	     * _.isDate('Mon April 23 2012');
	     * // => false
	     */
	    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

	    /**
	     * Checks if `value` is likely a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     *
	     * _.isElement('<body>');
	     * // => false
	     */
	    function isElement(value) {
	      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
	    }

	    /**
	     * Checks if `value` is an empty object, collection, map, or set.
	     *
	     * Objects are considered empty if they have no own enumerable string keyed
	     * properties.
	     *
	     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	     * jQuery-like collections are considered empty if they have a `length` of `0`.
	     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty(null);
	     * // => true
	     *
	     * _.isEmpty(true);
	     * // => true
	     *
	     * _.isEmpty(1);
	     * // => true
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({ 'a': 1 });
	     * // => false
	     */
	    function isEmpty(value) {
	      if (value == null) {
	        return true;
	      }
	      if (isArrayLike(value) &&
	          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
	            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
	        return !value.length;
	      }
	      var tag = getTag(value);
	      if (tag == mapTag || tag == setTag) {
	        return !value.size;
	      }
	      if (isPrototype(value)) {
	        return !baseKeys(value).length;
	      }
	      for (var key in value) {
	        if (hasOwnProperty.call(value, key)) {
	          return false;
	        }
	      }
	      return true;
	    }

	    /**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent.
	     *
	     * **Note:** This method supports comparing arrays, array buffers, booleans,
	     * date objects, error objects, maps, numbers, `Object` objects, regexes,
	     * sets, strings, symbols, and typed arrays. `Object` objects are compared
	     * by their own, not inherited, enumerable properties. Functions and DOM
	     * nodes are compared by strict equality, i.e. `===`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.isEqual(object, other);
	     * // => true
	     *
	     * object === other;
	     * // => false
	     */
	    function isEqual(value, other) {
	      return baseIsEqual(value, other);
	    }

	    /**
	     * This method is like `_.isEqual` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with up to
	     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, othValue) {
	     *   if (isGreeting(objValue) && isGreeting(othValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var array = ['hello', 'goodbye'];
	     * var other = ['hi', 'goodbye'];
	     *
	     * _.isEqualWith(array, other, customizer);
	     * // => true
	     */
	    function isEqualWith(value, other, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      var result = customizer ? customizer(value, other) : undefined;
	      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
	    }

	    /**
	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	     * `SyntaxError`, `TypeError`, or `URIError` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
	     * @example
	     *
	     * _.isError(new Error);
	     * // => true
	     *
	     * _.isError(Error);
	     * // => false
	     */
	    function isError(value) {
	      if (!isObjectLike(value)) {
	        return false;
	      }
	      var tag = baseGetTag(value);
	      return tag == errorTag || tag == domExcTag ||
	        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
	    }

	    /**
	     * Checks if `value` is a finite primitive number.
	     *
	     * **Note:** This method is based on
	     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
	     * @example
	     *
	     * _.isFinite(3);
	     * // => true
	     *
	     * _.isFinite(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     *
	     * _.isFinite('3');
	     * // => false
	     */
	    function isFinite(value) {
	      return typeof value == 'number' && nativeIsFinite(value);
	    }

	    /**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */
	    function isFunction(value) {
	      if (!isObject(value)) {
	        return false;
	      }
	      // The use of `Object#toString` avoids issues with the `typeof` operator
	      // in Safari 9 which returns 'object' for typed arrays and other constructors.
	      var tag = baseGetTag(value);
	      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	    }

	    /**
	     * Checks if `value` is an integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
	     * @example
	     *
	     * _.isInteger(3);
	     * // => true
	     *
	     * _.isInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isInteger(Infinity);
	     * // => false
	     *
	     * _.isInteger('3');
	     * // => false
	     */
	    function isInteger(value) {
	      return typeof value == 'number' && value == toInteger(value);
	    }

	    /**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	     * @example
	     *
	     * _.isLength(3);
	     * // => true
	     *
	     * _.isLength(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isLength(Infinity);
	     * // => false
	     *
	     * _.isLength('3');
	     * // => false
	     */
	    function isLength(value) {
	      return typeof value == 'number' &&
	        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is the
	     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(_.noop);
	     * // => true
	     *
	     * _.isObject(null);
	     * // => false
	     */
	    function isObject(value) {
	      var type = typeof value;
	      return value != null && (type == 'object' || type == 'function');
	    }

	    /**
	     * Checks if `value` is object-like. A value is object-like if it's not `null`
	     * and has a `typeof` result of "object".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	     * @example
	     *
	     * _.isObjectLike({});
	     * // => true
	     *
	     * _.isObjectLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isObjectLike(_.noop);
	     * // => false
	     *
	     * _.isObjectLike(null);
	     * // => false
	     */
	    function isObjectLike(value) {
	      return value != null && typeof value == 'object';
	    }

	    /**
	     * Checks if `value` is classified as a `Map` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     * @example
	     *
	     * _.isMap(new Map);
	     * // => true
	     *
	     * _.isMap(new WeakMap);
	     * // => false
	     */
	    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

	    /**
	     * Performs a partial deep comparison between `object` and `source` to
	     * determine if `object` contains equivalent property values.
	     *
	     * **Note:** This method is equivalent to `_.matches` when `source` is
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.isMatch(object, { 'b': 2 });
	     * // => true
	     *
	     * _.isMatch(object, { 'b': 1 });
	     * // => false
	     */
	    function isMatch(object, source) {
	      return object === source || baseIsMatch(object, source, getMatchData(source));
	    }

	    /**
	     * This method is like `_.isMatch` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with five
	     * arguments: (objValue, srcValue, index|key, object, source).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var object = { 'greeting': 'hello' };
	     * var source = { 'greeting': 'hi' };
	     *
	     * _.isMatchWith(object, source, customizer);
	     * // => true
	     */
	    function isMatchWith(object, source, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseIsMatch(object, source, getMatchData(source), customizer);
	    }

	    /**
	     * Checks if `value` is `NaN`.
	     *
	     * **Note:** This method is based on
	     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	     * `undefined` and other non-number values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */
	    function isNaN(value) {
	      // An `NaN` primitive is the only value that is not equal to itself.
	      // Perform the `toStringTag` check first to avoid errors with some
	      // ActiveX objects in IE.
	      return isNumber(value) && value != +value;
	    }

	    /**
	     * Checks if `value` is a pristine native function.
	     *
	     * **Note:** This method can't reliably detect native functions in the presence
	     * of the core-js package because core-js circumvents this kind of detection.
	     * Despite multiple requests, the core-js maintainer has made it clear: any
	     * attempt to fix the detection will be obstructed. As a result, we're left
	     * with little choice but to throw an error. Unfortunately, this also affects
	     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
	     * which rely on core-js.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     * @example
	     *
	     * _.isNative(Array.prototype.push);
	     * // => true
	     *
	     * _.isNative(_);
	     * // => false
	     */
	    function isNative(value) {
	      if (isMaskable(value)) {
	        throw new Error(CORE_ERROR_TEXT);
	      }
	      return baseIsNative(value);
	    }

	    /**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(void 0);
	     * // => false
	     */
	    function isNull(value) {
	      return value === null;
	    }

	    /**
	     * Checks if `value` is `null` or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	     * @example
	     *
	     * _.isNil(null);
	     * // => true
	     *
	     * _.isNil(void 0);
	     * // => true
	     *
	     * _.isNil(NaN);
	     * // => false
	     */
	    function isNil(value) {
	      return value == null;
	    }

	    /**
	     * Checks if `value` is classified as a `Number` primitive or object.
	     *
	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	     * classified as numbers, use the `_.isFinite` method.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	     * @example
	     *
	     * _.isNumber(3);
	     * // => true
	     *
	     * _.isNumber(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isNumber(Infinity);
	     * // => true
	     *
	     * _.isNumber('3');
	     * // => false
	     */
	    function isNumber(value) {
	      return typeof value == 'number' ||
	        (isObjectLike(value) && baseGetTag(value) == numberTag);
	    }

	    /**
	     * Checks if `value` is a plain object, that is, an object created by the
	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.8.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * _.isPlainObject(new Foo);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     *
	     * _.isPlainObject(Object.create(null));
	     * // => true
	     */
	    function isPlainObject(value) {
	      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	        return false;
	      }
	      var proto = getPrototype(value);
	      if (proto === null) {
	        return true;
	      }
	      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	        funcToString.call(Ctor) == objectCtorString;
	    }

	    /**
	     * Checks if `value` is classified as a `RegExp` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     * @example
	     *
	     * _.isRegExp(/abc/);
	     * // => true
	     *
	     * _.isRegExp('/abc/');
	     * // => false
	     */
	    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

	    /**
	     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
	     * double precision number which isn't the result of a rounded unsafe integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
	     * @example
	     *
	     * _.isSafeInteger(3);
	     * // => true
	     *
	     * _.isSafeInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isSafeInteger(Infinity);
	     * // => false
	     *
	     * _.isSafeInteger('3');
	     * // => false
	     */
	    function isSafeInteger(value) {
	      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is classified as a `Set` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     * @example
	     *
	     * _.isSet(new Set);
	     * // => true
	     *
	     * _.isSet(new WeakSet);
	     * // => false
	     */
	    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

	    /**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */
	    function isString(value) {
	      return typeof value == 'string' ||
	        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
	    }

	    /**
	     * Checks if `value` is classified as a `Symbol` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	     * @example
	     *
	     * _.isSymbol(Symbol.iterator);
	     * // => true
	     *
	     * _.isSymbol('abc');
	     * // => false
	     */
	    function isSymbol(value) {
	      return typeof value == 'symbol' ||
	        (isObjectLike(value) && baseGetTag(value) == symbolTag);
	    }

	    /**
	     * Checks if `value` is classified as a typed array.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     * @example
	     *
	     * _.isTypedArray(new Uint8Array);
	     * // => true
	     *
	     * _.isTypedArray([]);
	     * // => false
	     */
	    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

	    /**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     *
	     * _.isUndefined(null);
	     * // => false
	     */
	    function isUndefined(value) {
	      return value === undefined;
	    }

	    /**
	     * Checks if `value` is classified as a `WeakMap` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
	     * @example
	     *
	     * _.isWeakMap(new WeakMap);
	     * // => true
	     *
	     * _.isWeakMap(new Map);
	     * // => false
	     */
	    function isWeakMap(value) {
	      return isObjectLike(value) && getTag(value) == weakMapTag;
	    }

	    /**
	     * Checks if `value` is classified as a `WeakSet` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
	     * @example
	     *
	     * _.isWeakSet(new WeakSet);
	     * // => true
	     *
	     * _.isWeakSet(new Set);
	     * // => false
	     */
	    function isWeakSet(value) {
	      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
	    }

	    /**
	     * Checks if `value` is less than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     * @see _.gt
	     * @example
	     *
	     * _.lt(1, 3);
	     * // => true
	     *
	     * _.lt(3, 3);
	     * // => false
	     *
	     * _.lt(3, 1);
	     * // => false
	     */
	    var lt = createRelationalOperation(baseLt);

	    /**
	     * Checks if `value` is less than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than or equal to
	     *  `other`, else `false`.
	     * @see _.gte
	     * @example
	     *
	     * _.lte(1, 3);
	     * // => true
	     *
	     * _.lte(3, 3);
	     * // => true
	     *
	     * _.lte(3, 1);
	     * // => false
	     */
	    var lte = createRelationalOperation(function(value, other) {
	      return value <= other;
	    });

	    /**
	     * Converts `value` to an array.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the converted array.
	     * @example
	     *
	     * _.toArray({ 'a': 1, 'b': 2 });
	     * // => [1, 2]
	     *
	     * _.toArray('abc');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toArray(1);
	     * // => []
	     *
	     * _.toArray(null);
	     * // => []
	     */
	    function toArray(value) {
	      if (!value) {
	        return [];
	      }
	      if (isArrayLike(value)) {
	        return isString(value) ? stringToArray(value) : copyArray(value);
	      }
	      if (symIterator && value[symIterator]) {
	        return iteratorToArray(value[symIterator]());
	      }
	      var tag = getTag(value),
	          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

	      return func(value);
	    }

	    /**
	     * Converts `value` to a finite number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.12.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted number.
	     * @example
	     *
	     * _.toFinite(3.2);
	     * // => 3.2
	     *
	     * _.toFinite(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toFinite(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toFinite('3.2');
	     * // => 3.2
	     */
	    function toFinite(value) {
	      if (!value) {
	        return value === 0 ? value : 0;
	      }
	      value = toNumber(value);
	      if (value === INFINITY || value === -INFINITY) {
	        var sign = (value < 0 ? -1 : 1);
	        return sign * MAX_INTEGER;
	      }
	      return value === value ? value : 0;
	    }

	    /**
	     * Converts `value` to an integer.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toInteger(3.2);
	     * // => 3
	     *
	     * _.toInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toInteger(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toInteger('3.2');
	     * // => 3
	     */
	    function toInteger(value) {
	      var result = toFinite(value),
	          remainder = result % 1;

	      return result === result ? (remainder ? result - remainder : result) : 0;
	    }

	    /**
	     * Converts `value` to an integer suitable for use as the length of an
	     * array-like object.
	     *
	     * **Note:** This method is based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toLength(3.2);
	     * // => 3
	     *
	     * _.toLength(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toLength(Infinity);
	     * // => 4294967295
	     *
	     * _.toLength('3.2');
	     * // => 3
	     */
	    function toLength(value) {
	      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
	    }

	    /**
	     * Converts `value` to a number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     * @example
	     *
	     * _.toNumber(3.2);
	     * // => 3.2
	     *
	     * _.toNumber(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toNumber(Infinity);
	     * // => Infinity
	     *
	     * _.toNumber('3.2');
	     * // => 3.2
	     */
	    function toNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      if (isObject(value)) {
	        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	        value = isObject(other) ? (other + '') : other;
	      }
	      if (typeof value != 'string') {
	        return value === 0 ? value : +value;
	      }
	      value = value.replace(reTrim, '');
	      var isBinary = reIsBinary.test(value);
	      return (isBinary || reIsOctal.test(value))
	        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	        : (reIsBadHex.test(value) ? NAN : +value);
	    }

	    /**
	     * Converts `value` to a plain object flattening inherited enumerable string
	     * keyed properties of `value` to own properties of the plain object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Object} Returns the converted plain object.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.assign({ 'a': 1 }, new Foo);
	     * // => { 'a': 1, 'b': 2 }
	     *
	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	     * // => { 'a': 1, 'b': 2, 'c': 3 }
	     */
	    function toPlainObject(value) {
	      return copyObject(value, keysIn(value));
	    }

	    /**
	     * Converts `value` to a safe integer. A safe integer can be compared and
	     * represented correctly.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toSafeInteger(3.2);
	     * // => 3
	     *
	     * _.toSafeInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toSafeInteger(Infinity);
	     * // => 9007199254740991
	     *
	     * _.toSafeInteger('3.2');
	     * // => 3
	     */
	    function toSafeInteger(value) {
	      return value
	        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
	        : (value === 0 ? value : 0);
	    }

	    /**
	     * Converts `value` to a string. An empty string is returned for `null`
	     * and `undefined` values. The sign of `-0` is preserved.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.toString(null);
	     * // => ''
	     *
	     * _.toString(-0);
	     * // => '-0'
	     *
	     * _.toString([1, 2, 3]);
	     * // => '1,2,3'
	     */
	    function toString(value) {
	      return value == null ? '' : baseToString(value);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Assigns own enumerable string keyed properties of source objects to the
	     * destination object. Source objects are applied from left to right.
	     * Subsequent sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object` and is loosely based on
	     * [`Object.assign`](https://mdn.io/Object/assign).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assignIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assign({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var assign = createAssigner(function(object, source) {
	      if (isPrototype(source) || isArrayLike(source)) {
	        copyObject(source, keys(source), object);
	        return;
	      }
	      for (var key in source) {
	        if (hasOwnProperty.call(source, key)) {
	          assignValue(object, key, source[key]);
	        }
	      }
	    });

	    /**
	     * This method is like `_.assign` except that it iterates over own and
	     * inherited source properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extend
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assign
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
	     */
	    var assignIn = createAssigner(function(object, source) {
	      copyObject(source, keysIn(source), object);
	    });

	    /**
	     * This method is like `_.assignIn` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extendWith
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignInWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keysIn(source), object, customizer);
	    });

	    /**
	     * This method is like `_.assign` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignInWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keys(source), object, customizer);
	    });

	    /**
	     * Creates an array of values corresponding to `paths` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Array} Returns the picked values.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _.at(object, ['a[0].b.c', 'a[1]']);
	     * // => [3, 4]
	     */
	    var at = flatRest(baseAt);

	    /**
	     * Creates an object that inherits from the `prototype` object. If a
	     * `properties` object is given, its own enumerable string keyed properties
	     * are assigned to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Object
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, {
	     *   'constructor': Circle
	     * });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */
	    function create(prototype, properties) {
	      var result = baseCreate(prototype);
	      return properties == null ? result : baseAssign(result, properties);
	    }

	    /**
	     * Assigns own and inherited enumerable string keyed properties of source
	     * objects to the destination object for all destination properties that
	     * resolve to `undefined`. Source objects are applied from left to right.
	     * Once a property is set, additional values of the same property are ignored.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaultsDeep
	     * @example
	     *
	     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var defaults = baseRest(function(args) {
	      args.push(undefined, customDefaultsAssignIn);
	      return apply(assignInWith, undefined, args);
	    });

	    /**
	     * This method is like `_.defaults` except that it recursively assigns
	     * default properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaults
	     * @example
	     *
	     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
	     * // => { 'a': { 'b': 2, 'c': 3 } }
	     */
	    var defaultsDeep = baseRest(function(args) {
	      args.push(undefined, customDefaultsMerge);
	      return apply(mergeWith, undefined, args);
	    });

	    /**
	     * This method is like `_.find` except that it returns the key of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findKey(users, function(o) { return o.age < 40; });
	     * // => 'barney' (iteration order is not guaranteed)
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findKey(users, { 'age': 1, 'active': true });
	     * // => 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findKey(users, 'active');
	     * // => 'barney'
	     */
	    function findKey(object, predicate) {
	      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
	    }

	    /**
	     * This method is like `_.findKey` except that it iterates over elements of
	     * a collection in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findLastKey(users, function(o) { return o.age < 40; });
	     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastKey(users, { 'age': 36, 'active': true });
	     * // => 'barney'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastKey(users, 'active');
	     * // => 'pebbles'
	     */
	    function findLastKey(object, predicate) {
	      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
	    }

	    /**
	     * Iterates over own and inherited enumerable string keyed properties of an
	     * object and invokes `iteratee` for each property. The iteratee is invoked
	     * with three arguments: (value, key, object). Iteratee functions may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forInRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forIn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
	     */
	    function forIn(object, iteratee) {
	      return object == null
	        ? object
	        : baseFor(object, getIteratee(iteratee, 3), keysIn);
	    }

	    /**
	     * This method is like `_.forIn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forInRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
	     */
	    function forInRight(object, iteratee) {
	      return object == null
	        ? object
	        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
	    }

	    /**
	     * Iterates over own enumerable string keyed properties of an object and
	     * invokes `iteratee` for each property. The iteratee is invoked with three
	     * arguments: (value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwnRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forOwn(object, iteratee) {
	      return object && baseForOwn(object, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.forOwn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwnRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
	     */
	    function forOwnRight(object, iteratee) {
	      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
	    }

	    /**
	     * Creates an array of function property names from own enumerable properties
	     * of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functionsIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functions(new Foo);
	     * // => ['a', 'b']
	     */
	    function functions(object) {
	      return object == null ? [] : baseFunctions(object, keys(object));
	    }

	    /**
	     * Creates an array of function property names from own and inherited
	     * enumerable properties of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functions
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functionsIn(new Foo);
	     * // => ['a', 'b', 'c']
	     */
	    function functionsIn(object) {
	      return object == null ? [] : baseFunctions(object, keysIn(object));
	    }

	    /**
	     * Gets the value at `path` of `object`. If the resolved value is
	     * `undefined`, the `defaultValue` is returned in its place.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.get(object, 'a[0].b.c');
	     * // => 3
	     *
	     * _.get(object, ['a', '0', 'b', 'c']);
	     * // => 3
	     *
	     * _.get(object, 'a.b.c', 'default');
	     * // => 'default'
	     */
	    function get(object, path, defaultValue) {
	      var result = object == null ? undefined : baseGet(object, path);
	      return result === undefined ? defaultValue : result;
	    }

	    /**
	     * Checks if `path` is a direct property of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = { 'a': { 'b': 2 } };
	     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.has(object, 'a');
	     * // => true
	     *
	     * _.has(object, 'a.b');
	     * // => true
	     *
	     * _.has(object, ['a', 'b']);
	     * // => true
	     *
	     * _.has(other, 'a');
	     * // => false
	     */
	    function has(object, path) {
	      return object != null && hasPath(object, path, baseHas);
	    }

	    /**
	     * Checks if `path` is a direct or inherited property of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.hasIn(object, 'a');
	     * // => true
	     *
	     * _.hasIn(object, 'a.b');
	     * // => true
	     *
	     * _.hasIn(object, ['a', 'b']);
	     * // => true
	     *
	     * _.hasIn(object, 'b');
	     * // => false
	     */
	    function hasIn(object, path) {
	      return object != null && hasPath(object, path, baseHasIn);
	    }

	    /**
	     * Creates an object composed of the inverted keys and values of `object`.
	     * If `object` contains duplicate values, subsequent values overwrite
	     * property assignments of previous values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invert(object);
	     * // => { '1': 'c', '2': 'b' }
	     */
	    var invert = createInverter(function(result, value, key) {
	      result[value] = key;
	    }, constant(identity));

	    /**
	     * This method is like `_.invert` except that the inverted object is generated
	     * from the results of running each element of `object` thru `iteratee`. The
	     * corresponding inverted value of each inverted key is an array of keys
	     * responsible for generating the inverted value. The iteratee is invoked
	     * with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invertBy(object);
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     *
	     * _.invertBy(object, function(value) {
	     *   return 'group' + value;
	     * });
	     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
	     */
	    var invertBy = createInverter(function(result, value, key) {
	      if (hasOwnProperty.call(result, value)) {
	        result[value].push(key);
	      } else {
	        result[value] = [key];
	      }
	    }, getIteratee);

	    /**
	     * Invokes the method at `path` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	     *
	     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	     * // => [2, 3]
	     */
	    var invoke = baseRest(baseInvoke);

	    /**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */
	    function keys(object) {
	      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	    }

	    /**
	     * Creates an array of the own and inherited enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keysIn(new Foo);
	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	     */
	    function keysIn(object) {
	      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	    }

	    /**
	     * The opposite of `_.mapValues`; this method creates an object with the
	     * same values as `object` and keys generated by running each own enumerable
	     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	     * with three arguments: (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapValues
	     * @example
	     *
	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   return key + value;
	     * });
	     * // => { 'a1': 1, 'b2': 2 }
	     */
	    function mapKeys(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);

	      baseForOwn(object, function(value, key, object) {
	        baseAssignValue(result, iteratee(value, key, object), value);
	      });
	      return result;
	    }

	    /**
	     * Creates an object with the same keys as `object` and values generated
	     * by running each own enumerable string keyed property of `object` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapKeys
	     * @example
	     *
	     * var users = {
	     *   'fred':    { 'user': 'fred',    'age': 40 },
	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	     * };
	     *
	     * _.mapValues(users, function(o) { return o.age; });
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.mapValues(users, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     */
	    function mapValues(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);

	      baseForOwn(object, function(value, key, object) {
	        baseAssignValue(result, key, iteratee(value, key, object));
	      });
	      return result;
	    }

	    /**
	     * This method is like `_.assign` except that it recursively merges own and
	     * inherited enumerable string keyed properties of source objects into the
	     * destination object. Source properties that resolve to `undefined` are
	     * skipped if a destination value exists. Array and plain object properties
	     * are merged recursively. Other objects and value types are overridden by
	     * assignment. Source objects are applied from left to right. Subsequent
	     * sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {
	     *   'a': [{ 'b': 2 }, { 'd': 4 }]
	     * };
	     *
	     * var other = {
	     *   'a': [{ 'c': 3 }, { 'e': 5 }]
	     * };
	     *
	     * _.merge(object, other);
	     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	     */
	    var merge = createAssigner(function(object, source, srcIndex) {
	      baseMerge(object, source, srcIndex);
	    });

	    /**
	     * This method is like `_.merge` except that it accepts `customizer` which
	     * is invoked to produce the merged values of the destination and source
	     * properties. If `customizer` returns `undefined`, merging is handled by the
	     * method instead. The `customizer` is invoked with six arguments:
	     * (objValue, srcValue, key, object, source, stack).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (_.isArray(objValue)) {
	     *     return objValue.concat(srcValue);
	     *   }
	     * }
	     *
	     * var object = { 'a': [1], 'b': [2] };
	     * var other = { 'a': [3], 'b': [4] };
	     *
	     * _.mergeWith(object, other, customizer);
	     * // => { 'a': [1, 3], 'b': [2, 4] }
	     */
	    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
	      baseMerge(object, source, srcIndex, customizer);
	    });

	    /**
	     * The opposite of `_.pick`; this method creates an object composed of the
	     * own and inherited enumerable property paths of `object` that are not omitted.
	     *
	     * **Note:** This method is considerably slower than `_.pick`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [paths] The property paths to omit.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omit(object, ['a', 'c']);
	     * // => { 'b': '2' }
	     */
	    var omit = flatRest(function(object, paths) {
	      var result = {};
	      if (object == null) {
	        return result;
	      }
	      var isDeep = false;
	      paths = arrayMap(paths, function(path) {
	        path = castPath(path, object);
	        isDeep || (isDeep = path.length > 1);
	        return path;
	      });
	      copyObject(object, getAllKeysIn(object), result);
	      if (isDeep) {
	        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
	      }
	      var length = paths.length;
	      while (length--) {
	        baseUnset(result, paths[length]);
	      }
	      return result;
	    });

	    /**
	     * The opposite of `_.pickBy`; this method creates an object composed of
	     * the own and inherited enumerable string keyed properties of `object` that
	     * `predicate` doesn't return truthy for. The predicate is invoked with two
	     * arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omitBy(object, _.isNumber);
	     * // => { 'b': '2' }
	     */
	    function omitBy(object, predicate) {
	      return pickBy(object, negate(getIteratee(predicate)));
	    }

	    /**
	     * Creates an object composed of the picked `object` properties.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pick(object, ['a', 'c']);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var pick = flatRest(function(object, paths) {
	      return object == null ? {} : basePick(object, paths);
	    });

	    /**
	     * Creates an object composed of the `object` properties `predicate` returns
	     * truthy for. The predicate is invoked with two arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pickBy(object, _.isNumber);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    function pickBy(object, predicate) {
	      if (object == null) {
	        return {};
	      }
	      var props = arrayMap(getAllKeysIn(object), function(prop) {
	        return [prop];
	      });
	      predicate = getIteratee(predicate);
	      return basePickBy(object, props, function(value, path) {
	        return predicate(value, path[0]);
	      });
	    }

	    /**
	     * This method is like `_.get` except that if the resolved value is a
	     * function it's invoked with the `this` binding of its parent object and
	     * its result is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to resolve.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	     *
	     * _.result(object, 'a[0].b.c1');
	     * // => 3
	     *
	     * _.result(object, 'a[0].b.c2');
	     * // => 4
	     *
	     * _.result(object, 'a[0].b.c3', 'default');
	     * // => 'default'
	     *
	     * _.result(object, 'a[0].b.c3', _.constant('default'));
	     * // => 'default'
	     */
	    function result(object, path, defaultValue) {
	      path = castPath(path, object);

	      var index = -1,
	          length = path.length;

	      // Ensure the loop is entered when path is empty.
	      if (!length) {
	        length = 1;
	        object = undefined;
	      }
	      while (++index < length) {
	        var value = object == null ? undefined : object[toKey(path[index])];
	        if (value === undefined) {
	          index = length;
	          value = defaultValue;
	        }
	        object = isFunction(value) ? value.call(object) : value;
	      }
	      return object;
	    }

	    /**
	     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	     * it's created. Arrays are created for missing index properties while objects
	     * are created for all other missing properties. Use `_.setWith` to customize
	     * `path` creation.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.set(object, 'a[0].b.c', 4);
	     * console.log(object.a[0].b.c);
	     * // => 4
	     *
	     * _.set(object, ['x', '0', 'y', 'z'], 5);
	     * console.log(object.x[0].y.z);
	     * // => 5
	     */
	    function set(object, path, value) {
	      return object == null ? object : baseSet(object, path, value);
	    }

	    /**
	     * This method is like `_.set` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.setWith(object, '[0][1]', 'a', Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function setWith(object, path, value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseSet(object, path, value, customizer);
	    }

	    /**
	     * Creates an array of own enumerable string keyed-value pairs for `object`
	     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
	     * entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entries
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairs(new Foo);
	     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	     */
	    var toPairs = createToPairs(keys);

	    /**
	     * Creates an array of own and inherited enumerable string keyed-value pairs
	     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
	     * or set, its entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entriesIn
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairsIn(new Foo);
	     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
	     */
	    var toPairsIn = createToPairs(keysIn);

	    /**
	     * An alternative to `_.reduce`; this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own
	     * enumerable string keyed properties thru `iteratee`, with each invocation
	     * potentially mutating the `accumulator` object. If `accumulator` is not
	     * provided, a new object with the same `[[Prototype]]` will be used. The
	     * iteratee is invoked with four arguments: (accumulator, value, key, object).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.transform([2, 3, 4], function(result, n) {
	     *   result.push(n *= n);
	     *   return n % 2 == 0;
	     * }, []);
	     * // => [4, 9]
	     *
	     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     */
	    function transform(object, iteratee, accumulator) {
	      var isArr = isArray(object),
	          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

	      iteratee = getIteratee(iteratee, 4);
	      if (accumulator == null) {
	        var Ctor = object && object.constructor;
	        if (isArrLike) {
	          accumulator = isArr ? new Ctor : [];
	        }
	        else if (isObject(object)) {
	          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
	        }
	        else {
	          accumulator = {};
	        }
	      }
	      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
	        return iteratee(accumulator, value, index, object);
	      });
	      return accumulator;
	    }

	    /**
	     * Removes the property at `path` of `object`.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
	     * _.unset(object, 'a[0].b.c');
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     *
	     * _.unset(object, ['a', '0', 'b', 'c']);
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     */
	    function unset(object, path) {
	      return object == null ? true : baseUnset(object, path);
	    }

	    /**
	     * This method is like `_.set` except that accepts `updater` to produce the
	     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
	     * is invoked with one argument: (value).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
	     * console.log(object.a[0].b.c);
	     * // => 9
	     *
	     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
	     * console.log(object.x[0].y.z);
	     * // => 0
	     */
	    function update(object, path, updater) {
	      return object == null ? object : baseUpdate(object, path, castFunction(updater));
	    }

	    /**
	     * This method is like `_.update` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function updateWith(object, path, updater, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
	    }

	    /**
	     * Creates an array of the own enumerable string keyed property values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.values(new Foo);
	     * // => [1, 2] (iteration order is not guaranteed)
	     *
	     * _.values('hi');
	     * // => ['h', 'i']
	     */
	    function values(object) {
	      return object == null ? [] : baseValues(object, keys(object));
	    }

	    /**
	     * Creates an array of the own and inherited enumerable string keyed property
	     * values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.valuesIn(new Foo);
	     * // => [1, 2, 3] (iteration order is not guaranteed)
	     */
	    function valuesIn(object) {
	      return object == null ? [] : baseValues(object, keysIn(object));
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Clamps `number` within the inclusive `lower` and `upper` bounds.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Number
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     * @example
	     *
	     * _.clamp(-10, -5, 5);
	     * // => -5
	     *
	     * _.clamp(10, -5, 5);
	     * // => 5
	     */
	    function clamp(number, lower, upper) {
	      if (upper === undefined) {
	        upper = lower;
	        lower = undefined;
	      }
	      if (upper !== undefined) {
	        upper = toNumber(upper);
	        upper = upper === upper ? upper : 0;
	      }
	      if (lower !== undefined) {
	        lower = toNumber(lower);
	        lower = lower === lower ? lower : 0;
	      }
	      return baseClamp(toNumber(number), lower, upper);
	    }

	    /**
	     * Checks if `n` is between `start` and up to, but not including, `end`. If
	     * `end` is not specified, it's set to `start` with `start` then set to `0`.
	     * If `start` is greater than `end` the params are swapped to support
	     * negative ranges.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.3.0
	     * @category Number
	     * @param {number} number The number to check.
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     * @see _.range, _.rangeRight
	     * @example
	     *
	     * _.inRange(3, 2, 4);
	     * // => true
	     *
	     * _.inRange(4, 8);
	     * // => true
	     *
	     * _.inRange(4, 2);
	     * // => false
	     *
	     * _.inRange(2, 2);
	     * // => false
	     *
	     * _.inRange(1.2, 2);
	     * // => true
	     *
	     * _.inRange(5.2, 4);
	     * // => false
	     *
	     * _.inRange(-3, -2, -6);
	     * // => true
	     */
	    function inRange(number, start, end) {
	      start = toFinite(start);
	      if (end === undefined) {
	        end = start;
	        start = 0;
	      } else {
	        end = toFinite(end);
	      }
	      number = toNumber(number);
	      return baseInRange(number, start, end);
	    }

	    /**
	     * Produces a random number between the inclusive `lower` and `upper` bounds.
	     * If only one argument is provided a number between `0` and the given number
	     * is returned. If `floating` is `true`, or either `lower` or `upper` are
	     * floats, a floating-point number is returned instead of an integer.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Number
	     * @param {number} [lower=0] The lower bound.
	     * @param {number} [upper=1] The upper bound.
	     * @param {boolean} [floating] Specify returning a floating-point number.
	     * @returns {number} Returns the random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */
	    function random(lower, upper, floating) {
	      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
	        upper = floating = undefined;
	      }
	      if (floating === undefined) {
	        if (typeof upper == 'boolean') {
	          floating = upper;
	          upper = undefined;
	        }
	        else if (typeof lower == 'boolean') {
	          floating = lower;
	          lower = undefined;
	        }
	      }
	      if (lower === undefined && upper === undefined) {
	        lower = 0;
	        upper = 1;
	      }
	      else {
	        lower = toFinite(lower);
	        if (upper === undefined) {
	          upper = lower;
	          lower = 0;
	        } else {
	          upper = toFinite(upper);
	        }
	      }
	      if (lower > upper) {
	        var temp = lower;
	        lower = upper;
	        upper = temp;
	      }
	      if (floating || lower % 1 || upper % 1) {
	        var rand = nativeRandom();
	        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
	      }
	      return baseRandom(lower, upper);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the camel cased string.
	     * @example
	     *
	     * _.camelCase('Foo Bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('--foo-bar--');
	     * // => 'fooBar'
	     *
	     * _.camelCase('__FOO_BAR__');
	     * // => 'fooBar'
	     */
	    var camelCase = createCompounder(function(result, word, index) {
	      word = word.toLowerCase();
	      return result + (index ? capitalize(word) : word);
	    });

	    /**
	     * Converts the first character of `string` to upper case and the remaining
	     * to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to capitalize.
	     * @returns {string} Returns the capitalized string.
	     * @example
	     *
	     * _.capitalize('FRED');
	     * // => 'Fred'
	     */
	    function capitalize(string) {
	      return upperFirst(toString(string).toLowerCase());
	    }

	    /**
	     * Deburrs `string` by converting
	     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
	     * letters to basic Latin letters and removing
	     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to deburr.
	     * @returns {string} Returns the deburred string.
	     * @example
	     *
	     * _.deburr('déjà vu');
	     * // => 'deja vu'
	     */
	    function deburr(string) {
	      string = toString(string);
	      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
	    }

	    /**
	     * Checks if `string` ends with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=string.length] The position to search up to.
	     * @returns {boolean} Returns `true` if `string` ends with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.endsWith('abc', 'c');
	     * // => true
	     *
	     * _.endsWith('abc', 'b');
	     * // => false
	     *
	     * _.endsWith('abc', 'b', 2);
	     * // => true
	     */
	    function endsWith(string, target, position) {
	      string = toString(string);
	      target = baseToString(target);

	      var length = string.length;
	      position = position === undefined
	        ? length
	        : baseClamp(toInteger(position), 0, length);

	      var end = position;
	      position -= target.length;
	      return position >= 0 && string.slice(position, end) == target;
	    }

	    /**
	     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
	     * corresponding HTML entities.
	     *
	     * **Note:** No other characters are escaped. To escape additional
	     * characters use a third-party library like [_he_](https://mths.be/he).
	     *
	     * Though the ">" character is escaped for symmetry, characters like
	     * ">" and "/" don't need escaping in HTML and have no special meaning
	     * unless they're part of a tag or unquoted attribute value. See
	     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	     * (under "semi-related fun fact") for more details.
	     *
	     * When working with HTML you should always
	     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
	     * XSS vectors.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('fred, barney, & pebbles');
	     * // => 'fred, barney, &amp; pebbles'
	     */
	    function escape(string) {
	      string = toString(string);
	      return (string && reHasUnescapedHtml.test(string))
	        ? string.replace(reUnescapedHtml, escapeHtmlChar)
	        : string;
	    }

	    /**
	     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
	     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escapeRegExp('[lodash](https://lodash.com/)');
	     * // => '\[lodash\]\(https://lodash\.com/\)'
	     */
	    function escapeRegExp(string) {
	      string = toString(string);
	      return (string && reHasRegExpChar.test(string))
	        ? string.replace(reRegExpChar, '\\$&')
	        : string;
	    }

	    /**
	     * Converts `string` to
	     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the kebab cased string.
	     * @example
	     *
	     * _.kebabCase('Foo Bar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('fooBar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('__FOO_BAR__');
	     * // => 'foo-bar'
	     */
	    var kebabCase = createCompounder(function(result, word, index) {
	      return result + (index ? '-' : '') + word.toLowerCase();
	    });

	    /**
	     * Converts `string`, as space separated words, to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.lowerCase('--Foo-Bar--');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('fooBar');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('__FOO_BAR__');
	     * // => 'foo bar'
	     */
	    var lowerCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toLowerCase();
	    });

	    /**
	     * Converts the first character of `string` to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.lowerFirst('Fred');
	     * // => 'fred'
	     *
	     * _.lowerFirst('FRED');
	     * // => 'fRED'
	     */
	    var lowerFirst = createCaseFirst('toLowerCase');

	    /**
	     * Pads `string` on the left and right sides if it's shorter than `length`.
	     * Padding characters are truncated if they can't be evenly divided by `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.pad('abc', 8);
	     * // => '  abc   '
	     *
	     * _.pad('abc', 8, '_-');
	     * // => '_-abc_-_'
	     *
	     * _.pad('abc', 3);
	     * // => 'abc'
	     */
	    function pad(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      if (!length || strLength >= length) {
	        return string;
	      }
	      var mid = (length - strLength) / 2;
	      return (
	        createPadding(nativeFloor(mid), chars) +
	        string +
	        createPadding(nativeCeil(mid), chars)
	      );
	    }

	    /**
	     * Pads `string` on the right side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padEnd('abc', 6);
	     * // => 'abc   '
	     *
	     * _.padEnd('abc', 6, '_-');
	     * // => 'abc_-_'
	     *
	     * _.padEnd('abc', 3);
	     * // => 'abc'
	     */
	    function padEnd(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (string + createPadding(length - strLength, chars))
	        : string;
	    }

	    /**
	     * Pads `string` on the left side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padStart('abc', 6);
	     * // => '   abc'
	     *
	     * _.padStart('abc', 6, '_-');
	     * // => '_-_abc'
	     *
	     * _.padStart('abc', 3);
	     * // => 'abc'
	     */
	    function padStart(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (createPadding(length - strLength, chars) + string)
	        : string;
	    }

	    /**
	     * Converts `string` to an integer of the specified radix. If `radix` is
	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
	     * hexadecimal, in which case a `radix` of `16` is used.
	     *
	     * **Note:** This method aligns with the
	     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category String
	     * @param {string} string The string to convert.
	     * @param {number} [radix=10] The radix to interpret `value` by.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     *
	     * _.map(['6', '08', '10'], _.parseInt);
	     * // => [6, 8, 10]
	     */
	    function parseInt(string, radix, guard) {
	      if (guard || radix == null) {
	        radix = 0;
	      } else if (radix) {
	        radix = +radix;
	      }
	      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
	    }

	    /**
	     * Repeats the given string `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to repeat.
	     * @param {number} [n=1] The number of times to repeat the string.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the repeated string.
	     * @example
	     *
	     * _.repeat('*', 3);
	     * // => '***'
	     *
	     * _.repeat('abc', 2);
	     * // => 'abcabc'
	     *
	     * _.repeat('abc', 0);
	     * // => ''
	     */
	    function repeat(string, n, guard) {
	      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = toInteger(n);
	      }
	      return baseRepeat(toString(string), n);
	    }

	    /**
	     * Replaces matches for `pattern` in `string` with `replacement`.
	     *
	     * **Note:** This method is based on
	     * [`String#replace`](https://mdn.io/String/replace).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to modify.
	     * @param {RegExp|string} pattern The pattern to replace.
	     * @param {Function|string} replacement The match replacement.
	     * @returns {string} Returns the modified string.
	     * @example
	     *
	     * _.replace('Hi Fred', 'Fred', 'Barney');
	     * // => 'Hi Barney'
	     */
	    function replace() {
	      var args = arguments,
	          string = toString(args[0]);

	      return args.length < 3 ? string : string.replace(args[1], args[2]);
	    }

	    /**
	     * Converts `string` to
	     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the snake cased string.
	     * @example
	     *
	     * _.snakeCase('Foo Bar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('fooBar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('--FOO-BAR--');
	     * // => 'foo_bar'
	     */
	    var snakeCase = createCompounder(function(result, word, index) {
	      return result + (index ? '_' : '') + word.toLowerCase();
	    });

	    /**
	     * Splits `string` by `separator`.
	     *
	     * **Note:** This method is based on
	     * [`String#split`](https://mdn.io/String/split).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to split.
	     * @param {RegExp|string} separator The separator pattern to split by.
	     * @param {number} [limit] The length to truncate results to.
	     * @returns {Array} Returns the string segments.
	     * @example
	     *
	     * _.split('a-b-c', '-', 2);
	     * // => ['a', 'b']
	     */
	    function split(string, separator, limit) {
	      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
	        separator = limit = undefined;
	      }
	      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
	      if (!limit) {
	        return [];
	      }
	      string = toString(string);
	      if (string && (
	            typeof separator == 'string' ||
	            (separator != null && !isRegExp(separator))
	          )) {
	        separator = baseToString(separator);
	        if (!separator && hasUnicode(string)) {
	          return castSlice(stringToArray(string), 0, limit);
	        }
	      }
	      return string.split(separator, limit);
	    }

	    /**
	     * Converts `string` to
	     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.1.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the start cased string.
	     * @example
	     *
	     * _.startCase('--foo-bar--');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('fooBar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('__FOO_BAR__');
	     * // => 'FOO BAR'
	     */
	    var startCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + upperFirst(word);
	    });

	    /**
	     * Checks if `string` starts with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=0] The position to search from.
	     * @returns {boolean} Returns `true` if `string` starts with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.startsWith('abc', 'a');
	     * // => true
	     *
	     * _.startsWith('abc', 'b');
	     * // => false
	     *
	     * _.startsWith('abc', 'b', 1);
	     * // => true
	     */
	    function startsWith(string, target, position) {
	      string = toString(string);
	      position = position == null
	        ? 0
	        : baseClamp(toInteger(position), 0, string.length);

	      target = baseToString(target);
	      return string.slice(position, position + target.length) == target;
	    }

	    /**
	     * Creates a compiled template function that can interpolate data properties
	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
	     * properties may be accessed as free variables in the template. If a setting
	     * object is given, it takes precedence over `_.templateSettings` values.
	     *
	     * **Note:** In the development build `_.template` utilizes
	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
	     * for easier debugging.
	     *
	     * For more information on precompiling templates see
	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
	     *
	     * For more information on Chrome extension sandboxes see
	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The template string.
	     * @param {Object} [options={}] The options object.
	     * @param {RegExp} [options.escape=_.templateSettings.escape]
	     *  The HTML "escape" delimiter.
	     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
	     *  The "evaluate" delimiter.
	     * @param {Object} [options.imports=_.templateSettings.imports]
	     *  An object to import into the template as free variables.
	     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
	     *  The "interpolate" delimiter.
	     * @param {string} [options.sourceURL='lodash.templateSources[n]']
	     *  The sourceURL of the compiled template.
	     * @param {string} [options.variable='obj']
	     *  The data object variable name.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the compiled template function.
	     * @example
	     *
	     * // Use the "interpolate" delimiter to create a compiled template.
	     * var compiled = _.template('hello <%= user %>!');
	     * compiled({ 'user': 'fred' });
	     * // => 'hello fred!'
	     *
	     * // Use the HTML "escape" delimiter to escape data property values.
	     * var compiled = _.template('<b><%- value %></b>');
	     * compiled({ 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the internal `print` function in "evaluate" delimiters.
	     * var compiled = _.template('<% print("hello " + user); %>!');
	     * compiled({ 'user': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // Use the ES template literal delimiter as an "interpolate" delimiter.
	     * // Disable support by replacing the "interpolate" delimiter.
	     * var compiled = _.template('hello ${ user }!');
	     * compiled({ 'user': 'pebbles' });
	     * // => 'hello pebbles!'
	     *
	     * // Use backslashes to treat delimiters as plain text.
	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
	     * compiled({ 'value': 'ignored' });
	     * // => '<%- value %>'
	     *
	     * // Use the `imports` option to import `jQuery` as `jq`.
	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
	     *
	     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     * //   var __t, __p = '';
	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
	     * //   return __p;
	     * // }
	     *
	     * // Use custom template delimiters.
	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
	     * var compiled = _.template('hello {{ user }}!');
	     * compiled({ 'user': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // Use the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and stack traces.
	     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */
	    function template(string, options, guard) {
	      // Based on John Resig's `tmpl` implementation
	      // (http://ejohn.org/blog/javascript-micro-templating/)
	      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
	      var settings = lodash.templateSettings;

	      if (guard && isIterateeCall(string, options, guard)) {
	        options = undefined;
	      }
	      string = toString(string);
	      options = assignInWith({}, options, settings, customDefaultsAssignIn);

	      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
	          importsKeys = keys(imports),
	          importsValues = baseValues(imports, importsKeys);

	      var isEscaping,
	          isEvaluating,
	          index = 0,
	          interpolate = options.interpolate || reNoMatch,
	          source = "__p += '";

	      // Compile the regexp to match each delimiter.
	      var reDelimiters = RegExp(
	        (options.escape || reNoMatch).source + '|' +
	        interpolate.source + '|' +
	        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
	        (options.evaluate || reNoMatch).source + '|$'
	      , 'g');

	      // Use a sourceURL for easier debugging.
	      var sourceURL = '//# sourceURL=' +
	        ('sourceURL' in options
	          ? options.sourceURL
	          : ('lodash.templateSources[' + (++templateCounter) + ']')
	        ) + '\n';

	      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
	        interpolateValue || (interpolateValue = esTemplateValue);

	        // Escape characters that can't be included in string literals.
	        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

	        // Replace delimiters with snippets.
	        if (escapeValue) {
	          isEscaping = true;
	          source += "' +\n__e(" + escapeValue + ") +\n'";
	        }
	        if (evaluateValue) {
	          isEvaluating = true;
	          source += "';\n" + evaluateValue + ";\n__p += '";
	        }
	        if (interpolateValue) {
	          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
	        }
	        index = offset + match.length;

	        // The JS engine embedded in Adobe products needs `match` returned in
	        // order to produce the correct `offset` value.
	        return match;
	      });

	      source += "';\n";

	      // If `variable` is not specified wrap a with-statement around the generated
	      // code to add the data object to the top of the scope chain.
	      var variable = options.variable;
	      if (!variable) {
	        source = 'with (obj) {\n' + source + '\n}\n';
	      }
	      // Cleanup code by stripping empty strings.
	      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
	        .replace(reEmptyStringMiddle, '$1')
	        .replace(reEmptyStringTrailing, '$1;');

	      // Frame code as the function body.
	      source = 'function(' + (variable || 'obj') + ') {\n' +
	        (variable
	          ? ''
	          : 'obj || (obj = {});\n'
	        ) +
	        "var __t, __p = ''" +
	        (isEscaping
	           ? ', __e = _.escape'
	           : ''
	        ) +
	        (isEvaluating
	          ? ', __j = Array.prototype.join;\n' +
	            "function print() { __p += __j.call(arguments, '') }\n"
	          : ';\n'
	        ) +
	        source +
	        'return __p\n}';

	      var result = attempt(function() {
	        return Function(importsKeys, sourceURL + 'return ' + source)
	          .apply(undefined, importsValues);
	      });

	      // Provide the compiled function's source by its `toString` method or
	      // the `source` property as a convenience for inlining compiled templates.
	      result.source = source;
	      if (isError(result)) {
	        throw result;
	      }
	      return result;
	    }

	    /**
	     * Converts `string`, as a whole, to lower case just like
	     * [String#toLowerCase](https://mdn.io/toLowerCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.toLower('--Foo-Bar--');
	     * // => '--foo-bar--'
	     *
	     * _.toLower('fooBar');
	     * // => 'foobar'
	     *
	     * _.toLower('__FOO_BAR__');
	     * // => '__foo_bar__'
	     */
	    function toLower(value) {
	      return toString(value).toLowerCase();
	    }

	    /**
	     * Converts `string`, as a whole, to upper case just like
	     * [String#toUpperCase](https://mdn.io/toUpperCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.toUpper('--foo-bar--');
	     * // => '--FOO-BAR--'
	     *
	     * _.toUpper('fooBar');
	     * // => 'FOOBAR'
	     *
	     * _.toUpper('__foo_bar__');
	     * // => '__FOO_BAR__'
	     */
	    function toUpper(value) {
	      return toString(value).toUpperCase();
	    }

	    /**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */
	    function trim(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrim, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          chrSymbols = stringToArray(chars),
	          start = charsStartIndex(strSymbols, chrSymbols),
	          end = charsEndIndex(strSymbols, chrSymbols) + 1;

	      return castSlice(strSymbols, start, end).join('');
	    }

	    /**
	     * Removes trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimEnd('  abc  ');
	     * // => '  abc'
	     *
	     * _.trimEnd('-_-abc-_-', '_-');
	     * // => '-_-abc'
	     */
	    function trimEnd(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrimEnd, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

	      return castSlice(strSymbols, 0, end).join('');
	    }

	    /**
	     * Removes leading whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimStart('  abc  ');
	     * // => 'abc  '
	     *
	     * _.trimStart('-_-abc-_-', '_-');
	     * // => 'abc-_-'
	     */
	    function trimStart(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrimStart, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          start = charsStartIndex(strSymbols, stringToArray(chars));

	      return castSlice(strSymbols, start).join('');
	    }

	    /**
	     * Truncates `string` if it's longer than the given maximum string length.
	     * The last characters of the truncated string are replaced with the omission
	     * string which defaults to "...".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to truncate.
	     * @param {Object} [options={}] The options object.
	     * @param {number} [options.length=30] The maximum string length.
	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	     * @returns {string} Returns the truncated string.
	     * @example
	     *
	     * _.truncate('hi-diddly-ho there, neighborino');
	     * // => 'hi-diddly-ho there, neighbo...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': ' '
	     * });
	     * // => 'hi-diddly-ho there,...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': /,? +/
	     * });
	     * // => 'hi-diddly-ho there...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'omission': ' [...]'
	     * });
	     * // => 'hi-diddly-ho there, neig [...]'
	     */
	    function truncate(string, options) {
	      var length = DEFAULT_TRUNC_LENGTH,
	          omission = DEFAULT_TRUNC_OMISSION;

	      if (isObject(options)) {
	        var separator = 'separator' in options ? options.separator : separator;
	        length = 'length' in options ? toInteger(options.length) : length;
	        omission = 'omission' in options ? baseToString(options.omission) : omission;
	      }
	      string = toString(string);

	      var strLength = string.length;
	      if (hasUnicode(string)) {
	        var strSymbols = stringToArray(string);
	        strLength = strSymbols.length;
	      }
	      if (length >= strLength) {
	        return string;
	      }
	      var end = length - stringSize(omission);
	      if (end < 1) {
	        return omission;
	      }
	      var result = strSymbols
	        ? castSlice(strSymbols, 0, end).join('')
	        : string.slice(0, end);

	      if (separator === undefined) {
	        return result + omission;
	      }
	      if (strSymbols) {
	        end += (result.length - end);
	      }
	      if (isRegExp(separator)) {
	        if (string.slice(end).search(separator)) {
	          var match,
	              substring = result;

	          if (!separator.global) {
	            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
	          }
	          separator.lastIndex = 0;
	          while ((match = separator.exec(substring))) {
	            var newEnd = match.index;
	          }
	          result = result.slice(0, newEnd === undefined ? end : newEnd);
	        }
	      } else if (string.indexOf(baseToString(separator), end) != end) {
	        var index = result.lastIndexOf(separator);
	        if (index > -1) {
	          result = result.slice(0, index);
	        }
	      }
	      return result + omission;
	    }

	    /**
	     * The inverse of `_.escape`; this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
	     * their corresponding characters.
	     *
	     * **Note:** No other HTML entities are unescaped. To unescape additional
	     * HTML entities use a third-party library like [_he_](https://mths.be/he).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.6.0
	     * @category String
	     * @param {string} [string=''] The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('fred, barney, &amp; pebbles');
	     * // => 'fred, barney, & pebbles'
	     */
	    function unescape(string) {
	      string = toString(string);
	      return (string && reHasEscapedHtml.test(string))
	        ? string.replace(reEscapedHtml, unescapeHtmlChar)
	        : string;
	    }

	    /**
	     * Converts `string`, as space separated words, to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.upperCase('--foo-bar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('fooBar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('__foo_bar__');
	     * // => 'FOO BAR'
	     */
	    var upperCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toUpperCase();
	    });

	    /**
	     * Converts the first character of `string` to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.upperFirst('fred');
	     * // => 'Fred'
	     *
	     * _.upperFirst('FRED');
	     * // => 'FRED'
	     */
	    var upperFirst = createCaseFirst('toUpperCase');

	    /**
	     * Splits `string` into an array of its words.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {RegExp|string} [pattern] The pattern to match words.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the words of `string`.
	     * @example
	     *
	     * _.words('fred, barney, & pebbles');
	     * // => ['fred', 'barney', 'pebbles']
	     *
	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
	     * // => ['fred', 'barney', '&', 'pebbles']
	     */
	    function words(string, pattern, guard) {
	      string = toString(string);
	      pattern = guard ? undefined : pattern;

	      if (pattern === undefined) {
	        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
	      }
	      return string.match(pattern) || [];
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Attempts to invoke `func`, returning either the result or the caught error
	     * object. Any additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Function} func The function to attempt.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {*} Returns the `func` result or error object.
	     * @example
	     *
	     * // Avoid throwing errors for invalid selectors.
	     * var elements = _.attempt(function(selector) {
	     *   return document.querySelectorAll(selector);
	     * }, '>_>');
	     *
	     * if (_.isError(elements)) {
	     *   elements = [];
	     * }
	     */
	    var attempt = baseRest(function(func, args) {
	      try {
	        return apply(func, undefined, args);
	      } catch (e) {
	        return isError(e) ? e : new Error(e);
	      }
	    });

	    /**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method.
	     *
	     * **Note:** This method doesn't set the "length" property of bound functions.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...(string|string[])} methodNames The object method names to bind.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'click': function() {
	     *     console.log('clicked ' + this.label);
	     *   }
	     * };
	     *
	     * _.bindAll(view, ['click']);
	     * jQuery(element).on('click', view.click);
	     * // => Logs 'clicked docs' when clicked.
	     */
	    var bindAll = flatRest(function(object, methodNames) {
	      arrayEach(methodNames, function(key) {
	        key = toKey(key);
	        baseAssignValue(object, key, bind(object[key], object));
	      });
	      return object;
	    });

	    /**
	     * Creates a function that iterates over `pairs` and invokes the corresponding
	     * function of the first predicate to return truthy. The predicate-function
	     * pairs are invoked with the `this` binding and arguments of the created
	     * function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Array} pairs The predicate-function pairs.
	     * @returns {Function} Returns the new composite function.
	     * @example
	     *
	     * var func = _.cond([
	     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
	     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
	     *   [_.stubTrue,                      _.constant('no match')]
	     * ]);
	     *
	     * func({ 'a': 1, 'b': 2 });
	     * // => 'matches A'
	     *
	     * func({ 'a': 0, 'b': 1 });
	     * // => 'matches B'
	     *
	     * func({ 'a': '1', 'b': '2' });
	     * // => 'no match'
	     */
	    function cond(pairs) {
	      var length = pairs == null ? 0 : pairs.length,
	          toIteratee = getIteratee();

	      pairs = !length ? [] : arrayMap(pairs, function(pair) {
	        if (typeof pair[1] != 'function') {
	          throw new TypeError(FUNC_ERROR_TEXT);
	        }
	        return [toIteratee(pair[0]), pair[1]];
	      });

	      return baseRest(function(args) {
	        var index = -1;
	        while (++index < length) {
	          var pair = pairs[index];
	          if (apply(pair[0], this, args)) {
	            return apply(pair[1], this, args);
	          }
	        }
	      });
	    }

	    /**
	     * Creates a function that invokes the predicate properties of `source` with
	     * the corresponding property values of a given object, returning `true` if
	     * all predicates return truthy, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.conformsTo` with
	     * `source` partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 2, 'b': 1 },
	     *   { 'a': 1, 'b': 2 }
	     * ];
	     *
	     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
	     * // => [{ 'a': 1, 'b': 2 }]
	     */
	    function conforms(source) {
	      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
	    }

	    /**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new constant function.
	     * @example
	     *
	     * var objects = _.times(2, _.constant({ 'a': 1 }));
	     *
	     * console.log(objects);
	     * // => [{ 'a': 1 }, { 'a': 1 }]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => true
	     */
	    function constant(value) {
	      return function() {
	        return value;
	      };
	    }

	    /**
	     * Checks `value` to determine whether a default value should be returned in
	     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
	     * or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Util
	     * @param {*} value The value to check.
	     * @param {*} defaultValue The default value.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * _.defaultTo(1, 10);
	     * // => 1
	     *
	     * _.defaultTo(undefined, 10);
	     * // => 10
	     */
	    function defaultTo(value, defaultValue) {
	      return (value == null || value !== value) ? defaultValue : value;
	    }

	    /**
	     * Creates a function that returns the result of invoking the given functions
	     * with the `this` binding of the created function, where each successive
	     * invocation is supplied the return value of the previous.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flowRight
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flow([_.add, square]);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flow = createFlow();

	    /**
	     * This method is like `_.flow` except that it creates a function that
	     * invokes the given functions from right to left.
	     *
	     * @static
	     * @since 3.0.0
	     * @memberOf _
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flow
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flowRight([square, _.add]);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flowRight = createFlow(true);

	    /**
	     * This method returns the first argument it receives.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     *
	     * console.log(_.identity(object) === object);
	     * // => true
	     */
	    function identity(value) {
	      return value;
	    }

	    /**
	     * Creates a function that invokes `func` with the arguments of the created
	     * function. If `func` is a property name, the created function returns the
	     * property value for a given element. If `func` is an array or object, the
	     * created function returns `true` for elements that contain the equivalent
	     * source properties, otherwise it returns `false`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Util
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @returns {Function} Returns the callback.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, _.iteratee(['user', 'fred']));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, _.iteratee('user'));
	     * // => ['barney', 'fred']
	     *
	     * // Create custom iteratee shorthands.
	     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	     *     return func.test(string);
	     *   };
	     * });
	     *
	     * _.filter(['abc', 'def'], /ef/);
	     * // => ['def']
	     */
	    function iteratee(func) {
	      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
	    }

	    /**
	     * Creates a function that performs a partial deep comparison between a given
	     * object and `source`, returning `true` if the given object has equivalent
	     * property values, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.isMatch` with `source`
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
	     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
	     */
	    function matches(source) {
	      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
	    }

	    /**
	     * Creates a function that performs a partial deep comparison between the
	     * value at `path` of a given object to `srcValue`, returning `true` if the
	     * object value is equivalent, else `false`.
	     *
	     * **Note:** Partial comparisons will match empty array and empty object
	     * `srcValue` values against any array or object value, respectively. See
	     * `_.isEqual` for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.find(objects, _.matchesProperty('a', 4));
	     * // => { 'a': 4, 'b': 5, 'c': 6 }
	     */
	    function matchesProperty(path, srcValue) {
	      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
	    }

	    /**
	     * Creates a function that invokes the method at `path` of a given object.
	     * Any additional arguments are provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': _.constant(2) } },
	     *   { 'a': { 'b': _.constant(1) } }
	     * ];
	     *
	     * _.map(objects, _.method('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(objects, _.method(['a', 'b']));
	     * // => [2, 1]
	     */
	    var method = baseRest(function(path, args) {
	      return function(object) {
	        return baseInvoke(object, path, args);
	      };
	    });

	    /**
	     * The opposite of `_.method`; this method creates a function that invokes
	     * the method at a given path of `object`. Any additional arguments are
	     * provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var array = _.times(3, _.constant),
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
	     * // => [2, 0]
	     */
	    var methodOf = baseRest(function(object, args) {
	      return function(path) {
	        return baseInvoke(object, path, args);
	      };
	    });

	    /**
	     * Adds all own enumerable string keyed function properties of a source
	     * object to the destination object. If `object` is a function, then methods
	     * are added to its prototype as well.
	     *
	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
	     * avoid conflicts caused by modifying the original.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Function|Object} [object=lodash] The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
	     * @returns {Function|Object} Returns `object`.
	     * @example
	     *
	     * function vowels(string) {
	     *   return _.filter(string, function(v) {
	     *     return /[aeiou]/i.test(v);
	     *   });
	     * }
	     *
	     * _.mixin({ 'vowels': vowels });
	     * _.vowels('fred');
	     * // => ['e']
	     *
	     * _('fred').vowels().value();
	     * // => ['e']
	     *
	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
	     * _('fred').vowels();
	     * // => ['e']
	     */
	    function mixin(object, source, options) {
	      var props = keys(source),
	          methodNames = baseFunctions(source, props);

	      if (options == null &&
	          !(isObject(source) && (methodNames.length || !props.length))) {
	        options = source;
	        source = object;
	        object = this;
	        methodNames = baseFunctions(source, keys(source));
	      }
	      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
	          isFunc = isFunction(object);

	      arrayEach(methodNames, function(methodName) {
	        var func = source[methodName];
	        object[methodName] = func;
	        if (isFunc) {
	          object.prototype[methodName] = function() {
	            var chainAll = this.__chain__;
	            if (chain || chainAll) {
	              var result = object(this.__wrapped__),
	                  actions = result.__actions__ = copyArray(this.__actions__);

	              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
	              result.__chain__ = chainAll;
	              return result;
	            }
	            return func.apply(object, arrayPush([this.value()], arguments));
	          };
	        }
	      });

	      return object;
	    }

	    /**
	     * Reverts the `_` variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */
	    function noConflict() {
	      if (root._ === this) {
	        root._ = oldDash;
	      }
	      return this;
	    }

	    /**
	     * This method returns `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Util
	     * @example
	     *
	     * _.times(2, _.noop);
	     * // => [undefined, undefined]
	     */
	    function noop() {
	      // No operation performed.
	    }

	    /**
	     * Creates a function that gets the argument at index `n`. If `n` is negative,
	     * the nth argument from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [n=0] The index of the argument to return.
	     * @returns {Function} Returns the new pass-thru function.
	     * @example
	     *
	     * var func = _.nthArg(1);
	     * func('a', 'b', 'c', 'd');
	     * // => 'b'
	     *
	     * var func = _.nthArg(-2);
	     * func('a', 'b', 'c', 'd');
	     * // => 'c'
	     */
	    function nthArg(n) {
	      n = toInteger(n);
	      return baseRest(function(args) {
	        return baseNth(args, n);
	      });
	    }

	    /**
	     * Creates a function that invokes `iteratees` with the arguments it receives
	     * and returns their results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.over([Math.max, Math.min]);
	     *
	     * func(1, 2, 3, 4);
	     * // => [4, 1]
	     */
	    var over = createOver(arrayMap);

	    /**
	     * Creates a function that checks if **all** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overEvery([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => false
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overEvery = createOver(arrayEvery);

	    /**
	     * Creates a function that checks if **any** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overSome([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => true
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overSome = createOver(arraySome);

	    /**
	     * Creates a function that returns the value at `path` of a given object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': 2 } },
	     *   { 'a': { 'b': 1 } }
	     * ];
	     *
	     * _.map(objects, _.property('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	     * // => [1, 2]
	     */
	    function property(path) {
	      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	    }

	    /**
	     * The opposite of `_.property`; this method creates a function that returns
	     * the value at a given path of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var array = [0, 1, 2],
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
	     * // => [2, 0]
	     */
	    function propertyOf(object) {
	      return function(path) {
	        return object == null ? undefined : baseGet(object, path);
	      };
	    }

	    /**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	     * `start` is specified without an `end` or `step`. If `end` is not specified,
	     * it's set to `start` with `start` then set to `0`.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.rangeRight
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(-4);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */
	    var range = createRange();

	    /**
	     * This method is like `_.range` except that it populates values in
	     * descending order.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.range
	     * @example
	     *
	     * _.rangeRight(4);
	     * // => [3, 2, 1, 0]
	     *
	     * _.rangeRight(-4);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 5);
	     * // => [4, 3, 2, 1]
	     *
	     * _.rangeRight(0, 20, 5);
	     * // => [15, 10, 5, 0]
	     *
	     * _.rangeRight(0, -4, -1);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.rangeRight(0);
	     * // => []
	     */
	    var rangeRight = createRange(true);

	    /**
	     * This method returns a new empty array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Array} Returns the new empty array.
	     * @example
	     *
	     * var arrays = _.times(2, _.stubArray);
	     *
	     * console.log(arrays);
	     * // => [[], []]
	     *
	     * console.log(arrays[0] === arrays[1]);
	     * // => false
	     */
	    function stubArray() {
	      return [];
	    }

	    /**
	     * This method returns `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `false`.
	     * @example
	     *
	     * _.times(2, _.stubFalse);
	     * // => [false, false]
	     */
	    function stubFalse() {
	      return false;
	    }

	    /**
	     * This method returns a new empty object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Object} Returns the new empty object.
	     * @example
	     *
	     * var objects = _.times(2, _.stubObject);
	     *
	     * console.log(objects);
	     * // => [{}, {}]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => false
	     */
	    function stubObject() {
	      return {};
	    }

	    /**
	     * This method returns an empty string.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {string} Returns the empty string.
	     * @example
	     *
	     * _.times(2, _.stubString);
	     * // => ['', '']
	     */
	    function stubString() {
	      return '';
	    }

	    /**
	     * This method returns `true`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `true`.
	     * @example
	     *
	     * _.times(2, _.stubTrue);
	     * // => [true, true]
	     */
	    function stubTrue() {
	      return true;
	    }

	    /**
	     * Invokes the iteratee `n` times, returning an array of the results of
	     * each invocation. The iteratee is invoked with one argument; (index).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.times(3, String);
	     * // => ['0', '1', '2']
	     *
	     *  _.times(4, _.constant(0));
	     * // => [0, 0, 0, 0]
	     */
	    function times(n, iteratee) {
	      n = toInteger(n);
	      if (n < 1 || n > MAX_SAFE_INTEGER) {
	        return [];
	      }
	      var index = MAX_ARRAY_LENGTH,
	          length = nativeMin(n, MAX_ARRAY_LENGTH);

	      iteratee = getIteratee(iteratee);
	      n -= MAX_ARRAY_LENGTH;

	      var result = baseTimes(length, iteratee);
	      while (++index < n) {
	        iteratee(index);
	      }
	      return result;
	    }

	    /**
	     * Converts `value` to a property path array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the new property path array.
	     * @example
	     *
	     * _.toPath('a.b.c');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toPath('a[0].b.c');
	     * // => ['a', '0', 'b', 'c']
	     */
	    function toPath(value) {
	      if (isArray(value)) {
	        return arrayMap(value, toKey);
	      }
	      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
	    }

	    /**
	     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {string} [prefix=''] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */
	    function uniqueId(prefix) {
	      var id = ++idCounter;
	      return toString(prefix) + id;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Adds two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {number} augend The first number in an addition.
	     * @param {number} addend The second number in an addition.
	     * @returns {number} Returns the total.
	     * @example
	     *
	     * _.add(6, 4);
	     * // => 10
	     */
	    var add = createMathOperation(function(augend, addend) {
	      return augend + addend;
	    }, 0);

	    /**
	     * Computes `number` rounded up to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round up.
	     * @param {number} [precision=0] The precision to round up to.
	     * @returns {number} Returns the rounded up number.
	     * @example
	     *
	     * _.ceil(4.006);
	     * // => 5
	     *
	     * _.ceil(6.004, 2);
	     * // => 6.01
	     *
	     * _.ceil(6040, -2);
	     * // => 6100
	     */
	    var ceil = createRound('ceil');

	    /**
	     * Divide two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} dividend The first number in a division.
	     * @param {number} divisor The second number in a division.
	     * @returns {number} Returns the quotient.
	     * @example
	     *
	     * _.divide(6, 4);
	     * // => 1.5
	     */
	    var divide = createMathOperation(function(dividend, divisor) {
	      return dividend / divisor;
	    }, 1);

	    /**
	     * Computes `number` rounded down to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round down.
	     * @param {number} [precision=0] The precision to round down to.
	     * @returns {number} Returns the rounded down number.
	     * @example
	     *
	     * _.floor(4.006);
	     * // => 4
	     *
	     * _.floor(0.046, 2);
	     * // => 0.04
	     *
	     * _.floor(4060, -2);
	     * // => 4000
	     */
	    var floor = createRound('floor');

	    /**
	     * Computes the maximum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * _.max([]);
	     * // => undefined
	     */
	    function max(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, baseGt)
	        : undefined;
	    }

	    /**
	     * This method is like `_.max` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.maxBy(objects, function(o) { return o.n; });
	     * // => { 'n': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.maxBy(objects, 'n');
	     * // => { 'n': 2 }
	     */
	    function maxBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
	        : undefined;
	    }

	    /**
	     * Computes the mean of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * _.mean([4, 2, 8, 6]);
	     * // => 5
	     */
	    function mean(array) {
	      return baseMean(array, identity);
	    }

	    /**
	     * This method is like `_.mean` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be averaged.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.meanBy(objects, function(o) { return o.n; });
	     * // => 5
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.meanBy(objects, 'n');
	     * // => 5
	     */
	    function meanBy(array, iteratee) {
	      return baseMean(array, getIteratee(iteratee, 2));
	    }

	    /**
	     * Computes the minimum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * _.min([]);
	     * // => undefined
	     */
	    function min(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, baseLt)
	        : undefined;
	    }

	    /**
	     * This method is like `_.min` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.minBy(objects, function(o) { return o.n; });
	     * // => { 'n': 1 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.minBy(objects, 'n');
	     * // => { 'n': 1 }
	     */
	    function minBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
	        : undefined;
	    }

	    /**
	     * Multiply two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} multiplier The first number in a multiplication.
	     * @param {number} multiplicand The second number in a multiplication.
	     * @returns {number} Returns the product.
	     * @example
	     *
	     * _.multiply(6, 4);
	     * // => 24
	     */
	    var multiply = createMathOperation(function(multiplier, multiplicand) {
	      return multiplier * multiplicand;
	    }, 1);

	    /**
	     * Computes `number` rounded to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round.
	     * @param {number} [precision=0] The precision to round to.
	     * @returns {number} Returns the rounded number.
	     * @example
	     *
	     * _.round(4.006);
	     * // => 4
	     *
	     * _.round(4.006, 2);
	     * // => 4.01
	     *
	     * _.round(4060, -2);
	     * // => 4100
	     */
	    var round = createRound('round');

	    /**
	     * Subtract two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {number} minuend The first number in a subtraction.
	     * @param {number} subtrahend The second number in a subtraction.
	     * @returns {number} Returns the difference.
	     * @example
	     *
	     * _.subtract(6, 4);
	     * // => 2
	     */
	    var subtract = createMathOperation(function(minuend, subtrahend) {
	      return minuend - subtrahend;
	    }, 0);

	    /**
	     * Computes the sum of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.sum([4, 2, 8, 6]);
	     * // => 20
	     */
	    function sum(array) {
	      return (array && array.length)
	        ? baseSum(array, identity)
	        : 0;
	    }

	    /**
	     * This method is like `_.sum` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be summed.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.sumBy(objects, function(o) { return o.n; });
	     * // => 20
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sumBy(objects, 'n');
	     * // => 20
	     */
	    function sumBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSum(array, getIteratee(iteratee, 2))
	        : 0;
	    }

	    /*------------------------------------------------------------------------*/

	    // Add methods that return wrapped values in chain sequences.
	    lodash.after = after;
	    lodash.ary = ary;
	    lodash.assign = assign;
	    lodash.assignIn = assignIn;
	    lodash.assignInWith = assignInWith;
	    lodash.assignWith = assignWith;
	    lodash.at = at;
	    lodash.before = before;
	    lodash.bind = bind;
	    lodash.bindAll = bindAll;
	    lodash.bindKey = bindKey;
	    lodash.castArray = castArray;
	    lodash.chain = chain;
	    lodash.chunk = chunk;
	    lodash.compact = compact;
	    lodash.concat = concat;
	    lodash.cond = cond;
	    lodash.conforms = conforms;
	    lodash.constant = constant;
	    lodash.countBy = countBy;
	    lodash.create = create;
	    lodash.curry = curry;
	    lodash.curryRight = curryRight;
	    lodash.debounce = debounce;
	    lodash.defaults = defaults;
	    lodash.defaultsDeep = defaultsDeep;
	    lodash.defer = defer;
	    lodash.delay = delay;
	    lodash.difference = difference;
	    lodash.differenceBy = differenceBy;
	    lodash.differenceWith = differenceWith;
	    lodash.drop = drop;
	    lodash.dropRight = dropRight;
	    lodash.dropRightWhile = dropRightWhile;
	    lodash.dropWhile = dropWhile;
	    lodash.fill = fill;
	    lodash.filter = filter;
	    lodash.flatMap = flatMap;
	    lodash.flatMapDeep = flatMapDeep;
	    lodash.flatMapDepth = flatMapDepth;
	    lodash.flatten = flatten;
	    lodash.flattenDeep = flattenDeep;
	    lodash.flattenDepth = flattenDepth;
	    lodash.flip = flip;
	    lodash.flow = flow;
	    lodash.flowRight = flowRight;
	    lodash.fromPairs = fromPairs;
	    lodash.functions = functions;
	    lodash.functionsIn = functionsIn;
	    lodash.groupBy = groupBy;
	    lodash.initial = initial;
	    lodash.intersection = intersection;
	    lodash.intersectionBy = intersectionBy;
	    lodash.intersectionWith = intersectionWith;
	    lodash.invert = invert;
	    lodash.invertBy = invertBy;
	    lodash.invokeMap = invokeMap;
	    lodash.iteratee = iteratee;
	    lodash.keyBy = keyBy;
	    lodash.keys = keys;
	    lodash.keysIn = keysIn;
	    lodash.map = map;
	    lodash.mapKeys = mapKeys;
	    lodash.mapValues = mapValues;
	    lodash.matches = matches;
	    lodash.matchesProperty = matchesProperty;
	    lodash.memoize = memoize;
	    lodash.merge = merge;
	    lodash.mergeWith = mergeWith;
	    lodash.method = method;
	    lodash.methodOf = methodOf;
	    lodash.mixin = mixin;
	    lodash.negate = negate;
	    lodash.nthArg = nthArg;
	    lodash.omit = omit;
	    lodash.omitBy = omitBy;
	    lodash.once = once;
	    lodash.orderBy = orderBy;
	    lodash.over = over;
	    lodash.overArgs = overArgs;
	    lodash.overEvery = overEvery;
	    lodash.overSome = overSome;
	    lodash.partial = partial;
	    lodash.partialRight = partialRight;
	    lodash.partition = partition;
	    lodash.pick = pick;
	    lodash.pickBy = pickBy;
	    lodash.property = property;
	    lodash.propertyOf = propertyOf;
	    lodash.pull = pull;
	    lodash.pullAll = pullAll;
	    lodash.pullAllBy = pullAllBy;
	    lodash.pullAllWith = pullAllWith;
	    lodash.pullAt = pullAt;
	    lodash.range = range;
	    lodash.rangeRight = rangeRight;
	    lodash.rearg = rearg;
	    lodash.reject = reject;
	    lodash.remove = remove;
	    lodash.rest = rest;
	    lodash.reverse = reverse;
	    lodash.sampleSize = sampleSize;
	    lodash.set = set;
	    lodash.setWith = setWith;
	    lodash.shuffle = shuffle;
	    lodash.slice = slice;
	    lodash.sortBy = sortBy;
	    lodash.sortedUniq = sortedUniq;
	    lodash.sortedUniqBy = sortedUniqBy;
	    lodash.split = split;
	    lodash.spread = spread;
	    lodash.tail = tail;
	    lodash.take = take;
	    lodash.takeRight = takeRight;
	    lodash.takeRightWhile = takeRightWhile;
	    lodash.takeWhile = takeWhile;
	    lodash.tap = tap;
	    lodash.throttle = throttle;
	    lodash.thru = thru;
	    lodash.toArray = toArray;
	    lodash.toPairs = toPairs;
	    lodash.toPairsIn = toPairsIn;
	    lodash.toPath = toPath;
	    lodash.toPlainObject = toPlainObject;
	    lodash.transform = transform;
	    lodash.unary = unary;
	    lodash.union = union;
	    lodash.unionBy = unionBy;
	    lodash.unionWith = unionWith;
	    lodash.uniq = uniq;
	    lodash.uniqBy = uniqBy;
	    lodash.uniqWith = uniqWith;
	    lodash.unset = unset;
	    lodash.unzip = unzip;
	    lodash.unzipWith = unzipWith;
	    lodash.update = update;
	    lodash.updateWith = updateWith;
	    lodash.values = values;
	    lodash.valuesIn = valuesIn;
	    lodash.without = without;
	    lodash.words = words;
	    lodash.wrap = wrap;
	    lodash.xor = xor;
	    lodash.xorBy = xorBy;
	    lodash.xorWith = xorWith;
	    lodash.zip = zip;
	    lodash.zipObject = zipObject;
	    lodash.zipObjectDeep = zipObjectDeep;
	    lodash.zipWith = zipWith;

	    // Add aliases.
	    lodash.entries = toPairs;
	    lodash.entriesIn = toPairsIn;
	    lodash.extend = assignIn;
	    lodash.extendWith = assignInWith;

	    // Add methods to `lodash.prototype`.
	    mixin(lodash, lodash);

	    /*------------------------------------------------------------------------*/

	    // Add methods that return unwrapped values in chain sequences.
	    lodash.add = add;
	    lodash.attempt = attempt;
	    lodash.camelCase = camelCase;
	    lodash.capitalize = capitalize;
	    lodash.ceil = ceil;
	    lodash.clamp = clamp;
	    lodash.clone = clone;
	    lodash.cloneDeep = cloneDeep;
	    lodash.cloneDeepWith = cloneDeepWith;
	    lodash.cloneWith = cloneWith;
	    lodash.conformsTo = conformsTo;
	    lodash.deburr = deburr;
	    lodash.defaultTo = defaultTo;
	    lodash.divide = divide;
	    lodash.endsWith = endsWith;
	    lodash.eq = eq;
	    lodash.escape = escape;
	    lodash.escapeRegExp = escapeRegExp;
	    lodash.every = every;
	    lodash.find = find;
	    lodash.findIndex = findIndex;
	    lodash.findKey = findKey;
	    lodash.findLast = findLast;
	    lodash.findLastIndex = findLastIndex;
	    lodash.findLastKey = findLastKey;
	    lodash.floor = floor;
	    lodash.forEach = forEach;
	    lodash.forEachRight = forEachRight;
	    lodash.forIn = forIn;
	    lodash.forInRight = forInRight;
	    lodash.forOwn = forOwn;
	    lodash.forOwnRight = forOwnRight;
	    lodash.get = get;
	    lodash.gt = gt;
	    lodash.gte = gte;
	    lodash.has = has;
	    lodash.hasIn = hasIn;
	    lodash.head = head;
	    lodash.identity = identity;
	    lodash.includes = includes;
	    lodash.indexOf = indexOf;
	    lodash.inRange = inRange;
	    lodash.invoke = invoke;
	    lodash.isArguments = isArguments;
	    lodash.isArray = isArray;
	    lodash.isArrayBuffer = isArrayBuffer;
	    lodash.isArrayLike = isArrayLike;
	    lodash.isArrayLikeObject = isArrayLikeObject;
	    lodash.isBoolean = isBoolean;
	    lodash.isBuffer = isBuffer;
	    lodash.isDate = isDate;
	    lodash.isElement = isElement;
	    lodash.isEmpty = isEmpty;
	    lodash.isEqual = isEqual;
	    lodash.isEqualWith = isEqualWith;
	    lodash.isError = isError;
	    lodash.isFinite = isFinite;
	    lodash.isFunction = isFunction;
	    lodash.isInteger = isInteger;
	    lodash.isLength = isLength;
	    lodash.isMap = isMap;
	    lodash.isMatch = isMatch;
	    lodash.isMatchWith = isMatchWith;
	    lodash.isNaN = isNaN;
	    lodash.isNative = isNative;
	    lodash.isNil = isNil;
	    lodash.isNull = isNull;
	    lodash.isNumber = isNumber;
	    lodash.isObject = isObject;
	    lodash.isObjectLike = isObjectLike;
	    lodash.isPlainObject = isPlainObject;
	    lodash.isRegExp = isRegExp;
	    lodash.isSafeInteger = isSafeInteger;
	    lodash.isSet = isSet;
	    lodash.isString = isString;
	    lodash.isSymbol = isSymbol;
	    lodash.isTypedArray = isTypedArray;
	    lodash.isUndefined = isUndefined;
	    lodash.isWeakMap = isWeakMap;
	    lodash.isWeakSet = isWeakSet;
	    lodash.join = join;
	    lodash.kebabCase = kebabCase;
	    lodash.last = last;
	    lodash.lastIndexOf = lastIndexOf;
	    lodash.lowerCase = lowerCase;
	    lodash.lowerFirst = lowerFirst;
	    lodash.lt = lt;
	    lodash.lte = lte;
	    lodash.max = max;
	    lodash.maxBy = maxBy;
	    lodash.mean = mean;
	    lodash.meanBy = meanBy;
	    lodash.min = min;
	    lodash.minBy = minBy;
	    lodash.stubArray = stubArray;
	    lodash.stubFalse = stubFalse;
	    lodash.stubObject = stubObject;
	    lodash.stubString = stubString;
	    lodash.stubTrue = stubTrue;
	    lodash.multiply = multiply;
	    lodash.nth = nth;
	    lodash.noConflict = noConflict;
	    lodash.noop = noop;
	    lodash.now = now;
	    lodash.pad = pad;
	    lodash.padEnd = padEnd;
	    lodash.padStart = padStart;
	    lodash.parseInt = parseInt;
	    lodash.random = random;
	    lodash.reduce = reduce;
	    lodash.reduceRight = reduceRight;
	    lodash.repeat = repeat;
	    lodash.replace = replace;
	    lodash.result = result;
	    lodash.round = round;
	    lodash.runInContext = runInContext;
	    lodash.sample = sample;
	    lodash.size = size;
	    lodash.snakeCase = snakeCase;
	    lodash.some = some;
	    lodash.sortedIndex = sortedIndex;
	    lodash.sortedIndexBy = sortedIndexBy;
	    lodash.sortedIndexOf = sortedIndexOf;
	    lodash.sortedLastIndex = sortedLastIndex;
	    lodash.sortedLastIndexBy = sortedLastIndexBy;
	    lodash.sortedLastIndexOf = sortedLastIndexOf;
	    lodash.startCase = startCase;
	    lodash.startsWith = startsWith;
	    lodash.subtract = subtract;
	    lodash.sum = sum;
	    lodash.sumBy = sumBy;
	    lodash.template = template;
	    lodash.times = times;
	    lodash.toFinite = toFinite;
	    lodash.toInteger = toInteger;
	    lodash.toLength = toLength;
	    lodash.toLower = toLower;
	    lodash.toNumber = toNumber;
	    lodash.toSafeInteger = toSafeInteger;
	    lodash.toString = toString;
	    lodash.toUpper = toUpper;
	    lodash.trim = trim;
	    lodash.trimEnd = trimEnd;
	    lodash.trimStart = trimStart;
	    lodash.truncate = truncate;
	    lodash.unescape = unescape;
	    lodash.uniqueId = uniqueId;
	    lodash.upperCase = upperCase;
	    lodash.upperFirst = upperFirst;

	    // Add aliases.
	    lodash.each = forEach;
	    lodash.eachRight = forEachRight;
	    lodash.first = head;

	    mixin(lodash, (function() {
	      var source = {};
	      baseForOwn(lodash, function(func, methodName) {
	        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
	          source[methodName] = func;
	        }
	      });
	      return source;
	    }()), { 'chain': false });

	    /*------------------------------------------------------------------------*/

	    /**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type {string}
	     */
	    lodash.VERSION = VERSION;

	    // Assign default placeholders.
	    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
	      lodash[methodName].placeholder = lodash;
	    });

	    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
	    arrayEach(['drop', 'take'], function(methodName, index) {
	      LazyWrapper.prototype[methodName] = function(n) {
	        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

	        var result = (this.__filtered__ && !index)
	          ? new LazyWrapper(this)
	          : this.clone();

	        if (result.__filtered__) {
	          result.__takeCount__ = nativeMin(n, result.__takeCount__);
	        } else {
	          result.__views__.push({
	            'size': nativeMin(n, MAX_ARRAY_LENGTH),
	            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
	          });
	        }
	        return result;
	      };

	      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
	        return this.reverse()[methodName](n).reverse();
	      };
	    });

	    // Add `LazyWrapper` methods that accept an `iteratee` value.
	    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
	      var type = index + 1,
	          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

	      LazyWrapper.prototype[methodName] = function(iteratee) {
	        var result = this.clone();
	        result.__iteratees__.push({
	          'iteratee': getIteratee(iteratee, 3),
	          'type': type
	        });
	        result.__filtered__ = result.__filtered__ || isFilter;
	        return result;
	      };
	    });

	    // Add `LazyWrapper` methods for `_.head` and `_.last`.
	    arrayEach(['head', 'last'], function(methodName, index) {
	      var takeName = 'take' + (index ? 'Right' : '');

	      LazyWrapper.prototype[methodName] = function() {
	        return this[takeName](1).value()[0];
	      };
	    });

	    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
	    arrayEach(['initial', 'tail'], function(methodName, index) {
	      var dropName = 'drop' + (index ? '' : 'Right');

	      LazyWrapper.prototype[methodName] = function() {
	        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
	      };
	    });

	    LazyWrapper.prototype.compact = function() {
	      return this.filter(identity);
	    };

	    LazyWrapper.prototype.find = function(predicate) {
	      return this.filter(predicate).head();
	    };

	    LazyWrapper.prototype.findLast = function(predicate) {
	      return this.reverse().find(predicate);
	    };

	    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
	      if (typeof path == 'function') {
	        return new LazyWrapper(this);
	      }
	      return this.map(function(value) {
	        return baseInvoke(value, path, args);
	      });
	    });

	    LazyWrapper.prototype.reject = function(predicate) {
	      return this.filter(negate(getIteratee(predicate)));
	    };

	    LazyWrapper.prototype.slice = function(start, end) {
	      start = toInteger(start);

	      var result = this;
	      if (result.__filtered__ && (start > 0 || end < 0)) {
	        return new LazyWrapper(result);
	      }
	      if (start < 0) {
	        result = result.takeRight(-start);
	      } else if (start) {
	        result = result.drop(start);
	      }
	      if (end !== undefined) {
	        end = toInteger(end);
	        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
	      }
	      return result;
	    };

	    LazyWrapper.prototype.takeRightWhile = function(predicate) {
	      return this.reverse().takeWhile(predicate).reverse();
	    };

	    LazyWrapper.prototype.toArray = function() {
	      return this.take(MAX_ARRAY_LENGTH);
	    };

	    // Add `LazyWrapper` methods to `lodash.prototype`.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
	          isTaker = /^(?:head|last)$/.test(methodName),
	          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
	          retUnwrapped = isTaker || /^find/.test(methodName);

	      if (!lodashFunc) {
	        return;
	      }
	      lodash.prototype[methodName] = function() {
	        var value = this.__wrapped__,
	            args = isTaker ? [1] : arguments,
	            isLazy = value instanceof LazyWrapper,
	            iteratee = args[0],
	            useLazy = isLazy || isArray(value);

	        var interceptor = function(value) {
	          var result = lodashFunc.apply(lodash, arrayPush([value], args));
	          return (isTaker && chainAll) ? result[0] : result;
	        };

	        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
	          // Avoid lazy use if the iteratee has a "length" value other than `1`.
	          isLazy = useLazy = false;
	        }
	        var chainAll = this.__chain__,
	            isHybrid = !!this.__actions__.length,
	            isUnwrapped = retUnwrapped && !chainAll,
	            onlyLazy = isLazy && !isHybrid;

	        if (!retUnwrapped && useLazy) {
	          value = onlyLazy ? value : new LazyWrapper(this);
	          var result = func.apply(value, args);
	          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
	          return new LodashWrapper(result, chainAll);
	        }
	        if (isUnwrapped && onlyLazy) {
	          return func.apply(this, args);
	        }
	        result = this.thru(interceptor);
	        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
	      };
	    });

	    // Add `Array` methods to `lodash.prototype`.
	    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
	      var func = arrayProto[methodName],
	          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
	          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

	      lodash.prototype[methodName] = function() {
	        var args = arguments;
	        if (retUnwrapped && !this.__chain__) {
	          var value = this.value();
	          return func.apply(isArray(value) ? value : [], args);
	        }
	        return this[chainName](function(value) {
	          return func.apply(isArray(value) ? value : [], args);
	        });
	      };
	    });

	    // Map minified method names to their real names.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var lodashFunc = lodash[methodName];
	      if (lodashFunc) {
	        var key = (lodashFunc.name + ''),
	            names = realNames[key] || (realNames[key] = []);

	        names.push({ 'name': methodName, 'func': lodashFunc });
	      }
	    });

	    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
	      'name': 'wrapper',
	      'func': undefined
	    }];

	    // Add methods to `LazyWrapper`.
	    LazyWrapper.prototype.clone = lazyClone;
	    LazyWrapper.prototype.reverse = lazyReverse;
	    LazyWrapper.prototype.value = lazyValue;

	    // Add chain sequence methods to the `lodash` wrapper.
	    lodash.prototype.at = wrapperAt;
	    lodash.prototype.chain = wrapperChain;
	    lodash.prototype.commit = wrapperCommit;
	    lodash.prototype.next = wrapperNext;
	    lodash.prototype.plant = wrapperPlant;
	    lodash.prototype.reverse = wrapperReverse;
	    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

	    // Add lazy aliases.
	    lodash.prototype.first = lodash.prototype.head;

	    if (symIterator) {
	      lodash.prototype[symIterator] = wrapperToIterator;
	    }
	    return lodash;
	  });

	  /*--------------------------------------------------------------------------*/

	  // Export lodash.
	  var _ = runInContext();

	  // Some AMD build optimizers, like r.js, check for condition patterns like:
	  if (true) {
	    // Expose Lodash on the global object to prevent errors when Lodash is
	    // loaded by a script tag in the presence of an AMD loader.
	    // See http://requirejs.org/docs/errors.html#mismatch for more details.
	    // Use `_.noConflict` to remove Lodash from the global object.
	    root._ = _;

	    // Define as an anonymous module so, through path mapping, it can be
	    // referenced as the "underscore" module.
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return _;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	  // Check for `exports` after `define` in case a build optimizer adds it.
	  else if (freeModule) {
	    // Export for Node.js.
	    (freeModule.exports = _)._ = _;
	    // Export for CommonJS support.
	    freeExports._ = _;
	  }
	  else {
	    // Export to the global object.
	    root._ = _;
	  }
	}.call(this));

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(466)(module)))

/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(478);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(235)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js?modules=true&localIdentName=[name]__[local]___[hash:base64:5]!./content-container.css", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js?modules=true&localIdentName=[name]__[local]___[hash:base64:5]!./content-container.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(234)();
	// imports


	// module
	exports.push([module.id, ".content-container__text-body-personal___rn9W2 {\n  width: auto;\n  height: auto;\n  overflow: visible;\n  opacity: 1;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 0px;\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-bottom: 0px;\n  margin-top: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 0px solid #000;\n  border-left: 0px solid #000;\n  border-right: 0px solid #000;\n  border-bottom: 0px solid #000;\n  border-radius: 0px 0px 0px 0px;\n  font-family: inherit;\n  color: #000;\n  font-size: inherit;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: inherit;\n  font-style: inherit;\n  text-align: inherit;\n  text-decoration: inherit;\n  text-transform: inherit;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.content-container__text-body-personal___rn9W2:hover {\n}\n\n.content-container__text-body-personal___rn9W2:active {\n}\n\n.content-container__text-body-personal___rn9W2:focus {\n}\n\n.content-container__content_container___hJtxL {\n  width: auto;\n  height: 500px;\n  overflow: visible;\n  opacity: 1;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  background: #AEA4A4;\n  background-size: auto;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 0px;\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-bottom: 0px;\n  margin-top: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  top: 10px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 6px solid #AEA4A4;\n  border-left: 6px solid #AEA4A4;\n  border-right: 6px solid #AEA4A4;\n  border-bottom: 60px solid #AEA4A4;\n  border-radius: 10px 10px 10px 10px;\n  font-family: inherit;\n  color: #000;\n  font-size: inherit;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: inherit;\n  font-style: inherit;\n  text-align: inherit;\n  text-decoration: inherit;\n  text-transform: inherit;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.content-container__content_container___hJtxL:hover {\n}\n\n.content-container__content_container___hJtxL:active {\n}\n\n.content-container__content_container___hJtxL:focus {\n}\n\n.content-container__content_component___3z9nP {\n  width: auto;\n  height: 400px;\n  overflow: visible;\n  opacity: 1;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  background: #eee;\n  background-size: auto;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 0px;\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-bottom: 0px;\n  margin-top: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 0px solid #6C7786;\n  border-left: 2px solid #6C7786;\n  border-right: 2px solid #6C7786;\n  border-bottom: 2px solid #6C7786;\n  border-radius: 3px 3px 3px 3px;\n  font-family: inherit;\n  color: #000;\n  font-size: inherit;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: inherit;\n  font-style: inherit;\n  text-align: inherit;\n  text-decoration: inherit;\n  text-transform: inherit;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.content-container__content_component___3z9nP:hover {\n}\n\n.content-container__content_component___3z9nP:active {\n}\n\n.content-container__content_component___3z9nP:focus {\n}\n\n.content-container__project_type_selector_bBar_container___2BSX6 {\n  width: 488px;\n  height: 40px;\n  overflow: visible;\n  opacity: 1;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  background: #A5ABAE;\n  background-size: auto;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 0px;\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-bottom: 0px;\n  margin-top: 7px;\n  margin-left: 0px;\n  margin-right: 7px;\n  margin-bottom: 7px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 5px solid #615D89;\n  border-left: 5px solid #615D89;\n  border-right: 5px solid #615D89;\n  border-bottom: 5px solid #615D89;\n  border-radius: 5px 5px 5px 5px;\n  font-family: inherit;\n  color: #000;\n  font-size: inherit;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: inherit;\n  font-style: inherit;\n  text-align: inherit;\n  text-decoration: inherit;\n  text-transform: inherit;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.content-container__project_type_selector_bBar_container___2BSX6:hover {\n}\n\n.content-container__project_type_selector_bBar_container___2BSX6:active {\n}\n\n.content-container__project_type_selector_bBar_container___2BSX6:focus {\n}\n\n.content-container__project_selector_tBar_container___1_JM6 {\n  width: 488px;\n  height: 40px;\n  overflow: visible;\n  opacity: 1;\n  display: block;\n  cursor: inherit;\n  box-sizing: border-box;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n  -webkit-flex-wrap: nowrap;\n  -ms-flex-wrap: nowrap;\n  flex-wrap: nowrap;\n  -webkit-box-align: stretch;\n  -webkit-align-items: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-align-content: flex-start;\n  -ms-flex-line-pack: start;\n  align-content: flex-start;\n  -webkit-box-pack: start;\n  -webkit-justify-content: flex-start;\n  -ms-flex-pack: start;\n  justify-content: flex-start;\n  -webkit-align-self: auto;\n  -ms-flex-item-align: auto;\n  align-self: auto;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  padding-top: 0px;\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-bottom: 0px;\n  margin-top: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  position: static;\n  filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-filter: blur(0px) grayscale(0) sepia(0) invert(0) saturate(1) brightness(1) contrast(1) opacity(1) hue-rotate(0deg);\n  -webkit-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -ms-transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  transform: translateX(0px) translateY(0px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg);\n  -webkit-transform-origin: 50% 50%;\n  -ms-transform-origin: 50% 50%;\n  transform-origin: 50% 50%;\n  border-top: 2px solid #6C7786;\n  border-left: 2px solid #6C7786;\n  border-right: 2px solid #6C7786;\n  border-bottom: 0px solid #6C7786;\n  border-radius: 0px 0px 0px 0px;\n  font-family: inherit;\n  color: #000;\n  font-size: inherit;\n  letter-spacing: 0px;\n  word-spacing: 0px;\n  line-height: inherit;\n  font-weight: inherit;\n  font-style: inherit;\n  text-align: inherit;\n  text-decoration: inherit;\n  text-transform: inherit;\n  text-overflow: inherit;\n  white-space: inherit\n}\n\n.content-container__project_selector_tBar_container___1_JM6:hover {\n}\n\n.content-container__project_selector_tBar_container___1_JM6:active {\n}\n\n.content-container__project_selector_tBar_container___1_JM6:focus {\n}\n\nbody { margin: 0; }\n", ""]);

	// exports
	exports.locals = {
		"text-body-personal": "content-container__text-body-personal___rn9W2",
		"content_container": "content-container__content_container___hJtxL",
		"content_component": "content-container__content_component___3z9nP",
		"project_type_selector_bBar_container": "content-container__project_type_selector_bBar_container___2BSX6",
		"project_selector_tBar_container": "content-container__project_selector_tBar_container___1_JM6"
	};

/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function PageNotFound(_ref) {
	  var location = _ref.location;

	  return _react2.default.createElement(
	    'p',
	    null,
	    'Page not found - the path, ',
	    location.pathname,
	    ', did not match any React Router routes.'
	  );
	}

	exports.default = PageNotFound;

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouter = __webpack_require__(171);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function Home() {
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(
	      'p',
	      null,
	      'hi'
	    )
	  );
	  // return (
	  //   <div>
	  //     <p>
	  //       This is an example single page app using the React for GitHub Pages
	  //       boilerplate. It is built with React and React Router using
	  //       browserHistory. Navigate with the links below and refresh the page or
	  //       copy/paste the url to test out the redirect functionality deployed to
	  //       overcome GitHub Pages incompatibility with single page apps
	  //       (like this one).
	  //     </p>
	  //     <p>
	  //       Please see <a href="https://github.com/rafrex/react-github-pages#readme">
	  //       the repo readme</a> for instructions on how to use this boilerplate to deploy your
	  //       own React project using GitHub Pages.
	  //     </p>
	  //     <div><Link to="/example">Example page</Link></div>
	  //     <div><Link to="/example/two-deep?field1=foo&field2=bar#boom!">
	  //       Example two deep with query and hash
	  //     </Link></div>
	  //   </div>
	  // );
	}

	exports.default = Home;

/***/ },
/* 481 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouter = __webpack_require__(171);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function ExampleComponent(_ref) {
	  var children = _ref.children;

	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(
	      'p',
	      null,
	      'This is an example page. Refresh the page or copy/paste the url to test out the redirect functionality (this same page should load after the redirect).'
	    ),
	    children ? children : _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(
	        _reactRouter.Link,
	        { to: '/example/two-deep?field1=foo&field2=bar#boom!' },
	        'Example two deep with query and hash'
	      )
	    )
	  );
	}

	exports.default = ExampleComponent;

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRouter = __webpack_require__(171);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function ExampleTwoDeepComponent(_ref) {
	  var location = _ref.location;


	  var queryPresent = Object.keys(location.query).length !== 0 ? true : false;
	  var hashPresent = location.hash !== '' ? true : false;

	  function queryStringTitle() {
	    if (queryPresent) {
	      return 'The query string field-value pairs are:';
	    } else {
	      return 'No query string in the url';
	    }
	  }

	  function hashFragmentTitle() {
	    if (hashPresent) {
	      return 'The hash fragment is:';
	    } else {
	      return 'No hash frgament in the url';
	    }
	  }

	  function linkToShowQueryAndOrHash() {
	    if (queryPresent && hashPresent) return;

	    var queryString = queryPresent ? location.search : '?field1=foo&field2=bar';
	    var hashFragment = hashPresent ? location.hash : '#boom!';

	    var linkText = '';
	    if (queryPresent && !hashPresent) linkText = 'Show with hash fragment';
	    if (!queryPresent && hashPresent) linkText = 'Show with query string';
	    if (!queryPresent && !hashPresent) linkText = 'Show with query string and hash fragment';

	    return _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(
	        _reactRouter.Link,
	        { to: '/example/two-deep' + queryString + hashFragment },
	        linkText
	      )
	    );
	  }

	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(
	        'div',
	        null,
	        queryStringTitle()
	      ),
	      _react2.default.createElement(
	        'ul',
	        { style: { marginTop: 0 } },
	        Object.keys(location.query).map(function (field, index) {
	          return _react2.default.createElement(
	            'li',
	            { key: index },
	            field,
	            ': ',
	            location.query[field]
	          );
	        })
	      )
	    ),
	    _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(
	        'div',
	        null,
	        hashFragmentTitle()
	      ),
	      _react2.default.createElement(
	        'ul',
	        { style: { marginTop: 0 } },
	        hashPresent ? _react2.default.createElement(
	          'li',
	          null,
	          location.hash.slice(1)
	        ) : undefined
	      )
	    ),
	    linkToShowQueryAndOrHash()
	  );
	}

	exports.default = ExampleTwoDeepComponent;

/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "/assets/images/phone.png";

/***/ }
/******/ ]);